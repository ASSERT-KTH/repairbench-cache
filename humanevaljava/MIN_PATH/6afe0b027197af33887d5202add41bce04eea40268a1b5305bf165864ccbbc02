{
    "generation": "    public static int[] min_path(int[][] grid, int k) {\n        int n = grid.length;\n        int val = n * n + 1;\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < n; j++) {\n                if(grid[i][j] == 1) {\n// buggy code\n//                    if(i != 0) val = Math.max(val, grid[i][j + 1]);\n//                    if(j != 0) val = Math.min(val, grid[i - 1][j]);\n//                    if(i != n - 1) val = Math.min(val, grid[i - 1][j]);\n//                    if(j != n + 1) val = Math.max(val, grid[i][j - 1]);\n                    if(i != 0) val = Math.max(val, grid[i - 1][j]);\n                    if(j != 0) val = Math.min(val, grid[i][j - 1]);\n                    if(i != n - 1) val = Math.min(val, grid[i + 1][j]);\n                    if(j != n + 1) val = Math.max(val, grid[i][j + 1]);\n\n                }\n            }\n        }\n        int[] ans = new int[k];\n        for(int i = 0; i < k; i++) {\n            if((i % 2) == 0) ans[i] = 1;\n            else ans[i] = val;\n        }\n        return ans;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}