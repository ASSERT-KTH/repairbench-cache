{
    "generation": "  /** Compute the cross-product of two vectors.\n   * @param v1 first vector\n   * @param v2 second vector\n   * @return the cross product v1 ^ v2 as a new Vector\n   */\n  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n\n      final double x1 = v1.getX();\n      final double y1 = v1.getY();\n      final double z1 = v1.getZ();\n      final double x2 = v2.getX();\n      final double y2 = v2.getY();\n      final double z2 = v2.getZ();\n\n      final double dot = x1 * x2 + y1 * y2 + z1 * z2;\n      final double s2  = x2 * x2 + y2 * y2 + z2 * z2;\n\n      double s1 = x1 * x1 + y1 * y1 + z1 * z1;\n      double a = s1 * s2;\n      double b = dot * dot;\n      if (a == b) {\n          // vectors are parallel or one (or both) is zero\n          return new Vector3D(0, 0, 0);\n      } else {\n          double rho = dot / s2;\n          double x3 = x1 - rho * x2;\n          double y3 = y1 - rho * y2;\n          double z3 = z1 - rho * z2;\n\n          return new Vector3D(y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2);\n      }\n\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}