{
    "generation": "public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n\n    final double normV2Squared = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\n    double rho = 0;\n    if (normV2Squared != 0) {\n        final double dot = v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n        // 8-bit approximation\n        rho = (double) (int) (128 * (dot / normV2Squared)) / 128;\n    }\n\n    final double v3x = v1.x - rho * v2.x;\n    final double v3y = v1.y - rho * v2.y;\n    final double v3z = v1.z - rho * v2.z;\n\n    return new Vector3D(\n        v3y * v2.z - v3z * v2.y,\n        v3z * v2.x - v3x * v2.z,\n        v3x * v2.y - v3y * v2.x\n    );\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}