{
    "generation": "  /** Compute the cross-product of two vectors.\n   * @param v1 first vector\n   * @param v2 second vector\n   * @return the cross product v1 ^ v2 as a new Vector\n   */\n  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n\n      // Rescale vectors to prevent underflow/overflow\n      double maxExpV1 = Math.max(Math.max(Math.getExponent(v1.x), Math.getExponent(v1.y)), Math.getExponent(v1.z));\n      double scale1 = Math.scalb(1.0, -maxExpV1);\n      Vector3D v1Scaled = new Vector3D(v1.x * scale1, v1.y * scale1, v1.z * scale1);\n\n      double maxExpV2 = Math.max(Math.max(Math.getExponent(v2.x), Math.getExponent(v2.y)), Math.getExponent(v2.z));\n      double scale2 = Math.scalb(1.0, -maxExpV2);\n      Vector3D v2Scaled = new Vector3D(v2.x * scale2, v2.y * scale2, v2.z * scale2);\n\n      // Compute rho to reduce cancellation errors\n      double dotV1V2 = v1Scaled.x * v2Scaled.x + v1Scaled.y * v2Scaled.y + v1Scaled.z * v2Scaled.z;\n      double dotV2V2 = v2Scaled.x * v2Scaled.x + v2Scaled.y * v2Scaled.y + v2Scaled.z * v2Scaled.z;\n\n      if (dotV2V2 == 0.0) {\n          return new Vector3D(0, 0, 0);\n      }\n\n      double rho = dotV1V2 / dotV2V2;\n\n      // Compute v3 = v1Scaled - rho * v2Scaled\n      Vector3D v3Scaled = new Vector3D(\n          v1Scaled.x - rho * v2Scaled.x,\n          v1Scaled.y - rho * v2Scaled.y,\n          v1Scaled.z - rho * v2Scaled.z\n      );\n\n      // Compute cross product of v3Scaled and v2Scaled\n      Vector3D crossScaled = new Vector3D(\n          v3Scaled.y * v2Scaled.z - v3Scaled.z * v2Scaled.y,\n          v3Scaled.z * v2Scaled.x - v3Scaled.x * v2Scaled.z,\n          v3Scaled.x * v2Scaled.y - v3Scaled.y * v2Scaled.x\n      );\n\n      // Rescale the result back to original scale\n      double inverseScale = 1.0 / (scale1 * scale2);\n      return new Vector3D(\n          crossScaled.x * inverseScale,\n          crossScaled.y * inverseScale,\n          crossScaled.z * inverseScale\n      );\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}