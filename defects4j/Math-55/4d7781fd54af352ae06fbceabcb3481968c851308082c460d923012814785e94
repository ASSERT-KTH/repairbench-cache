{
    "generation": "  /** Compute the cross-product of two vectors.\n   * @param v1 first vector\n   * @param v2 second vector\n   * @return the cross product v1 ^ v2 as a new Vector\n   */\n  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n      // Compute the dot product of v2 with itself to check for zero vector\n      final double dotV2V2 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\n      if (dotV2V2 == 0.0) {\n          return new Vector3D(0, 0, 0);\n      }\n\n      // Compute the dot product of v1 and v2\n      final double dotV1V2 = v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n\n      // Compute rho as the ratio of the dot products\n      final double rho = dotV1V2 / dotV2V2;\n\n      // Compute the adjusted vector v3 = v1 - rho * v2\n      final Vector3D v3 = new Vector3D(\n          v1.x - rho * v2.x,\n          v1.y - rho * v2.y,\n          v1.z - rho * v2.z\n      );\n\n      // Compute the cross product of v3 and v2\n      return new Vector3D(\n          v3.y * v2.z - v3.z * v2.y,\n          v3.z * v2.x - v3.x * v2.z,\n          v3.x * v2.y - v3.y * v2.x\n      );\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}