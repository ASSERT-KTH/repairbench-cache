{
    "generation": "  /** Compute the cross-product of two vectors.\n   * @param v1 first vector\n   * @param v2 second vector\n   * @return the cross product v1 ^ v2 as a new Vector\n   */\n  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n\n      double v21 = v2.getX();\n      double v22 = v2.getY();\n      double v23 = v2.getZ();\n      double v12v22 = v1.getY() * v22;\n      double v13v23 = v1.getZ() * v23;\n      double v11 = v1.getX();\n      double v12 = v1.getY();\n      double v13 = v1.getZ();\n      double s = Math.scalb(1.0, -FastMath.getExponent(v21 * v21 + v22 * v22 + v23 * v23) / 2);\n      double v11s = v11 * s;\n      double v21s = v21 * s;\n      double v12s = v12 * s;\n      double v22s = v22 * s;\n      double v13s = v13 * s;\n      double v23s = v23 * s;\n\n      double d1 = v12s * v23s - v13s * v22s;\n      double d2 = v13s * v21s - v11s * v23s;\n      double d3 = v11s * v22s - v12s * v21s;\n\n      s = 1 / s;\n      return new Vector3D(s * d1, s * d2, s * d3);\n\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}