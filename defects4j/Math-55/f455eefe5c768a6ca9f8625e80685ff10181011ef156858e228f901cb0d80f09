{
    "generation": "  /** Compute the cross-product of two vectors.\n   * @param v1 first vector\n   * @param v2 second vector\n   * @return the cross product v1 ^ v2 as a new Vector\n   */\n  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n      double dot12 = v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n      double dot22 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\n\n      if (dot22 == 0) {\n          return new Vector3D(0.0, 0.0, 0.0);\n      }\n\n      // Compute rho as an 8-bit approximation of dot12 / dot22\n      double rho = (double) ((float) (dot12 / dot22));\n\n      // Compute v3 = v1 - rho * v2\n      double v3x = v1.x - rho * v2.x;\n      double v3y = v1.y - rho * v2.y;\n      double v3z = v1.z - rho * v2.z;\n\n      // Compute cross product of v3 and v2\n      return new Vector3D(\n              v3y * v2.z - v3z * v2.y,\n              v3z * v2.x - v3x * v2.z,\n              v3x * v2.y - v3y * v2.x);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}