{
    "generation": "/** Compute the cross-product of two vectors.\n * @param v1 first vector\n * @param v2 second vector\n * @return the cross product v1 ^ v2 as a new Vector\n */\npublic static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n    double dotProduct = v1.dotProduct(v2);\n    double v2SquaredNorm = v2.dotProduct(v2);\n    \n    if (v2SquaredNorm == 0) {\n        return new Vector3D(0, 0, 0);\n    }\n    \n    double rho = dotProduct / v2SquaredNorm;\n    \n    double x = v1.x - rho * v2.x;\n    double y = v1.y - rho * v2.y;\n    double z = v1.z - rho * v2.z;\n    \n    Vector3D v3 = new Vector3D(x, y, z);\n    \n    return new Vector3D(\n        v3.y * v2.z - v3.z * v2.y,\n        v3.z * v2.x - v3.x * v2.z,\n        v3.x * v2.y - v3.y * v2.x\n    );\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}