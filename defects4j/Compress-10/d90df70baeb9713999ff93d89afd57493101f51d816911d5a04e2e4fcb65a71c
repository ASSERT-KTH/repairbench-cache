{
    "generation": "private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment> entriesWithoutUTF8Flag)\n    throws IOException {\n    // Changing the name of a ZipArchiveEntry (which is used as key in our maps)\n    // changes its hash code. To avoid lookup problems later (see COMPRESS-164)\n    // we rebuild the entries map with the (possibly) updated keys.\n    Map<ZipArchiveEntry, OffsetEntry> newEntries = new LinkedHashMap<>();\n    for (ZipArchiveEntry ze : new ArrayList<>(entries.keySet())) {\n        OffsetEntry offsetEntry = entries.get(ze);\n        long offset = offsetEntry.headerOffset;\n        archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);\n        byte[] b = new byte[SHORT];\n        archive.readFully(b);\n        int fileNameLen = ZipShort.getValue(b);\n        archive.readFully(b);\n        int extraFieldLen = ZipShort.getValue(b);\n\n        // Skip the file name bytes (we do not need them here, they are in the central directory)\n        int lenToSkip = fileNameLen;\n        while (lenToSkip > 0) {\n            int skipped = archive.skipBytes(lenToSkip);\n            if (skipped <= 0) {\n                throw new RuntimeException(\"failed to skip file name in local file header\");\n            }\n            lenToSkip -= skipped;\n        }\n\n        // Read extra field data from the local header and update the entry.\n        byte[] localExtraData = new byte[extraFieldLen];\n        archive.readFully(localExtraData);\n        ze.setExtra(localExtraData);\n        // The data offset is computed as:\n        // local header offset + fixed part (LFH_OFFSET_FOR_FILENAME_LENGTH + 2 + 2) + filename length + extra field length\n        offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;\n\n        // If the central directory has recorded Unicode name/comment separately,\n        // update the entry\u2019s name and comment accordingly.\n        if (entriesWithoutUTF8Flag.containsKey(ze)) {\n            String orig = ze.getName();\n            NameAndComment nc = entriesWithoutUTF8Flag.get(ze);\n            ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name, nc.comment);\n            if (!orig.equals(ze.getName())) {\n                nameMap.remove(orig);\n                nameMap.put(ze.getName(), ze);\n            }\n        }\n        newEntries.put(ze, offsetEntry);\n    }\n    entries = newEntries;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}