{
    "generation": "private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>\n                                        entriesWithoutUTF8Flag)\n    throws IOException {\n    // changing the name of a ZipArchiveEntry may change its hashCode \u2013 see COMPRESS-164\n    // so wrap the incoming map in an identity\u2010based map to avoid hashCode/equal issues\n    Map<ZipArchiveEntry, NameAndComment> utf8Fixes =\n        new IdentityHashMap<ZipArchiveEntry, NameAndComment>(entriesWithoutUTF8Flag);\n\n    for (ZipArchiveEntry ze : entries.keySet()) {\n        OffsetEntry offsetEntry = entries.get(ze);\n        long offset = offsetEntry.headerOffset;\n        archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);\n\n        byte[] b = new byte[SHORT];\n        archive.readFully(b);\n        int fileNameLen = ZipShort.getValue(b);\n        archive.readFully(b);\n        int extraFieldLen = ZipShort.getValue(b);\n\n        int toSkip = fileNameLen;\n        while (toSkip > 0) {\n            int skipped = archive.skipBytes(toSkip);\n            if (skipped <= 0) {\n                throw new RuntimeException(\"failed to skip file name in\"\n                                           + \" local file header\");\n            }\n            toSkip -= skipped;\n        }\n\n        byte[] localExtraData = new byte[extraFieldLen];\n        archive.readFully(localExtraData);\n        ze.setExtra(localExtraData);\n\n        offsetEntry.dataOffset = offset\n            + LFH_OFFSET_FOR_FILENAME_LENGTH\n            + SHORT + SHORT\n            + fileNameLen + extraFieldLen;\n\n        NameAndComment nc = utf8Fixes.get(ze);\n        if (nc != null) {\n            String orig = ze.getName();\n            ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name, nc.comment);\n            if (!orig.equals(ze.getName())) {\n                nameMap.remove(orig);\n                nameMap.put(ze.getName(), ze);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}