{
    "generation": "    private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>\n                                            entriesWithoutUTF8Flag)\n        throws IOException {\n        // changing the name of a ZipArchiveEntry is going to change\n        // the hashcode - see COMPRESS-164\n        // Map needs to be reconstructed in order to keep central\n        // directory order\n        for (ZipArchiveEntry ze : entries.keySet()) {\n            OffsetEntry offsetEntry = entries.get(ze);\n            long offset = offsetEntry.headerOffset;\n            archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);\n            byte[] b = new byte[SHORT];\n            archive.readFully(b);\n            int fileNameLen = ZipShort.getValue(b);\n            archive.readFully(b);\n            int extraFieldLen = ZipShort.getValue(b);\n\n            // Read filename bytes from local header\n            byte[] fileNameBytes = new byte[fileNameLen];\n            archive.readFully(fileNameBytes);\n            String fileName = ZipEncodingHelper.UTF8_ZIP_ENCODING.decode(fileNameBytes); // or use default encoding if not UTF-8\n\n            // Store original name to update nameMap if needed\n            String origName = ze.getName();\n\n            // Skip remaining bytes if filename was read successfully\n            int lenToSkip = fileNameLen;\n            if (lenToSkip > 0) {\n                archive.skipBytes(lenToSkip);\n            }\n\n            byte[] localExtraData = new byte[extraFieldLen];\n            archive.readFully(localExtraData);\n            ze.setExtra(localExtraData);\n            offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH\n                + SHORT + SHORT + fileNameLen + extraFieldLen;\n\n            // Store the filename from local header\n            String localName = ZipUtil.decodeFileNameFromLocalHeader(fileNameBytes);\n            if (localName != null) {\n                ze.setName(localName);\n            }\n\n            if (entriesWithoutUTF8Flag.containsKey(ze)) {\n                String orig = ze.getName();\n                NameAndComment nc = entriesWithoutUTF8Flag.get(ze);\n                ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,\n                                                         nc.comment);\n                if (!orig.equals(ze.getName())) {\n                    nameMap.remove(orig);\n                    nameMap.put(ze.getName(), ze);\n                }\n            }\n            // If we changed the name when setting from local header, update map\n            if (!origName.equals(ze.getName())) {\n                nameMap.remove(origName);\n                nameMap.put(ze.getName(), ze);\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}