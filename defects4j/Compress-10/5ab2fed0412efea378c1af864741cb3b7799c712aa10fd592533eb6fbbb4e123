{
    "generation": "/**\n * Walks through all recorded entries and adds the data available\n * from the local file header.\n *\n * <p>Also records the offsets for the data to read from the\n * entries.</p>\n */\nprivate void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>\n                                        entriesWithoutUTF8Flag)\n    throws IOException {\n    // changing the name of a ZipArchiveEntry is going to change\n    // the hashcode - see COMPRESS-164\n    // Map needs to be reconstructed in order to keep central\n    // directory order\n    for (ZipArchiveEntry ze : new ArrayList<ZipArchiveEntry>(entries.keySet())) {\n        OffsetEntry offsetEntry = entries.get(ze);\n        long offset = offsetEntry.headerOffset;\n        archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);\n        byte[] b1 = new byte[SHORT];\n        archive.readFully(b1);\n        int fileNameLen = ZipShort.getValue(b1);\n        archive.readFully(b1);\n        int extraFieldLen = ZipShort.getValue(b1);\n\n        byte[] fileNameData = new byte[fileNameLen];\n        int totalRead = 0;\n        while (totalRead < fileNameLen) {\n            int bytesRead = archive.read(fileNameData, totalRead, fileNameLen - totalRead);\n            if (bytesRead == -1) {\n                throw new RuntimeException(\"failed to read file name in local file header\");\n            }\n            totalRead += bytesRead;\n        }\n\n        byte[] localExtraData = new byte[extraFieldLen];\n        totalRead = 0;\n        while (totalRead < extraFieldLen) {\n            int bytesRead = archive.read(localExtraData, totalRead, extraFieldLen - totalRead);\n            if (bytesRead == -1) {\n                throw new RuntimeException(\"failed to read extra field in local file header\");\n            }\n            totalRead += bytesRead;\n        }\n        ze.setExtra(localExtraData);\n\n        offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH\n            + SHORT + SHORT + fileNameLen + extraFieldLen;\n\n        if (entriesWithoutUTF8Flag.containsKey(ze)) {\n            String orig = ze.getName();\n            NameAndComment nc = entriesWithoutUTF8Flag.get(ze);\n            ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,\n                                                     nc.comment);\n            if (!orig.equals(ze.getName())) {\n                nameMap.remove(orig);\n                nameMap.put(ze.getName(), ze);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}