{
    "generation": "// performance sensitive\npublic boolean hasClass(String className) {\n    final String classAttr = attributes.get(\"class\");\n    final int len = classAttr.length();\n    final int wantLen = className.length();\n\n    if (len == 0 || len < wantLen) {\n        return false;\n    }\n\n    int start = 0;\n    for (int i = 0; i < len; i++) {\n        if (Character.isWhitespace(classAttr.charAt(i))) { // word boundary\n            if (i > start) {\n                int wordLen = i - start;\n                if (wordLen == wantLen) {\n                    if (classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                        return true;\n                    }\n                }\n            }\n            start = i + 1;\n        }\n    }\n    // check last word until end of string\n    if (start < len) {\n        int wordLen = len - start;\n        if (wordLen == wantLen) {\n            if (classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}