{
    "generation": "// performance sensitive\npublic boolean hasClass(String className) {\n    // use attr() to pick up \"class\", \"Class\" or \"CLASS\" etc.\n    final String classAttr = attr(\"class\");\n    final int len = classAttr.length();\n    final int wantLen = className.length();\n\n    if (len == 0 || len < wantLen) {\n        return false;\n    }\n\n    // if both lengths are equal, only need compare the className with the attribute\n    if (len == wantLen) {\n        return className.equalsIgnoreCase(classAttr);\n    }\n\n    // otherwise, scan for whitespace and compare regions (with no String or List allocations)\n    boolean inClass = false;\n    int start = 0;\n    for (int i = 0; i < len; i++) {\n        char c = classAttr.charAt(i);\n        if (Character.isWhitespace(c)) {\n            if (inClass) {\n                // whitespace ends a class name, compare it with the requested one, ignore case\n                if (i - start == wantLen\n                        && classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                    return true;\n                }\n                inClass = false;\n            }\n        } else if (!inClass) {\n            // entering a class name: mark the start index\n            inClass = true;\n            start = i;\n        }\n    }\n\n    // check the very last entry\n    if (inClass && len - start == wantLen) {\n        return classAttr.regionMatches(true, start, className, 0, wantLen);\n    }\n\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}