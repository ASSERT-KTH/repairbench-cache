{
    "generation": "    // performance sensitive\n    public boolean hasClass(String className) {\n        final String classAttr = attributes.get(\"class\");\n        if (classAttr == null) return false;\n        final int len = classAttr.length();\n        final int wantLen = className.length();\n\n        if (len == 0 || len < wantLen) {\n            return false;\n        }\n\n        // if both lengths are equal, only need compare the className with the attribute\n        if (len == wantLen) {\n            return className.equalsIgnoreCase(classAttr);\n        }\n\n        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)\n        boolean inClass = false;\n        int start = 0;\n        for (int i = 0; i < len; i++) {\n            if (Character.isWhitespace(classAttr.charAt(i))) {\n                if (inClass) {\n                    // white space ends a class name, compare it with the requested one, ignore case\n                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                        return true;\n                    }\n                    inClass = false;\n                }\n            } else {\n                if (!inClass) {\n                    // we're in a class name : keep the start of the substring\n                    inClass = true;\n                    start = i;\n                }\n            }\n        }\n\n        // check the last entry\n        if (inClass && len - start == wantLen) {\n            return classAttr.regionMatches(true, start, className, 0, wantLen);\n        }\n        // also check the last entry even if lengths differ (e.g., \"Foo\" vs \"FOOBAR\")\n        if (inClass) {\n            String lastClass = classAttr.substring(start);\n            if (lastClass.length() >= wantLen) { // only check if the remaining is long enough\n                // Check if this substring starts with the wanted classname (case insensitive)\n                boolean matches = true;\n                if (lastClass.length() >= wantLen) {\n                    for (int j = 0; j < wantLen; j++) {\n                        if (Character.toLowerCase(lastClass.charAt(j)) != Character.toLowerCase(className.charAt(j))) {\n                            matches = false;\n                            break;\n                        }\n                    }\n                    if (matches) {\n                        // If the matching part is exactly the wanted length, or followed by whitespace/class-end\n                        if (lastClass.length() == wantLen ||\n                            (len > start + wantLen && Character.isWhitespace(classAttr.charAt(start + wantLen)))) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}