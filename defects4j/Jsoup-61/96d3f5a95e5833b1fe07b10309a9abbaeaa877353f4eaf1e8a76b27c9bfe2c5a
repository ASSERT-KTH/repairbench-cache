{
    "generation": "    // performance sensitive\n    public boolean hasClass(String className) {\n        final String classAttr = attributes.get(\"class\");\n        if (classAttr == null) {\n            return false;\n        }\n        final int len = classAttr.length();\n        final int wantLen = className.length();\n\n        if (len == 0 || wantLen == 0) {\n            return false;\n        }\n\n        // if both lengths are equal, only need compare the className with the attribute (trimmed)\n        if (len == wantLen) {\n            String trimmed = classAttr.trim();\n            return trimmed.equalsIgnoreCase(className);\n        }\n\n        // otherwise, scan for whitespace and compare regions\n        boolean inClass = false;\n        int start = 0;\n        for (int i = 0; i < len; i++) {\n            if (Character.isWhitespace(classAttr.charAt(i))) {\n                if (inClass) {\n                    // white space ends a class name, compare it with the requested one, ignore case\n                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                        return true;\n                    }\n                    inClass = false;\n                }\n            } else {\n                if (!inClass) {\n                    // we're in a class name : keep the start of the substring\n                    inClass = true;\n                    start = i;\n                }\n            }\n        }\n\n        // check the last entry\n        if (inClass) {\n            int lastLength = len - start;\n            if (lastLength == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                return true;\n            }\n        }\n\n        // check for case where the entire string is a single class with no whitespace\n        if (len == wantLen) {\n            return classAttr.equalsIgnoreCase(className);\n        }\n\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}