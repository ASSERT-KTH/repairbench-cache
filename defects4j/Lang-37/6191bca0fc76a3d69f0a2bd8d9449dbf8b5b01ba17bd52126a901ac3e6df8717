{
    "generation": "    @SuppressWarnings(\"unchecked\")\n    public static <T> T[] addAll(T[] array1, T... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n\n        // Get the component type of both arrays\n        Class<?> type1 = array1.getClass().getComponentType();\n        Class<?> type2 = array2.getClass().getComponentType();\n\n        // If types are not the same, use the more general type (Object.class is the upper bound)\n        Class<?> componentType;\n        if (type1.isAssignableFrom(type2)) {\n            componentType = type1;\n        } else if (type2.isAssignableFrom(type1)) {\n            componentType = type2;\n        } else {\n            componentType = Object.class; // Use Object as the least common superclass\n        }\n\n        T[] joinedArray = (T[]) Array.newInstance(componentType, array1.length + array2.length);\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}