{
    "generation": "@SuppressWarnings(\"unchecked\")\npublic static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null) {\n        return clone(array2);\n    } else if (array2 == null) {\n        return clone(array1);\n    }\n\n    // Determine the common superclass type\n    Class<?> type1 = array1.getClass().getComponentType();\n    Class<?> type2 = array2.getClass().getComponentType();\n    Class<?> commonType = getCommonSuperclass(type1, type2);\n\n    T[] joinedArray = (T[]) Array.newInstance(commonType, array1.length + array2.length);\n    System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n    System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n\n    return joinedArray;\n}\n\nprivate static Class<?> getCommonSuperclass(Class<?> type1, Class<?> type2) {\n    if (type1.isAssignableFrom(type2)) {\n        return type1;\n    } else if (type2.isAssignableFrom(type1)) {\n        return type2;\n    } else {\n        return type1.getSuperclass();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}