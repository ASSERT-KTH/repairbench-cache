{
    "generation": "    @SuppressWarnings(\"unchecked\")\n    public static <T> T[] addAll(T[] array1, T... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        final Class<?> type1 = array1.getClass().getComponentType();\n        // If array2 is empty, just clone array1\n        if (array2.length == 0) {\n            return clone(array1);\n        }\n        // Check if types are compatible\n        final Class<?> type2 = array2.getClass().getComponentType();\n        if (!type1.isAssignableFrom(type2) && !type2.isAssignableFrom(type1)) {\n            // If types are incompatible, use Object array\n            Object[] joinedArray = (Object[]) Array.newInstance(Object.class, array1.length + array2.length);\n            System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n            try {\n                System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n            } catch (ArrayStoreException e) {\n                // Try creating an array of the second type if first fails\n                T[] newArray = (T[]) Array.newInstance(type2, array1.length + array2.length);\n                System.arraycopy(array2, 0, newArray, 0, array2.length);\n                // Try to add array1 elements, if fails then we have incompatible types\n                try {\n                    System.arraycopy(array1, 0, newArray, array2.length, array1.length);\n                } catch (ArrayStoreException e2) {\n                    // If both fail, use Object[]\n                    joinedArray = new Object[array1.length + array2.length];\n                    System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n                    System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n                    return (T[]) joinedArray;\n                }\n                return newArray;\n            }\n            return (T[]) joinedArray;\n        }\n        // If types are compatible, use the first array's type\n        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        try {\n            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        } catch (ArrayStoreException e) {\n            // If we get here, types weren't actually compatible (like Integer and Long)\n            // Use Object array instead\n            Object[] newArray = new Object[array1.length + array2.length];\n            System.arraycopy(array1, 0, newArray, 0, array1.length);\n            System.arraycopy(array2, 0, newArray, array1.length, array2.length);\n            return (T[]) newArray;\n        }\n        return joinedArray;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}