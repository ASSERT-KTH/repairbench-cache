{
    "generation": "@SuppressWarnings(\"unchecked\")\npublic static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null) {\n        return clone(array2);\n    } else if (array2 == null) {\n        return clone(array1);\n    }\n    final Class<?> type1 = array1.getClass().getComponentType();\n    T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n    System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n    try {\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n    } catch (ArrayStoreException e) {\n        // If arraycopy fails due to incompatible types, create a new array of type Object[]\n        final Class<?> type2 = array2.getClass().getComponentType();\n        if (!type1.isAssignableFrom(type2)) {\n            Object[] newArray = (Object[]) Array.newInstance(Object.class, array1.length + array2.length);\n            System.arraycopy(array1, 0, newArray, 0, array1.length);\n            System.arraycopy(array2, 0, newArray, array1.length, array2.length);\n            return (T[]) newArray;\n        }\n        throw e;\n    }\n    return joinedArray;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}