{
    "generation": "@SuppressWarnings(\"unchecked\")\npublic static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null && array2 == null) {\n        return null;\n    }\n    if (array1 == null) {\n        return clone(array2);\n    }\n    if (array2 == null) {\n        return clone(array1);\n    }\n    // Determine the appropriate component type for the resulting array\n    Class<?> type1 = array1.getClass().getComponentType();\n    Class<?> type2 = array2.getClass().getComponentType();\n\n    Class<?> newType;\n    if (type1.isAssignableFrom(type2)) {\n        newType = type1;\n    } else if (type2.isAssignableFrom(type1)) {\n        newType = type2;\n    } else {\n        throw new IllegalArgumentException(\"Cannot store elements of type \" + type2.getName() \n            + \" in an array of type \" + type1.getName());\n    }\n\n    int length1 = array1.length;\n    int length2 = array2.length;\n    T[] joinedArray = (T[]) Array.newInstance(newType, length1 + length2);\n    System.arraycopy(array1, 0, joinedArray, 0, length1);\n    System.arraycopy(array2, 0, joinedArray, length1, length2);\n    return joinedArray;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}