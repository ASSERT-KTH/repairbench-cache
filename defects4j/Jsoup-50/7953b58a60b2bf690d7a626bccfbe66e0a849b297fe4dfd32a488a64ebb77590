{
    "generation": "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {\n    String docData;\n    Document doc = null;\n\n    byte[] bomMark = new byte[4];\n    int bytesRead = byteData.get(bomMark);\n    byteData.rewind(); // rewind to the start for future reading\n\n    // Determine charset based on BOM\n    String detectedCharset = charsetName;\n    if (charsetName == null) {\n        if (bytesRead >= 2 && bomMark[0] == (byte) 0xFE && bomMark[1] == (byte) 0xFF) {\n            detectedCharset = \"UTF-16BE\";\n        } else if (bytesRead >= 2 && bomMark[0] == (byte) 0xFF && bomMark[1] == (byte) 0xFE) {\n            detectedCharset = \"UTF-16LE\";\n        } else if (bytesRead >= 4 && bomMark[0] == (byte) 0x00 && bomMark[1] == (byte) 0x00 && bomMark[2] == (byte) 0xFE && bomMark[3] == (byte) 0xFF) {\n            detectedCharset = \"UTF-32BE\";\n        } else if (bytesRead >= 4 && bomMark[0] == (byte) 0xFF && bomMark[1] == (byte) 0xFE && bomMark[2] == (byte) 0x00 && bomMark[3] == (byte) 0x00) {\n            detectedCharset = \"UTF-32LE\";\n        } else if (bytesRead >= 3 && bomMark[0] == (byte) 0xEF && bomMark[1] == (byte) 0xBB && bomMark[2] == (byte) 0xBF) {\n            detectedCharset = \"UTF-8\";\n        }\n    }\n\n    if (detectedCharset != null) {\n        try {\n            docData = Charset.forName(detectedCharset).decode(byteData);\n            if (docData.length() > 0 && (docData.charAt(0) == '\\ufeff')) {\n                docData = docData.substring(1);\n            }\n        } catch (CharacterDecodingException e) {\n            // Fallback to default charset\n            docData = Charset.forName(defaultCharset).decode(byteData).toString();\n        }\n    } else {\n        docData = Charset.forName(defaultCharset).decode(byteData).toString();\n    }\n\n    doc = parser.parseInput(docData, baseUri);\n    if (detectedCharset != null) {\n        doc.outputSettings().charset(detectedCharset);\n    } else {\n        doc.outputSettings().charset(charsetName);\n    }\n\n    return doc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}