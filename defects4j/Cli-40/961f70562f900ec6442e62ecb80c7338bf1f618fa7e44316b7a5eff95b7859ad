{
    "generation": "@SuppressWarnings(\"unchecked\") // returned value will have type T because it is fixed by clazz\npublic static <T> T createValue(final String str, final Class<T> clazz) throws ParseException\n{\n    if (PatternOptionBuilder.STRING_VALUE == clazz)\n    {\n        return (T) str;\n    }\n    else if (PatternOptionBuilder.OBJECT_VALUE == clazz)\n    {\n        return (T) createObject(str);\n    }\n    else if (PatternOptionBuilder.NUMBER_VALUE == clazz)\n    {\n        return (T) createNumber(str);\n    }\n    else if (PatternOptionBuilder.DATE_VALUE == clazz)\n    {\n        return (T) createDate(str);\n    }\n    else if (PatternOptionBuilder.CLASS_VALUE == clazz)\n    {\n        return (T) createClass(str);\n    }\n    else if (PatternOptionBuilder.FILE_VALUE == clazz)\n    {\n        return (T) createFile(str);\n    }\n    else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)\n    {\n        return (T) openFile(str);\n    }\n    else if (PatternOptionBuilder.FILES_VALUE == clazz)\n    {\n        return (T) createFiles(str);\n    }\n    else if (PatternOptionBuilder.URL_VALUE == clazz)\n    {\n        return (T) createURL(str);\n    }\n    else if (clazz != null && Number.class.isAssignableFrom(clazz))\n    {\n        try {\n            Number number = createNumber(str);\n            if (!clazz.isInstance(number)) {\n                throw new ParseException(\"Value '\" + str + \"' is not a valid instance of \" + clazz.getName());\n            }\n            return (T) number;\n        } catch (Exception e) {\n            throw new ParseException(\"Unable to create number of type \" + clazz.getName() + \" from '\" + str + \"'\");\n        }\n    }\n    else\n    {\n        // unknown target type\n        throw new ParseException(\"Unable to handle the class: \" + (clazz != null ? clazz.getName() : \"null\"));\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}