{
    "generation": "    /**\n     * Returns the <code>Object</code> of type <code>clazz</code>\n     * with the value of <code>str</code>.\n     *\n     * @param str the command line value\n     * @param clazz the type of argument\n     * @return The instance of <code>clazz</code> initialised with\n     * the value of <code>str</code>.\n     * @throws ParseException if the value creation for the given class failed\n     */\n    @SuppressWarnings(\"unchecked\") // returned value will have type T because it is fixed by clazz\n    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException\n    {\n        if (String.class == clazz)\n        {\n            return (T) str;\n        }\n        else if (Object.class == clazz)\n        {\n            return (T) createObject(str);\n        }\n        else if (Number.class == clazz)\n        {\n            return (T) createNumber(str);\n        }\n        else if (java.util.Date.class == clazz)\n        {\n            return (T) createDate(str);\n        }\n        else if (Class.class == clazz)\n        {\n            return (T) createClass(str);\n        }\n        else if (java.io.File.class == clazz)\n        {\n            return (T) createFile(str);\n        }\n        else if (java.io.File.class == clazz)\n        {\n            return (T) openFile(str);\n        }\n        else if (java.util.List.class == clazz)\n        {\n            return (T) createFiles(str);\n        }\n        else if (java.net.URL.class == clazz)\n        {\n            return (T) createURL(str);\n        }\n        else if (Integer.class == clazz) {\n            try {\n                return (T) Integer.valueOf(str);\n            } catch (NumberFormatException e) {\n                throw new ParseException(\"Cannot parse '\" + str + \"' as an integer.\");\n            }\n        }\n        else\n        {\n            throw new ParseException(\"Unsupported type: \" + clazz);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}