{
    "generation": "public static long skip(InputStream input, long numToSkip) throws IOException {\n    long available = numToSkip;\n    byte[] buffer = new byte[2048];\n    while (numToSkip > 0) {\n        long skipped = input.skip(numToSkip);\n        if (skipped > 0) {\n            numToSkip -= skipped;\n        } else if (numToSkip > 0) {\n            // skip() couldn't skip, try to read and discard bytes\n            int read = (int) Math.min(numToSkip, buffer.length);\n            int numRead = input.read(buffer, 0, read);\n            if (numRead == -1) {\n                break; // end of stream reached\n            }\n            numToSkip -= numRead;\n        }\n    }\n    return available - numToSkip;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}