{
    "generation": "    public static long skip(InputStream input, long numToSkip) throws IOException {\n        long available = numToSkip;\n        while (numToSkip > 0) {\n            long skipped = input.skip(numToSkip);\n            if (skipped == 0) {\n                // Fall back to reading one byte at a time\n                long bytesRead = 0;\n                byte[] buffer = new byte[1];\n                while (bytesRead < numToSkip) {\n                    int read = input.read(buffer);\n                    if (read == -1) {\n                        break;  // end of stream\n                    }\n                    bytesRead++;\n                }\n                if (bytesRead > 0) {\n                    numToSkip -= bytesRead;\n                } else {\n                    break;\n                }\n            } else {\n                numToSkip -= skipped;\n            }\n        }\n        return available - numToSkip;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}