{
    "generation": "    /**\n     * Skips the given number of bytes by repeatedly invoking skip on\n     * the given input stream if necessary.\n     *\n     * <p>In a case where the stream's skip() method returns 0 before\n     * the requested number of bytes has been skip this implementation\n     * will fall back to using the read() method.</p>\n     *\n     * <p>This method will only skip less than the requested number of\n     * bytes if the end of the input stream has been reached.</p>\n     *\n     * @param input stream to skip bytes in\n     * @param numToSkip the number of bytes to skip\n     * @return the number of bytes actually skipped\n     * @throws IOException if an I/O error occurs or if numToSkip is negative\n     */\n    public static long skip(InputStream input, long numToSkip) throws IOException {\n        // Protect against requests to skip negative amounts,\n        // consistent with InputStream.skip documentation\n        if (numToSkip < 0) {\n            throw new IllegalArgumentException(\"Bytes to skip must not be negative: \" + numToSkip);\n        }\n\n        long bytesSkipped = 0;\n        while (bytesSkipped < numToSkip) {\n            long remaining = numToSkip - bytesSkipped;\n            long skipped = input.skip(remaining);\n\n            if (skipped > 0) {\n                bytesSkipped += skipped;\n            } else if (skipped == 0) {\n                // InputStream.skip() returned 0; fall back to reading a single byte\n                int value = input.read();\n                if (value == -1) {\n                    // Reached EOF before skipping the requested amount\n                    break;\n                }\n                // Successfully read/skipped one byte\n                bytesSkipped++;\n            } else {\n                // InputStream.skip() should not return negative values according to the spec.\n                // If it does, behavior is undefined. Treat as EOF or error condition.\n                break;\n            }\n        }\n        return bytesSkipped;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}