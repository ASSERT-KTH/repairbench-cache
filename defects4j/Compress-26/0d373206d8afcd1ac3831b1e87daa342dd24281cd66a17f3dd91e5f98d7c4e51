{
    "generation": "public static long skip(InputStream input, long numToSkip) throws IOException {\n    long remaining = numToSkip;\n    byte[] skipBuffer = new byte[2048]; // buffer used if fallback-to-read required\n    while (remaining > 0) {\n        long skipped = input.skip(remaining);\n        if (skipped > 0) {\n            remaining -= skipped;\n        } else if (skipped == 0) { // fallback, try reading one or more bytes\n            int toRead = (int) Math.min(remaining, skipBuffer.length);\n            int read = input.read(skipBuffer, 0, toRead);\n            if (read == -1) { // EOF reached\n                break;\n            } else {\n                remaining -= read;\n            }\n        }\n    }\n    return numToSkip - remaining;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}