{
    "generation": "    public static long skip(InputStream input, long numToSkip) throws IOException {\n        long remaining = numToSkip;\n        while (remaining > 0) {\n            long skipped = input.skip(remaining);\n            if (skipped > 0) {\n                remaining -= skipped;\n            } else {\n                // Fallback to read if skip returns zero\n                byte[] buffer = new byte[4096]; // Efficient buffer size\n                int read;\n                while ((read = input.read(buffer, 0, (int) Math.min(buffer.length, remaining))) > 0 && remaining > 0) {\n                    remaining -= read;\n                }\n                if (read == -1) {\n                    break;\n                }\n            }\n        }\n        return numToSkip - remaining;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}