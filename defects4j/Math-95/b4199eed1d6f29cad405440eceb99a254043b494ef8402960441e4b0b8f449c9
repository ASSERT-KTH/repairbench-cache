{
    "generation": "/**\n * Access the initial domain value, based on <code>p</code>, used to\n * bracket a CDF root.  This method is used by\n * {@link #inverseCumulativeProbability(double)} to find critical values.\n * \n * @param p the desired probability for the critical value\n * @return initial domain value\n */\nprotected double getInitialDomain(double p) {\n    double d = getDenominatorDegreesOfFreedom();\n    // For very small denominator degrees of freedom, mean does not exist (d <= 2)\n    // Use 1.0 as safe initial guess that lies within the support [0, +INF)\n    if (d > 2.0) {\n        // use mean\n        return d / (d - 2.0);\n    } else {\n        // Use midpoint of support\n        return 1.0;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}