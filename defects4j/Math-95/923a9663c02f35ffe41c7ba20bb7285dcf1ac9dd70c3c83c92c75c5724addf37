{
    "generation": "    /**\n     * Access the initial domain value, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values.\n     *\n     * @param p the desired probability for the critical value\n     * @return initial domain value\n     */\n    protected double getInitialDomain(double p) {\n        double ret;\n        double d = getDenominatorDegreesOfFreedom();\n        // The mean of the F-distribution is d / (d - 2) for d > 2.\n        // It is undefined otherwise. Use 1.0 as a reasonable starting point\n        // when the mean is undefined, as 1.0 is always in the domain [0, \u221e).\n        // This also avoids issues with d=1 (mean=-1) and d=2 (mean=Infinity).\n        if (d > 2.0) {\n            ret = d / (d - 2.0);\n        } else {\n            ret = 1.0;\n        }\n        return ret;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}