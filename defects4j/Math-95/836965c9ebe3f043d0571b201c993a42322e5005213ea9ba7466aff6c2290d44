{
    "generation": "    /**\n     * Access the initial domain value, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values.\n     *\n     * @param p the desired probability for the critical value\n     * @return initial domain value\n     */\n    protected double getInitialDomain(double p) {\n        double ret;\n        double d = getDenominatorDegreesOfFreedom();\n        // The mean is defined only for d > 2. Handle cases where d <= 2 separately.\n        // See http://mathworld.wolfram.com/F-Distribution.html\n        if (d > 2.0) {\n             // use mean as initial guess\n            ret = d / (d - 2.0);\n        } else {\n            // Use 1.0 as a default starting point when mean is undefined or infinite\n            // This is a safe value within the domain [0, +infinity).\n            ret = 1.0;\n        }\n        return ret;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}