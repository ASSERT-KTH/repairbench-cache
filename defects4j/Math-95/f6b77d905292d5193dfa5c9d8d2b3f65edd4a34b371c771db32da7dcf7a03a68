{
    "generation": "/**\n * Access the initial domain value, based on <code>p</code>, used to\n * bracket a CDF root.  This method is used by\n * {@link #inverseCumulativeProbability(double)} to find critical values.\n * \n * @param p the desired probability for the critical value\n * @return initial domain value\n * @throws IllegalArgumentException if the degrees of freedom are less than 2\n */\nprotected double getInitialDomain(double p) {\n    double d = getDenominatorDegreesOfFreedom();\n    if (d < 2) {\n        throw new IllegalArgumentException(\"Degrees of freedom must be at least 2\");\n    }\n    // use mean\n    return d / (d - 2.0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}