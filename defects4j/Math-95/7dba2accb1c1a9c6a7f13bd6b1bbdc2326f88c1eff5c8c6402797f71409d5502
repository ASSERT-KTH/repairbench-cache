{
    "generation": "    /**\n     * Access the initial domain value, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values.\n     * \n     * @param p the desired probability for the critical value\n     * @return initial domain value\n     */\n    @Override\n    protected double getInitialDomain(double p) {\n        double d2 = getDenominatorDegreesOfFreedom();\n        // use the mean when it exists (d2 > 2)\n        if (d2 > 2.0) {\n            return d2 / (d2 - 2.0);\n        }\n        // otherwise mean is infinite or undefined; fall back to a positive guess\n        return 1.0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}