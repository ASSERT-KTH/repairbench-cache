{
    "generation": "    /**\n     * Access the initial domain value, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values.\n     * \n     * @param p the desired probability for the critical value\n     * @return initial domain value\n     */\n    protected double getInitialDomain(double p) {\n// buggy code\n//        double ret;\n//        double d = getDenominatorDegreesOfFreedom();\n//            // use mean\n//            ret = d / (d - 2.0);\n        double ret = Double.NaN;\n        double d = getDenominatorDegreesOfFreedom();\n        if (d > 2.0) {\n            // use mean\n            ret = d / (d - 2.0);\n        }\n\n        return ret;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}