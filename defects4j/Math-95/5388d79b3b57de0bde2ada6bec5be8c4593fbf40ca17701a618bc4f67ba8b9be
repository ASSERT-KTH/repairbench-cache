{
    "generation": "/**\n * Access the initial domain value, based on <code>p</code>, used to\n * bracket a CDF root. This method is used by\n * {@link #inverseCumulativeProbability(double)} to find critical values.\n *\n * @param p the desired probability for the critical value\n * @return initial domain value\n */\n@Override\nprotected double getInitialDomain(double p) {\n    double d = getDenominatorDegreesOfFreedom();\n    // try the mean when it exists (d > 2), otherwise fall back to 1.0\n    double ret = (d > 2.0) ? d / (d - 2.0) : 1.0;\n    // guard against non\u2010positive or infinite values\n    if (!Double.isFinite(ret) || ret <= 0.0) {\n        ret = 1.0;\n    }\n    return ret;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}