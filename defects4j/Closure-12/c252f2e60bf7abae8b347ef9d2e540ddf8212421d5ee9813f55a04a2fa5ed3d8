{
    "generation": "import com.google.javascript.jscomp.ControlFlowGraph.Branch;\nimport com.google.javascript.jscomp.graph.GraphNode;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.jscomp.NodeUtil;\n\n// The context of this function is assumed to be within a class\n// like FlowSensitiveInlineVariables or similar, which has access\n// to the necessary Node and NodeUtil classes.\n\n  /**\n   * Checks if the given node is inside a TRY block that has a CATCH handler.\n   * Traverses up the parent chain from the node represented by the CFG node.\n   * If a TRY node is found for which the current traversal path came from its\n   * first child (the main try block), it checks if that TRY node has a\n   * corresponding CATCH block. The search stops at function boundaries.\n   *\n   * @param cfgNode The CFG node representing the statement/expression.\n   * @return {@code true} if the node is in a {@code try} block guarded by a {@code catch}.\n   */\n  private boolean hasExceptionHandler(GraphNode<Node, Branch> cfgNode) {\n    Node n = cfgNode.getValue();\n    // If the node is null (e.g., for synthetic CFG nodes) or represents a function\n    // itself, it cannot be considered \"inside\" a try block of that function.\n    if (n == null || n.isFunction()) {\n      return false;\n    }\n\n    Node cur = n;\n    Node parent = n.getParent();\n\n    while (parent != null) {\n      // Check if the parent is a TRY node and the current node `cur` is its\n      // first child (the block executed within the try).\n      if (parent.isTry() && parent.getFirstChild() == cur) {\n        // Check if this TRY node has a CATCH block.\n        if (NodeUtil.getCatchBlock(parent) != null) {\n          // Found an enclosing TRY block with an associated CATCH block.\n          return true;\n        }\n        // If this TRY node doesn't have a CATCH block, an exception might\n        // still be caught by an outer TRY/CATCH. Continue searching upwards.\n      }\n\n      // Exceptions are generally handled within the scope of the function they\n      // occur in. Stop searching if a function boundary is reached.\n      if (parent.isFunction()) {\n        break;\n      }\n\n      // Move up the AST hierarchy.\n      cur = parent;\n      parent = parent.getParent();\n    }\n\n    // No enclosing TRY block with a CATCH handler found within the current\n    // function scope.\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}