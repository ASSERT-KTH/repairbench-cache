{
    "generation": "    private void _verifySharing()\n    {\n        if (_hashShared) {\n            // Store original references before creating copies.\n            final int[] oldHashArea = _hashArea;\n            final String[] oldNames = _names;\n\n            // Create copies of arrays\n            _hashArea = Arrays.copyOf(oldHashArea, oldHashArea.length);\n            _names = Arrays.copyOf(oldNames, oldNames.length);\n\n            // Jackson Core #216 fix requires checking the _names array size.\n            // The original implementation might have allocated _names based on primary size (_size >> 2)\n            // instead of the full hash area size (_hashArea.length >> 2).\n            // The rehash() method iterates based on _hashArea.length, so _names must match.\n            // We resize the copied _names array if its length is inconsistent.\n            final int expectedNamesLength = oldHashArea.length >> 2;\n            if (_names.length != expectedNamesLength) {\n                // Resize the copied _names array to the expected length.\n                // Arrays.copyOf handles both expansion (padding with nulls) and potential shrinking.\n                _names = Arrays.copyOf(_names, expectedNamesLength);\n            }\n\n            _hashShared = false;\n            // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure\n            //    we rehash as needed, as need-rehash flag is not copied from parent\n        }\n        // Regardless of whether we copied, check if a rehash is needed.\n        if (_needRehash) {\n            rehash();\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}