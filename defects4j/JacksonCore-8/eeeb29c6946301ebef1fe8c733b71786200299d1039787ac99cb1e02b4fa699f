{
    "generation": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\n        if (!_hasSegments) {\n            // If _currentSegment is null, it means the buffer is logically empty\n            // and no segment has been allocated yet (e.g., after resetWithEmpty()\n            // which sets _currentSegment to null). In this case, we should\n            // return an empty char array to satisfy the contract (e.g., .length == 0).\n            if (_currentSegment == null) {\n                return new char[0];\n            }\n            return _currentSegment;\n        }\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}