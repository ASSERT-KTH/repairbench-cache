{
    "generation": "public char[] getTextBuffer() {\n    // Are we just using shared input buffer?\n    if (_inputStart >= 0) {\n        // If the input buffer is empty, return an empty array\n        if (_inputBuffer.length == 0) {\n            return new char[0];\n        }\n        return _inputBuffer;\n    }\n    if (_resultArray != null) {\n        // If the result array is empty, return an empty array\n        if (_resultArray.length == 0) {\n            return new char[0];\n        }\n        return _resultArray;\n    }\n    if (_resultString != null) {\n        // If the result string is empty, return an empty array\n        if (_resultString.isEmpty()) {\n            return new char[0];\n        }\n        return (_resultArray = _resultString.toCharArray());\n    }\n    // Nope; but does it fit in just one segment?\n    if (!_hasSegments) {\n        // If the current segment is empty, return an empty array\n        if (_currentSegment.length == 0) {\n            return new char[0];\n        }\n        return _currentSegment;\n    }\n    // Nope, need to have/create a non-segmented array and return it\n    char[] array = contentsAsArray();\n    // If the resulting array is empty, return an empty array\n    if (array.length == 0) {\n        return new char[0];\n    }\n    return array;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}