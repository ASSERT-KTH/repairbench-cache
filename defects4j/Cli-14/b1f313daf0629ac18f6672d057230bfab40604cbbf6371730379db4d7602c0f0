{
    "generation": "public void validate(final WriteableCommandLine commandLine)\n        throws OptionException {\n    // number of options found\n    int present = 0;\n\n    // reference to first unexpected option\n    Option unexpected = null;\n\n    for (final Iterator i = options.iterator(); i.hasNext();) {\n        final Option option = (Option) i.next();\n\n        // validate required, grouped or present options exactly once\n        option.validate(commandLine);\n\n        // count if the option was actually present on the command line\n        if (commandLine.hasOption(option)) {\n            if (++present > maximum) {\n                unexpected = option;\n                break;\n            }\n        }\n    }\n\n    // too many options\n    if (unexpected != null) {\n        throw new OptionException(this,\n                                  ResourceConstants.UNEXPECTED_TOKEN,\n                                  unexpected.getPreferredName());\n    }\n\n    // too few options\n    if (present < minimum) {\n        throw new OptionException(this,\n                                  ResourceConstants.MISSING_OPTION);\n    }\n\n    // validate each anonymous argument\n    for (final Iterator i = anonymous.iterator(); i.hasNext();) {\n        final Option option = (Option) i.next();\n        option.validate(commandLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}