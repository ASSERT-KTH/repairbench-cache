{
    "generation": "    /**\n     * <p>\n     * Gets the fraction percentage as a <tt>double</tt>. This calculates the\n     * fraction as the numerator divided by denominator multiplied by 100.\n     * </p>\n     *\n     * @return the fraction percentage as a <tt>double</tt>.\n     */\n    public double percentageValue() {\n        // The original implementation `return multiply(100).doubleValue();`\n        // could lead to integer overflow within the Fraction's internal arithmetic\n        // when multiplying the numerator by 100, especially if the numerator\n        // is already large (e.g., Integer.MAX_VALUE / 99). This happens before\n        // the value is converted to a double, resulting in an incorrect or\n        // wrapped-around negative value.\n        //\n        // To fix this, perform the calculation using double-precision floating-point\n        // arithmetic from the start, preventing intermediate integer overflows.\n        return ((double) getNumerator() / getDenominator()) * 100.0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}