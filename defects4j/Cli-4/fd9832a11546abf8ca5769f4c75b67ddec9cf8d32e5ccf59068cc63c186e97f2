{
    "generation": "    /**\n     * <p>Throws a {@link MissingOptionException} if all of the\n     * required options are no present.</p>\n     *\n     * @throws MissingOptionException if any of the required Options\n     * are not present.\n     */\n    private void checkRequiredOptions()\n        throws MissingOptionException\n    {\n        // if there are required options that have not been\n        // processsed\n        if (requiredOptions.size() > 0)\n        {\n            Iterator iter = requiredOptions.iterator();\n            StringBuffer buff = new StringBuffer();\n\n            // Determine the appropriate prefix for the exception message\n            String prefix;\n            if (requiredOptions.size() == 1) {\n                prefix = \"Missing required option: \";\n            } else {\n                // For multiple missing options, the plural form is used\n                prefix = \"Missing required options: \";\n            }\n            buff.append(prefix);\n\n            // loop through the required options and append their names\n            while (iter.hasNext())\n            {\n                // Assuming iter.next() returns an Option object, get its opt name\n                buff.append(((org.apache.commons.cli.Option) iter.next()).getOpt());\n            }\n\n            throw new MissingOptionException(buff.toString());\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}