{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException\n{\n    // Note! Should not skip if `property` null since that'd skip check\n    // for config overrides, in case of root value\n    if (property == null) {\n        return this;\n    }\n    JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n    if (format == null) {\n        return this;\n    }\n    // Simple case first: serialize as numeric timestamp?\n    JsonFormat.Shape shape = format.getShape();\n    if (shape.isNumeric()) {\n        return withFormat(Boolean.TRUE, null);\n    }\n\n    // Check if format has a custom pattern\n    if (format.hasPattern()) {\n        final String pattern = format.getPattern();\n        Locale loc = (format.hasLocale()) ? format.getLocale() : null;\n        TimeZone tz = (format.hasTimeZone()) ? format.getTimeZone() : null;\n        // Use provided locale or default if not specified\n        return createDateFormat(serializers, pattern, loc, tz);\n    }\n\n    // If no pattern, check other conditions: locale, timezone, or shape\n    final boolean hasLocale = format.hasLocale();\n    final boolean hasTZ = format.hasTimeZone();\n    final boolean asString = (shape == JsonFormat.Shape.STRING);\n\n    if (!hasLocale && !hasTZ && !asString) {\n        return this;\n    }\n\n    DateFormat df0 = serializers.getConfig().getDateFormat();\n    if (df0 instanceof StdDateFormat) {\n        StdDateFormat std = (StdDateFormat) df0;\n        if (hasLocale) {\n            std = std.withLocale(format.getLocale());\n        }\n        if (hasTZ) {\n            std = std.withTimeZone(format.getTimeZone());\n        }\n        return withFormat(Boolean.FALSE, std);\n    }\n\n    if (!(df0 instanceof SimpleDateFormat)) {\n        serializers.reportBadDefinition(handledType(), String.format(\n\"Configured `DateFormat` (%s) not a `SimpleDateFormat`; cannot configure `Locale` or `TimeZone`\",\ndf0.getClass().getName()));\n    }\n    SimpleDateFormat df = (SimpleDateFormat) df0;\n    // If a timezone is specified, apply it\n    if (hasTZ) {\n        TimeZone tz = format.getTimeZone();\n        df.setTimeZone(tz);\n    }\n    return withFormat(Boolean.FALSE, df);\n}\n\nprotected DateFormat createDateFormat(SerializerProvider serializers, String pattern, Locale locale, TimeZone timeZone) {\n    final Locale loc = (locale != null) ? locale : serializers.getLocale();\n    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n    if (timeZone != null) {\n        df.setTimeZone(timeZone);\n    }\n    return df;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}