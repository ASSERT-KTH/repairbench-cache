{
    "generation": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                            char[] chars, Random random) {\n    if (count == 0) {\n        return \"\";\n    } else if (count < 0) {\n        throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n    }\n\n    if (chars != null && chars.length == 0) {\n        throw new IllegalArgumentException(\"The chars array must not be empty\");\n    }\n\n    if (start == 0 && end == 0) {\n        if (!letters && !numbers) {\n            end = Integer.MAX_VALUE;\n        } else {\n            start = ' ';\n            end = 'z' + 1;\n        }\n    }\n\n    char[] buffer = new char[count];\n\n    if (chars != null) {\n        // Select from chars[start, end)\n        if (end == 0) {\n            end = chars.length;\n        }\n        if (start < 0 || end > chars.length) {\n            throw new ArrayIndexOutOfBoundsException(\"The start and end indexes are out of bounds in the chars array: \" + start + \", \" + end);\n        }\n        int gap = end - start;\n        if (gap <= 0) {\n            throw new IllegalArgumentException(\"The chars array must contain at least one character between start and end\");\n        }\n\n        int i = 0;\n        while (i < count) {\n            char ch = chars[random.nextInt(gap) + start];\n            if (letters && Character.isLetter(ch)\n                    || numbers && Character.isDigit(ch)\n                    || !letters && !numbers) {\n                // Handle surrogate pairs as original code does\n                if (ch >= 56320 && ch <= 57343) {\n                    if (i == count - 1) {\n                        continue;\n                    }\n                    buffer[i++] = (char) (55296 + random.nextInt(128));\n                    buffer[i++] = ch;\n                } else if (ch >= 55296 && ch <= 56191) {\n                    if (i == count - 1) {\n                        continue;\n                    }\n                    buffer[i++] = ch;\n                    buffer[i++] = (char) (56320 + random.nextInt(128));\n                } else if (ch >= 56192 && ch <= 56319) {\n                    continue;\n                } else {\n                    buffer[i++] = ch;\n                }\n            }\n        }\n    } else {\n        int gap = end - start;\n        if (gap <= 0 || gap == Integer.MAX_VALUE) {\n            // gap == Integer.MAX_VALUE covers the original (!letters && !numbers case)\n            int i = 0;\n            while (i < count) {\n                char ch = (char) random.nextInt();\n                if (letters && Character.isLetter(ch)\n                        || numbers && Character.isDigit(ch)\n                        || !letters && !numbers) {\n                    if (ch >= 56320 && ch <= 57343) {\n                        if (i == count - 1) {\n                            continue;\n                        }\n                        buffer[i++] = (char) (55296 + random.nextInt(128));\n                        buffer[i++] = ch;\n                    } else if (ch >= 55296 && ch <= 56191) {\n                        if (i == count - 1) {\n                            continue;\n                        }\n                        buffer[i++] = ch;\n                        buffer[i++] = (char) (56320 + random.nextInt(128));\n                    } else if (ch >= 56192 && ch <= 56319) {\n                        continue;\n                    } else {\n                        buffer[i++] = ch;\n                    }\n                }\n            }\n        } else {\n            int i = 0;\n            while (i < count) {\n                char ch = (char) (random.nextInt(gap) + start);\n                if (letters && Character.isLetter(ch)\n                        || numbers && Character.isDigit(ch)\n                        || !letters && !numbers) {\n                    if (ch >= 56320 && ch <= 57343) {\n                        if (i == count - 1) {\n                            continue;\n                        }\n                        buffer[i++] = (char) (55296 + random.nextInt(128));\n                        buffer[i++] = ch;\n                    } else if (ch >= 55296 && ch <= 56191) {\n                        if (i == count - 1) {\n                            continue;\n                        }\n                        buffer[i++] = ch;\n                        buffer[i++] = (char) (56320 + random.nextInt(128));\n                    } else if (ch >= 56192 && ch <= 56319) {\n                        continue;\n                    } else {\n                        buffer[i++] = ch;\n                    }\n                }\n            }\n        }\n    }\n    return new String(buffer);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}