{
    "generation": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                            char[] chars, Random random) {\n    if (count == 0) {\n        return \"\";\n    } else if (count < 0) {\n        throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n    }\n\n    if (chars != null && chars.length == 0) {\n        throw new IllegalArgumentException(\"The chars array must not be empty\");\n    }\n\n    if (start == 0 && end == 0) {\n        if (!letters && !numbers) {\n            end = Integer.MAX_VALUE;\n        } else {\n            start = ' ';\n            end = 'z' + 1;\n        }\n    }\n\n    if (end <= start) {\n        throw new IllegalArgumentException(\"Parameter end (\" + end + \") must be greater than start (\" + start + \")\");\n    }\n\n    if (chars != null) {\n        if (start < 0 || end > chars.length) {\n            throw new ArrayIndexOutOfBoundsException(\n                \"The start (\" + start + \") and end (\" + end + \") parameters must be within the bounds of the chars array: 0 - \" + chars.length);\n        }\n    }\n\n    char[] buffer = new char[count];\n    int gap = end - start;\n\n    int idx = 0;\n    while (idx < count) {\n        char ch;\n        if (chars == null) {\n            ch = (char) (random.nextInt(gap) + start);\n        } else {\n            ch = chars[random.nextInt(gap) + start];\n        }\n        if ((letters && Character.isLetter(ch))\n                || (numbers && Character.isDigit(ch))\n                || (!letters && !numbers)) {\n            if (ch >= 56320 && ch <= 57343) {\n                if (idx == count - 1) {\n                    continue;  // skip, no room for paired surrogate\n                }\n                // low surrogate, insert high surrogate before\n                buffer[idx++] = (char) (55296 + random.nextInt(128));\n                buffer[idx++] = ch;\n            } else if (ch >= 55296 && ch <= 56191) {\n                if (idx == count - 1) {\n                    continue;  // skip, no room for paired surrogate\n                }\n                // high surrogate, insert low surrogate after\n                buffer[idx++] = ch;\n                buffer[idx++] = (char) (56320 + random.nextInt(128));\n            } else if (ch >= 56192 && ch <= 56319) {\n                // private high surrogate, skip\n                continue;\n            } else {\n                buffer[idx++] = ch;\n            }\n        }\n    }\n    return new String(buffer);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}