{
    "generation": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                            char[] chars, Random random) {\n    if (count == 0) {\n        return \"\";\n    } else if (count < 0) {\n        throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n    }\n\n    // When a chars array is supplied, use it exclusively.\n    if (chars != null) {\n        if (chars.length == 0) {\n            throw new IllegalArgumentException(\"The chars array must not be empty\");\n        }\n        // If start and end have not been explicitly specified, use the entire array.\n        if (start == 0 && end == 0) {\n            start = 0;\n            end = chars.length;\n        }\n        if (start < 0 || end > chars.length) {\n            throw new ArrayIndexOutOfBoundsException(\"start or end out of bounds for chars array\");\n        }\n    } else { // When chars is null, use the numeric (codepoint) range.\n        if (start == 0 && end == 0) {\n            if (!letters && !numbers) {\n                end = Integer.MAX_VALUE;\n            } else {\n                start = ' ';\n                end = 'z' + 1;\n            }\n        }\n    }\n    \n    int gap = end - start;\n    if (gap <= 0) {\n        throw new IllegalArgumentException(\"Parameter end (\" + end + \") must be greater than start (\" + start + \")\");\n    }\n\n    char[] buffer = new char[count];\n    while (count-- != 0) {\n        char ch;\n        if (chars == null) {\n            ch = (char) (random.nextInt(gap) + start);\n        } else {\n            ch = chars[random.nextInt(gap) + start];\n        }\n        if ((letters && Character.isLetter(ch))\n                || (numbers && Character.isDigit(ch))\n                || (!letters && !numbers)) {\n            if (ch >= 56320 && ch <= 57343) {  // low surrogate\n                if (count == 0) {\n                    count++;\n                    continue;\n                } else {\n                    buffer[count] = ch;\n                    count--;\n                    buffer[count] = (char) (55296 + random.nextInt(128));\n                }\n            } else if (ch >= 55296 && ch <= 56191) {  // high surrogate\n                if (count == 0) {\n                    count++;\n                    continue;\n                } else {\n                    buffer[count] = (char) (56320 + random.nextInt(128));\n                    count--;\n                    buffer[count] = ch;\n                }\n            } else if (ch >= 56192 && ch <= 56319) {  // private high surrogate, skip it\n                count++;\n                continue;\n            } else {\n                buffer[count] = ch;\n            }\n        } else {\n            count++;\n        }\n    }\n    return new String(buffer);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}