{
    "generation": "    private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {\n        int cache = 0;\n        // 'shift' represents the bit position within the current byte being assembled in 'cache'.\n        // It starts at 7 (most significant bit) and goes down to 0 (least significant bit).\n        int shift = 7;\n        for (int i = 0; i < length; i++) {\n            // Get the i-th bit from the BitSet. If true, it's 1; otherwise, it's 0.\n            // Shift this bit to its correct position within 'cache' and OR it.\n            cache |= ((bits.get(i) ? 1 : 0) << shift);\n            // Move to the next bit position (towards the least significant bit).\n            --shift;\n\n            // If 'shift' becomes less than 0 (i.e., -1), it means we have just placed the 8th bit\n            // (the one at position 0). The 'cache' now holds a complete byte.\n            if (shift < 0) {\n                header.write(cache); // Write the accumulated full byte to the output stream.\n                shift = 7; // Reset 'shift' to 7 to start assembling the next byte from its MSB.\n                cache = 0; // Clear 'cache' to begin accumulating bits for the new byte.\n            }\n        }\n        // After the loop, if there are any remaining bits in 'cache' that did not form a complete byte,\n        // they need to be written as a partial byte.\n        // This condition ensures:\n        // 1. 'shift != 7': If 'shift' is 7, it means either no bits were processed, or a full byte was just\n        //    written and 'shift' was reset. In both cases, 'cache' would be 0, and no partial byte needs writing.\n        //    If 'shift' is any value from 0 to 6, it means 'cache' holds a partial byte.\n        // 2. 'length > 0': Ensures we only write if at least one bit was processed in total.\n        //    (This covers the edge case where length is 0, in which case nothing should be written).\n        if (shift != 7 && length > 0) {\n            header.write(cache);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}