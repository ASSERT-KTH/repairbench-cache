{
    "generation": "    private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {\n        int cache = 0;\n        int bitInByte = 0; // Tracks the current bit position within the byte, from 0 (MSB) to 7 (LSB)\n\n        for (int i = 0; i < length; i++) {\n            // Get the bit from BitSet. True is 1, false is 0.\n            int bit = bits.get(i) ? 1 : 0;\n\n            // Place the bit into the cache at the correct position.\n            // (7 - bitInByte) calculates the shift amount for MSB-first packing.\n            // For bitInByte = 0 (first bit), shift is 7.\n            // For bitInByte = 7 (eighth bit), shift is 0.\n            cache |= (bit << (7 - bitInByte));\n\n            bitInByte++; // Move to the next bit position within the current byte\n\n            // If we have accumulated 8 bits (bitInByte becomes 8), write the byte.\n            if (bitInByte == 8) {\n                header.write(cache); // Write the full byte\n                cache = 0;           // Reset cache for the next byte\n                bitInByte = 0;       // Reset bit position for the next byte\n            }\n        }\n\n        // After the loop, if there are any remaining bits in the cache that didn't\n        // form a full byte (i.e., 'length' was not a multiple of 8), write them.\n        // 'bitInByte > 0' indicates that some bits were accumulated but not yet written.\n        if (bitInByte > 0) {\n            header.write(cache); // Write the partially filled byte (remaining bits are 0-padded)\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}