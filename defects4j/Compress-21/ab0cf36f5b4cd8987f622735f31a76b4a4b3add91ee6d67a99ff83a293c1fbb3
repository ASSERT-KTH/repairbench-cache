{
    "generation": "    private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {\n        int cache = 0;\n        int shift = 7; // Represents the bit position (0-7) for the current byte, starting with the most significant bit\n        for (int i = 0; i < length; i++) {\n            // Get the i-th bit from the BitSet and set it in the 'cache' at the current 'shift' position\n            cache |= ((bits.get(i) ? 1 : 0) << shift);\n            --shift; // Move to the next lower bit position\n            // If 'shift' becomes less than 0 (i.e., -1), it means 8 bits have been accumulated in 'cache'\n            if (shift < 0) {\n                header.write(cache); // Write the full byte to the header\n                shift = 7; // Reset shift for the next byte (start with MSB)\n                cache = 0; // Clear cache for the next byte\n            }\n        }\n        // After the loop, if there are any remaining bits in 'cache' (i.e., a partial byte was formed),\n        // write them. This is indicated by 'shift' not being its initial value of 7.\n        // If 'length' was a multiple of 8, the last byte was written inside the loop,\n        // 'shift' was reset to 7, and 'cache' to 0, so this condition will be false, which is correct.\n        // If 'length' was 0, the loop is not entered, 'shift' remains 7, and this condition is false, correct.\n        if (shift != 7) {\n            header.write(cache);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}