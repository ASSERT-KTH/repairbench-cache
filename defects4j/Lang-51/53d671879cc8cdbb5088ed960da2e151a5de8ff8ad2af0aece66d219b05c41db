{
    "generation": "public static boolean toBoolean(String str) {\n    // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n    // Non interned 'true' matched 15 times slower.\n    //\n    // Optimisation provides same performance as before for interned 'true'.\n    // Similar performance for null, 'false', and other strings not length 2/3/4.\n    // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n    if (str == \"true\") {\n        return true;\n    }\n    if (str == null) {\n        return false;\n    }\n    int len = str.length();\n    // Handle length 0 case (which would have thrown exception in original code)\n    if (len == 0) {\n        return false;\n    }\n    switch (len) {\n        case 2: {\n            char ch0 = str.charAt(0);\n            char ch1 = str.charAt(1);\n            return\n                (ch0 == 'o' || ch0 == 'O') &&\n                (ch1 == 'n' || ch1 == 'N');\n        }\n        case 3: {\n            char ch = str.charAt(0);\n            if (ch == 'y' || ch == 'Y') {\n                char ch1 = str.charAt(1);\n                char ch2 = str.charAt(2);\n                return\n                    ((ch == 'y' && (ch1 == 'e' || ch1 == 'E') && (ch2 == 's' || ch2 == 'S')) ||\n                     (ch == 'Y' && (ch1 == 'E' || ch1 == 'e') && (ch2 == 'S' || ch2 == 's')));\n            }\n            break;\n        }\n        case 4: {\n            char ch = str.charAt(0);\n            if (ch == 't' || ch == 'T') {\n                char ch1 = str.charAt(1);\n                char ch2 = str.charAt(2);\n                char ch3 = str.charAt(3);\n                return\n                    ((ch == 't' &&\n                      (ch1 == 'r' || ch1 == 'R') &&\n                      (ch2 == 'u' || ch2 == 'U') &&\n                      (ch3 == 'e' || ch3 == 'E')) ||\n                     (ch == 'T' &&\n                      (ch1 == 'R' || ch1 == 'r') &&\n                      (ch2 == 'U' || ch2 == 'u') &&\n                      (ch3 == 'E' || ch3 == 'e')));\n            }\n            break;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}