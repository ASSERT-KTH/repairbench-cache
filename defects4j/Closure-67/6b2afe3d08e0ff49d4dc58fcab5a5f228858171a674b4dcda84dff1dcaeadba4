{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n    Node n = assign.getFirstChild();\n    if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign) && n.getType() == Token.GETPROP) {\n        return hasPrototypeProperty(n);\n    }\n    return false;\n}\n\nprivate boolean hasPrototypeProperty(Node node) {\n    if (node.getType() == Token.GETPROP) {\n        Node propertyNode = node.getNext();\n        if (propertyNode != null && propertyNode.getType() == Token.STRING &&\n            propertyNode.getString().equals(\"prototype\")) {\n            return true;\n        }\n        return hasPrototypeProperty(node.getFirstChild());\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}