{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n  Node n = assign.getFirstChild();\n  if (n != null\n      && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n      && (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM)) {\n    // We want to exclude the assignment itself from the usage list\n    Node owner = n.getFirstChild();\n    if (owner != null && owner.getType() == Token.GETPROP) {\n      // owner is the GETPROP for \"e.prototype\"\n      Node protoKey = owner.getFirstChild().getNext();\n      if (protoKey != null\n          && protoKey.getType() == Token.STRING\n          && \"prototype\".equals(protoKey.getString())) {\n        return true;\n      }\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}