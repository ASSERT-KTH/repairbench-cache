{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n    Node n = assign.getFirstChild();\n    if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)) {\n        Node lhs = n.getFirstChild();\n        if (lhs.getType() == Token.GETPROP) {\n            // We want to exclude the assignment itself from the usage list\n            Node propertyAccess = lhs.getFirstChild();\n            if (propertyAccess.getType() == Token.GETPROP) {\n                Node propertyName = propertyAccess.getFirstChild().getNext();\n                if (propertyName.getType() == Token.STRING &&\n                    propertyName.getString().equals(\"prototype\")) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}