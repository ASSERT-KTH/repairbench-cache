{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n  Node n = assign.getFirstChild();\n  if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)) {\n    // We want to exclude the assignment itself from the usage list\n    // Handle both GETPROP (dot notation) and GETELEM (bracket notation)\n    if (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM) {\n      Node firstChild = n.getFirstChild();\n      if (firstChild != null && \n          (firstChild.getType() == Token.GETPROP || firstChild.getType() == Token.GETELEM)) {\n        Node child = firstChild.getFirstChild().getNext();\n        \n        if (child != null && \n            ((child.getType() == Token.STRING && child.getString().equals(\"prototype\")) ||\n             (child.getType() == Token.NAME && child.getString().equals(\"prototype\")))) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}