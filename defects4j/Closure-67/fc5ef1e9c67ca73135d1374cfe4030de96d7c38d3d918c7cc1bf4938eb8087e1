{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n    Node n = assign.getFirstChild();\n    if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign) && n.getType() == Token.GETPROP) {\n        // Check if the assignment is to a prototype property\n        Node propertyNameNode = n.getLastChild();\n        if (propertyNameNode.getType() == Token.STRING && propertyNameNode.getString().equals(\"prototype\")) {\n            // Check if the prototype property is being assigned to a method or another property\n            Node rhs = assign.getLastChild();\n            if (rhs.getType() == Token.FUNCTION || (rhs.getType() == Token.GETPROP && rhs.getLastChild().getType() == Token.STRING)) {\n                return true;\n            }\n        } else {\n            // Check if the assignment is to a chained property that ends with 'prototype'\n            Node currentNode = n;\n            while (currentNode.getType() == Token.GETPROP) {\n                Node child = currentNode.getFirstChild().getNext();\n                if (child.getType() == Token.STRING && child.getString().equals(\"prototype\")) {\n                    return true;\n                }\n                currentNode = currentNode.getFirstChild();\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}