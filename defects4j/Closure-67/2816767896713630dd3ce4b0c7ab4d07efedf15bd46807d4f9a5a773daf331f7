{
    "generation": "    private boolean isPrototypePropertyAssign(Node assign) {\n      Node n = assign.getFirstChild();\n      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n          && n.getType() == Token.GETPROP\n// buggy code\n//          ) {\n         ) {\n\n        // We want to exclude the assignment itself from the usage list\n        boolean isChainedProperty =\n            n.getFirstChild().getType() == Token.GETPROP;\n        if (isChainedProperty) {\n          Node child = n.getFirstChild().getFirstChild().getNext();\n          if (child.getType() == Token.STRING &&\n              child.getString().equals(\"prototype\")) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}