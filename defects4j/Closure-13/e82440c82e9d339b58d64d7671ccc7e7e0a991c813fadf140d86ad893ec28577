{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    boolean changed = true;\n    while (changed) {\n      changed = false;\n\n      Node c = node.getFirstChild();\n      while (c != null) {\n        boolean childChanged = traverse(c);\n        changed |= childChanged;\n\n        Node next = c.getNext();\n        c = next;\n      }\n\n      boolean nodeChanged = visit(node);\n      changed |= nodeChanged;\n\n      Preconditions.checkState(!changed || visits < 10000, \"too many iterations\");\n    }\n\n    exitNode(node);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}