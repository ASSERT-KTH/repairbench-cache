{
    "generation": "private void traverse(Node node) {\n  // Always recurse into children, but only \u201cvisit\u201d (and re\u2010visit)\n  // nodes that want to be processed.\n  boolean doVisit = shouldVisit(node);\n  int visits = 0;\n  do {\n    Node c = node.getFirstChild();\n    while (c != null) {\n      Node next = c.getNext();\n      traverse(c);\n      c = next;\n    }\n    if (!doVisit) {\n      break;\n    }\n    visit(node);\n    visits++;\n    Preconditions.checkState(visits < 10000, \"too many interations\");\n  } while (shouldRetraverse(node));\n  if (doVisit) {\n    exitNode(node);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}