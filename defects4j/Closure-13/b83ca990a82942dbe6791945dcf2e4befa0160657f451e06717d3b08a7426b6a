{
    "generation": "private void traverse(Node node) {\n  if (!shouldVisit(node)) {\n    return;\n  }\n\n  int visits = 0;\n  do {\n    Node c = node.getFirstChild();\n    Node next;\n    while(c != null) {\n      next = c.getNext();  // prefetch 'next' before recursive traversal\n      traverse(c);\n      c = next;\n    }\n\n    visit(node);\n    visits++;\n\n    Preconditions.checkState(visits < 10000, \"too many iterations\");\n  } while (shouldRetraverse(node));\n\n  exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}