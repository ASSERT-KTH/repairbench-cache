{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    traverseChildren(node);\n    visit(node);\n\n    if (shouldRetraverse(node)) {\n      do {\n        traverseChildren(node);\n        Preconditions.checkState(visits < 10000, \"too many iterations\");\n      } while (shouldRetraverse(node));\n    }\n\n    exitNode(node);\n  }\n\n  private void traverseChildren(Node node) {\n    Node c = node.getFirstChild();\n    while (c != null) {\n      traverse(c);\n      c = c.getNext();\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}