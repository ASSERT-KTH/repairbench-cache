{
    "generation": "  private void traverse(Node node) {\n    // The goal here is to avoid retraversing\n    // the entire AST to catch newly created opportunities.\n    // So we track whether a \"unit of code\" has changed,\n    // and revisit immediately.\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    boolean changed = true;\n    while (changed) {\n      changed = false;\n      Node c = node.getFirstChild();\n      while (c != null) {\n        traverse(c);\n        Node next = c.getNext();\n        c = next;\n      }\n\n      if (shouldRetraverse(node)) {\n        changed = true;\n      }\n\n      visit(node);\n\n      Preconditions.checkState(10000 > 0, \"too many interations\");\n    }\n\n    exitNode(node);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}