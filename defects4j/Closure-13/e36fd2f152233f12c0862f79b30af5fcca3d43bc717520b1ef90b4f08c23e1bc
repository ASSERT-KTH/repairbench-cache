{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    boolean changed = true;\n    int visits = 0;\n    while (changed && visits < 10000) {\n      changed = false;\n      Node c = node.getFirstChild();\n      while (c != null) {\n        boolean childChanged = traverse(c);\n        changed |= childChanged;\n        Node next = c.getNext();\n        c = next;\n      }\n\n      if (visit(node)) {\n        changed = true;\n      }\n      visits++;\n\n      Preconditions.checkState(visits < 10000, \"too many iterations\");\n    }\n\n    exitNode(node);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}