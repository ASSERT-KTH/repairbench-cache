{
    "generation": "  private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    int visits = 0;\n    do {\n      // Reset visits\n      Node c = node.getFirstChild();\n      while (c != null) {\n        traverse(c);\n        // Always reset the parent to this node after traversing a child\n        c.setParent(node);\n        Node next = c.getNext();\n        c = next;\n      }\n\n      visit(node);\n      visits++;\n      Preconditions.checkState(visits < 10000, \"too many interations\");\n    } while (shouldRetraverse(node));\n\n    exitNode(node);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}