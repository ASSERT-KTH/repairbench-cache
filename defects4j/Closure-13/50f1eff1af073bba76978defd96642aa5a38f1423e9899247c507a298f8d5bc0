{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n        return;\n    }\n\n    int visits = 0;\n    do {\n        // Visit children first (pre-order traversal)\n        if (node.hasChildren()) {\n            Node c = node.getFirstChild();\n            while (c != null) {\n                // Store next sibling before traversal in case it changes during visit\n                Node next = c.getNext();\n                traverse(c);\n                c = next;\n            }\n        }\n\n        visit(node);\n        visits++;\n\n        Preconditions.checkState(visits < 10000, \"too many iterations\");\n    } while (shouldRetraverse(node));\n\n    exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}