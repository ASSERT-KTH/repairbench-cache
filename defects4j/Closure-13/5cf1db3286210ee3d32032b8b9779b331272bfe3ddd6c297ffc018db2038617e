{
    "generation": "private void traverse(Node node) {\n  if (!shouldVisit(node)) {\n    return;\n  }\n\n  // First, repeatedly process the current node until it stabilizes.\n  int visits = 0;\n  do {\n    visit(node);\n    visits++;\n    Preconditions.checkState(visits < 10000, \"too many iterations\");\n  } while (shouldRetraverse(node));\n\n  // Now traverse the children of the (possibly modified) node.\n  for (Node child = node.getFirstChild(); child != null;) {\n    Node next = child.getNext();\n    traverse(child);\n    child = next;\n  }\n  \n  exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}