{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    boolean changed = true;\n    while (changed) {\n      changed = false;\n      \n      Node c = node.getFirstChild();\n      while(c != null) {\n        traverse(c);\n        Node next = c.getNext();\n        c = next;\n      }\n\n      changed |= visit(node);\n\n      Preconditions.checkState(!changed || shouldRetraverse(node), \n                               \"Unexpected change without retracing\");\n    }\n\n    exitNode(node);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}