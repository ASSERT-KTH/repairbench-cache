{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    int visits = 0;\n    do {\n      Node c = node.getFirstChild();\n      while(c != null) {\n        traverse(c);\n        Node next = c.getNext();\n        c = next;\n      }\n\n      visit(node);\n      visits++;\n\n      Preconditions.checkState(visits < 10000, \"too many interations\");\n    } while (shouldRetraverse(node) && visits < 100);  // Added visits limit for retraversal\n\n    exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}