{
    "generation": "  private void traverse(Node node) {\n    // The goal here is to avoid retraversing\n    // the entire AST to catch newly created opportunities.\n    // So we track whether a \"unit of code\" has changed,\n    // and revisit immediately.\n    if (!shouldVisit(node)) {\n      return;\n    }\n    int visits = 0;\n    do {\n      Node c = node.getFirstChild();\n      while(c != null) {\n// buggy code\n//        traverse(c);\n//        Node next = c.getNext();\n        visit(c);\n        Node next = c.getNext();\n\n        c = next;\n      }\n      visit(node);\n      visits++;\n      Preconditions.checkState(visits < 10000, \"too many interations\");\n    } while (shouldRetraverse(node));\n    exitNode(node);\n  }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}