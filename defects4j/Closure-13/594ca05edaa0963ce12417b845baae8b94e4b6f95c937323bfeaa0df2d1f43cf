{
    "generation": "private void traverse(Node node) {\n  // Even if this node itself doesn\u2019t need to be visited,\n  // we still want to recurse into its children to catch\n  // any optimizations in subtrees.\n  if (!shouldVisit(node)) {\n    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n      traverse(c);\n    }\n    return;\n  }\n\n  int visits = 0;\n  do {\n    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n      traverse(c);\n    }\n\n    visit(node);\n    visits++;\n    Preconditions.checkState(visits < 10000, \"too many interations\");\n  } while (shouldRetraverse(node));\n\n  exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}