{
    "generation": "/**\n * Returns the number of characters between the current position and the next instance of the input sequence\n *\n * @param seq scan target\n * @return offset between current position and next instance of target. -1 if not found.\n */\nint nextIndexOf(CharSequence seq) {\n    // doesn't handle scanning for surrogates\n    if (seq.length() == 0)\n        return 0;\n    \n    char startChar = seq.charAt(0);\n    int searchLength = length - seq.length() + 1;\n    \n    for (int offset = pos; offset < searchLength; offset++) {\n        // scan to first instance of startchar:\n        if (startChar != input[offset])\n            continue;\n            \n        // found first char, test rest of sequence\n        boolean match = true;\n        for (int i = 1; i < seq.length(); i++) {\n            if (input[offset + i] != seq.charAt(i)) {\n                match = false;\n                break;\n            }\n        }\n        \n        if (match)\n            return offset - pos;\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}