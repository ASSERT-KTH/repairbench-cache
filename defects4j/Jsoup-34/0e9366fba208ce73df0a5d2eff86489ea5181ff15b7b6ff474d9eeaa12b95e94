{
    "generation": "/**\n * Returns the number of characters between the current position and the next instance of the input sequence\n *\n * @param seq scan target\n * @return offset between current position and next instance of target. -1 if not found.\n */\nint nextIndexOf(CharSequence seq) {\n    // doesn't handle scanning for surrogates\n    char startChar = seq.charAt(0);\n    final int seqLength = seq.length();\n    \n    for (int offset = pos; offset < length; offset++) {\n        // scan to first instance of startchar:\n        if (startChar != input[offset]) {\n            while(++offset < length && startChar != input[offset]);\n        }\n        \n        if (offset + seqLength > length) {\n            // not enough characters left for a match\n            return -1;\n        }\n        \n        int i = offset + 1;\n        int j = 1;\n        for (; j < seqLength && i < length && seq.charAt(j) == input[i]; i++, j++);\n        \n        if (j == seqLength) // found full sequence\n            return offset - pos;\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}