{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        // doesn't handle scanning for surrogates\n        char startChar = seq.charAt(0);\n        int seqLen = seq.length();\n        for (int offset = pos; offset <= length - seqLen; offset++) {\n            // scan to first instance of startchar:\n            if (startChar != input[offset]) {\n                boolean found = false;\n                while(++offset <= length - seqLen) {\n                    if (startChar == input[offset]) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found)\n                    return -1;\n            }\n\n            int i = offset + 1;\n            int last = i + seqLen - 1;\n            if (offset <= length - seqLen) {\n                int j = 1;\n                while (i < length && j < seqLen && seq.charAt(j) == input[i]) {\n                    i++;\n                    j++;\n                }\n                if (j == seqLen) // found full sequence\n                    return offset - pos;\n            }\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}