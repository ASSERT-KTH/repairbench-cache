{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        // doesn't handle scanning for surrogates\n        char startChar = seq.charAt(0);\n        int seqLength = seq.length();\n        for (int offset = pos; offset < length; offset++) {\n            // scan to first instance of startchar:\n            if (startChar != input[offset])\n                while(++offset < length && startChar != input[offset]);\n            if (offset < length) {\n                // Check if there are enough characters remaining to match the sequence\n                if (offset + seqLength > length) {\n                    continue;\n                }\n                int i = offset + 1;\n                int last = i + seqLength - 1;\n                // Verify that the end of the sequence does not exceed input length\n                if (last > length) {\n                    continue;\n                }\n                int j;\n                for (j = 1; j < seqLength && input[i] == seq.charAt(j); j++, i++);\n                if (j == seqLength) // found full sequence\n                    return offset - pos;\n            }\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}