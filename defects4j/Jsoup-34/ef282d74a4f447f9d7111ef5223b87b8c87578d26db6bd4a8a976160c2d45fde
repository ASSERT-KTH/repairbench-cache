{
    "generation": "int nextIndexOf(CharSequence seq) {\n    if (seq.length() == 0) return 0; // handle empty sequence case\n    // doesn't handle scanning for surrogates\n    char startChar = seq.charAt(0);\n    for (int offset = pos; offset < length; offset++) {\n        // scan to first instance of startchar:\n        if (startChar != input[offset]) {\n            while (++offset < length && startChar != input[offset]);\n            if (offset >= length) break; // prevent out of bounds access\n        }\n        int i = offset + 1;\n        int last = offset + seq.length();\n        if (last > length) continue; // skip if can't fit full sequence here\n\n        // check if the rest of the sequence matches\n        boolean match = true;\n        for (int j = 1; j < seq.length(); j++) {\n            if (i + j - 1 >= length || seq.charAt(j) != input[offset + j]) {\n                match = false;\n                break;\n            }\n        }\n        if (match) {\n            return offset - pos;\n        }\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}