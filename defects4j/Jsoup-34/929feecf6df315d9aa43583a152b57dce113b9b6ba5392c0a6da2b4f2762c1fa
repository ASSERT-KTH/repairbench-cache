{
    "generation": "/**\n * Returns the number of characters between the current position and the next instance of the input sequence\n *\n * @param seq scan target\n * @return offset between current position and next instance of target. -1 if not found.\n */\nint nextIndexOf(CharSequence seq) {\n    // doesn't handle scanning for surrogates\n    char startChar = seq.charAt(0);\n    int seqLen = seq.length();\n    int maxScan = length - seqLen + 1;\n    for (int offset = pos; offset < maxScan; offset++) {\n        // scan to first instance of startchar:\n        if (startChar != input[offset])\n            while(++offset < maxScan && startChar != input[offset]);\n        if (offset < maxScan) {\n            int i = offset + 1;\n            int last = i + seqLen - 1;\n            int j = 1;\n            while (i < last && seq.charAt(j) == input[i]) {\n                i++;\n                j++;\n            }\n            if (i == last) // found full sequence\n                return offset - pos;\n        }\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}