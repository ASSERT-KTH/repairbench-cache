{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        char startChar = seq.charAt(0);\n        int seqLength = seq.length();\n        int start = pos;\n        while (start < length) {\n            // Find the next occurrence of the start character\n            while (start < length && input[start] != startChar) {\n                start++;\n            }\n            if (start >= length) {\n                break; // startChar not found\n            }\n            // Check if there's enough space for the entire sequence\n            if (start + seqLength > length) {\n                start++; // Not enough space, move to next position\n                continue;\n            }\n            // Check if the subsequent characters match the sequence\n            boolean match = true;\n            for (int i = 1; i < seqLength; i++) {\n                if (input[start + i] != seq.charAt(i)) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return start - pos;\n            }\n            // Move to next position to continue searching\n            start++;\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}