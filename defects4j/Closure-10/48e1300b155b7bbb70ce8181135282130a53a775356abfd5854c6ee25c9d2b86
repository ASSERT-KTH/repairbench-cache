{
    "generation": "  static boolean mayBeString(Node n, boolean recurse) {\n    if (recurse) {\n      // Returns true if any execution path evaluates to type string.\n      // The original code used allResultsMatch(n, MAY_BE_STRING_PREDICATE),\n      // which returns true only if *all* execution paths could evaluate to\n      // type string. This is wrong, we want to know if *any* path might\n      // be a string.\n      // The fix is equivalent to checking if !allResultsMatch(n, NOT_MAY_BE_STRING_PREDICATE)\n      return !allResultsMatch(n, Predicates.not(MAY_BE_STRING_PREDICATE));\n    } else {\n      return mayBeStringHelper(n);\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}