{
    "generation": "  static boolean mayBeString(Node n, boolean recurse) {\n    if (recurse) {\n      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n    } else {\n      // Add proper base case checks to prevent infinite recursion\n      if (n == null) {\n        return false;\n      }\n      // Handle primitive string literals directly\n      if (n.getType() == Token.STRING) {\n        return true;\n      }\n      // Recursive case with depth limit\n      return mayBeStringHelper(n) || allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}