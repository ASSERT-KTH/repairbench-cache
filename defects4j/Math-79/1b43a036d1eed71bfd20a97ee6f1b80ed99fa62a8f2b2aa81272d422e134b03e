{
    "generation": "/**\n * Calculates the L<sub>2</sub> (Euclidean) distance between two points.\n *\n * @param p1 the first point, must not be null\n * @param p2 the second point, must not be null and have the same dimension as p1\n * @return the L<sub>2</sub> (Euclidean) distance between the two points\n */\npublic static double distance(int[] p1, int[] p2) {\n    if (p1 == null || p2 == null) {\n        throw new NullPointerException(\"Input arrays must not be null\");\n    }\n    if (p1.length != p2.length) {\n        throw new IllegalArgumentException(\"Point dimensions must be equal\");\n    }\n    double sum = 0.0;\n    for (int i = 0; i < p1.length; i++) {\n        double diff = p1[i] - p2[i];\n        sum += diff * diff;\n    }\n    return Math.sqrt(sum);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}