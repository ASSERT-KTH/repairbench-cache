{
    "generation": "    /**\n     * Method that can be called on backends that support passing opaque datatypes of\n     * non-JSON formats\n     *\n     * @since 2.8\n     */\n    public void writeEmbeddedObject(Object object) throws IOException {\n        // 01-Sep-2016, tatu: As per [core#318], handle small number of cases\n        if (object == null) {\n            this.writeNull();\n            return;\n        }\n        if (object instanceof String) {\n            this.writeString((String) object);\n            return;\n        }\n        if (object instanceof Number) {\n            this.writeNumber((Number) object);\n            return;\n        }\n        if (object instanceof Boolean) {\n            this.writeBoolean((Boolean) object);\n            return;\n        }\n        if (object instanceof Character) {\n            this.writeCharacter((Character) object);\n            return;\n        }\n        if (object instanceof Byte) {\n            this.writeByte((Byte) object);\n            return;\n        }\n        if (object instanceof Short) {\n            this.writeShort((Short) object);\n            return;\n        }\n        if (object instanceof Integer) {\n            this.writeInt((Integer) object);\n            return;\n        }\n        if (object instanceof Long) {\n            this.writeLong((Long) object);\n            return;\n        }\n        if (object instanceof Float) {\n            this.writeFloat((Float) object);\n            return;\n        }\n        if (object instanceof Double) {\n            this.writeDouble((Double) object);\n            return;\n        }\n        if (object instanceof BigInteger) {\n            this.writeBigInteger((BigInteger) object);\n            return;\n        }\n        if (object instanceof BigDecimal) {\n            this.writeBigDecimal((BigDecimal) object);\n            return;\n        }\n        if (object instanceof Instant) {\n            this.writeInstant((Instant) object);\n            return;\n        }\n        if (object instanceof LocalDate) {\n            this.writeLocalDate((LocalDate) object);\n            return;\n        }\n        if (object instanceof LocalTime) {\n            this.writeLocalTime((LocalTime) object);\n            return;\n        }\n        if (object instanceof LocalDateTime) {\n            this.writeLocalDateTime((LocalDateTime) object);\n            return;\n        }\n        if (object instanceof OffsetTime) {\n            this.writeOffsetTime((OffsetTime) object);\n            return;\n        }\n        if (object instanceof OffsetDateTime) {\n            this.writeOffsetDateTime((OffsetDateTime) object);\n            return;\n        }\n        if (object instanceof ZonedDateTime) {\n            this.writeZonedDateTime((ZonedDateTime) object);\n            return;\n        }\n        if (object instanceof Year) {\n            this.writeYear((Year) object);\n            return;\n        }\n        if (object instanceof YearMonth) {\n            this.writeYearMonth((YearMonth) object);\n            return;\n        }\n        if (object instanceof MonthDay) {\n            this.writeMonthDay((MonthDay) object);\n            return;\n        }\n        if (object instanceof Duration) {\n            this.writeDuration((Duration) object);\n            return;\n        }\n        if (object instanceof Period) {\n            this.writePeriod((Period) object);\n            return;\n        }\n        if (object instanceof OffsetDateTime) {\n            this.writeOffsetDateTime((OffsetDateTime) object);\n            return;\n        }\n        if (object instanceof OffsetTime) {\n            this.writeOffsetTime((OffsetTime) object);\n            return;\n        }\n        if (object instanceof ZonedDateTime) {\n            this.writeZonedDateTime((ZonedDateTime) object);\n            return;\n        }\n        if (object instanceof Year) {\n            this.writeYear((Year) object);\n            return;\n        }\n        if (object instanceof YearMonth) {\n            this.writeYearMonth((YearMonth) object);\n            return;\n        }\n        if (object instanceof MonthDay) {\n            this.writeMonthDay((MonthDay) object);\n            return;\n        }\n        if (object instanceof Duration) {\n            this.writeDuration((Duration) object);\n            return;\n        }\n        if (object instanceof Period) {\n            this.writePeriod((Period) object);\n            return;\n        }\n        if (object instanceof OffsetDateTime) {\n            this.writeOffsetDateTime((OffsetDateTime) object);\n            return;\n        }\n        if (object instanceof OffsetTime) {\n            this.writeOffsetTime((OffsetTime) object);\n            return;\n        }\n        if (object instanceof ZonedDateTime) {\n            this.writeZonedDateTime((ZonedDateTime) object);\n            return;\n        }\n        if (object instanceof Year) {\n            this.writeYear((Year) object);\n            return;\n        }\n        if (object instanceof YearMonth) {\n            this.writeYearMonth((YearMonth) object);\n            return;\n        }\n        if (object instanceof MonthDay) {\n            this.writeMonthDay((MonthDay) object);\n            return;\n        }\n        if (object instanceof Duration) {\n            this.writeDuration((Duration) object);\n            return;\n        }\n        if (object instanceof Period) {\n            this.writePeriod((Period) object);\n            return;\n        }\n        if (object instanceof OffsetDateTime) {\n            this.writeOffsetDateTime((OffsetDateTime) object);\n            return;\n        }\n        if (object instanceof OffsetTime) {\n            this.writeOffsetTime((OffsetTime) object);\n            return;\n        }\n        if (object instanceof ZonedDateTime) {\n            this.writeZonedDateTime((ZonedDateTime) object);\n            return;\n        }\n                this);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}