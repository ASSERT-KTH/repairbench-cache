{
    "generation": "    /**\n     * Method that can be called on backends that support passing opaque datatypes of\n     * non-JSON formats\n     *\n     * @since 2.8\n     */\n    public void writeEmbeddedObject(Object object) throws IOException {\n        // 01-Sep-2016, tatu: As per [core#318], handle cases for null, byte[]\n        if (object == null) {\n            writeNull();\n            return;\n        }\n        if (object instanceof byte[]) {\n            writeBinary((byte[]) object);\n            return;\n        }\n        // 12-Jan-2017, tatu: Maybe support RawValue? Seems logical.\n        // (used to claim no support for anything)\n        /* 12-Jan-2017, tatu: RawValue NOT supported well enough for this yet:\n            some backends (JSON) MUST copy content, but RawValue does not currently\n            expose content. Fix requires bit more work.\n        if (object instanceof RawValue) {\n            ((RawValue) object).serialize(this);\n            return;\n        }\n        */\n\n        // As per above, consider RawValue at some point\n        // But otherwise we have no standard handling for Objects, indicate failure\n        throw new JsonGenerationException(\"No native support for writing embedded objects of type \"\n                + object.getClass().getName(), this);\n    }",
    "exact_match": false,
    "ast_match": true,
    "compile": true,
    "test": true
}