{
    "generation": "public double solve(final UnivariateRealFunction f,\n                    final double min, final double max, final double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n    clearResult();\n    verifySequence(min, initial, max);\n\n    // Evaluate function at initial guess.\n    double fInitial = f.value(initial);\n    if (Math.abs(fInitial) <= functionValueAccuracy) {\n        setResult(initial, 0);\n        return result;\n    }\n\n    // Evaluate function at the endpoints.\n    double fMin = f.value(min);\n    if (Math.abs(fMin) <= functionValueAccuracy) {\n        setResult(min, 0);\n        return result;\n    }\n    double fMax = f.value(max);\n    if (Math.abs(fMax) <= functionValueAccuracy) {\n        setResult(max, 0);\n        return result;\n    }\n\n    // Ensure that the function values bracket a root.\n    // That is, f(initial) must have a different sign than at least one endpoint.\n    if (fInitial * fMin < 0) {\n        // The root is bracketed between min and initial.\n        return solve(f, min, fMin, initial, fInitial, initial, fInitial);\n    }\n    if (fInitial * fMax < 0) {\n        // The root is bracketed between initial and max.\n        return solve(f, initial, fInitial, max, fMax, initial, fInitial);\n    }\n\n    // If neither interval brackets the root, throw an exception.\n    throw new IllegalArgumentException(\"Function values at endpoints do not bracket a root\");\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}