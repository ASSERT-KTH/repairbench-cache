{
    "generation": "public double solve(final UnivariateRealFunction f,\n                    final double min, final double max, final double initial)\n    throws MaxIterationsExceededException, FunctionEvaluationException {\n\n    clearResult();\n    verifySequence(min, initial, max);\n\n    // Evaluate function at the initial guess.\n    double yInitial = f.value(initial);\n    if (Math.abs(yInitial) <= functionValueAccuracy) {\n        setResult(initial, 0);\n        return result;\n    }\n\n    // Evaluate function at the lower endpoint.\n    double yMin = f.value(min);\n    if (Math.abs(yMin) <= functionValueAccuracy) {\n        setResult(min, 0);\n        return result;\n    }\n\n    // Evaluate function at the upper endpoint.\n    double yMax = f.value(max);\n    if (Math.abs(yMax) <= functionValueAccuracy) {\n        setResult(max, 0);\n        return result;\n    }\n\n    // Check if the lower subinterval brackets the root.\n    if (yInitial * yMin < 0) {\n        return solve(f, min, yMin, initial, yInitial, min, yMin);\n    }\n    \n    // Check if the upper subinterval brackets the root.\n    if (yInitial * yMax < 0) {\n        return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n    }\n    \n    // Check if the endpoints bracket the root.\n    if (yMin * yMax < 0) {\n        return solve(f, min, yMin, max, yMax, initial, yInitial);\n    }\n    \n    // If none of the subintervals bracket the root, throw an exception.\n    throw new IllegalArgumentException(\"Function values at endpoints and initial point do not bracket a root.\");\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}