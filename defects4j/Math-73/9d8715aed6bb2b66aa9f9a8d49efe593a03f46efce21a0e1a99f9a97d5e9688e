{
    "generation": "    public double solve(final UnivariateRealFunction f,\n                        final double min, final double max, final double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifySequence(min, initial, max);\n\n        // return the initial guess if it is good enough\n        double yInitial = f.value(initial);\n        if (Math.abs(yInitial) <= functionValueAccuracy) {\n            setResult(initial, 0);\n            return result;\n        }\n\n        // return the first endpoint if it is good enough\n        double yMin = f.value(min);\n        if (Math.abs(yMin) <= functionValueAccuracy) {\n            setResult(min, 0);\n            return result;\n        }\n\n        // return the second endpoint if it is good enough\n        double yMax = f.value(max);\n        if (Math.abs(yMax) <= functionValueAccuracy) {\n            setResult(max, 0);\n            return result;\n        }\n\n        // Check for bracketing\n        if ( (yMin * yMax > 0.0) && (yMin * yInitial > 0.0) && (yMax * yInitial > 0.0) ) {\n            // None of (min, max), (min, initial), (initial, max) bracket a root\n            throw new IllegalArgumentException(\"Function values at endpoints and initial do not have different signs. No bracketing.\");\n        }\n\n        // reduce interval if min and initial bracket the root\n        if (yMin * yInitial < 0) {\n            return solve(f, min, yMin, initial, yInitial, min, yMin);\n        }\n\n        // reduce interval if initial and max bracket the root\n        if (yInitial * yMax < 0) {\n            return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n        }\n\n        // Check if min and max bracket the root (if above didn't trigger and this happens)\n        if (yMin * yMax < 0) {\n            return solve(f, min, yMin, max, yMax, initial, yInitial);\n        }\n\n        // If none of the above, there's no bracketing\n        throw new IllegalArgumentException(\"Function values at endpoints do not have different signs. No bracketing.\");\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}