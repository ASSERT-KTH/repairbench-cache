{
    "generation": "private void findCalledFunctions(\n    Node node, Set<String> changed, Set<String> visited) {\n  Preconditions.checkArgument(changed != null);\n  Preconditions.checkArgument(visited != null);\n\n  if (visited.contains(node.getString())) {\n    return;\n  }\n\n  visited.add(node.getString());\n\n  // For each referenced function, add a new reference\n  if (node.getType() == Token.CALL) {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n      changed.add(child.getString());\n    }\n  }\n\n  for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n    findCalledFunctions(c, changed, visited);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}