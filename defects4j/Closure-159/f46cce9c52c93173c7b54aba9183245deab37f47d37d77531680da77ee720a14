{
    "generation": "private void findCalledFunctions(\n    Node node, Set<String> changed) {\n  Preconditions.checkArgument(changed != null);\n  // For each referenced function, add a new reference\n  if (node.getType() == Token.CALL) {\n    Node child = node.getFirstChild();\n    // Check both NAME and GETPROP nodes (for method calls)\n    if (child.getType() == Token.NAME || child.getType() == Token.GETPROP) {\n      String functionName = child.getQualifiedName();\n      if (functionName != null) {\n        changed.add(functionName);\n      }\n    }\n  }\n\n  for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n    findCalledFunctions(c, changed);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}