{
    "generation": "    @Override\n    public int read() throws IOException {\n        // Read the next character from the underlying reader\n        int current = super.read();\n\n        // Get the configured line separator string from the Lexer's format\n        // Assumes this method belongs to the Lexer.ExtendedBufferedReader inner class\n        // which has access to the outer Lexer's format field.\n        final String lineSeparator = Lexer.this.format.getLineSeparator();\n\n        // Determine if the line counter should be incremented based on the character(s) read\n        // and the configured line separator.\n        boolean incrementLine = false;\n        if (\"\\n\".equals(lineSeparator)) {\n            // Separator is LF ('\\n')\n            if (current == '\\n') {\n                incrementLine = true;\n            }\n        } else if (\"\\r\".equals(lineSeparator)) {\n            // Separator is CR ('\\r')\n            if (current == '\\r') {\n                incrementLine = true;\n            }\n        } else {\n            // Separator is CRLF (\"\\r\\n\") or default/unspecified (which defaults to CRLF)\n            // Increment only when LF ('\\n') is read immediately after a CR ('\\r')\n            if (current == '\\n' && lastChar == '\\r') {\n                incrementLine = true;\n            }\n            // Note: This logic strictly follows the specified line separator.\n            // It does not increment on lone CR or LF if CRLF is specified.\n            // It also does not handle custom multi-character line separators other than CRLF.\n        }\n\n        // Increment the line counter if a line ending matching the configured separator was detected\n        if (incrementLine) {\n            lineCounter++;\n        }\n\n        // Update the record of the last character read, used for CRLF detection\n        lastChar = current;\n\n        // Return the character read, as per the Reader contract\n        return current;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}