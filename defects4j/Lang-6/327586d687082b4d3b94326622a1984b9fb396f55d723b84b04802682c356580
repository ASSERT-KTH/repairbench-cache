{
    "generation": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out == null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input == null) {\n        return;\n    }\n    int pos = 0;\n    final int len = input.length();\n    while (pos < len) {\n        // always look at the full code\u2010point first\n        final int codepoint = Character.codePointAt(input, pos);\n        final int charCount = Character.charCount(codepoint);\n        // if it's a supplementary (surrogate pair), emit it unchanged\n        if (charCount > 1) {\n            out.write(Character.toChars(codepoint));\n            pos += charCount;\n            continue;\n        }\n        // otherwise let the delegate translator handle it\n        final int consumed = translate(input, pos, out);\n        if (consumed == 0) {\n            // no translation: emit the BMP char as a code\u2010point\n            out.write(Character.toChars(codepoint));\n            pos += charCount;\n        } else {\n            // skip exactly the consumed code\u2010points\n            for (int i = 0; i < consumed; i++) {\n                final int cp = Character.codePointAt(input, pos);\n                pos += Character.charCount(cp);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}