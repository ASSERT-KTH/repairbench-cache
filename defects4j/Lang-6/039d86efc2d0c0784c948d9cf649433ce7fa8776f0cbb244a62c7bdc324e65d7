{
    "generation": "    /**\n     * Translate an input onto a Writer. This is intentionally final as its algorithm is \n     * tightly coupled with the abstract method of this class. \n     *\n     * @param input CharSequence that is being translated\n     * @param out Writer to translate the text to\n     * @throws IOException if and only if the Writer produces an IOException\n     */\n    public final void translate(CharSequence input, Writer out) throws IOException {\n        if (out == null) {\n            throw new IllegalArgumentException(\"The Writer must not be null\");\n        }\n        if (input == null) {\n            return;\n        }\n        int pos = 0;\n        int len = input.length();\n        while (pos < len) {\n            int consumed = translate(input, pos, out); // Returns number of code points consumed\n            if (consumed == 0) {\n                // Translate method did not consume any characters\n                // Need to copy the code point at pos to the output\n                int codePoint = Character.codePointAt(input, pos);\n                char[] c = Character.toChars(codePoint);\n                out.write(c);\n                pos += c.length; // Advance position by the number of chars in the code point\n            } else {\n                // Translate method consumed 'consumed' code points starting at 'pos'.\n                // Advance 'pos' past these code points by calculating the total number of chars they occupy.\n                int charsAdvanced = 0;\n                int codePointsFound = 0;\n                int currentPos = pos;\n                // Calculate the total number of chars to advance\n                while (currentPos < len && codePointsFound < consumed) {\n                    int charCount = Character.charCount(Character.codePointAt(input, currentPos));\n                    charsAdvanced += charCount;\n                    currentPos += charCount; // Advance check position\n                    codePointsFound++;\n                }\n                // Update the main position variable\n                pos += charsAdvanced;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}