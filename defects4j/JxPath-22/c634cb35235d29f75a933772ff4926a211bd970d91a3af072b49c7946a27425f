{
    "generation": "/**\n * Get the ns uri of the specified node.\n * @param node Node to check\n * @return String ns uri\n */\npublic static String getNamespaceURI(Node node) {\n    if (node instanceof Document) {\n        node = ((Document) node).getDocumentElement();\n    }\n\n    if (!(node instanceof Element)) {\n        return null;\n    }\n\n    Element element = (Element) node;\n\n    String uri = element.getNamespaceURI();\n    if (uri == null) {\n        String prefix = getPrefix(node);\n        String qname = prefix == null ? \"xmlns\" : \"xmlns:\" + prefix;\n\n        Node aNode = node;\n        while (aNode != null && aNode.getNodeType() == Node.ELEMENT_NODE) {\n            Attr attr = ((Element) aNode).getAttributeNode(qname);\n            if (attr != null) {\n                // Per DOM: xmlns=\"\" (empty string) is valid and means no namespace\n                return \"\".equals(attr.getValue()) ? null : attr.getValue();\n            }\n            aNode = aNode.getParentNode();\n        }\n        return null;\n    }\n    // Per DOM, empty string is not a valid namespace URI, so return null.\n    return \"\".equals(uri) ? null : uri;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}