{
    "generation": "    /**\n     * Adds 1 to the frequency count for v.\n     * <p>\n     * If other objects have already been added to this Frequency, v must\n     * be comparable to those that have already been added.\n     * </p>\n     * \n     * @param v the value to add.\n     * @throws IllegalArgumentException if <code>v</code> is not Comparable, \n     *         or is not comparable with previous entries\n     * @deprecated use {@link #addValue(Comparable)} instead\n     */\n    @Deprecated\n    public void addValue(Object v) {\n        // The Javadoc states that an IllegalArgumentException should be thrown if v is not Comparable.\n        // The original code would throw a ClassCastException if v is not Comparable,\n        // which does not match the specified behavior.\n        if (!(v instanceof Comparable)) {\n            throw new IllegalArgumentException(\n                \"Value must implement Comparable, but '\" + v.getClass().getName() + \"' does not.\"\n            );\n        }\n        addValue((Comparable<?>) v);            \n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}