{
    "generation": "    /**\n     * Adds 1 to the frequency count for v.\n     * <p>\n     * If other objects have already been added to this Frequency, v must\n     * be comparable to those that have already been added.\n     * </p>\n     * \n     * @param v the value to add.\n     * @throws IllegalArgumentException if <code>v</code> is not Comparable, \n     *         or is not comparable with previous entries\n     * @deprecated use {@link #addValue(Comparable)} instead\n     */\n    @Deprecated\n    public void addValue(Object v) {\n        if (!(v instanceof Comparable)) {\n            throw new IllegalArgumentException(\"Value must implement Comparable\");\n        }\n        try {\n            @SuppressWarnings(\"unchecked\")\n            Comparable<Object> comp = (Comparable<Object>) v;\n            addValue(comp);\n        } catch (ClassCastException e) {\n            throw new IllegalArgumentException(\"Value not comparable with existing entries\", e);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}