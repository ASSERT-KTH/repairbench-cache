{
    "generation": "        void read(Tokeniser t, CharacterReader r) {\n            if (r.matchesLetter()) {\n                String name = r.consumeLetterSequence();\n                t.tagPending.appendTagName(name.toLowerCase());\n                t.dataBuffer.append(name);\n                r.advance();\n                return;\n            }\n\n            if (t.isAppropriateEndTagToken() && !r.isEmpty()) {\n                char c = r.current();\n                if (c == '<' && r.matches(\"<script\")) {\n                    t.transition(ScriptData);\n                    r.advance();\n                } else {\n                    c = r.consume();\n                    switch (c) {\n                        case '\\t':\n                        case '\\n':\n                        case '\\f':\n                        case ' ':\n                            t.transition(BeforeAttributeName);\n                            break;\n                        case '/':\n                            t.transition(SelfClosingStartTag);\n                            break;\n                        case '>':\n                            t.emitTagPending();\n                            t.transition(Data);\n                            break;\n                        default:\n                            t.dataBuffer.append(c);\n                            anythingElse(t, r);\n                            break;\n                    }\n                }\n            } else {\n                anythingElse(t, r);\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}