{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        if (dateStr.charAt(len - 4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len - 1, \".000\");\n            dateStr = sb.toString();\n        } else {\n            // Handle possible partial milliseconds like \".6\", \".61\", \".123\"\n            int milliStart = dateStr.lastIndexOf('.');\n            if (milliStart > dateStr.lastIndexOf('T')) {\n                int milliEnd = len - 1; // excluding final 'Z'\n                int milliLen = milliEnd - milliStart - 1;\n                if (milliLen > 0 && milliLen < 3) {\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    for (int i = 0; i < 3 - milliLen; i++) {\n                        sb.insert(milliStart + 1 + milliLen + i, '0');\n                    }\n                    dateStr = sb.toString();\n                }\n            }\n        }\n    } else {\n        if (hasTimeZone(dateStr)) {\n            // fix fractional milliseconds if present\n            int tzIndex = dateStr.lastIndexOf('+');\n            if (tzIndex < 0) {\n                tzIndex = dateStr.lastIndexOf('-');\n            }\n            if (tzIndex >= 0) {\n                c = dateStr.charAt(tzIndex - 3);\n                if (c == ':') {\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.delete(tzIndex - 3, tzIndex - 2);\n                    dateStr = sb.toString();\n                    tzIndex--; // string got shorter by 1\n                } else if (c == '+' || c == '-') {\n                    dateStr = new StringBuilder(dateStr).insert(tzIndex + 3, \"00\").toString();\n                }\n\n                int milliStart = dateStr.lastIndexOf('.', tzIndex);\n                int tIndex = dateStr.lastIndexOf('T', tzIndex);\n                if (milliStart > tIndex) {\n                    int milliLen = tzIndex - milliStart - 1;\n                    if (milliLen > 0 && milliLen < 3) {\n                        StringBuilder sb = new StringBuilder(dateStr);\n                        for (int i = 0; i < 3 - milliLen; i++) {\n                            sb.insert(milliStart + 1 + milliLen + i, '0');\n                        }\n                        dateStr = sb.toString();\n                    }\n                } else {\n                    // possibly missing seconds\n                    int colonIdx = dateStr.lastIndexOf(':', tzIndex);\n                    if (colonIdx >= 0) {\n                        if (dateStr.indexOf(':', colonIdx + 1) == -1) { // only one colon in time part\n                            StringBuilder sb = new StringBuilder(dateStr);\n                            sb.insert(tzIndex, \":00.000\");\n                            dateStr = sb.toString();\n                        } else {\n                            // seconds present but milliseconds missing\n                            StringBuilder sb = new StringBuilder(dateStr);\n                            sb.insert(tzIndex, \".000\");\n                            dateStr = sb.toString();\n                        }\n                    }\n                }\n            }\n\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            StringBuilder sb = new StringBuilder(dateStr);\n            int tIndex = dateStr.lastIndexOf('T');\n            int timeLen = len - tIndex -1;\n            if (tIndex >=0 && timeLen <=8) {\n                int dotIndex = dateStr.indexOf('.', tIndex);\n                if (dotIndex < 0) {\n                    sb.append(\".000\");\n                } else {\n                    int fracLen = len - dotIndex - 1;\n                    if (fracLen < 3) {\n                        for (int i = 0; i < 3 - fracLen; ++i) {\n                            sb.append('0');\n                        }\n                    }\n                }\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}