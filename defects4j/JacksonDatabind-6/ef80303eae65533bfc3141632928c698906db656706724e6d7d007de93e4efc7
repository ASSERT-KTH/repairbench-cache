{
    "generation": "    protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n    {\n        /* 21-May-2009, tatu: DateFormat has very strict handling of\n         * timezone  modifiers for ISO-8601. So we need to do some scrubbing.\n         */\n\n        /* First: do we have \"zulu\" format ('Z' == \"GMT\")? If yes, that's\n         * quite simple because we already set date format timezone to be\n         * GMT, and hence can just strip out 'Z' altogether\n         */\n        int len = dateStr.length();\n        char c = dateStr.charAt(len-1);\n        DateFormat df;\n\n        // [JACKSON-200]: need to support \"plain\" date...\n        if (len <= 10 && Character.isDigit(c)) {\n            df = _formatPlain;\n            if (df == null) {\n                df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n            }\n        } else if (c == 'Z') {\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n            // [JACKSON-334]: may be missing milliseconds... if so, add\n            if (dateStr.charAt(len-4) == ':') {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert(len-1, \".000\");\n                dateStr = sb.toString();\n            }\n        } else {\n            // Let's see if we have timezone indicator or not...\n            if (hasTimeZone(dateStr)) {\n                c = dateStr.charAt(len-3);\n                if (c == ':') { // remove optional colon\n                    // remove colon\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.delete(len-3, len-2);\n                    dateStr = sb.toString();\n                } else if (c == '+' || c == '-') { // missing minutes\n                    // let's just append '00'\n                    dateStr += \"00\";\n                }\n                // Milliseconds partial or missing; and even seconds are optional\n                len = dateStr.length();\n                // First check if we need to add milliseconds\n                boolean hasMilliseconds = false;\n                int tIndex = dateStr.indexOf('T');\n                if (tIndex >= 0) {\n                    int timePartLen = len - tIndex - 1;\n                    if (timePartLen >= 9 && timePartLen <= 12) {\n                        // Check if milliseconds already exist\n                        int dotIndex = dateStr.indexOf('.', tIndex);\n                        if (dotIndex >= 0) {\n                            // We have milliseconds, but might need to pad them\n                            int msDigits = dateStr.length() - dotIndex - 1;\n                            if (msDigits == 1) { // like .6 (needs to become .600)\n                                StringBuilder sb = new StringBuilder(dateStr);\n                                sb.insert(dotIndex + 2, \"00\");\n                                dateStr = sb.toString();\n                            } else if (msDigits == 2) { // like .61 (needs to become .610)\n                                StringBuilder sb = new StringBuilder(dateStr);\n                                sb.insert(dotIndex + 3, \"0\");\n                                dateStr = sb.toString();\n                            }\n                            // If msDigits is 3 or more, we don't need to modify\n                        } else {\n                            // No milliseconds at all, we need to add .000 before timezone\n                            int timezoneStart = -1;\n                            // Find where timezone starts (looking for + or -)\n                            for (int i = tIndex; i < dateStr.length(); i++) {\n                                if (dateStr.charAt(i) == '+' || dateStr.charAt(i) == '-') {\n                                    timezoneStart = i;\n                                    break;\n                                }\n                            }\n                            if (timezoneStart > 0) {\n                                StringBuilder sb = new StringBuilder(dateStr);\n                                sb.insert(timezoneStart, \".000\");\n                                dateStr = sb.toString();\n                            }\n                        }\n                    }\n                }\n                df = _formatISO8601;\n                if (_formatISO8601 == null) {\n                    df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n                }\n            } else {\n                // If not, plain date. Easiest to just patch 'Z' in the end?\n                StringBuilder sb = new StringBuilder(dateStr);\n                // And possible also millisecond part if missing\n                int tIndex = dateStr.indexOf('T');\n                if (tIndex >= 0) {\n                    int timeLen = dateStr.length() - tIndex - 1;\n                    if (timeLen > 0 && timeLen <= 8) {\n                        // We have time but maybe missing seconds or milliseconds\n                        boolean hasColon = false;\n                        for (int i = tIndex; i < dateStr.length(); i++) {\n                            if (dateStr.charAt(i) == ':') {\n                                hasColon = true;\n                                break;\n                            }\n                        }\n                        // If we have colons but length is <= 8, we're missing seconds and/or milliseconds\n                        if (hasColon) {\n                            int secondsIndex = dateStr.lastIndexOf(':');\n                            if (secondsIndex >= 0) {\n                                // Check if we have seconds (char after colon is digit)\n                                if (secondsIndex + 1 < dateStr.length() &&\n                                    Character.isDigit(dateStr.charAt(secondsIndex + 1))) {\n                                    // We have seconds but maybe missing milliseconds\n                                    sb.insert(dateStr.length(), \".000\");\n                                } else {\n                                    // Missing seconds entirely, add \":00.000\"\n                                    sb.insert(secondsIndex + 1, \"00.000\");\n                                }\n                            }\n                        } else {\n                            // No colons means we have just hours (maybe minutes)\n                            sb.append(\":00:00.000\");\n                        }\n                    } else if (timeLen == 0) {\n                        // Just date without time, add time part\n                        sb.append(\"T00:00:00.000\");\n                    } else if (dateStr.charAt(dateStr.length()-1) != '.') {\n                        // Might be missing milliseconds (but has seconds)\n                        sb.append(\".000\");\n                    }\n                }\n                sb.append('Z');\n                dateStr = sb.toString();\n                df = _formatISO8601_z;\n                if (df == null) {\n                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                            _timezone, _locale);\n                }\n            }\n        }\n        return df.parse(dateStr, pos);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}