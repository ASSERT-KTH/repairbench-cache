{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    /* 21-May-2009, tatu: DateFormat has very strict handling of\n     * timezone  modifiers for ISO-8601. So we need to do some scrubbing.\n     */\n\n    /* First: do we have \"zulu\" format ('Z' == \"GMT\")? If yes, that's\n     * quite simple because we already set date format timezone to be\n     * GMT, and hence can just strip out 'Z' altogether\n     */\n    int len = dateStr.length();\n    char c = dateStr.length() > 0 ? dateStr.charAt(len-1) : '\\0';\n    DateFormat df;\n\n    // [JACKSON-200]: need to support \"plain\" date...\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // [JACKSON-334]: may be missing milliseconds... if so, add\n        if (dateStr.charAt(len-4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len-1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Let's see if we have timezone indicator or not...\n        if (hasTimeZone(dateStr)) {\n            // Remove optional colon in timezone\n            int colonPos = dateStr.lastIndexOf(':');\n            if (colonPos > 0 && colonPos == dateStr.length() - 3) {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.deleteCharAt(colonPos);\n                dateStr = sb.toString();\n            }\n\n            // Check for timezone format (e.g. +0000 or +00:00)\n            boolean hasZoneWithColon = dateStr.contains(\":\");\n            if (hasZoneWithColon && dateStr.length() > 6) {\n                // Check if timezone is in format like +00:00\n                int zoneStart = dateStr.length() - 6;\n                if (dateStr.charAt(zoneStart) == '+' || dateStr.charAt(zoneStart) == '-') {\n                    // Check if seconds are missing (format like 19:20+01:00)\n                    int tPos = dateStr.indexOf('T');\n                    if (tPos != -1) {\n                        String timePart = dateStr.substring(tPos + 1, zoneStart);\n                        if (timePart.length() <= 5) { // format is HH:mm or HH:mm:ss\n                            // Add missing seconds if not present\n                            if (timePart.length() == 5) { // HH:mm\n                                StringBuilder sb = new StringBuilder(dateStr);\n                                sb.insert(tPos + 6, \":00\");\n                                dateStr = sb.toString();\n                            }\n                        }\n                    }\n                }\n            }\n\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // If not, plain date. Easiest to just patch 'Z' in the end?\n            StringBuilder sb = new StringBuilder(dateStr);\n            // And possible also millisecond part if missing\n            int timeLen = len - dateStr.lastIndexOf('T') - 1;\n            if (timeLen <= 8) {\n                // Add missing milliseconds\n                String timePart = dateStr.substring(dateStr.lastIndexOf('T') + 1);\n                if (!timePart.contains(\".\")) {\n                    // Check if we have seconds (format like HH:mm:ss)\n                    if (timePart.length() == 8) { // HH:mm:ss\n                        sb.insert(len - 3, \".000\");\n                    } else if (timePart.length() == 5) { // HH:mm\n                        sb.append(\":00.000\");\n                    } else {\n                        sb.append(\".000\");\n                    }\n                } else {\n                    // We already have milliseconds, but they might be partial\n                    int dotPos = timePart.indexOf('.');\n                    int millisLength = timePart.length() - dotPos - 1;\n                    if (millisLength < 3) { // pad with zeros if needed\n                        while (millisLength < 3) {\n                            sb.append('0');\n                            millisLength++;\n                        }\n                    }\n                }\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}