{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    // [JACKSON-200]: need to support \"plain\" date...\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // [JACKSON-334]: may be missing milliseconds... if so, add\n        if (len > 3 && dateStr.charAt(len - 4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len - 1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Let's see if we have timezone indicator or not...\n        if (hasTimeZone(dateStr)) {\n            c = dateStr.charAt(len - 3);\n            if (c == ':') { // remove optional colon\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.delete(len - 3, len - 2);\n                dateStr = sb.toString();\n            } else if (c == '+' || c == '-') { // missing minutes or partial milliseconds\n                int timeLen = len - dateStr.lastIndexOf('T') - 1;\n                if (timeLen > 9 && timeLen < 13) { // partial milliseconds\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    while (sb.length() < len - 2 + 4) { // ensure 3 digits for milliseconds\n                        sb.append('0');\n                    }\n                    dateStr = sb.toString();\n                } else if (timeLen == 6) { // missing seconds and milliseconds\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.insert(len - 3, \":00.000\");\n                    dateStr = sb.toString();\n                } else if (timeLen == 9) { // missing milliseconds\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.insert(len - 3, \".000\");\n                    dateStr = sb.toString();\n                } else if (timeLen == 5) { // missing seconds\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.insert(len - 3, \":00\");\n                    dateStr = sb.toString();\n                } else if (timeLen == 2) { // missing minutes\n                    dateStr += \"00\";\n                }\n            }\n            df = _formatISO8601;\n            if (df == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // If not, plain date. Easiest to just patch 'Z' in the end?\n            StringBuilder sb = new StringBuilder(dateStr);\n            // And possible also millisecond part if missing\n            int timeLen = len - dateStr.lastIndexOf('T') - 1;\n            if (timeLen <= 8) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}