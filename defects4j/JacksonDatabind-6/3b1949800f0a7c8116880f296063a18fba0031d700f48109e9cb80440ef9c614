{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    int len = dateStr.length();\n    char c = dateStr.charAt(len-1);\n    DateFormat df;\n\n    // [JACKSON-200]: need to support \"plain\" date...\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // [JACKSON-334]: may be missing milliseconds... if so, add\n        if (dateStr.charAt(len-4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len-1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Let's see if we have timezone indicator or not...\n        if (hasTimeZone(dateStr)) {\n            // Standardize the timezone format, remove colon if present\n            int tzIdx = dateStr.length() - 6; // e.g. \"yyyy-MM-ddThh:mm:ss(.SSS)?+hh:mm\"\n            StringBuilder sb = new StringBuilder(dateStr);\n            if ((dateStr.charAt(dateStr.length()-3) == ':')\n                && (dateStr.charAt(dateStr.length()-6) == '+' || dateStr.charAt(dateStr.length()-6) == '-')) {\n                // Remove colon in timezone\n                sb.delete(dateStr.length()-3, dateStr.length()-2);\n                dateStr = sb.toString();\n            } else if (dateStr.charAt(dateStr.length()-3) == '+'\n                    || dateStr.charAt(dateStr.length()-3) == '-') { // \"+hh\" or \"-hh\"\n                // append minutes \"00\"\n                dateStr += \"00\";\n            }\n            // Fix missing seconds (like \"yyyy-MM-ddThh:mm+hhmm\" or \"yyyy-MM-ddThh:mm-hhmm\")\n            int timeStart = dateStr.indexOf('T');\n            if (timeStart > 0) {\n                int tzOffset = dateStr.length();\n                // Z form or +hhmm/-hhmm\n                int plusIdx = dateStr.indexOf('+', timeStart);\n                int minusIdx = dateStr.indexOf('-', timeStart);\n                if (plusIdx < 0 || (minusIdx >= 0 && minusIdx < plusIdx)) {\n                    plusIdx = minusIdx;\n                }\n                if (plusIdx > 0) {\n                    tzOffset = plusIdx;\n                }\n                int timeLen = tzOffset - (timeStart + 1);\n                // if we only have hh:mm, without seconds\n                // e.g. 1997-07-16T19:20+0100 (timeLen==5), or 1997-07-16T19:20-01:00 (timeLen==5 or 6 if colon)\n                if (timeLen == 5 && dateStr.charAt(timeStart + 3) == ':') {\n                    // insert \":00\" for seconds\n                    sb = new StringBuilder(dateStr);\n                    sb.insert(timeStart + 6, \":00\");\n                    dateStr = sb.toString();\n                }\n            }\n\n            // Fix partial or missing milliseconds\n            // Look for dot for milliseconds\n            int sIdx = dateStr.indexOf('.', timeStart > 0 ? timeStart : 0);\n            int tzSignIdx = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));\n            if (sIdx >= 0 && tzSignIdx > sIdx) {\n                int msStart = sIdx + 1;\n                int msEnd = tzSignIdx;\n                int msLen = msEnd - msStart;\n                // Only allow 1,2,3 digits\n                if (msLen < 3) {\n                    sb = new StringBuilder(dateStr);\n                    for (int i = 0; i < 3 - msLen; ++i) {\n                        sb.insert(msEnd, \"0\");\n                    }\n                    dateStr = sb.toString();\n                } else if (msLen > 3) {\n                    // truncate to three digits\n                    sb = new StringBuilder(dateStr);\n                    sb.delete(msStart + 3, msEnd);\n                    dateStr = sb.toString();\n                }\n            }\n            // If missing milliseconds, add \".000\"\n            else if ((timeStart > 0) && (dateStr.lastIndexOf(':') > timeStart)) {\n                // after the last ':', there should be two digits (seconds)\n                int secondEnd = dateStr.lastIndexOf(':') + 3;\n                // avoid index out of bounds\n                if (secondEnd <= dateStr.length()) {\n                    String secondsPart = dateStr.substring(dateStr.lastIndexOf(':') + 1,\n                                                           Math.min(dateStr.lastIndexOf(':') + 3, dateStr.length()));\n                    if (secondsPart.length() == 2\n                        && (tzSignIdx == -1 || tzSignIdx >= dateStr.length())\n                        && (dateStr.length() == secondEnd || dateStr.charAt(secondEnd) == '+' || dateStr.charAt(secondEnd) == '-')) {\n                        // Assume missing milliseconds, add them just before the timezone part (if exists)\n                        int insertPos = (tzSignIdx > 0) ? tzSignIdx : dateStr.length();\n                        sb = new StringBuilder(dateStr);\n                        sb.insert(insertPos, \".000\");\n                        dateStr = sb.toString();\n                    }\n                }\n            }\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // If not, plain date. Easiest to just patch 'Z' in the end?\n            StringBuilder sb = new StringBuilder(dateStr);\n            int tIdx = dateStr.lastIndexOf('T');\n            int timeLen = len - tIdx - 1;\n            if (timeLen > 0 && tIdx > 0) {\n                // see if we have seconds\n                int colonCnt = 0;\n                for (int i = tIdx + 1; i < dateStr.length(); ++i) {\n                    if (dateStr.charAt(i) == ':') ++colonCnt;\n                }\n                if (colonCnt == 1) { // only hh:mm present\n                    sb.append(\":00\");\n                }\n                // milliseconds?\n                int dotIdx = dateStr.indexOf('.', tIdx);\n                if (dotIdx < 0) {\n                    sb.append(\".000\");\n                } else {\n                    int msLen = dateStr.length() - dotIdx - 1;\n                    if (msLen < 3) {\n                        for (int i = 0; i < 3 - msLen; ++i) {\n                            sb.append(\"0\");\n                        }\n                    } else if (msLen > 3) {\n                        sb.delete(dotIdx + 4, sb.length());\n                    }\n                }\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}