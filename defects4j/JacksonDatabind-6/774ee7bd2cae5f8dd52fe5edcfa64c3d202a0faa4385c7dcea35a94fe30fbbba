{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    int len = dateStr.length();\n    char c = dateStr.charAt(len-1);\n    DateFormat df;\n\n    // [JACKSON-200]: need to support \"plain\" date...\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // [JACKSON-334]: may be missing milliseconds... if so, add\n        if (dateStr.charAt(len-4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len-1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Let's see if we have timezone indicator or not...\n        if (hasTimeZone(dateStr)) {\n            // Adjust timezone offset format\n            // Find the index where the timezone offset starts (+/-)\n            int tzSignIndex = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));\n            String preTZ = (tzSignIndex >= 0) ? dateStr.substring(0, tzSignIndex) : dateStr;\n            String tzPart = (tzSignIndex >= 0) ? dateStr.substring(tzSignIndex) : \"\";\n            StringBuilder sb = new StringBuilder(preTZ);\n\n            // Remove colon in timezone offset if present (e.g., +01:00 -> +0100)\n            if (tzPart.length() == 6 && tzPart.charAt(3) == ':') {\n                tzPart = tzPart.substring(0, 3) + tzPart.substring(4);\n            } else if ((tzPart.length() == 3 || tzPart.length() == 5) && (tzPart.charAt(0) == '+' || tzPart.charAt(0) == '-')) {\n                // missing minutes in offset, assume as 00\n                if (tzPart.length() == 3) {\n                    tzPart = tzPart + \"00\";\n                }\n            }\n\n            // Handle optional seconds and milliseconds\n            // Find 'T' position\n            int tIndex = dateStr.indexOf('T');\n            int dotIndex = preTZ.indexOf('.', tIndex > 0 ? tIndex : 0);\n            int colonCount = 0;\n            int firstColon = preTZ.indexOf(':', tIndex > 0 ? tIndex : 0);\n            int lastColon = preTZ.lastIndexOf(':');\n            if (firstColon >= 0 && lastColon >= firstColon) {\n                for (int ci = firstColon; ci <= lastColon; ci++) {\n                    if (preTZ.charAt(ci) == ':') {\n                        colonCount++;\n                    }\n                }\n            }\n            // colonCount==2: has seconds (HH:mm:ss), ==1: missing seconds (HH:mm)\n            boolean hasSeconds = (colonCount >= 2);\n\n            if (!hasSeconds) {\n                // missing seconds, add \":00\"\n                sb.append(\":00\");\n            }\n\n            // After possible \":00\", add milliseconds if missing or pad as necessary\n            int msLen = 0;\n            if (dotIndex >= 0 && dotIndex > tIndex) {\n                int msStart = dotIndex + 1;\n                int msEnd = msStart;\n                while (msEnd < preTZ.length() && Character.isDigit(preTZ.charAt(msEnd))) {\n                    msEnd++;\n                }\n                msLen = msEnd - msStart;\n                if (msLen < 3) {\n                    // Pad zeros\n                    sb.append(preTZ.substring(dotIndex, msEnd));\n                    for (int i = msLen; i < 3; ++i) {\n                        sb.append('0');\n                    }\n                    // Append the rest\n                    if (msEnd < preTZ.length()) {\n                        sb.append(preTZ.substring(msEnd));\n                    }\n                } else {\n                    sb.append(preTZ.substring(dotIndex, msEnd));\n                    if (msEnd < preTZ.length()) {\n                        sb.append(preTZ.substring(msEnd));\n                    }\n                }\n            } else {\n                // milliseconds missing, add .000 after seconds\n                sb.append(\".000\");\n            }\n\n            dateStr = sb.toString() + tzPart;\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // If not, plain date. Easiest to just patch 'Z' in the end?\n            StringBuilder sb = new StringBuilder(dateStr);\n            // And possible also millisecond part if missing\n            int tIndex = dateStr.lastIndexOf('T');\n            int timeLen = len - tIndex - 1;\n            if (timeLen <= 8) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}