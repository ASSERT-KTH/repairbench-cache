{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        if (dateStr.charAt(len - 4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len - 1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        if (hasTimeZone(dateStr)) {\n            c = dateStr.charAt(len - 3);\n            if (c == ':') {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.delete(len - 3, len - 2);\n                dateStr = sb.toString();\n            } else if (c == '+' || c == '-') {\n                dateStr += \"00\";\n            }\n\n            len = dateStr.length();\n            boolean hasSeconds = false;\n            int secondsPos = dateStr.lastIndexOf(':');\n            if (secondsPos != -1) {\n                String timePart = dateStr.substring(secondsPos + 1);\n                if (timePart.matches(\".*\\\\d{2}.*\")) {\n                    hasSeconds = true;\n                }\n            }\n\n            if (!hasSeconds) {\n                StringBuilder sb = new StringBuilder(dateStr);\n                int insertPos = dateStr.indexOf('T') + 1;\n                sb.insert(insertPos, \"00:00\");\n                dateStr = sb.toString();\n            }\n\n            int millisecondsPos = dateStr.lastIndexOf('.');\n            if (millisecondsPos != -1) {\n                String msPart = dateStr.substring(millisecondsPos + 1);\n                if (msPart.length() < 3) {\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    while (msPart.length() < 3) {\n                        sb.append('0');\n                        msPart = sb.substring(millisecondsPos + 1);\n                    }\n                    dateStr = sb.toString();\n                }\n            } else {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.append(\".000\");\n                dateStr = sb.toString();\n            }\n\n            df = _formatISO8601;\n            if (df == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            int timePart = dateStr.lastIndexOf('T');\n            if (timePart != -1) {\n                String timeStr = dateStr.substring(timePart + 1);\n                String[] parts = timeStr.split(\":\");\n                if (parts.length == 2) {\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.append(\":00\");\n                    dateStr = sb.toString();\n                }\n            } else {\n                dateStr += \"T00:00\";\n            }\n\n            StringBuilder sb = new StringBuilder(dateStr);\n            if (dateStr.indexOf('.') == -1) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}