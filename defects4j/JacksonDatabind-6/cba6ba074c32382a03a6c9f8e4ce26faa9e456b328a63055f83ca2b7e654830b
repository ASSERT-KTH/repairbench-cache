{
    "generation": "    protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n    {\n        /* 21-May-2009, tatu: DateFormat has very strict handling of\n         * timezone  modifiers for ISO-8601. So we need to do some scrubbing.\n         */\n\n        /* First: do we have \"zulu\" format ('Z' == \"GMT\")? If yes, that's\n         * quite simple because we already set date format timezone to be\n         * GMT, and hence can just strip out 'Z' altogether\n         */\n        int len = dateStr.length();\n        char c = dateStr.charAt(len-1);\n        DateFormat df;\n\n        // [JACKSON-200]: need to support \"plain\" date...\n        if (len <= 10 && Character.isDigit(c)) {\n            df = _formatPlain;\n            if (df == null) {\n                df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n            }\n        } else if (c == 'Z') {\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n            // [JACKSON-334]: may be missing milliseconds... if so, add\n            if (dateStr.charAt(len-4) == ':') {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert(len-1, \".000\");\n                dateStr = sb.toString();\n            }\n        } else {\n            // Let's see if we have timezone indicator or not...\n            if (hasTimeZone(dateStr)) {\n                // Milliseconds partial or missing; and even seconds are optional\n                int \u09ae\u09bf\u09b2\u09bf\u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1\u09b8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 = dateStr.indexOf('.');\n                if (\u09ae\u09bf\u09b2\u09bf\u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1\u09b8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 < 0) {\n                    int t\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 = dateStr.indexOf('T');\n                    if(t\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 > 0) {\n                        int \u0995\u09cb\u09b2\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 = dateStr.lastIndexOf(':');\n                        if (\u0995\u09cb\u09b2\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 > t\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8) {\n                            if (len - \u0995\u09cb\u09b2\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 <= 3) {\n                                StringBuilder sb = new StringBuilder(dateStr);\n                                int \u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 = dateStr.lastIndexOf('+');\n                                if(\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 < 0) {\n                                    \u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 = dateStr.lastIndexOf('-');\n                                }\n                                if(\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 > 0) {\n                                    sb.insert(\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8, \".000\");\n                                } else {\n                                    sb.append(\".000\");\n                                }\n                                dateStr = sb.toString();\n                            }\n                        }\n                    }\n\n                } else {\n                    int \u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 = dateStr.lastIndexOf('+');\n                    if(\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 < 0) {\n                        \u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 = dateStr.lastIndexOf('-');\n                    }\n                    if(\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 > 0) {\n                        int \u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b2\u09c7\u09a8\u09cd\u09a5 = len - \u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8;\n                        int \u09ae\u09bf\u09b2\u09bf\u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1\u09b8_\u09b2\u09c7\u09a8\u09cd\u09a5 = \u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 - \u09ae\u09bf\u09b2\u09bf\u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1\u09b8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8 - 1;\n\n                        if(\u09ae\u09bf\u09b2\u09bf\u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1\u09b8_\u09b2\u09c7\u09a8\u09cd\u09a5 == 1) {\n                           StringBuilder sb = new StringBuilder(dateStr);\n                            sb.insert(\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8, \"00\");\n                            dateStr = sb.toString();\n                        } else if (\u09ae\u09bf\u09b2\u09bf\u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1\u09b8_\u09b2\u09c7\u09a8\u09cd\u09a5 == 2) {\n                            StringBuilder sb = new StringBuilder(dateStr);\n                            sb.insert(\u099f\u09be\u0987\u09ae\u099c\u09cb\u09a8_\u09b8\u09be\u0987\u09a8_\u0987\u09a8\u09cd\u09a1\u09c7\u0995\u09cd\u09b8, \"0\");\n                            dateStr = sb.toString();\n                        }\n                    }\n\n                }\n\n                c = dateStr.charAt(len-3);\n                if (c == ':') { // remove optional colon\n                    // remove colon\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.delete(len-3, len-2);\n                    dateStr = sb.toString();\n                } else if (c == '+' || c == '-') { // missing minutes\n                    // let's just append '00'\n                    if (dateStr.charAt(len - 1) == '+' || dateStr.charAt(len - 1) == '-') {\n                        dateStr += \"00\";\n                    } else {\n                        dateStr += \"00\";\n                    }\n                }\n\n                df = _formatISO8601;\n                if (_formatISO8601 == null) {\n                    df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n                }\n            } else {\n                // If not, plain date. Easiest to just patch 'Z' in the end?\n                StringBuilder sb = new StringBuilder(dateStr);\n                // And possible also millisecond part if missing\n                int timeLen = len - dateStr.lastIndexOf('T') - 1;\n                if (timeLen <= 8) {\n                        sb.append(\".000\");\n                }\n                sb.append('Z');\n                dateStr = sb.toString();\n                df = _formatISO8601_z;\n                if (df == null) {\n                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                            _timezone, _locale);\n                }\n            }\n        }\n        return df.parse(dateStr, pos);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}