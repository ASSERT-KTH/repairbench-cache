{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    char last = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    // simple plain-date: \"yyyy-MM-dd\"\n    if (len <= 10 && Character.isDigit(last)) {\n        if (_formatPlain == null) {\n            _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN,\n                    _timezone, _locale);\n        }\n        df = _formatPlain;\n        return df.parse(dateStr, pos);\n    }\n\n    // split off the time\u2010zone part, or treat missing TZ as 'Z'\n    int tPos = dateStr.indexOf('T');\n    String main;\n    String tz;\n    if (last == 'Z') {\n        main = dateStr.substring(0, len - 1);\n        tz = \"Z\";\n    } else if (tPos >= 0) {\n        int tzStart = -1;\n        // find last '+' or '-' after the 'T'\n        for (int i = dateStr.length() - 1; i > tPos; --i) {\n            char c = dateStr.charAt(i);\n            if (c == '+' || c == '-') {\n                tzStart = i;\n                break;\n            }\n        }\n        if (tzStart >= 0) {\n            main = dateStr.substring(0, tzStart);\n            tz = dateStr.substring(tzStart);\n            // normalize \"+HH:mm\" to \"+HHmm\", or pad \"+HH\" to \"+HH00\"\n            if (tz.length() > 3 && tz.charAt(3) == ':') {\n                tz = tz.substring(0, 3) + tz.substring(4);\n            } else if (tz.length() == 3) {\n                tz = tz + \"00\";\n            }\n        } else {\n            // no explicit timezone => treat as UTC\n            main = dateStr;\n            tz = \"Z\";\n        }\n    } else {\n        // no 'T' => no time, treat as UTC\n        main = dateStr;\n        tz = \"Z\";\n    }\n\n    // split date and time parts\n    String datePart;\n    String timePart = null;\n    int tPos2 = main.indexOf('T');\n    if (tPos2 >= 0) {\n        datePart = main.substring(0, tPos2);\n        timePart = main.substring(tPos2 + 1);\n    } else {\n        datePart = main;\n    }\n\n    // defaults for time fields\n    String hour = \"00\", minute = \"00\", second = \"00\", fraction = \"000\";\n    if (timePart != null) {\n        // pull off fractional part if any\n        int dot = timePart.indexOf('.');\n        String frac = null;\n        if (dot >= 0) {\n            frac = timePart.substring(dot + 1);\n            timePart = timePart.substring(0, dot);\n        }\n        String[] parts = timePart.split(\":\");\n        if (parts.length > 0) hour = parts[0];\n        if (parts.length > 1) minute = parts[1];\n        if (parts.length > 2) second = parts[2];\n        // normalize fraction to exactly 3 digits\n        if (frac != null) {\n            if (frac.length() == 1) {\n                fraction = frac + \"00\";\n            } else if (frac.length() == 2) {\n                fraction = frac + \"0\";\n            } else {\n                fraction = frac.length() > 3 ? frac.substring(0, 3) : frac;\n            }\n        }\n    }\n\n    // rebuild into strict \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\" or \"...'Z'\"\n    StringBuilder sb = new StringBuilder(datePart);\n    sb.append('T')\n      .append(hour).append(':').append(minute).append(':').append(second)\n      .append('.').append(fraction)\n      .append(tz);\n    dateStr = sb.toString();\n\n    // pick the correct DateFormat\n    if (\"Z\".equals(tz)) {\n        if (_formatISO8601_z == null) {\n            _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z,\n                    DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        df = _formatISO8601_z;\n    } else {\n        if (_formatISO8601 == null) {\n            _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601,\n                    DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n        }\n        df = _formatISO8601;\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}