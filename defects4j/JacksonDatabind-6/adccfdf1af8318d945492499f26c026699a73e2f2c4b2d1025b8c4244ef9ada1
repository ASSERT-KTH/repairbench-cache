{
    "generation": "@Override\nprotected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    DateFormat df;\n\n    // simple date-only case: \"yyyy-MM-dd\"\n    if (len <= 10 && Character.isDigit(dateStr.charAt(len - 1))) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(\n                DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN,\n                _timezone, _locale);\n        }\n        return df.parse(dateStr, pos);\n    }\n\n    // work on a modifiable copy\n    String str = dateStr;\n    String timezone = null;\n\n    // 1) handle trailing 'Z'\n    if (str.endsWith(\"Z\")) {\n        timezone = \"Z\";\n        str = str.substring(0, str.length() - 1);\n    } else {\n        // 2) find a timezone offset (+/-) after the 'T'\n        int tIndex = str.indexOf('T');\n        int tzIndex = -1;\n        if (tIndex >= 0) {\n            for (int i = str.length() - 1; i > tIndex; --i) {\n                char c = str.charAt(i);\n                if (c == '+' || c == '-') {\n                    tzIndex = i;\n                    break;\n                }\n            }\n        }\n        if (tzIndex > tIndex) {\n            timezone = str.substring(tzIndex);\n            str = str.substring(0, tzIndex);\n        }\n    }\n\n    // 3) normalize timezone into \"+hhmm\" or \"-hhmm\"\n    if (timezone != null && !timezone.equals(\"Z\")) {\n        char sign = timezone.charAt(0);\n        String tzRest = timezone.substring(1);\n        String hours;\n        String minutes;\n        if (tzRest.length() >= 4 && tzRest.charAt(2) == ':') {\n            hours   = tzRest.substring(0, 2);\n            minutes = tzRest.substring(3, 5);\n        } else if (tzRest.length() >= 4) {\n            hours   = tzRest.substring(0, 2);\n            minutes = tzRest.substring(2, 4);\n        } else if (tzRest.length() == 2) {\n            hours   = tzRest;\n            minutes = \"00\";\n        } else {\n            // fallback for odd lengths\n            hours = tzRest.length() >= 2\n                ? tzRest.substring(0, 2)\n                : (\"0\" + tzRest);\n            String mm = tzRest.length() > 2\n                ? tzRest.substring(2)\n                : \"00\";\n            if (mm.length() == 1) {\n                minutes = \"0\" + mm;\n            } else if (mm.length() > 2) {\n                minutes = mm.substring(0, 2);\n            } else {\n                minutes = mm;\n            }\n        }\n        timezone = String.valueOf(sign) + hours + minutes;\n    }\n\n    // 4) fix the time part: ensure seconds and millisecond\u2010fraction\n    int t = str.indexOf('T');\n    if (t >= 0) {\n        String datePart = str.substring(0, t);\n        String timePart = str.substring(t + 1);\n\n        // if we see only one colon, seconds are missing\n        int colonCount = 0;\n        for (int i = 0; i < timePart.length(); ++i) {\n            if (timePart.charAt(i) == ':') {\n                ++colonCount;\n            }\n        }\n        if (colonCount == 1) {\n            timePart = timePart + \":00\";\n        }\n\n        // handle millisecond fraction\n        int dot = timePart.indexOf('.');\n        if (dot < 0) {\n            // no fraction: add \".000\"\n            timePart = timePart + \".000\";\n        } else {\n            // pad or truncate to exactly 3 digits\n            int start = dot + 1;\n            int end = start;\n            while (end < timePart.length()\n                   && Character.isDigit(timePart.charAt(end))) {\n                ++end;\n            }\n            String frac = timePart.substring(start, end);\n            if (frac.length() < 3) {\n                StringBuilder sb = new StringBuilder(frac);\n                while (sb.length() < 3) {\n                    sb.append('0');\n                }\n                frac = sb.toString();\n            } else if (frac.length() > 3) {\n                frac = frac.substring(0, 3);\n            }\n            timePart = timePart.substring(0, start)\n                     + frac\n                     + timePart.substring(end);\n        }\n\n        str = datePart + \"T\" + timePart;\n    }\n\n    // 5) rebuild final string and choose correct formatter\n    if (timezone != null) {\n        str = str + timezone;\n        df = _formatISO8601;\n        if (df == null) {\n            df = _formatISO8601 = _cloneFormat(\n                DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601,\n                _timezone, _locale);\n        }\n    } else {\n        // no TZ: treat as Zulu\n        str = str + \"Z\";\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(\n                DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                _timezone, _locale);\n        }\n    }\n\n    return df.parse(str, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}