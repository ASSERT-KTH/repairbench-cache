{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    DateFormat df;\n\n    // Handle plain date format\n    if (len <= 10 && Character.isDigit(dateStr.charAt(len - 1))) {\n        df = getPlainDateFormat();\n    } else if (dateStr.charAt(len - 1) == 'Z') {\n        df = getISO8601ZDateFormat();\n        // Handle missing milliseconds for 'Z' format\n        if (dateStr.charAt(len - 4) == ':') {\n            dateStr = insertMilliseconds(dateStr, len - 1);\n        }\n    } else if (hasTimeZone(dateStr)) {\n        df = getISO8601DateFormat();\n        // Handle time zone with optional colon and missing minutes\n        if (dateStr.charAt(len - 3) == ':') {\n            dateStr = removeColon(dateStr, len - 3);\n        } else if (dateStr.charAt(len - 3) == '+' || dateStr.charAt(len - 3) == '-') {\n            dateStr = appendMinutes(dateStr);\n        }\n        // Handle missing or partial milliseconds\n        if (Character.isDigit(dateStr.charAt(len - 9))) {\n            dateStr = insertMilliseconds(dateStr, len - 5);\n        }\n    } else {\n        df = getISO8601ZDateFormat();\n        // Append 'Z' and handle missing milliseconds for non-time zone format\n        int timeLen = len - dateStr.lastIndexOf('T') - 1;\n        if (timeLen <= 8) {\n            dateStr = appendMillisecondsAndZ(dateStr);\n        } else {\n            dateStr += 'Z';\n        }\n    }\n\n    return df.parse(dateStr, pos);\n}\n\nprivate DateFormat getPlainDateFormat() {\n    if (_formatPlain == null) {\n        _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n    }\n    return _formatPlain;\n}\n\nprivate DateFormat getISO8601ZDateFormat() {\n    if (_formatISO8601_z == null) {\n        _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n    }\n    return _formatISO8601_z;\n}\n\nprivate DateFormat getISO8601DateFormat() {\n    if (_formatISO8601 == null) {\n        _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n    }\n    return _formatISO8601;\n}\n\nprivate String insertMilliseconds(String dateStr, int index) {\n    StringBuilder sb = new StringBuilder(dateStr);\n    sb.insert(index, \".000\");\n    return sb.toString();\n}\n\nprivate String removeColon(String dateStr, int index) {\n    StringBuilder sb = new StringBuilder(dateStr);\n    sb.delete(index, index + 1);\n    return sb.toString();\n}\n\nprivate String appendMinutes(String dateStr) {\n    return dateStr + \"00\";\n}\n\nprivate String appendMillisecondsAndZ(String dateStr) {\n    StringBuilder sb = new StringBuilder(dateStr);\n    sb.append(\".000Z\");\n    return sb.toString();\n}\n\nprivate boolean hasTimeZone(String dateStr) {\n    int len = dateStr.length();\n    return len >= 6 && (dateStr.charAt(len - 6) == '+' || dateStr.charAt(len - 6) == '-');\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}