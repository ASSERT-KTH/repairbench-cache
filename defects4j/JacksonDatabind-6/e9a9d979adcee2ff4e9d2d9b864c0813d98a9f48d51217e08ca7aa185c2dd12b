{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    char last = dateStr.charAt(len - 1);\n    DateFormat df;\n    // [JACKSON-200]: support \"plain\" date (yyyy-MM-dd)\n    if (len <= 10 && Character.isDigit(last)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(\n                DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    }\n    // UTC 'Z' suffix\n    else if (last == 'Z') {\n        String prefix = dateStr.substring(0, len - 1);\n        int tIndex = prefix.indexOf('T');\n        if (tIndex >= 0) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(prefix, 0, tIndex + 1);\n            String time = prefix.substring(tIndex + 1);\n            int dot = time.indexOf('.');\n            String sec = (dot >= 0) ? time.substring(0, dot) : time;\n            String ms = (dot >= 0) ? time.substring(dot + 1) : null;\n            // ensure seconds\n            int colonCount = 0;\n            for (char ch : sec.toCharArray()) {\n                if (ch == ':') colonCount++;\n            }\n            if (colonCount < 2) {\n                sec = sec + \":00\";\n            }\n            // ensure milliseconds\n            if (ms == null) {\n                ms = \"000\";\n            } else if (ms.length() == 1) {\n                ms = ms + \"00\";\n            } else if (ms.length() == 2) {\n                ms = ms + \"0\";\n            } else if (ms.length() > 3) {\n                ms = ms.substring(0, 3);\n            }\n            sb.append(sec).append('.').append(ms);\n            prefix = sb.toString();\n        }\n        dateStr = prefix + \"Z\";\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(\n                DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n    }\n    // timezone offset like +01:00 or -0500\n    else if (hasTimeZone(dateStr)) {\n        // find offset-start (last '+' or '-' after the 'T')\n        int tIndex = dateStr.indexOf('T');\n        int sign = dateStr.lastIndexOf('+');\n        if (sign < tIndex) {\n            sign = dateStr.lastIndexOf('-');\n        }\n        String prefix = dateStr.substring(0, sign);\n        String tz = dateStr.substring(sign).replace(\":\", \"\");\n        // fix the time part in prefix\n        int t2 = prefix.indexOf('T');\n        if (t2 >= 0) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(prefix, 0, t2 + 1);\n            String time = prefix.substring(t2 + 1);\n            int dot = time.indexOf('.');\n            String sec = (dot >= 0) ? time.substring(0, dot) : time;\n            String ms = (dot >= 0) ? time.substring(dot + 1) : null;\n            // ensure seconds\n            int colonCount = 0;\n            for (char ch : sec.toCharArray()) {\n                if (ch == ':') colonCount++;\n            }\n            if (colonCount < 2) {\n                sec = sec + \":00\";\n            }\n            // ensure milliseconds\n            if (ms == null) {\n                ms = \"000\";\n            } else if (ms.length() == 1) {\n                ms = ms + \"00\";\n            } else if (ms.length() == 2) {\n                ms = ms + \"0\";\n            } else if (ms.length() > 3) {\n                ms = ms.substring(0, 3);\n            }\n            sb.append(sec).append('.').append(ms);\n            prefix = sb.toString();\n        }\n        dateStr = prefix + tz;\n        df = _formatISO8601;\n        if (df == null) {\n            df = _formatISO8601 = _cloneFormat(\n                DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n        }\n    }\n    // no timezone marker at all -> assume UTC\n    else {\n        String prefix = dateStr;\n        int tIndex = prefix.indexOf('T');\n        if (tIndex >= 0) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(prefix, 0, tIndex + 1);\n            String time = prefix.substring(tIndex + 1);\n            int dot = time.indexOf('.');\n            String sec = (dot >= 0) ? time.substring(0, dot) : time;\n            String ms = (dot >= 0) ? time.substring(dot + 1) : null;\n            // ensure seconds\n            int colonCount = 0;\n            for (char ch : sec.toCharArray()) {\n                if (ch == ':') colonCount++;\n            }\n            if (colonCount < 2) {\n                sec = sec + \":00\";\n            }\n            // ensure milliseconds\n            if (ms == null) {\n                ms = \"000\";\n            } else if (ms.length() == 1) {\n                ms = ms + \"00\";\n            } else if (ms.length() == 2) {\n                ms = ms + \"0\";\n            } else if (ms.length() > 3) {\n                ms = ms.substring(0, 3);\n            }\n            sb.append(sec).append('.').append(ms);\n            prefix = sb.toString();\n        }\n        dateStr = prefix + \"Z\";\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(\n                DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}