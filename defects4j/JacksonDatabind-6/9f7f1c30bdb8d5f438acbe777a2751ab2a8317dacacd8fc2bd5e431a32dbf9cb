{
    "generation": "    protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n    {\n        int len = dateStr.length();\n        char c = dateStr.charAt(len - 1);\n        DateFormat df;\n\n        if (len <= 10 && Character.isDigit(c)) {\n            df = _formatPlain;\n            if (df == null) {\n                df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n            }\n        } else if (c == 'Z') {\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n            if (dateStr.charAt(len - 4) == ':') {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert(len - 1, \".000\");\n                dateStr = sb.toString();\n            }\n        } else {\n            if (hasTimeZone(dateStr)) {\n                c = dateStr.charAt(len - 3);\n                if (c == ':') {\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.delete(len - 3, len - 2);\n                    dateStr = sb.toString();\n                } else if (c == '+' || c == '-') {\n                    dateStr += \"00\";\n                }\n                len = dateStr.length();\n\n                // Process time part for missing seconds and partial milliseconds\n                int tIndex = dateStr.indexOf('T');\n                if (tIndex != -1) {\n                    int tzStart = -1;\n                    for (int i = tIndex + 1; i < dateStr.length(); i++) {\n                        char ch = dateStr.charAt(i);\n                        if (ch == '+' || ch == '-') {\n                            tzStart = i;\n                            break;\n                        }\n                    }\n                    if (tzStart != -1) {\n                        String timePart = dateStr.substring(tIndex + 1, tzStart);\n                        int colonCount = 0;\n                        for (int i = 0; i < timePart.length(); i++) {\n                            if (timePart.charAt(i) == ':') {\n                                colonCount++;\n                            }\n                        }\n                        int dotIndex = timePart.indexOf('.');\n                        if (dotIndex != -1) {\n                            String millis = timePart.substring(dotIndex + 1);\n                            if (millis.length() < 3) {\n                                millis = String.format(\"%-3s\", millis).replace(' ', '0');\n                                timePart = timePart.substring(0, dotIndex + 1) + millis;\n                                dateStr = dateStr.substring(0, tIndex + 1) + timePart + dateStr.substring(tzStart);\n                            }\n                        } else {\n                            if (colonCount == 1) {\n                                timePart += \":00.000\";\n                                dateStr = dateStr.substring(0, tIndex + 1) + timePart + dateStr.substring(tzStart);\n                            } else if (colonCount == 2) {\n                                timePart += \".000\";\n                                dateStr = dateStr.substring(0, tIndex + 1) + timePart + dateStr.substring(tzStart);\n                            }\n                        }\n                    }\n                }\n\n                df = _formatISO8601;\n                if (_formatISO8601 == null) {\n                    df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n                }\n            } else {\n                StringBuilder sb = new StringBuilder(dateStr);\n                int timeLen = len - dateStr.lastIndexOf('T') - 1;\n                if (timeLen <= 8) {\n                    sb.append(\".000\");\n                }\n                sb.append('Z');\n                dateStr = sb.toString();\n                df = _formatISO8601_z;\n                if (df == null) {\n                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                            _timezone, _locale);\n                }\n            }\n        }\n        return df.parse(dateStr, pos);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}