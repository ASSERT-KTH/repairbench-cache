{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    int len = dateStr.length();\n    char c = dateStr.charAt(len-1);\n    DateFormat df;\n\n    // [JACKSON-200]: need to support \"plain\" date...\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // [JACKSON-334]: may be missing milliseconds... if so, add\n        if (dateStr.charAt(len-4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len-1, \".000\");\n            dateStr = sb.toString();\n        }\n        // Patch for partial milliseconds: find millisecond part if present and pad it\n        int dotIdx = dateStr.lastIndexOf('.');\n        int zIdx = dateStr.length() - 1;\n        if (dotIdx > 0 && zIdx > dotIdx) {\n            int msLen = zIdx - dotIdx - 1;\n            if (msLen < 3) {\n                StringBuilder sb = new StringBuilder(dateStr);\n                for (int i = 0; i < 3 - msLen; ++i) {\n                    sb.insert(zIdx, '0');\n                }\n                dateStr = sb.toString();\n            }\n        }\n    } else {\n        // Let's see if we have timezone indicator or not...\n        if (hasTimeZone(dateStr)) {\n            // Patch for partial milliseconds and missing seconds\n            // Find main time separator T\n            int tIdx = dateStr.indexOf('T');\n            if (tIdx > 0) {\n                // Find timezone offset: last + or - or Z, keeping in mind a colon time offset\n                int tzIdx = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));\n                if (tzIdx < tIdx) {\n                    tzIdx = -1;\n                }\n                if (tzIdx == -1) {\n                    tzIdx = dateStr.length();\n                }\n                String timeSection = dateStr.substring(tIdx + 1, tzIdx);\n\n                // Determine if seconds are missing\n                int firstColon = timeSection.indexOf(':');\n                int secondColon = timeSection.indexOf(':', firstColon + 1);\n                int dotIdx = timeSection.indexOf('.');\n\n                StringBuilder sb = new StringBuilder(dateStr);\n\n                // If secondColon == -1, seconds missing, insert \":00\"\n                if (firstColon > -1 && secondColon == -1) {\n                    // Insert \":00\" before timeZone\n                    int insertPos = tIdx + 1 + timeSection.length();\n                    sb.insert(insertPos, \":00\");\n                    dateStr = sb.toString();\n                    timeSection = sb.substring(tIdx + 1, tzIdx + 3); // re-evaluate timeSection with inserted \":00\"\n                }\n\n                // Re-extract timeSection after seconds-fixed possibly\n                tIdx = dateStr.indexOf('T');\n                tzIdx = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));\n                if (tzIdx < tIdx) {\n                    tzIdx = -1;\n                }\n                if (tzIdx == -1) {\n                    tzIdx = dateStr.length();\n                }\n                timeSection = dateStr.substring(tIdx + 1, tzIdx);\n\n                dotIdx = timeSection.indexOf('.');\n\n                // If milliseconds present but partial, pad with zeroes to 3 digits\n                if (dotIdx > -1) {\n                    int msStart = tIdx + 1 + dotIdx + 1;\n                    int msEnd = msStart;\n                    while (msEnd < tzIdx && Character.isDigit(dateStr.charAt(msEnd))) {\n                        msEnd++;\n                    }\n                    int msLen = msEnd - msStart;\n                    if (msLen < 3) {\n                        StringBuilder padSb = new StringBuilder(dateStr);\n                        for (int i = 0; i < 3 - msLen; ++i) {\n                            padSb.insert(msEnd, '0');\n                        }\n                        dateStr = padSb.toString();\n                        // update tzIdx in case we've pushed it forward\n                        tzIdx += (3 - msLen);\n                    }\n                }\n\n                // If milliseconds missing, insert .000 after seconds\n                else if (timeSection.length() >= 8 &&\n                        (timeSection.charAt(2) == ':' && timeSection.charAt(5) == ':')) {\n                    // Add \".000\" after seconds\n                    int insertMs = tIdx + 1 + 8;\n                    StringBuilder msSb = new StringBuilder(dateStr);\n                    msSb.insert(insertMs, \".000\");\n                    dateStr = msSb.toString();\n                    // tzIdx += 4; // not needed\n                }\n            }\n\n            c = dateStr.charAt(dateStr.length()-3);\n            if (c == ':') { // remove optional colon from timezone\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.delete(dateStr.length() - 3, dateStr.length() - 2);\n                dateStr = sb.toString();\n            } else if (c == '+' || c == '-') { // missing minutes in timezone offset\n                dateStr += \"00\";\n            }\n\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // If not, plain date. Easiest to just patch 'Z' in the end?\n            StringBuilder sb = new StringBuilder(dateStr);\n            // And possible also millisecond part if missing\n            int tIdx = dateStr.lastIndexOf('T');\n            int timeLen = len - tIdx - 1;\n            // Check for partial or missing milliseconds\n            String timeSection = tIdx >= 0 ? dateStr.substring(tIdx + 1) : \"\";\n            int dotIdx = timeSection.indexOf('.');\n            if (dotIdx > -1) {\n                int msStart = tIdx + 1 + dotIdx + 1;\n                int msEnd = msStart;\n                while (msEnd < dateStr.length() && Character.isDigit(dateStr.charAt(msEnd))) {\n                    msEnd++;\n                }\n                int msLen = msEnd - msStart;\n                if (msLen < 3) {\n                    for (int i = 0; i < 3 - msLen; ++i) {\n                        sb.insert(msEnd, '0');\n                    }\n                }\n            } else if (timeLen <= 8) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}