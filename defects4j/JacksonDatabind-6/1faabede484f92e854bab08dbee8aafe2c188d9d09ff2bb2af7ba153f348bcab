{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    // Handle plain date case\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        // 'Zulu' time (GMT) - append milliseconds if missing\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // Check if seconds are present and adjust milliseconds\n        int secondColon = dateStr.lastIndexOf(':');\n        if (secondColon > 0) {\n            int secondDot = dateStr.indexOf('.', secondColon);\n            if (secondDot == -1) {\n                // Missing milliseconds, add \".000\"\n                dateStr += \".000\";\n            }\n        }\n    } else {\n        if (hasTimeZone(dateStr)) {\n            // Check if time zone colon is present and remove it\n            int tzStart = dateStr.indexOf(\"Z\", 0);\n            if (tzStart == -1) {\n                tzStart = dateStr.length() - 3;\n                c = dateStr.charAt(tzStart);\n                if (c == ':') {\n                    dateStr = dateStr.substring(0, tzStart) + dateStr.substring(tzStart + 1);\n                }\n            }\n            // Handle possible missing minutes in time zone\n            tzStart = dateStr.length() - 3;\n            c = dateStr.charAt(tzStart);\n            if (c == '+' || c == '-') {\n                int tzEnd = dateStr.length();\n                if (dateStr.charAt(tzStart + 1) != '0' || dateStr.charAt(tzStart + 2) != '0') {\n                    dateStr = dateStr.substring(0, tzStart + 3) + \"00\" + dateStr.substring(tzEnd);\n                }\n            }\n            // Check for seconds and milliseconds\n            if (dateStr.indexOf('T') != -1) {\n                int timePart = dateStr.lastIndexOf('T') + 1;\n                String[] parts = dateStr.substring(timePart).split(\":\");\n                if (parts.length < 3) {\n                    // Missing seconds, add :00\n                    dateStr += \":00\";\n                }\n                if (!dateStr.contains(\".\")) {\n                    // Missing milliseconds, add .000\n                    int insertIndex = dateStr.lastIndexOf(':') + 1;\n                    if (insertIndex > 0 && Character.isDigit(dateStr.charAt(insertIndex))) {\n                        dateStr = dateStr.substring(0, insertIndex) + \".000\" + dateStr.substring(insertIndex);\n                    }\n                }\n            }\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // No time zone, append 'Z' and ensure milliseconds\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}