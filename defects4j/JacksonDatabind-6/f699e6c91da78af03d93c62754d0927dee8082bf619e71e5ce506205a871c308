{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    DateFormat df;\n\n    // Handle plain date format\n    if (len <= 10 && Character.isDigit(dateStr.charAt(len - 1))) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (dateStr.endsWith(\"Z\")) {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // Handle missing milliseconds for 'Z' format\n        if (dateStr.charAt(len - 4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len - 1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Handle timezones and partial/missing milliseconds\n        if (hasTimeZone(dateStr)) {\n            int tzStart = dateStr.lastIndexOf('+');\n            if (tzStart == -1) {\n                tzStart = dateStr.lastIndexOf('-');\n            }\n            int secondsStart = dateStr.lastIndexOf(':');\n\n            // Handle missing minutes in timezone\n            if (secondsStart == tzStart + 3) {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert(tzStart + 3, \"00\");\n                dateStr = sb.toString();\n                len = dateStr.length();\n            }\n\n            // Handle partial or missing milliseconds\n            int millisStart = dateStr.indexOf('.', secondsStart);\n            if (millisStart != -1 && millisStart + 4 < len) {\n                // Partial milliseconds, ensure 3 digits\n                StringBuilder sb = new StringBuilder(dateStr);\n                while (sb.length() - millisStart < 4) {\n                    sb.append('0');\n                }\n                dateStr = sb.toString();\n            } else if (millisStart == -1 && secondsStart != -1) {\n                // Missing milliseconds, append \".000\"\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert(secondsStart + 3, \".000\");\n                dateStr = sb.toString();\n            }\n\n            df = _formatISO8601;\n            if (df == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // Add 'Z' and milliseconds if missing\n            StringBuilder sb = new StringBuilder(dateStr);\n            int timeLen = len - dateStr.lastIndexOf('T') - 1;\n            if (timeLen <= 8) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}