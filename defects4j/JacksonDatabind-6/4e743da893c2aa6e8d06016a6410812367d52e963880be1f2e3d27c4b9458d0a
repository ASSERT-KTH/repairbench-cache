{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    /* 21-May-2009, tatu: DateFormat has very strict handling of\n     * timezone  modifiers for ISO-8601. So we need to do some scrubbing.\n     */\n\n    /* First: do we have \"zulu\" format ('Z' == \"GMT\")? If yes, that's\n     * quite simple because we already set date format timezone to be\n     * GMT, and hence can just strip out 'Z' altogether\n     */\n    int len = dateStr.length();\n    char c = dateStr.charAt(len-1);\n    DateFormat df;\n\n    // [JACKSON-200]: need to support \"plain\" date...\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // [JACKSON-334]: may be missing milliseconds... if so, add\n        if (dateStr.charAt(len-4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len-1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Let's see if we have timezone indicator or not...\n        if (hasTimeZone(dateStr)) {\n            c = dateStr.charAt(len-3);\n            if (c == ':') { // remove optional colon\n                // remove colon\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.delete(len-3, len-2);\n                dateStr = sb.toString();\n                len = dateStr.length();\n            } else if (c == '+' || c == '-') { // missing minutes\n                // let's just append '00'\n                dateStr += \"00\";\n                len = dateStr.length();\n            }\n            \n            // Handle partial milliseconds and missing seconds\n            int timeSep = dateStr.indexOf('T');\n            if (timeSep > 0) {\n                int timeEnd = dateStr.indexOf('+', timeSep);\n                if (timeEnd < 0) {\n                    timeEnd = dateStr.indexOf('-', timeSep);\n                }\n                if (timeEnd > 0) {\n                    String timePart = dateStr.substring(timeSep + 1, timeEnd);\n                    String[] parts = timePart.split(\":\");\n                    StringBuilder fixedTime = new StringBuilder();\n                    \n                    if (parts.length >= 2) {\n                        fixedTime.append(parts[0]).append(':').append(parts[1]);\n                        \n                        if (parts.length > 2) {\n                            String secondsPart = parts[2];\n                            if (secondsPart.indexOf('.') > 0) {\n                                // Handle partial milliseconds\n                                String[] secMs = secondsPart.split(\"\\\\.\");\n                                fixedTime.append(':').append(secMs[0]);\n                                if (secMs.length > 1) {\n                                    fixedTime.append('.');\n                                    if (secMs[1].length() > 3) {\n                                        fixedTime.append(secMs[1].substring(0, 3));\n                                    } else {\n                                        fixedTime.append(secMs[1]);\n                                        for (int i = secMs[1].length(); i < 3; i++) {\n                                            fixedTime.append('0');\n                                        }\n                                    }\n                                } else {\n                                    fixedTime.append(\".000\");\n                                }\n                            } else {\n                                fixedTime.append(':').append(secondsPart).append(\".000\");\n                            }\n                        } else {\n                            fixedTime.append(\":00.000\");\n                        }\n                        \n                        StringBuilder sb = new StringBuilder(dateStr);\n                        sb.replace(timeSep + 1, timeEnd, fixedTime.toString());\n                        dateStr = sb.toString();\n                    }\n                }\n            }\n            \n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // If not, plain date. Easiest to just patch 'Z' in the end?\n            StringBuilder sb = new StringBuilder(dateStr);\n            // And possible also millisecond part if missing\n            int timeLen = len - dateStr.lastIndexOf('T') - 1;\n            if (timeLen <= 8) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}