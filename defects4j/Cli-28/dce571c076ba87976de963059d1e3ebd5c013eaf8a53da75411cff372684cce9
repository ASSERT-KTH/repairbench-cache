{
    "generation": "    /**\n     * Sets the values of Options using the values in <code>properties</code>.\n     *\n     * @param properties The value properties to be processed.\n     */\n    protected void processProperties(Properties properties)\n    {\n        if (properties == null)\n        {\n            return;\n        }\n\n        for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n        {\n            String optionName = e.nextElement().toString();\n\n            // If the option is already present in the CommandLine, skip it.\n            if (cmd.hasOption(optionName))\n            {\n                continue;\n            }\n\n            Option opt = getOptions().getOption(optionName);\n\n            // If the option is not defined in the parser's options, skip it.\n            if (opt == null)\n            {\n                continue;\n            }\n\n            // get the value from the properties instance\n            String value = properties.getProperty(optionName);\n\n            if (opt.hasArg())\n            {\n                // If the option does not already have values assigned (e.g., from CLI args)\n                // then add the value from properties.\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        // Add the value to the Option object.\n                        // This prepares the option to be added to the CommandLine with its value.\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException exp)\n                    {\n                        // if we cannot add the value don't worry about it\n                        // In this case, we shouldn't add the option to the CommandLine\n                        continue;\n                    }\n                }\n                // If an argument was successfully processed (or already existed), add the option to cmd.\n                cmd.addOption(opt);\n            }\n            else // Option is a flag (does not take an argument)\n            {\n                // For flag options, we only add them to the CommandLine if their value is affirmative.\n                if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value))\n                {\n                    cmd.addOption(opt);\n                }\n                // If the value is not affirmative (e.g., \"false\", \"no\", \"0\"),\n                // we do nothing, meaning the flag is not considered present.\n                // In both cases (added or not added), we continue to the next property.\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}