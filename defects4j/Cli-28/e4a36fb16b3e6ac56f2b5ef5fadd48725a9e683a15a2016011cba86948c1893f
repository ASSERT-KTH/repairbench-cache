{
    "generation": "    /**\n     * Sets the values of Options using the values in <code>properties</code>.\n     *\n     * @param properties The value properties to be processed.\n     */\n    protected void processProperties(Properties properties)\n    {\n        if (properties == null)\n        {\n            return;\n        }\n\n        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)\n        {\n            String option = e.nextElement().toString();\n\n            // process properties that are not already set\n            if (!cmd.hasOption(option))\n            {\n                Option opt = getOptions().getOption(option);\n\n                // DCL requires that options property names refer to valid options\n                if (opt == null) {\n                    // Option specified in properties is not valid, perhaps log a warning.\n                    // Skip this property.\n                     continue;\n                }\n\n                // get the value from the properties instance\n                String value = properties.getProperty(option);\n\n                if (opt.hasArg())\n                {\n                    // if the option accepts an argument value\n                    if (opt.getValues() == null || opt.getValues().length == 0)\n                    {\n                        try\n                        {\n                            // add the value from the properties\n                            opt.addValueForProcessing(value);\n                        }\n                        catch (RuntimeException exp)\n                        {\n                            // if we cannot add the value don't worry about it\n                            // A logger could be used here.\n                        }\n                    }\n                    // else: The option already has a value, properties do not override.\n                    // Add the option to the command line anyway.\n                     cmd.addOption(opt);\n                }\n                else\n                {\n                    // if the option does not accept an argument value (it's a flag)\n                    // Add the option only if the value is considered \"true\"\n                    if (\"yes\".equalsIgnoreCase(value)\n                            || \"true\".equalsIgnoreCase(value)\n                            || \"1\".equalsIgnoreCase(value))\n                    {\n                         // Corresponding property is true, so add the option\n                         cmd.addOption(opt);\n                    }\n                    // otherwise (value is not true/yes/1), do not add the flag option.\n                    // The loop will continue to the next property.\n                }\n\n                // Ensure that the option is added to the command line if it has an arg\n                // or if it is a flag with a true value.\n                // NOTE: cmd.addOption(opt) was moved inside the if/else blocks above\n                // to correctly handle flags based on their property value.\n            }\n            // else: Option already present in cmd (likely from command line args), ignore property.\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}