{
    "generation": "/**\n * Sets the values of Options using the values in <code>properties</code>.\n *\n * @param properties The value properties to be processed.\n */\nprotected void processProperties(Properties properties)\n{\n    if (properties == null)\n    {\n        return;\n    }\n\n    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)\n    {\n        String key = e.nextElement().toString();\n\n        // only process if not already specified on the command line\n        if (!cmd.hasOption(key))\n        {\n            Option opt = getOptions().getOption(key);\n            if (opt == null)\n            {\n                // skip unknown properties\n                continue;\n            }\n\n            String value = properties.getProperty(key);\n\n            if (opt.hasArg())\n            {\n                // only add a default argument if one hasn't been set yet\n                if (opt.getValues() == null || opt.getValues().length == 0)\n                {\n                    try\n                    {\n                        opt.addValueForProcessing(value);\n                    }\n                    catch (RuntimeException ignore)\n                    {\n                        // ignore invalid values\n                    }\n                }\n            }\n            else\n            {\n                // for flags (no-arg), only accept \"yes\", \"true\" or \"1\"\n                if (!(\"yes\".equalsIgnoreCase(value)\n                      || \"true\".equalsIgnoreCase(value)\n                      || \"1\".equalsIgnoreCase(value)))\n                {\n                    // skip this option entirely\n                    continue;\n                }\n            }\n\n            cmd.addOption(opt);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}