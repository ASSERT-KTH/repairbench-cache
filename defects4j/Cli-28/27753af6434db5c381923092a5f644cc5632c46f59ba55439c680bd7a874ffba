{
    "generation": "    /**\n     * Sets the values of Options using the values in <code>properties</code>.\n     *\n     * @param properties The value properties to be processed.\n     */\n    protected void processProperties(Properties properties)\n    {\n        if (properties == null)\n        {\n            return;\n        }\n\n        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)\n        {\n            String option = e.nextElement().toString();\n\n            // process options not already processed by the command line\n            if (!cmd.hasOption(option))\n            {\n                Option opt = getOptions().getOption(option);\n\n                // get the value from the properties instance\n                String value = properties.getProperty(option);\n\n                if (opt.hasArg())\n                {\n                    if (opt.getValues() == null || opt.getValues().length == 0)\n                    {\n                        try\n                        {\n                            opt.addValueForProcessing(value);\n                        }\n                        catch (RuntimeException exp)\n                        {\n                            // if we cannot add the value don't worry about it\n                        }\n                    }\n                    // add the option to the command line\n                    cmd.addOption(opt);                    \n                }\n                else if (!(\"yes\".equalsIgnoreCase(value)\n                        || \"true\".equalsIgnoreCase(value)\n                        || \"1\".equalsIgnoreCase(value)))\n                {\n                    // if the value is not yes, true or 1 then don't add the\n                    // option to the CommandLine - skip this property\n                    continue; // Fix: Use continue instead of break to process next property\n                }\n                else\n                {\n                    // Corresponding property is true, so add the option\n                    cmd.addOption(opt);\n                }\n\n                // LWG: If we just added an option, we need to update the parent\n                // Not sure what the intention of the original code was, but the addOption\n                // was outside the else if block, potentially adding options whose values\n                // indicated they shouldn't be added. Moved cmd.addOption(opt) inside the\n                // relevant blocks (for options with args, and for flags with true values).\n                // Also, need to ensure options defined in properties are added to the cmd.\n                // The original code structure added the option outside the 'if (opt.hasArg())'\n                // block, but after the 'else if' check. This means it added the option\n                // even if the flag check failed, *unless* the flag check caused a 'break'.\n                // The correct logic is to only add the option if it has an arg, or if it's\n                // a flag and its value is considered \"true\".\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}