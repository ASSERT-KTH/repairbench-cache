{
    "generation": "@Override\npublic byte[] getBinaryValue(Base64Variant b64variant)\n    throws IOException, JsonParseException\n{\n    // Multiple possibilities...\n    JsonNode n = currentNode();\n    if (n != null) {\n        // [databind#2096]: although `binaryValue()` works for real binary node\n        // and embedded \"POJO\" node, coercion from TextNode may require variant, so:\n        try {\n            byte[] data = n.binaryValue();\n            if (data != null) {\n                return data;\n            }\n            if (n.isPojo()) {\n                Object ob = ((POJONode) n).getPojo();\n                if (ob instanceof byte[]) {\n                    return (byte[]) ob;\n                }\n            }\n            // If we get here with a TextNode, try to decode it with the provided variant\n            if (n.isTextual()) {\n                String text = n.textValue();\n                if (text != null) {\n                    return b64variant.decode(text);\n                }\n            }\n        } catch (IllegalArgumentException e) {\n            throw new JsonParseException(\"Cannot access contents of TextNode as binary: \" + e.getMessage(), currentLocation());\n        }\n    }\n    // otherwise return null to mark we have no binary content\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}