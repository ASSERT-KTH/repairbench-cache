{
    "generation": "    @Override\n    public byte[] getBinaryValue(Base64Variant b64variant)\n        throws IOException, JsonParseException\n    {\n        // Multiple possibilities...\n        JsonNode n = currentNode();\n        if (n != null) {\n            // [databind#2096]: coercion from TextNode may require variant.\n            // If the current node is a TextNode, its value is a Base64-encoded string.\n            // We must use the provided Base64Variant to decode it.\n            if (n.isTextual()) {\n                return ((TextNode) n).getBinaryValue(b64variant);\n            }\n            // For other node types (like BinaryNode or POJONode), or if the TextNode\n            // had its internal binary representation directly set (less common for string-backed),\n            // we try the generic binaryValue() method first.\n            byte[] data = n.binaryValue();\n            if (data != null) {\n                return data;\n            }\n            // Lastly, check if it's a POJONode that holds a byte array.\n            if (n.isPojo()) {\n                Object ob = ((POJONode) n).getPojo();\n                if (ob instanceof byte[]) {\n                    return (byte[]) ob;\n                }\n            }\n        }\n        // otherwise return null to mark we have no binary content\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}