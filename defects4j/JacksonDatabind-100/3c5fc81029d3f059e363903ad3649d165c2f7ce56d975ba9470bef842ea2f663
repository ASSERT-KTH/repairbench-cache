{
    "generation": "@Override\npublic byte[] getBinaryValue(Base64Variant b64variant)\n    throws IOException, JsonParseException\n{\n    // Multiple possibilities...\n    JsonNode n = currentNode();\n    if (n != null) {\n        // [databind#2096]: although `binaryValue()` works for real binary node\n        // and embedded \"POJO\" node, coercion from TextNode may require variant, so:\n        if (n instanceof TextNode) {\n            String text = ((TextNode) n).asText();\n            try {\n                return b64variant.decode(text);\n            } catch (IllegalArgumentException e) {\n                // Handle the case where the Base64 encoding is broken\n                throw new IOException(\"Cannot access contents of TextNode as binary due to broken Base64 encoding: \" + e.getMessage(), e);\n            }\n        } else {\n            byte[] data = n.binaryValue();\n            if (data != null) {\n                return data;\n            }\n            if (n.isPojo()) {\n                Object ob = ((POJONode) n).getPojo();\n                if (ob instanceof byte[]) {\n                    return (byte[]) ob;\n                }\n            }\n        }\n    }\n    // otherwise return null to mark we have no binary content\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}