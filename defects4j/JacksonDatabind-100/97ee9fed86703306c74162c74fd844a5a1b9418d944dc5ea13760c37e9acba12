{
    "generation": "@Override\npublic byte[] getBinaryValue(Base64Variant b64variant)\n    throws IOException, JsonParseException\n{\n    JsonNode n = currentNode();\n    if (n != null) {\n        // [databind#2096]: although `binaryValue()` works for real BinaryNode\n        // and embedded POJONode, coercion from TextNode may require the passed variant:\n        byte[] data = n.binaryValue();\n        if (data != null) {\n            return data;\n        }\n        if (n.isPojo()) {\n            Object ob = ((POJONode) n).getPojo();\n            if (ob instanceof byte[]) {\n                return (byte[]) ob;\n            }\n        }\n        if (n.isTextual()) {\n            String text = n.textValue();\n            try {\n                return b64variant.decode(text);\n            } catch (IllegalArgumentException iae) {\n                throw new JsonParseException(this,\n                    \"Cannot access contents of TextNode as binary due to broken Base64 encoding: \"\n                    + iae.getMessage());\n            }\n        }\n    }\n    // no binary content available\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}