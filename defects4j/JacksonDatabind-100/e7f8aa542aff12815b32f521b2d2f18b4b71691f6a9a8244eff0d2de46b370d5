{
    "generation": "    @Override\n    public byte[] getBinaryValue(Base64Variant b64variant)\n        throws IOException, JsonParseException\n    {\n        // Multiple possibilities...\n        JsonNode n = currentNode();\n        if (n != null) {\n            if (n instanceof TextNode) {\n                // [databind#2096]: Need to handle TextNode with Base64 encoding\n                TextNode textNode = (TextNode) n;\n                String base64Text = textNode.asText();\n                if (base64Text != null) {\n                    try {\n                        return b64variant.decode(base64Text);\n                    } catch (IllegalArgumentException e) {\n                        throw new JsonParseException(\"Cannot access contents of TextNode as binary due to broken Base64 encoding: \" + e.getMessage(), JsonLocation.NA, e);\n                    }\n                }\n            } else if (n.isPojo()) {\n                Object ob = ((POJONode) n).getPojo();\n                if (ob instanceof byte[]) {\n                    return (byte[]) ob;\n                }\n            } else {\n                // Try to get binary value directly\n                byte[] data = n.binaryValue();\n                if (data != null) {\n                    return data;\n                }\n            }\n        }\n        // otherwise return null to mark we have no binary content\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}