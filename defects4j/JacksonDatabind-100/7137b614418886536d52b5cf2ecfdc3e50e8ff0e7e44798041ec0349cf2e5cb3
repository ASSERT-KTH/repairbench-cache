{
    "generation": "    @Override\n    public byte[] getBinaryValue(Base64Variant b64variant)\n        throws IOException, JsonParseException\n    {\n        // Multiple possibilities...\n        JsonNode n = currentNode();\n        if (n != null) {\n            // If it's an actual binary node, return data directly\n            if (n.isBinary()) {\n                 return ((BinaryNode) n).binaryValue();\n            }\n            // If POJO contains byte[], return it\n            if (n.isPojo()) {\n                Object ob = ((POJONode) n).getPojo();\n                if (ob instanceof byte[]) {\n                    return (byte[]) ob;\n                }\n            }\n            // [databind#2096]: If TextNode, try decoding with specified variant\n            if (n.isTextual()) {\n                final String str = n.textValue();\n                if (str != null) {\n                    try {\n                       return b64variant.decode(str);\n                    // Base64Variant.decode() throws IllegalArgumentException, need to convert to JsonParseException\n                    } catch (IllegalArgumentException e) {\n                        // Include node type for clarity\n                        throw _constructError(\"Cannot access contents of TextNode as binary due to broken Base64 encoding: \"+e.getMessage());\n                    }\n                }\n            }\n        }\n        // otherwise return null to mark we have no binary content\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}