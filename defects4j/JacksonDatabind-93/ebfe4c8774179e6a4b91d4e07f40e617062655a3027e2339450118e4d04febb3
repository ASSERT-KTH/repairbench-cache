{
    "generation": "public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException\n{\n    Class<?> raw = type.getRawClass();\n    String full = raw.getName();\n\n    if (_cfgIllegalClassNames.contains(full)) {\n        throw JsonMappingException.from(ctxt,\n                String.format(\"Illegal type (%s) to deserialize: explicitly forbidden\", full));\n    }\n\n    if (full.startsWith(PREFIX_STRING)) {\n        for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {\n            String pkg = cls.getPackage() != null ? cls.getPackage().getName() : null;\n            if (pkg == null || pkg.startsWith(\"java.\") || pkg.startsWith(\"javax.\") || pkg.startsWith(\"javafx.\")) {\n                continue;\n            }\n            String name = cls.getSimpleName();\n            if (name.equals(\"AbstractPointcutAdvisor\") || name.equals(\"AbstractApplicationContext\")) {\n                throw JsonMappingException.from(ctxt,\n                    String.format(\"Illegal type (%s) to deserialize: security hint\", full));\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}