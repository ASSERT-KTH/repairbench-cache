{
    "generation": "private void annotateCalls(Node n) {\n    Preconditions.checkState(n.isCall());\n\n    Node firstChild = n.getFirstChild();\n    Node func = firstChild;\n\n    // Unwrap any surrounding Paren nodes.\n    while (func.getType() == Token.PAREN) {\n        func = func.getFirstChild();\n    }\n\n    // Keep track of the \"this\" context of a call. A call without an\n    // explicit \"this\" is a free call.\n    if (!NodeUtil.isGet(func)) {\n        n.putBooleanProp(Node.FREE_CALL, true);\n    }\n\n    // Keep track of the context in which eval is called. It is important\n    // to distinguish between \"(0, eval)()\" and \"eval()\".\n    if (func.isName() && \"eval\".equals(func.getString())) {\n        func.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}