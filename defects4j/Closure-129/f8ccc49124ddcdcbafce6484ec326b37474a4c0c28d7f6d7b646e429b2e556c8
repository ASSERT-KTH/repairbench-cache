{
    "generation": "    private void annotateCalls(Node n) {\n      Preconditions.checkState(n.isCall());\n\n      Node first = n.getFirstChild();\n\n      // Check if the first child is a call to 'new'\n      if (NodeUtil.isNew(first)) {\n        // Move to the next child which should be the function expression\n        first = first.getFirstChild();\n      }\n\n      // Ignore cast nodes.\n      if (!NodeUtil.isGet(first) && !first.isCast()) {\n        n.putBooleanProp(Node.FREE_CALL, true);\n      }\n\n      // Check if the first child is a name and is 'eval'\n      if (first.isName() && \"eval\".equals(first.getString())) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n      }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}