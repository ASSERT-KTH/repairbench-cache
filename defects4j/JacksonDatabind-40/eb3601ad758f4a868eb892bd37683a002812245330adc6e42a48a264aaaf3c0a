{
    "generation": "protected Object _coerceEmptyString(DeserializationContext ctxt, Class<?> targetType)\n        throws JsonMappingException {\n    // For primitive types, empty String should be converted to the default primitive value\n    if (targetType.isPrimitive()) {\n        if (targetType == int.class) {\n            return 0;\n        }\n        if (targetType == long.class) {\n            return 0L;\n        }\n        if (targetType == double.class) {\n            return 0.0;\n        }\n        if (targetType == float.class) {\n            return 0.0f;\n        }\n        if (targetType == boolean.class) {\n            return false;\n        }\n        if (targetType == char.class) {\n            return '\\0';\n        }\n        if (targetType == byte.class) {\n            return (byte) 0;\n        }\n        if (targetType == short.class) {\n            return (short) 0;\n        }\n        // In case a new primitive type is added in the future\n        throw JsonMappingException.from(ctxt,\n                \"Cannot coerce empty String to primitive type: \" + targetType.getName());\n    }\n    // For non-primitive types, return null (empty String coerces to null)\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}