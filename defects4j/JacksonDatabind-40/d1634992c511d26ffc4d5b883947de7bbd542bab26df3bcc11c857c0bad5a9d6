{
    "generation": "public Integer deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n    if (p.currentToken() == JsonToken.VALUE_STRING) {\n        String text = p.getText().trim();\n        if (text.isEmpty()) {\n            JavaType type = ctxt.getContextualType();\n            if (type != null && type.isPrimitive()) {\n                if (ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {\n                    throw ctxt.mappingException(ctxt.getParser(), \"Cannot coerce empty String to primitive int\");\n                }\n                return 0;\n            } else {\n                if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n                    return null;\n                }\n            }\n            throw ctxt.mappingException(ctxt.getParser(), \"Cannot coerce empty String to Integer value\");\n        }\n        try {\n            return Integer.parseInt(text);\n        } catch (NumberFormatException e) {\n            throw ctxt.mappingException(ctxt.getParser(), \"Cannot parse int value from '%s'\", text);\n        }\n    }\n    return super.deserialize(p, ctxt);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}