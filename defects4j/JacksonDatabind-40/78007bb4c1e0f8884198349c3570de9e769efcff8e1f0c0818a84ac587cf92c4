{
    "generation": "private void _testEmptyToNullCoercion(Class<?> type, Object expectedValue) throws Exception {\n    ObjectMapper mapper = new ObjectMapper();\n    JsonNode node = mapper.readTree(\"\\\"\\\"\");\n\n    Object actualValue;\n    if (type == int.class || type == Integer.class) {\n        actualValue = mapper.treeToValue(node, Integer.class);\n    } else if (type == long.class || type == Long.class) {\n        actualValue = mapper.treeToValue(node, Long.class);\n    } else if (type == double.class || type == Double.class) {\n        actualValue = mapper.treeToValue(node, Double.class);\n    } else if (type == float.class || type == Float.class) {\n        actualValue = mapper.treeToValue(node, Float.class);\n    } else {\n        throw new IllegalArgumentException(\"Unsupported type: \" + type);\n    }\n\n    assertNull(\"Should have been null for type \" + type, actualValue);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}