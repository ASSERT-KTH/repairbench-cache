{
    "generation": "    protected void _testEmptyToNullCoercion(Class<?> type, Object expectedValue) throws Exception {\n        ObjectMapper mapper = new ObjectMapper();\n        // Enable accepting empty string as null object. This feature makes \"\" input\n        // be treated as `null`. This is typically the context of \"empty to null coercion\".\n        mapper.enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);\n        \n        // Enable failing when null is provided for a primitive type.\n        // With ACCEPT_EMPTY_STRING_AS_NULL_OBJECT, \"\" becomes `null`.\n        // This feature then ensures that if `null` is given to a primitive, it throws an exception,\n        // rather than silently assigning the default value (0, 0.0, false).\n        mapper.enable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES);\n\n        try {\n            // This readValue call is expected to throw an exception for primitive types\n            // when given an empty string, under the above configurations.\n            Object result = mapper.readValue(\"\\\"\\\"\", type);\n            \n            // If execution reaches here, it means deserialization succeeded without an exception.\n            // This is not the expected behavior for primitives under the current test's intent.\n            // The following assertion checks if it yielded the default value.\n            assertEquals(expectedValue, result);\n            \n            // This line was the cause of the original error. It should no longer be reached.\n            fail(\"Should not have passed\"); \n        } catch (JsonMappingException e) {\n            // This is the expected path for primitives: an exception should be thrown.\n            // If an exception is caught, the test passes for this specific type.\n            return; \n        }\n        // If no exception was thrown AND the `fail` above was not reached,\n        // it means the test passed unexpectedly without throwing an exception.\n        // This additional `fail` ensures explicit failure in such unexpected scenarios.\n        fail(\"Expected a JsonMappingException for \" + type.getName() + \" but no exception was thrown.\");\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}