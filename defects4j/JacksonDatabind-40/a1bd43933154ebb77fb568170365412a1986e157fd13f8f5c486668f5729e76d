{
    "generation": "@Override\npublic Object getNullValue(DeserializationContext ctxt) throws JsonMappingException {\n    if (_primitive && ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {\n        // 01-Jul-2016, tatu: 2.8, [databind#1343] Handle primitives explicitly,\n        //    fail if enabled\n        return ctxt.handleWeirdStringValue(_valueClass, \"null\", \"Cannot coerce 'null' to %s (primitive type)\", _valueClass.getName());\n    }\n    // 21-Nov-2018, tatu: For primitive types, must coerce empty String to zero value\n    if (_primitive) {\n        if (_valueClass == Integer.TYPE) {\n            return Integer.valueOf(0);\n        }\n        if (_valueClass == Long.TYPE) {\n            return Long.valueOf(0L);\n        }\n        if (_valueClass == Double.TYPE) {\n            return Double.valueOf(0.0);\n        }\n        if (_valueClass == Float.TYPE) {\n            return Float.valueOf(0.0f);\n        }\n        if (_valueClass == Boolean.TYPE) {\n            return Boolean.FALSE;\n        }\n        if (_valueClass == Byte.TYPE) {\n            return Byte.valueOf((byte) 0);\n        }\n        if (_valueClass == Short.TYPE) {\n            return Short.valueOf((short) 0);\n        }\n        if (_valueClass == Character.TYPE) {\n            return Character.valueOf((char) 0);\n        }\n        // should never happen\n        throw new IllegalArgumentException(\"Class \" + _valueClass.getName() + \" is not a primitive type\");\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}