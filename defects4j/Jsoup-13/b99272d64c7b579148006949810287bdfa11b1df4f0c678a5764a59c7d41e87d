{
    "generation": "    /**\n     * Test if this element has an attribute.\n     * @param attributeKey The attribute key to check.\n     * @return true if the attribute exists, false if not.\n     */\n    public boolean hasAttr(String attributeKey) {\n        Validate.notNull(attributeKey);\n\n        // Check for abs: prefix first to differentiate from literal \"abs:key\" attr.\n        if (attributeKey.startsWith(Attributes.absKeyPrefix)) {\n            String key = attributeKey.substring(Attributes.absKeyPrefix.length());\n            // Ensure the key is valid (not just \"abs:\") and that absUrl() returns a non-empty string.\n            // absUrl already checks for the base attribute's existence.\n            if (key.length() > 0 && !absUrl(key).isEmpty()) {\n                return true;\n            } else {\n                // if key is empty (\"abs:\") or absUrl is empty (attribute not present or not resolvable)\n                return false;\n            }\n        }\n\n        // If not an abs: key, check for the literal attribute key using case-insensitive comparison\n        // consistent with attr(String).\n        return attributes.hasKeyIgnoreCase(attributeKey);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}