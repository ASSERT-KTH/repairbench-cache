{
    "generation": "/**\n * Test if this element has an attribute.\n * @param attributeKey The attribute key to check.\n * @return true if the attribute exists, false if not.\n */\npublic boolean hasAttr(String attributeKey) {\n    Validate.notNull(attributeKey);\n\n    if (attributeKey.startsWith(\"abs:\")) {\n        String key = attributeKey.substring(4);\n        String value = attr(key);\n        if (value.isEmpty()) {\n            return false;\n        }\n        try {\n            URL url;\n            if (value.startsWith(\"http:\") || value.startsWith(\"https:\") || value.startsWith(\"ftp:\")) {\n                url = new URL(value);\n            } else {\n                // relative URL needs base URI\n                if (baseUri() != null && !baseUri().isEmpty()) {\n                    url = new URL(new URL(baseUri()), value);\n                } else {\n                    return false; // can't create absolute URL without base URI\n                }\n            }\n            return true; // if we got here, the attribute exists and can form a valid URL\n        } catch (MalformedURLException e) {\n            return false;\n        }\n    }\n    return attributes.hasKey(attributeKey);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}