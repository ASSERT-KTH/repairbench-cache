{
    "generation": "    /**\n     * Test if this element has an attribute.\n     * @param attributeKey The attribute key to check.\n     * @return true if the attribute exists, false if not.\n     */\n    public boolean hasAttr(String attributeKey) {\n        Validate.notNull(attributeKey);\n\n        if (attributeKey.startsWith(\"abs:\")) {\n            String dataKey = attributeKey.substring(\"abs:\".length());\n            // An abs: property (like abs:href) is considered present if:\n            // 1. The underlying attribute (e.g., 'href') exists.\n            // 2. AND either the attribute's value itself is an absolute URL (e.g., starts with a scheme like \"http://\").\n            // 3. OR the document's base URI is absolute, allowing the attribute's relative URL to be resolved to an absolute URL.\n\n            if (!hasAttr(dataKey)) { // Check if the underlying attribute exists at all\n                return false;\n            }\n\n            String relUrl = attr(dataKey); // Get the value of the 'href' attribute\n\n            // Check if the attribute's value itself is an absolute URL (starts with a scheme)\n            if (relUrl.startsWith(\"http:\") || relUrl.startsWith(\"https:\") ||\n                relUrl.startsWith(\"ftp:\") || relUrl.startsWith(\"mailto:\") || relUrl.startsWith(\"file:\")) {\n                return true;\n            }\n\n            // If not, check if the document's base URI is an absolute URL.\n            // If the base URI is absolute, then any relative URL in this context can be resolved to absolute.\n            String base = baseUri();\n            if (!base.isEmpty() && (base.startsWith(\"http:\") || base.startsWith(\"https:\") ||\n                                    base.startsWith(\"ftp:\") || base.startsWith(\"mailto:\") ||\n                                    base.startsWith(\"file:\"))) {\n                return true;\n            }\n\n            // Otherwise, it's a relative URL in a relative context, so it's not \"abs:\".\n            return false;\n        }\n\n        return attributes.hasKey(attributeKey);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}