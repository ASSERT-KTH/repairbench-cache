{
    "generation": "    /**\n     * Test if this element has an attribute. Case insensitive.\n     * @param attributeKey The attribute key to check.\n     * @return true if the attribute exists, false if not.\n     */\n    @Override\n    public boolean hasAttr(String attributeKey) {\n        Validate.notNull(attributeKey);\n\n        // Check for absolute attribute key first (~abs:href)\n        if (attributeKey.startsWith(Attributes.absPrefix)) {\n            // Avoid an NPE (emitted by substring) if key is \"abs:\"\n            if (attributeKey.length() == Attributes.absPrefix.length()) {\n                return false;\n            }\n            String key = attributeKey.substring(Attributes.absPrefix.length());\n            // absUrl will return \"\" if base key not found, so check is sufficient\n            return !absUrl(key).isEmpty();\n        } else {\n            // Otherwise, check existence in attributes collection (case insensitive)\n            return attributes.hasKeyIgnoreCase(attributeKey);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}