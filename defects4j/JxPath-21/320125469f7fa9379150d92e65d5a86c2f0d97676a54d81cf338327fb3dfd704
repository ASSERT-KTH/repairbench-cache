{
    "generation": "/**\n * If the property contains a collection, then the length of that\n * collection; otherwise -1 (so that a null is treated as a single\n * atomic value rather than an empty collection).\n * @return int length\n */\npublic int getLength() {\n    Object value = getBaseValue();\n    if (value == null) {\n        // treat null as a single (atomic) value, not as an empty collection\n        return -1;\n    }\n    return ValueUtils.getLength(value);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}