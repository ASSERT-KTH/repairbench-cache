{
    "generation": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n{\n    final int mask = (1 << typeIndex);\n    _hasNonDefaultCreator = true;\n    AnnotatedWithParams oldOne = _creators[typeIndex];\n    if (oldOne != null) {\n        // If both old and new are explicitly annotated creators\n        if ((_explicitCreators & mask) != 0) {\n            if (!explicit) {\n                return;\n            }\n            // Only throw an exception if not the same member (i.e. different methods/constructors)\n            if (oldOne.getClass() == newOne.getClass() && !oldOne.equals(newOne)) {\n                throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex]\n                        + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n            }\n            // If same member, ignore duplicate\n            // (fall-through to update creator if needed)\n        }\n        // If not explicit, allow override\n    }\n    if (explicit) {\n        _explicitCreators |= mask;\n    }\n    _creators[typeIndex] = _fixAccess(newOne);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}