{
    "generation": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n{\n    final int mask = (1 << typeIndex);\n    _hasNonDefaultCreator = true;\n    AnnotatedWithParams oldOne = _creators[typeIndex];\n    if (oldOne != null) {\n\n        boolean oldExplicit = (_explicitCreators & mask) != 0;\n        boolean newExplicit = explicit;\n\n        if (oldExplicit) {\n            if (!newExplicit) {\n                return;\n            }\n            if (oldOne.getClass() == newOne.getClass()) {\n                throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex]\n                        + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n            }\n        } else if (newExplicit) {\n            if (oldOne.getClass() == newOne.getClass()) {\n                throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex]\n                        + \" creators: already had \" + oldOne + \", encountered explicitly marked \" + newOne);\n            }\n        }\n    }\n    if (explicit) {\n        _explicitCreators |= mask;\n    }\n    _creators[typeIndex] = _fixAccess(newOne);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}