{
    "generation": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n    final int mask = (1 << typeIndex);\n    _hasNonDefaultCreator = true;\n    AnnotatedWithParams oldOne = _creators[typeIndex];\n\n    // already had an explicitly marked one?\n    if (oldOne != null) {\n        // already had explicitly annotated, leave as-is\n        if ((_explicitCreators & mask) != 0) {\n            // but skip, if new one not annotated\n            if (!explicit) {\n                return;\n            }\n            // both explicit: verify only if they are of the same class\n            if (oldOne.getClass() != newOne.getClass()) {\n                throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex]\n                        + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n            }\n        } else {\n            // neither was explicit, or only one was explicit: replace if new one is more specific\n            if (newOne.getClass().isAssignableFrom(oldOne.getClass())) {\n                _creators[typeIndex] = _fixAccess(newOne);\n                if (explicit) {\n                    _explicitCreators |= mask;\n                }\n            }\n        }\n    } else {\n        // no existing creator, just add the new one\n        _creators[typeIndex] = _fixAccess(newOne);\n        if (explicit) {\n            _explicitCreators |= mask;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}