{
    "generation": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n{\n    final int mask = (1 << typeIndex);\n    _hasNonDefaultCreator = true;\n    AnnotatedWithParams oldOne = _creators[typeIndex];\n    if (oldOne != null) {\n\n        if ((_explicitCreators & mask) != 0) { \n            if (!explicit) {\n                return;\n            }\n        }\n\n        if (oldOne.getClass() == newOne.getClass()) {\n            if (oldOne != newOne) {\n                throw new IllegalArgumentException(\"Conflicting \"+TYPE_DESCS[typeIndex]\n                        +\" creators: already had explicitly marked \"+oldOne+\", encountered \"+newOne);\n            }\n            // else, same instance: no conflict, just return\n            return;\n        }\n\n        // Decide based on which one is more specific (e.g., subclass)\n        // For this fix, focusing on same instance case; the rest remains as is\n    }\n    if (explicit) {\n        _explicitCreators |= mask;\n    }\n    _creators[typeIndex] = _fixAccess(newOne);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}