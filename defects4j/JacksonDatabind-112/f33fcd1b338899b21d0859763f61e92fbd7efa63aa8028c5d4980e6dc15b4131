{
    "generation": "@Override\npublic JsonDeserializer<?> createContextual(DeserializationContext ctxt,\n        BeanProperty property) throws JsonMappingException\n{\n    // May need to resolve types for both array-delegating _and_ ordinary delegating creators:\n    JsonDeserializer<Object> delegate = null;\n    if (_valueInstantiator != null) {\n        AnnotatedWithParams creator = _valueInstantiator.getDelegateCreator();\n        JavaType delegateType = null;\n        if (creator != null) {\n            // a normal delegating creator\n            delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());\n        } else {\n            // if no \"standard\" delegate, check for array-delegating creator\n            creator = _valueInstantiator.getArrayDelegateCreator();\n            if (creator != null) {\n                delegateType = _valueInstantiator.getArrayDelegateType(ctxt.getConfig());\n            }\n        }\n        if (creator != null) {\n            delegate = findDeserializer(ctxt, delegateType, property);\n        }\n    }\n\n    // then resolve the element\u2010value deserializer as before\n    JsonDeserializer<?> valueDeser = _valueDeserializer;\n    final JavaType valueType = _containerType.getContentType();\n    if (valueDeser == null) {\n        // may have a content converter\n        valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);\n        if (valueDeser == null) {\n            // fallback to standard element deserializer\n            valueDeser = ctxt.findContextualValueDeserializer(valueType, property);\n        }\n    } else {\n        // if directly assigned, probably not yet contextual, so:\n        valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, valueType);\n    }\n\n    // find any ACCEPT_SINGLE_VALUE_AS_ARRAY setting on enclosing property\n    Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,\n            JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n    // find null\u2010value provider for elements\n    NullValueProvider nuller = findContentNullProvider(ctxt, property, valueDeser);\n\n    // drop placeholder \"default\" deserializers so that we know to use\n    // the no\u2010arg creator path\n    if (isDefaultDeserializer(valueDeser)) {\n        valueDeser = null;\n    }\n\n    return withResolved(delegate, valueDeser, nuller, unwrapSingle);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}