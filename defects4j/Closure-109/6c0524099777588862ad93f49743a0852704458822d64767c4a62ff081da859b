{
    "generation": "  /**\n   * ContextTypeExpression := BasicTypeExpression | '?'\n   * For expressions on the right hand side of a this: or new:\n   */\n  private Node parseContextTypeExpression(JsDocToken token) {\n    if (token == JsDocToken.QMARK) {\n      // Consume the QMARK token from the stream.\n      // The 'token' argument was peeked, not consumed yet.\n      stream.next();\n      // Create a node to represent the '?' (unknown) type.\n      // The JSType of this node (UNKNOWN_TYPE) will be set later during type resolution.\n      return createNode(JsDocToken.QMARK);\n    }\n    // If the token is not '?', it must be a BasicTypeExpression.\n    // 'parseTypeName' expects the token to be peeked and will consume it itself.\n    return parseTypeName(token);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}