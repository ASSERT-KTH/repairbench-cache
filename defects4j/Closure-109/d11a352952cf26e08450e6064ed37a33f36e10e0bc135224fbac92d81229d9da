{
    "generation": "/**\n * ContextTypeExpression := BasicTypeExpression | '?' | '*'\n * For expressions on the right hand side of a this: or new:\n */\nprivate Node parseContextTypeExpression(JsDocToken token) {\n  // Allow the unknown type \"?\" as a context type\n  if (token.type == JsDocToken.Type.QMARK) {\n    // represent \"?\" in our type\u2010AST\n    return new Node(Token.QMARK);\n  }\n  // Allow the wildcard type \"*\" as a context type\n  if (token.type == JsDocToken.Type.STAR) {\n    // represent \"*\" in our type\u2010AST\n    return new Node(Token.STAR);\n  }\n  // Otherwise fall back to a normal basic type name\n  return parseTypeName(token);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}