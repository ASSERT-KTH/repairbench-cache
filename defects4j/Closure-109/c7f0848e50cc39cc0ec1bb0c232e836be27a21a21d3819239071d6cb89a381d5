{
    "generation": "  /**\n   * ContextTypeExpression := BasicTypeExpression | '?' | '*'\n   * For expressions on the right hand side of a this: or new:\n   */\n  private Node parseContextTypeExpression(JsDocToken token) {\n    // Check for specific tokens representing unknown ('?') or all ('*') types.\n    if (token == JsDocToken.QMARK) {\n      // Create a string node representing the unknown type '?'\n      return IR.string(\"?\");\n    } else if (token == JsDocToken.STAR) {\n      // Create a string node representing the all type '*'\n      return IR.string(\"*\");\n    } else {\n      // If it's not '?' or '*', parse it as a basic type expression (TypeName).\n      return parseTypeName(token);\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}