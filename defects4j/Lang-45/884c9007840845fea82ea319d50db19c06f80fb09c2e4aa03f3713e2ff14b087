{
    "generation": "    /**\n     * Abbreviates a string nicely.\n     * \n     * This method searches for the first space after the lower limit and abbreviates\n     * the String there. It will also append any String passed as a parameter\n     * to the end of the String. The upper limit can be specified to forcibly\n     * abbreviate a String.\n     * \n     * @param str         the string to be abbreviated. If null is passed, null is returned.\n     *                    If the empty String is passed, the empty string is returned.\n     * @param lower       the lower limit.\n     * @param upper       the upper limit; specify -1 if no limit is desired.\n     *                    If the upper limit is lower than the lower limit, it will be\n     *                    adjusted to be the same as the lower limit.\n     * @param appendToEnd String to be appended to the end of the abbreviated string.\n     *                    This is appended ONLY if the string was indeed abbreviated.\n     *                    The append does not count towards the lower or upper limits.\n     * @return the abbreviated String.\n     * @since 2.4\n     */\n    public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n        // initial parameter checks\n        if (str == null) {\n            return null;\n        }\n        if (str.length() == 0) {\n            return StringUtils.EMPTY;\n        }\n\n        // adjust upper limit to the length of the string if necessary\n        if (upper == -1 || upper > str.length()) {\n            upper = str.length();\n        }\n        \n        // adjust lower limit if it's greater than the string length\n        if (lower > str.length()) {\n            lower = str.length();\n        }\n        \n        // adjust upper limit if it's less than lower limit\n        if (upper < lower) {\n            upper = lower;\n        }\n\n        int index = StringUtils.indexOf(str, \" \", lower);\n        if (index < 0 || index > upper) {\n            index = upper;\n        }\n\n        String result = str.substring(0, index);\n        if (str.length() > index) {\n            result += StringUtils.defaultString(appendToEnd);\n        }\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}