{
    "generation": "public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n    // initial parameter checks\n    if (str == null) {\n        return null;\n    }\n    if (str.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    int strLen = str.length();\n    // if the lower value is greater than the length of the string,\n    // set it to the length of the string\n    if (lower > strLen) {\n        lower = strLen;\n    }\n    // if the upper value is -1 (i.e. no limit) or is greater\n    // than the length of the string, set it to the length of the string\n    if (upper == -1 || upper > strLen) {\n        upper = strLen;\n    }\n    // if upper is less than lower, raise it to lower\n    if (upper < lower) {\n        upper = lower;\n    }\n\n    StringBuffer result = new StringBuffer();\n    int index = StringUtils.indexOf(str, \" \", lower);\n\n    if (index == -1) {\n        // no space found after 'lower' \u2192 force cut at 'upper'\n        result.append(str.substring(0, upper));\n        // only append the suffix if we've actually abbreviated\n        if (upper != strLen) {\n            result.append(StringUtils.defaultString(appendToEnd));\n        }\n    } else if (index > upper) {\n        // first space is beyond 'upper' \u2192 cut at 'upper'\n        result.append(str.substring(0, upper));\n        result.append(StringUtils.defaultString(appendToEnd));\n    } else {\n        // space found between lower and upper \u2192 cut at the space\n        result.append(str.substring(0, index));\n        result.append(StringUtils.defaultString(appendToEnd));\n    }\n\n    return result.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}