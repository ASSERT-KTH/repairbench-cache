{
    "generation": "public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n    if (str == null) {\n        return null;\n    }\n    if (str.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // If the lower value is greater than the length of the string,\n    // set it to the length of the string\n    if (lower > str.length()) {\n        lower = str.length();\n    }\n    // If the upper value is -1 (i.e. no limit) or is greater\n    // than the length of the string, set it to the length of the string\n    if (upper == -1 || upper > str.length()) {\n        upper = str.length();\n    }\n    // If upper is less than lower, raise it to lower\n    if (upper < lower) {\n        upper = lower;\n    }\n    // Catch upper==lower==0 edge case, or upper==lower==str.length() edge case\n    if (upper == 0) {\n        return StringUtils.EMPTY;\n    }\n    if (lower == upper) {\n        if(lower == str.length()) {\n            return str;\n        }\n        return StringUtils.EMPTY;\n    }\n    StringBuffer result = new StringBuffer();\n    int index = StringUtils.indexOf(str, \" \", lower);\n    if (index == -1 || index > upper) {\n        // If no space found after lower, or space is after upper, abbreviate at upper\n        if (upper > 0 && upper <= str.length()) {\n            result.append(str.substring(0, upper));\n        }\n        // only if abbreviation has occured do we append the appendToEnd value\n        if (upper != str.length()) {\n            result.append(StringUtils.defaultString(appendToEnd));\n        }\n    } else {\n        // Space found and within upper limit, abbreviate there\n        result.append(str.substring(0, index));\n        result.append(StringUtils.defaultString(appendToEnd));\n    }\n    return result.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}