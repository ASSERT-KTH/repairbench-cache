{
    "generation": "private void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end   = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n\n    // min start\n    if (this.minStartIndex >= 0) {\n        long ms = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < ms) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n\n    // max start\n    if (this.maxStartIndex >= 0) {\n        long MS = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n        if (start > MS) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n\n    // min middle\n    if (this.minMiddleIndex >= 0) {\n        TimePeriod pm = getDataItem(this.minMiddleIndex).getPeriod();\n        long   s  = pm.getStart().getTime();\n        long   e  = pm.getEnd().getTime();\n        long   m0 = s + ((e - s) / 2);\n        if (middle < m0) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n\n    // max middle (fixed: refer to maxMiddleIndex, not minMiddleIndex)\n    if (this.maxMiddleIndex >= 0) {\n        TimePeriod PM = getDataItem(this.maxMiddleIndex).getPeriod();\n        long   sM = PM.getStart().getTime();\n        long   eM = PM.getEnd().getTime();\n        long   M0 = sM + ((eM - sM) / 2);\n        if (middle > M0) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n\n    // min end\n    if (this.minEndIndex >= 0) {\n        long me = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < me) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n\n    // max end\n    if (this.maxEndIndex >= 0) {\n        long ME = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > ME) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}