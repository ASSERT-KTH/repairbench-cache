{
    "generation": "    private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {\n        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope\n        // The search starts from the current node (stack.size() - 1) and goes up the stack.\n        // MaxScopeSearchDepth limits how many elements from the current node (inclusive) are searched.\n\n        final int currentStackPos = stack.size() - 1;\n\n        // Calculate the effective 'bottom' of the search range.\n        // We search from currentStackPos downwards towards the root.\n        // This limit ensures we search at most MaxScopeSearchDepth elements.\n        // (MaxScopeSearchDepth - 1) because currentStackPos itself is one of the elements counted in the depth.\n        final int searchBottomIndex = Math.max(0, currentStackPos - (MaxScopeSearchDepth - 1));\n\n        for (int pos = currentStackPos; pos >= searchBottomIndex; pos--) {\n            final String elName = stack.get(pos).nodeName();\n            if (inSorted(elName, targetNames))\n                return true;\n            if (inSorted(elName, baseTypes))\n                return false;\n            if (extraTypes != null && inSorted(elName, extraTypes))\n                return false;\n        }\n        // If the loop completes without finding a match within the specified depth, return false.\n        // This is consistent with the depth limiting optimization.\n        return false;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}