{
    "generation": "    private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {\n        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope\n        // Limit the search depth + HACK Avoid overflow on deep stack / fix #1809\n        // The stack search depth needs to be limited to prevent StackOverflowErrors on excessively deep stacks.\n        final int bottom = stack.size() - 1;\n        // The original code had a bug here: `if (bottom > MaxScopeSearchDepth) bottom = MaxScopeSearchDepth;`\n        // That incorrectly moved the starting point of the search, rather than limiting the depth.\n\n        // Calculate the top bound for the search:\n        final int top = bottom >= MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;\n        // Walk up stack from bottom position, limited to MaxScopeSearchDepth items.\n\n        for (int pos = bottom; pos >= top; pos--) {\n            final String elName = stack.get(pos).nodeName();\n            if (inSorted(elName, targetNames))\n                return true;\n            if (inSorted(elName, baseTypes))\n                return false;\n            if (extraTypes != null && inSorted(elName, extraTypes))\n                return false;\n        }\n        //Validate.fail(\"Should not be reachable\"); // would end up false because hitting 'html' at root (basetypes)\n        return false; // Ran out of depth or hit the top of the stack\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}