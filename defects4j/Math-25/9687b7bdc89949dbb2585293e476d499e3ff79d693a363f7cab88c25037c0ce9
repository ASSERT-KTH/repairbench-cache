{
    "generation": "private void guessAOmega() {\n    double sx2 = 0;\n    double sy2 = 0;\n    double sxy = 0;\n    double sxz = 0;\n    double syz = 0;\n\n    double currentX = observations[0].getX();\n    double currentY = observations[0].getY();\n    double f2Integral = 0;\n    double fPrime2Integral = 0;\n    final double startX = currentX;\n    for (int i = 1; i < observations.length; ++i) {\n        final double previousX = currentX;\n        final double previousY = currentY;\n        currentX = observations[i].getX();\n        currentY = observations[i].getY();\n\n        final double dx = currentX - previousX;\n        if (dx == 0) {\n            throw new ZeroException();\n        }\n        final double dy = currentY - previousY;\n        final double f2StepIntegral =\n            dx * (previousY * previousY + previousY * currentY + currentY * currentY) / 3;\n        final double fPrime2StepIntegral = (dy * dy) / dx;\n\n        final double x = currentX - startX;\n        f2Integral += f2StepIntegral;\n        fPrime2Integral += fPrime2StepIntegral;\n\n        sx2 += x * x;\n        sy2 += f2Integral * f2Integral;\n        sxy += x * f2Integral;\n        sxz += x * fPrime2Integral;\n        syz += f2Integral * fPrime2Integral;\n    }\n\n    // Compute intermediate coefficients used to estimate the amplitude and angular frequency.\n    double c1 = sy2 * sxz - sxy * syz;\n    double c2 = sxy * sxz - sx2 * syz;\n    double c3 = sx2 * sy2 - sxy * sxy;\n\n    // For a valid harmonic guess these ratios must be positive (so that taking square roots is meaningful).\n    // If not, the observations are too ill-conditioned for the guessing procedure.\n    if (c2 == 0 || c3 == 0 || (c1 / c2 < 0) || (c2 / c3 < 0)) {\n        throw new MathIllegalStateException(\"Unable to guess harmonic parameters from observations: observations are ill-conditioned\");\n    }\n\n    a = FastMath.sqrt(c1 / c2);\n    omega = FastMath.sqrt(c2 / c3);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}