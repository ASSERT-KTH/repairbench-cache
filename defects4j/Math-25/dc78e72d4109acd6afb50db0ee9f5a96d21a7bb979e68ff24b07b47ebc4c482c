{
    "generation": "private void guessAOmega() {\n    double sx2 = 0;\n    double sy2 = 0;\n    double sxy = 0;\n    double sxz = 0;\n    double syz = 0;\n\n    double currentX = observations[0].getX();\n    double currentY = observations[0].getY();\n    double f2Integral = 0.0;\n    double fPrime2Integral = 0.0;\n    final double startX = currentX;\n\n    // Accumulate the integrals and the sums for the linear system.\n    for (int i = 1; i < observations.length; ++i) {\n        double previousX = currentX;\n        double previousY = currentY;\n        currentX = observations[i].getX();\n        currentY = observations[i].getY();\n\n        double dx = currentX - previousX;\n        if (dx == 0) {\n            throw new ZeroException();\n        }\n        double dy = currentY - previousY;\n\n        // Simpson-like formula for f\u00b2 and constant derivative assumption for f'\n        double f2StepIntegral = dx * (previousY * previousY +\n                                      previousY * currentY +\n                                      currentY * currentY) / 3.0;\n        double fPrime2StepIntegral = (dy * dy) / dx;\n\n        double x = currentX - startX;\n        f2Integral += f2StepIntegral;\n        fPrime2Integral += fPrime2StepIntegral;\n\n        sx2 += x * x;\n        sy2 += f2Integral * f2Integral;\n        sxy += x * f2Integral;\n        sxz += x * fPrime2StepIntegral;\n        syz += f2Integral * fPrime2StepIntegral;\n    }\n\n    double c1 = sy2 * sxz - sxy * syz;\n    double c2 = sxy * sxz - sx2 * syz;\n    double c3 = sx2 * sy2 - sxy * sxy;\n\n    // If the computed ratios are not positive (or degenerate) the linear\n    // model is ill-conditioned and we cannot produce sensible harmonic guesses.\n    if (c2 <= 0 || c3 <= 0 || (c1 / c2 < 0) || (c2 / c3 < 0)) {\n        throw new MathIllegalStateException(\"Unable to guess harmonic parameters: ill-conditioned system\");\n    }\n\n    a = FastMath.sqrt(c1 / c2);\n    omega = FastMath.sqrt(c2 / c3);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}