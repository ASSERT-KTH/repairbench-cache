{
    "generation": "  @Override\n  String toStringHelper(boolean forAnnotations) {\n    if (hasReferenceName()) {\n      return getReferenceName();\n    } else if (prettyPrint) {\n      // Don't pretty print recursively.\n      prettyPrint = false;\n\n      // Use a tree set so that the properties are sorted.\n      Set<String> propertyNames = Sets.newTreeSet();\n      for (ObjectType current = this;\n           current != null && !current.isNativeObjectType() &&\n               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;\n           current = current.getImplicitPrototype()) {\n        propertyNames.addAll(current.getOwnPropertyNames());\n      }\n\n      StringBuilder sb = new StringBuilder();\n      sb.append(\"{\");\n\n      int i = 0;\n      boolean exceededMax = false;\n      for (String property : propertyNames) {\n        if (i > 0) {\n          sb.append(\", \");\n        }\n\n        sb.append(property);\n        sb.append(\": \");\n        if (forAnnotations) {\n          sb.append(getPropertyType(property).toAnnotationString());\n        } else {\n          sb.append(getPropertyType(property).toString());\n        }\n\n        ++i;\n        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n          sb.append(\", ...\");\n          exceededMax = true;\n          break;\n        }\n      }\n\n      sb.append(\"}\");\n\n      prettyPrint = true;\n      if (exceededMax && forAnnotations) {\n        // If we exceeded the max and are generating an annotation string,\n        // rebuild the string without the limit.  This is because\n        // toString() is used for testing, and toAnnotationString() is\n        // used for code generation.\n        Set<String> allPropertyNames = Sets.newTreeSet();\n        for (ObjectType current = this;\n             current != null && !current.isNativeObjectType();\n             current = current.getImplicitPrototype()) {\n          allPropertyNames.addAll(current.getOwnPropertyNames());\n        }\n\n        sb = new StringBuilder();\n        sb.append(\"{\");\n\n        i = 0;\n        for (String property : allPropertyNames) {\n          if (i > 0) {\n            sb.append(\", \");\n          }\n\n          sb.append(property);\n          sb.append(\": \");\n          sb.append(getPropertyType(property).toAnnotationString());\n\n          ++i;\n        }\n\n        sb.append(\"}\");\n      }\n      return sb.toString();\n    } else {\n      return \"{...}\";\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}