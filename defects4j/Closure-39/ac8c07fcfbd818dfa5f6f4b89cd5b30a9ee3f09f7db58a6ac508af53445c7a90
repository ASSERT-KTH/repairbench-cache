{
    "generation": "@Override\nString toStringHelper(boolean forAnnotations) {\n  if (hasReferenceName()) {\n    return getReferenceName();\n  } else if (!forAnnotations && prettyPrint) {\n    // Don't pretty print recursively.\n    boolean oldPrettyPrint = prettyPrint;\n    prettyPrint = false;\n    \n    // Use a tree set so that the properties are sorted.\n    Set<String> propertyNames = Sets.newTreeSet();\n    for (ObjectType current = this;\n         current != null && !current.isNativeObjectType() &&\n         propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;\n         current = current.getImplicitPrototype()) {\n      propertyNames.addAll(current.getOwnPropertyNames());\n    }\n    \n    StringBuilder sb = new StringBuilder();\n    sb.append(\"{\");\n    \n    int i = 0;\n    for (String property : propertyNames) {\n      if (i > 0) {\n        sb.append(\", \");\n      }\n      \n      sb.append(property);\n      sb.append(\": \");\n      sb.append(getPropertyType(property).toString());\n      i++;\n      \n      // Only use the ellipsis if there are more properties than our limit.\n      if (i == MAX_PRETTY_PRINTED_PROPERTIES && propertyNames.size() > MAX_PRETTY_PRINTED_PROPERTIES) {\n        sb.append(\", ...\");\n        break;\n      }\n    }\n    \n    sb.append(\"}\");\n    prettyPrint = oldPrettyPrint;\n    return sb.toString();\n  } else {\n    // For annotations or when not doing pretty printing, list all properties.\n    Set<String> propertyNames = Sets.newTreeSet();\n    for (ObjectType current = this;\n         current != null && !current.isNativeObjectType();\n         current = current.getImplicitPrototype()) {\n      propertyNames.addAll(current.getOwnPropertyNames());\n    }\n    \n    StringBuilder sb = new StringBuilder();\n    sb.append(\"{\");\n    boolean first = true;\n    for (String property : propertyNames) {\n      if (!first) {\n        sb.append(\", \");\n      } else {\n        first = false;\n      }\n      \n      sb.append(property);\n      sb.append(\": \");\n      // When printing for annotations, delegate to the annotation-specific method.\n      sb.append(forAnnotations ? getPropertyType(property).toAnnotationString()\n                               : getPropertyType(property).toString());\n    }\n    sb.append(\"}\");\n    return sb.toString();\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}