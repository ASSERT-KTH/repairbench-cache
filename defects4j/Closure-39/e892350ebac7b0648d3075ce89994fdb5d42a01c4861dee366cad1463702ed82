{
    "generation": "@Override\nString toStringHelper(boolean forAnnotations) {\n  if (hasReferenceName()) {\n    return getReferenceName();\n  }\n\n  // Annotation\u2010mode: always show all properties, using toAnnotationString()\n  if (forAnnotations) {\n    Set<String> propertyNames = Sets.newTreeSet();\n    for (ObjectType current = this;\n         current != null && !current.isNativeObjectType();\n         current = current.getImplicitPrototype()) {\n      propertyNames.addAll(current.getOwnPropertyNames());\n    }\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"{\");\n    int i = 0;\n    for (String property : propertyNames) {\n      if (i > 0) {\n        sb.append(\", \");\n      }\n      sb.append(property).append(\": \")\n        .append(getPropertyType(property).toAnnotationString());\n      i++;\n    }\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n  // Pretty\u2010print mode (toString): show up to MAX_PRETTY_PRINTED_PROPERTIES, then \"...\"\n  if (prettyPrint) {\n    // prevent recursive pretty\u2010printing\n    prettyPrint = false;\n\n    Set<String> propertyNames = Sets.newTreeSet();\n    for (ObjectType current = this;\n         current != null && !current.isNativeObjectType() &&\n             propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;\n         current = current.getImplicitPrototype()) {\n      propertyNames.addAll(current.getOwnPropertyNames());\n    }\n\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"{\");\n    int i = 0;\n    for (String property : propertyNames) {\n      if (i > 0) {\n        sb.append(\", \");\n      }\n      sb.append(property).append(\": \")\n        .append(getPropertyType(property).toString());\n      i++;\n      if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n        sb.append(\", ...\");\n        break;\n      }\n    }\n    sb.append(\"}\");\n\n    // restore prettyPrint for outer calls\n    prettyPrint = true;\n    return sb.toString();\n  }\n\n  // Fallback: collapsed form\n  return \"{...}\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}