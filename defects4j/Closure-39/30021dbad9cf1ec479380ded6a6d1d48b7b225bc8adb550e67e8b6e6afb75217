{
    "generation": "@Override\nString toStringHelper(boolean forAnnotations) {\n  if (hasReferenceName()) {\n    return getReferenceName();\n  } else if (prettyPrint) {\n    prettyPrint = false;\n\n    try {\n      Set<String> propertyNames = Sets.newTreeSet();\n      int count = 0;\n      for (ObjectType current = this;\n           current != null && !current.isNativeObjectType();\n           current = current.getImplicitPrototype()) {\n        for (String property : current.getOwnPropertyNames()) {\n          if (count >= MAX_PRETTY_PRINTED_PROPERTIES) {\n            break;\n          }\n          propertyNames.add(property);\n          count++;\n        }\n      }\n\n      StringBuilder sb = new StringBuilder();\n      sb.append(\"{\");\n\n      boolean truncated = false;\n      int i = 0;\n      for (String property : propertyNames) {\n        if (i > 0) {\n          sb.append(\", \");\n        }\n\n        sb.append(property);\n        sb.append(\": \");\n        Object.peType type = getPropertyType(property);\n        sb.append(type.toString());\n\n        i++;\n        if (i == MAX_PRETTY_PRINTED_PROPERTIES - 1) {\n          // Check if there are more properties not added yet\n          if (count > MAX_PRETTY_PRINTED_PROPERTIES - 1) {\n            sb.append(\", ...\");\n            truncated = true;\n          }\n          break;\n        }\n      }\n\n      if (!truncated && propertyNames.size() >= MAX_PRETTY_PRINTED_PROPERTIES) {\n        sb.append(\"...\");\n      }\n\n      sb.append(\"}\");\n      return sb.toString();\n    } finally {\n      prettyPrint = true;\n    }\n  } else {\n    if (forAnnotations) {\n      return \"{...}\";\n    }\n    return \"{...}\";\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}