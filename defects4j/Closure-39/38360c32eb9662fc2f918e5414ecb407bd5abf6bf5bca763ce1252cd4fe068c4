{
    "generation": "  @Override\n  String toStringHelper(boolean forAnnotations) {\n    if (hasReferenceName()) {\n      return getReferenceName();\n    } else if (forAnnotations) {\n      // Collect all properties for annotation string, no truncation\n      Set<String> propertyNames = Sets.newTreeSet();\n      for (ObjectType current = this;\n           current != null && !current.isNativeObjectType();\n           current = current.getImplicitPrototype()) {\n        propertyNames.addAll(current.getOwnPropertyNames());\n      }\n\n      StringBuilder sb = new StringBuilder();\n      sb.append(\"{\");\n\n      boolean first = true;\n      for (String property : propertyNames) {\n        if (!first) {\n          sb.append(\", \");\n        }\n        first = false;\n        sb.append(property);\n        sb.append(\": \");\n        sb.append(getPropertyType(property).toStringHelper(true));\n      }\n\n      sb.append(\"}\");\n      return sb.toString();\n    } else if (prettyPrint) {\n      // Don't pretty print recursively\n      boolean originalPrettyPrint = prettyPrint;\n      prettyPrint = false;\n\n      Set<String> propertyNames = Sets.newTreeSet();\n      int max = MAX_PRETTY_PRINTED_PROPERTIES;\n\n      // Collect up to max + 1 properties to determine if there are more\n      for (ObjectType current = this;\n           current != null && !current.isNativeObjectType() && propertyNames.size() <= max;\n           current = current.getImplicitPrototype()) {\n        propertyNames.addAll(current.getOwnPropertyNames());\n      }\n\n      boolean hasMore = propertyNames.size() > max;\n      // Truncate to max properties\n      Set<String> truncated = Sets.newTreeSet();\n      int count = 0;\n      for (String prop : propertyNames) {\n        if (count >= max) {\n          break;\n        }\n        truncated.add(prop);\n        count++;\n      }\n      propertyNames = truncated;\n\n      StringBuilder sb = new StringBuilder();\n      sb.append(\"{\");\n\n      int i = 0;\n      for (String property : propertyNames) {\n        if (i > 0) {\n          sb.append(\", \");\n        }\n        sb.append(property);\n        sb.append(\": \");\n        sb.append(getPropertyType(property).toString());\n        i++;\n      }\n\n      if (hasMore) {\n        if (i > 0) {\n          sb.append(\", \");\n        }\n        sb.append(\"...\");\n      }\n\n      sb.append(\"}\");\n\n      prettyPrint = originalPrettyPrint;\n      return sb.toString();\n    } else {\n      return \"{...}\";\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}