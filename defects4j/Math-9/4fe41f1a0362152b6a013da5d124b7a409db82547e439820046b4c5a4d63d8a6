{
    "generation": "    /** Get a line with reversed direction.\n     * @return a new instance, with reversed direction\n     */\n    public Line revert() {\n        // The original implementation using new Line(zero, zero.subtract(direction))\n        // suffered from numerical inaccuracies. The Line(p1, p2) constructor\n        // calculates the direction as (p2-p1).normalize(). If p2-p1 is -direction\n        // (where direction is supposed to be a unit vector), (-direction).normalize()\n        // might not be numerically identical to -direction due to floating-point\n        // computation of the norm potentially not being exactly 1.0, leading to\n        // small errors after division.\n\n        // To avoid this, we choose two points p1 and p2 on the line such that\n        // the vector p2-p1 is simple to normalize accurately.\n        // Let p1 = zero + direction\n        // Let p2 = zero - direction\n        // Then p2-p1 = (zero - direction) - (zero + direction) = -2 * direction.\n        // The norm of this vector is ||-2 * direction|| = 2 * ||direction|| = 2.0 (since direction is normalized).\n        // The constructor will calculate the new direction as (-2 * direction).normalize()\n        // which involves dividing by the norm 2.0. This division (-2 * direction) / 2.0\n        // should yield exactly -direction numerically.\n\n        // This also ensures the 'zero' point of the line remains the same:\n        // The constructor calculates zero as p1 - p1.dotProduct(newDirection) * newDirection\n        // newDirection = -direction\n        // coeff = p1.dotProduct(newDirection) = (zero + direction).dotProduct(-direction)\n        //       = zero.dotProduct(-direction) + direction.dotProduct(-direction) = 0 - 1 = -1\n        // newZero = p1 - coeff * newDirection = (zero + direction) - (-1) * (-direction)\n        //         = zero + direction - direction = zero\n        // So the resulting line has the correct zero point (this.zero) and direction (-this.direction).\n\n        final Vector3D p1 = zero.add(direction);\n        final Vector3D p2 = zero.subtract(direction);\n        final Line reverted = new Line(p1, p2);\n        return reverted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}