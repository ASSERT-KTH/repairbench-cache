{
    "generation": "    /** Get a line with reversed direction.\n     * @return a new instance, with reversed direction\n     */\n    public Line revert() {\n        // A line is defined by a point (zero) and a normalized direction vector (direction).\n        // To revert the line's direction, we should create a new line passing through the\n        // same point 'zero' but with the negated direction vector.\n        // The Line constructor takes a point and a direction vector, and it internally\n        // normalizes the provided direction vector. Since 'this.direction' is already\n        // a normalized vector, 'this.direction.negate()' will also be a normalized vector.\n        // Using 'direction.negate()' directly avoids unnecessary arithmetic operations\n        // involving the 'zero' point (like zero.subtract(direction)) before normalization,\n        // which can sometimes introduce tiny floating-point inaccuracies, leading to test failures\n        // like the one observed due to precision differences.\n        final Line reverted = new Line(zero, direction.negate());\n        return reverted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}