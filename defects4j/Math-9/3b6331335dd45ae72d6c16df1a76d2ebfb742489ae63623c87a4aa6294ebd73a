{
    "generation": "    /** Get a line with reversed direction.\n     * @return a new instance, with reversed direction\n     */\n    public Line revert() {\n        // A Line object is constructed using two points (p1, p2) and a tolerance.\n        // The constructor calculates its internal direction as (p2 - p1).normalize().\n        // To revert the line's direction, we want the new line's direction to be -this.direction.\n        //\n        // We can choose 'this.zero' (the current line's origin) as p1 for the new line.\n        // To get a direction of -this.direction, p2 must be 'this.zero.subtract(this.direction)'.\n        // This is because ( (this.zero - this.direction) - this.zero ).normalize() simplifies to (-this.direction).normalize().\n        //\n        // The original code was missing the 'tolerance' argument required by the Line constructor.\n        // This is the primary fix. We pass 'this.tolerance' to the constructor.\n        final Line reverted = new Line(zero, zero.subtract(direction), tolerance);\n        return reverted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}