{
    "generation": "    /** Get a line with reversed direction.\n     * @return a new instance, with reversed direction\n     */\n    public Line revert() {\n        // The reverted line should have the same origin point (closest to the coordinate system origin)\n        // but the opposite direction vector.\n        // The original implementation used new Line(zero, zero.subtract(direction)).\n        // The Line(p1, p2) constructor calculates the direction as (p2 - p1).normalize().\n        // In the original code, this was ((zero - direction) - zero).normalize().\n        // Subtracting zero (which can have large coordinates) after subtracting direction\n        // from it can lead to loss of precision, especially if 'zero' is far from the origin.\n        // This caused the resulting normalized direction to deviate slightly from '-direction'.\n\n        // A more numerically stable way to construct the reversed line using the Line(p1, p2)\n        // constructor is to choose two points, pA and pB, on the line such that pB - pA is\n        // parallel to -direction and the calculation is less prone to precision loss.\n        // We can choose points symmetric around the line's origin 'zero':\n        // pA = zero + direction\n        // pB = zero - direction\n        // Then the vector pB - pA = (zero - direction) - (zero + direction) = -2 * direction.\n        // The constructor Line(pA, pB) will compute the direction as (pB - pA).normalize(),\n        // which simplifies to (-2 * direction).normalize(). Since 'direction' is already\n        // normalized, this accurately yields '-direction'.\n        // The constructor also re-calculates the line's origin ('zero' field), and using\n        // pA and -direction, it will correctly compute the original 'zero' point.\n        final Vector3D p1 = zero.add(direction);\n        final Vector3D p2 = zero.subtract(direction);\n        final Line reverted = new Line(p1, p2);\n        return reverted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}