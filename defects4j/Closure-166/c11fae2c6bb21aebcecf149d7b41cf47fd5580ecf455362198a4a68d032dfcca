{
    "generation": "@Override\npublic void matchConstraint(JSType constraint) {\n    // We only want to match constraints on anonymous types.\n    if (hasReferenceName()) {\n        return;\n    }\n\n    // Handle the case where the constraint is a record type.\n    if (constraint.isRecordType()) {\n        matchRecordTypeConstraint(constraint.toObjectType());\n    } \n    // Also handle the case where the constraint is a union containing record types.\n    else if (constraint.isUnionType()) {\n        for (JSType type : constraint.getTypes()) {\n            if (type.isRecordType()) {\n                matchRecordTypeConstraint(type.toObjectType());\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}