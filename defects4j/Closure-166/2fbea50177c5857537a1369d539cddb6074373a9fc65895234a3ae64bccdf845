{
    "generation": "@Override\npublic void matchConstraint(JSType constraint) {\n  // We only want to match constraints on anonymous types.\n  if (hasReferenceName()) {\n    return;\n  }\n\n  if (constraint.isUnionType()) {\n    for (JSType alternate : constraint.toMaybeUnionType().getAlternates()) {\n      matchConstraint(alternate);\n    }\n    return;\n  }\n\n  // Handle the case where the constraint object is a record type.\n  if (constraint.isRecordType()) {\n    matchRecordTypeConstraint(constraint.toObjectType());\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}