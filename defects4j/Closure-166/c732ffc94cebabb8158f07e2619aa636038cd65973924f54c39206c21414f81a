{
    "generation": "  @Override\n  public void matchConstraint(JSType constraint) {\n    // We only want to match constraints on anonymous types.\n    if (hasReferenceName()) {\n      return;\n    }\n\n    // Handle union types by checking each constituent type.\n    JSType restricted = constraint.restrictByNotNullOrUndefined();\n    UnionType unionType = restricted.toMaybeUnionType();\n    if (unionType != null) {\n      for (JSType alt : unionType.getAlternates()) {\n        if (alt.isRecordType()) {\n          matchRecordTypeConstraint(alt.toObjectType());\n        }\n      }\n    } else if (restricted.isRecordType()) {\n      matchRecordTypeConstraint(restricted.toObjectType());\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}