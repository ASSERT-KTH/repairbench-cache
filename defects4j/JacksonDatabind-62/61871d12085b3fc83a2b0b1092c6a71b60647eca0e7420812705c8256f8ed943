{
    "generation": "    @Override\n    public CollectionDeserializer createContextual(DeserializationContext ctxt,\n            BeanProperty property) throws JsonMappingException\n    {\n        JsonDeserializer<Object> delegateDeser = null;\n        ValueInstantiator instantiator = _valueInstantiator;\n        if (instantiator != null) {\n            // Contextualize the value instantiator to pick up mix-in annotations\n            instantiator = instantiator.createContextual(ctxt, property);\n            if (instantiator.canCreateUsingDelegate()) {\n                JavaType delegateType = instantiator.getDelegateType(ctxt.getConfig());\n                if (delegateType == null) {\n                    throw new IllegalArgumentException(\"Invalid delegate-creator definition for \"+_collectionType\n                            +\": value instantiator (\"+instantiator.getClass().getName()\n                            +\") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'\");\n                }\n                delegateDeser = findDeserializer(ctxt, delegateType, property);\n            }\n        }\n        Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,\n                JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n        JsonDeserializer<?> valueDeser = _valueDeserializer;\n        valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);\n        final JavaType vt = _collectionType.getContentType();\n        if (valueDeser == null) {\n            valueDeser = ctxt.findContextualValueDeserializer(vt, property);\n        } else {\n            valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, vt);\n        }\n        TypeDeserializer valueTypeDeser = _valueTypeDeserializer;\n        if (valueTypeDeser != null) {\n            valueTypeDeser = valueTypeDeser.forProperty(property);\n        }\n        // Ensure the contextualized instantiator is used\n        CollectionDeserializer deser = withResolved(delegateDeser, valueDeser, valueTypeDeser, unwrapSingle);\n        if (instantiator != _valueInstantiator) {\n            deser = deser.withValueInstantiator(instantiator);\n        }\n        return deser;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}