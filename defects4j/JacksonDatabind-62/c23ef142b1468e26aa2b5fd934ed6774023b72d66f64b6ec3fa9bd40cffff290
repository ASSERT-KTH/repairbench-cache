{
    "generation": "@Override\npublic CollectionDeserializer createContextual(DeserializationContext ctxt,\n        BeanProperty property) throws JsonMappingException\n{\n    // Per [databind#4032], handle case where _valueInstantiator is for delegating instantiation but no delegateType registered\n    JsonDeserializer<Object> delegateDeser = null;\n\n    JavaType delegateType = null;\n    if (_valueInstantiator != null) {\n        if (_valueInstantiator.canCreateUsingDelegate()) {\n            delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());\n            if (delegateType == null) {\n                throw new IllegalArgumentException(\"Invalid delegate-creator definition for \"+_collectionType\n                        +\": value instantiator (\"+_valueInstantiator.getClass().getName()\n                        +\") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'\");\n            }\n            delegateDeser = findDeserializer(ctxt, delegateType, property);\n        }\n    }\n    // [databind#1043]: allow per-property allow-wrapping of single overrides:\n    Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,\n            JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n    // also, often value deserializer is resolved here:\n    JsonDeserializer<?> valueDeser = _valueDeserializer;\n    \n    valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);\n    final JavaType vt = _collectionType.getContentType();\n    if (valueDeser == null) {\n        valueDeser = ctxt.findContextualValueDeserializer(vt, property);\n    } else {\n        valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, vt);\n    }\n    TypeDeserializer valueTypeDeser = _valueTypeDeserializer;\n    if (valueTypeDeser != null) {\n        valueTypeDeser = valueTypeDeser.forProperty(property);\n    }\n\n    // Fix: for classes like Collections.unmodifiableXxx, we should see if delegate creator exists\n    // and if NO default creator, prefer a vanilla delegating deserializer\n    if ((_valueInstantiator != null) \n            && _valueInstantiator.canCreateUsingDelegate()\n            && !_valueInstantiator.canCreateUsingDefault()\n            && delegateDeser != null) {\n        // In particular, avoid element/content deserialization and simply delegate\n        return new CollectionDeserializer(_collectionType, delegateDeser,\n                null, null, null,\n                _valueInstantiator, null, unwrapSingle,\n                _acceptString, _acceptBoolean, _acceptInt, _acceptDouble);\n    }\n\n    return withResolved(delegateDeser, valueDeser, valueTypeDeser, unwrapSingle);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}