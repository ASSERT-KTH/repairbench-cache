{
    "generation": "    @Override\n    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (hasHitEOF || entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if (currEntry == null) {\n            throw new IllegalStateException(\"No current tar entry\");\n        }\n\n        numToRead = Math.min(numToRead, available());\n\n        // Fix: Check if we're reading beyond the entry size\n        long remainingInEntry = entrySize - entryOffset;\n        if (numToRead > remainingInEntry) {\n            if (remainingInEntry == 0) {\n                return -1;\n            }\n            numToRead = (int) remainingInEntry;\n        }\n\n        totalRead = is.read(buf, offset, numToRead);\n        if (totalRead == -1) {\n            hasHitEOF = true;\n            // Check if we hit EOF but haven't read enough bytes\n            if (entryOffset < entrySize) {\n                throw new IOException(\"Truncated tar archive entry\");\n            }\n        } else {\n            entryOffset += totalRead;\n            count(totalRead);\n        }\n\n        return totalRead == -1 && entryOffset >= entrySize ? -1 : totalRead;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}