{
    "generation": "@Override\npublic int read(byte[] buf, int offset, int numToRead) throws IOException {\n    if (hasHitEOF || entryOffset >= entrySize) {\n        return -1;\n    }\n\n    if (currEntry == null) {\n        throw new IllegalStateException(\"No current tar entry\");\n    }\n\n    numToRead = Math.min(numToRead, available());\n\n    int totalRead = is.read(buf, offset, numToRead);\n\n    if (totalRead == -1) {\n        // If we haven't finished reading the entry, but get EOF from stream, this is truncated archive\n        if (entryOffset < entrySize) {\n            throw new IOException(\"Truncated TAR archive; expected entry size: \" + entrySize + \" but got: \" + entryOffset);\n        }\n        hasHitEOF = true;\n        return -1;\n    } else {\n        entryOffset += totalRead;\n        count(totalRead);\n        return totalRead;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}