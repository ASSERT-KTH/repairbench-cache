{
    "generation": "    @Override\n    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n    \tint totalRead = 0;\n\n        if (hasHitEOF || entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if (currEntry == null) {\n            throw new IllegalStateException(\"No current tar entry\");\n        }\n\n        numToRead = Math.min(numToRead, available());\n        \n        totalRead = is.read(buf, offset, numToRead);\n        count(totalRead); // This calls ArchiveInputStream.count, which correctly handles totalRead == -1\n\n        if (totalRead == -1) {\n            hasHitEOF = true;\n            // Check for truncation: If we hit EOF on the underlying stream\n            // but still had bytes remaining in the current entry.\n            // This means the archive entry was truncated.\n            if (entryOffset < entrySize) {\n                throw new IOException(\"Truncated TAR archive entry. Expected \" + entrySize + \" bytes, got \" + entryOffset);\n            }\n        } else {\n            entryOffset += totalRead;\n        }\n\n        return totalRead;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}