{
    "generation": "@Override\npublic int read(byte[] buf, int offset, int numToRead) throws IOException {\n    if (hasHitEOF || entryOffset >= entrySize) {\n        return -1;\n    }\n    if (currEntry == null) {\n        throw new IllegalStateException(\"No current tar entry\");\n    }\n\n    // Do not read past the end of this entry\n    numToRead = Math.min(numToRead, available());\n    int totalRead = is.read(buf, offset, numToRead);\n\n    // If the underlying stream ends early, that's a truncated entry\n    if (totalRead == -1) {\n        if (entryOffset < entrySize) {\n            throw new IOException(\"Truncated TAR archive entry: expected \"\n                + entrySize + \" bytes, but only read \" + entryOffset + \" bytes.\");\n        }\n        hasHitEOF = true;\n        return -1;\n    }\n\n    count(totalRead);\n    entryOffset += totalRead;\n    return totalRead;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}