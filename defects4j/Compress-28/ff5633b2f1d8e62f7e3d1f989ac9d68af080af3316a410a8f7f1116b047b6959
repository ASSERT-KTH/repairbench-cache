{
    "generation": "@Override\npublic int read(byte[] buf, int offset, int numToRead) throws IOException {\n    if (hasHitEOF || entryOffset >= entrySize) {\n        return -1;\n    }\n    if (currEntry == null) {\n        throw new IllegalStateException(\"No current tar entry\");\n    }\n    // never read past the declared entry size\n    long remaining = entrySize - entryOffset;\n    if (remaining <= 0) {\n        return -1;\n    }\n    // bound the read to the entry's remaining bytes\n    int toRead = (int) Math.min(numToRead, remaining);\n    int totalRead = is.read(buf, offset, toRead);\n    if (totalRead == -1) {\n        hasHitEOF = true;\n        // if we hit EOF before reading all the declared bytes, it's truncated\n        throw new IOException(\"Truncated TAR archive entry '\"\n                + currEntry.getName() + \"', expected \"\n                + entrySize + \" bytes but only read \"\n                + entryOffset + \" bytes\");\n    }\n    count(totalRead);\n    entryOffset += totalRead;\n    return totalRead;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}