{
    "generation": "JSType type = getJSType(n);\nif (dereference) {\n  ObjectType dereferenced = type.dereference();\n  if (dereferenced != null) {\n    type = dereferenced;\n  }\n}\nif (type.isFunctionPrototypeType() ||\n    (type.toObjectType() != null &&\n     type.toObjectType().getConstructor() != null)) {\n  return type.toString();\n}\nString qualifiedName = n.getQualifiedName();\nif (qualifiedName != null) {\n  return qualifiedName;\n} else if (type.isFunctionType()) {\n  return \"function\";\n} else {\n  return type.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}