{
    "generation": "    /**\n     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. \n     * \n     * @param field\n     * @return\n     */\n    public Class<?> getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actualType = ((ParameterizedType) generic).getActualTypeArguments()[0];\n            if (actualType instanceof Class) {\n                return (Class<?>) actualType;\n            } else if (actualType instanceof ParameterizedType) {\n                // Handle nested generics by returning the raw type\n                return (Class<?>) ((ParameterizedType) actualType).getRawType();\n            }\n        }\n        \n        return Object.class;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}