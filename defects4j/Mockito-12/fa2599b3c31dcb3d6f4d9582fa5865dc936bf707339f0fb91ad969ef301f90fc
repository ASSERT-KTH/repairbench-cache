{
    "generation": "    /**\n     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.\n     *\n     * @param field\n     * @return\n     */\n    public Class<?> getGenericType(Field field) {\n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n            if (actual instanceof Class) {\n                return (Class<?>) actual;\n            } else if (actual instanceof ParameterizedType) {\n                // Handle nested generic types by getting the raw type\n                return (Class<?>) ((ParameterizedType) actual).getRawType();\n            }\n            // For other cases, return Object.class\n            return Object.class;\n        }\n        return Object.class;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}