{
    "generation": "    /**\n     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. \n     * \n     * @param field\n     * @return\n     */\n    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic instanceof ParameterizedType) {\n            Type[] actualTypeArgs = ((ParameterizedType) generic).getActualTypeArguments();\n            if (actualTypeArgs.length == 0) {\n                return Object.class;\n            }\n            Type actual = actualTypeArgs[0];\n            if (actual instanceof ParameterizedType) {\n                Type rawType = ((ParameterizedType) actual).getRawType();\n                if (rawType instanceof Class) {\n                    return (Class) rawType;\n                }\n            } else if (actual instanceof Class) {\n                return (Class) actual;\n            }\n        }\n        return Object.class;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}