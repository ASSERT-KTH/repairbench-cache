{
    "generation": "@Override\nprotected void iterateSimplex(final Comparator<RealPointValuePair> comparator)\n    throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {\n\n    while (true) {\n\n        // count one more simplex iteration\n        incrementIterationsCounter();\n\n        // keep a handle on the current simplex\n        final RealPointValuePair[] original = simplex;\n        final RealPointValuePair best     = original[0];\n\n        // 1) reflection\n        final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);\n        if (comparator.compare(reflected, best) < 0) {\n            // 1a) expansion\n            final RealPointValuePair[] reflectedSimplex = simplex;\n            final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);\n            // if the expansion did not improve further, keep the reflected\n            if (comparator.compare(reflected, expanded) <= 0) {\n                simplex = reflectedSimplex;\n            }\n            // else keep the expanded\n            return;\n        }\n\n        // 2) contraction\n        final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);\n        if (comparator.compare(contracted, best) < 0) {\n            // contraction succeeded, keep it\n            return;\n        }\n\n        // 3) shrink: move all points toward the best\n        simplex = original;\n        for (int i = 1; i < simplex.length; i++) {\n            final double[] xBest = best.getPoint();\n            final double[] xOrig = original[i].getPoint();\n            final double[] xNew  = new double[xBest.length];\n            for (int j = 0; j < xBest.length; j++) {\n                xNew[j] = xBest[j] + gamma * (xOrig[j] - xBest[j]);\n            }\n            simplex[i] = new RealPointValuePair(xNew, computeObjectiveValue(xNew));\n        }\n        // re-order after shrink\n        Arrays.sort(simplex, comparator);\n\n        // now go back and try reflection/expansion/contraction on the shrunk simplex\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}