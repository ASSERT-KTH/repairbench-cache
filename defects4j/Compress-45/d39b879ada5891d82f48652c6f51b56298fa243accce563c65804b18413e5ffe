{
    "generation": "public static int formatLongOctalOrBinaryBytes(\n    final long value, final byte[] buf, final int offset, final int length) {\n\n    final long maxAsOctalChar = length == TarConstants.UIDLEN ? TarConstants.MAXID : TarConstants.MAXSIZE;\n\n    final boolean negative = value < 0;\n    if (!negative && value <= maxAsOctalChar) {\n        return formatLongOctalBytes(value, buf, offset, length);\n    }\n\n    if (length < 9) {\n        // The 8 byte binary format (for length == 8) is special and handled by formatLongBinary\n        formatLongBinary(value, buf, offset, length, negative);\n        return offset + length;\n    } else {\n        formatBigIntegerBinary(value, buf, offset, length, negative);\n        buf[offset] = (byte) (negative ? 0xff : 0x80);\n        return offset + length;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}