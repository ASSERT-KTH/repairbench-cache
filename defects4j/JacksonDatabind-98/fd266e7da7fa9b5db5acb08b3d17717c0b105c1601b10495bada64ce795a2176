{
    "generation": "public Object complete(JsonParser p, DeserializationContext ctxt,\n        PropertyValueBuffer buffer, PropertyBasedCreator creator)\n    throws IOException\n{\n    // first: deserialize all buffered values\n    final int len = _properties.length;\n    Object[] values = new Object[len];\n    for (int i = 0; i < len; ++i) {\n        String typeId = _typeIds[i];\n        final ExtTypedProperty extProp = _properties[i];\n        if (typeId == null) {\n            // no type id seen, no value either? skip\n            if (_tokens[i] == null) {\n                continue;\n            }\n            // value seen but no type: maybe default\n            if (!extProp.hasDefaultType()) {\n                ctxt.reportInputMismatch(_beanType,\n                    \"Missing external type id property '%s'\",\n                    extProp.getTypePropertyName());\n            } else {\n                typeId = extProp.getDefaultTypeId();\n            }\n        } else if (_tokens[i] == null) {\n            // type id seen but no value\n            SettableBeanProperty prop = extProp.getProperty();\n            ctxt.reportInputMismatch(_beanType,\n                \"Missing property '%s' for external type id '%s'\",\n                prop.getName(), extProp.getTypePropertyName());\n        }\n\n        // deserialize the real property value now that we have a type id\n        values[i] = _deserialize(p, ctxt, i, typeId);\n\n        // if this property is a creator parameter, assign it now\n        SettableBeanProperty prop = extProp.getProperty();\n        if (prop.getCreatorIndex() >= 0) {\n            buffer.assignParameter(prop, values[i]);\n\n            // also: if the type\u2010id itself is a creator parameter, we must\n            // re\u2013deserialize that string into the right type (e.g. Enum)\n            SettableBeanProperty typeProp = extProp.getTypeProperty();\n            if (typeProp != null && typeProp.getCreatorIndex() >= 0) {\n                // wrap raw String in a small TokenBuffer so we can\n                // feed it to the property's deserializer\n                TokenBuffer tb = new TokenBuffer(p);\n                tb.writeString(typeId);\n                JsonParser tbp = tb.asParser(p);\n                tbp.nextToken();\n                Object idValue = typeProp.deserialize(tbp, ctxt);\n                buffer.assignParameter(typeProp, idValue);\n            }\n        }\n    }\n\n    // build the bean via the creator\n    Object bean = creator.build(ctxt, buffer);\n\n    // finally, assign any remaining non-creator properties\n    for (int i = 0; i < len; ++i) {\n        SettableBeanProperty prop = _properties[i].getProperty();\n        if (prop.getCreatorIndex() < 0) {\n            prop.set(bean, values[i]);\n        }\n    }\n    return bean;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}