{
    "generation": "@Override\npublic Object complete(JsonParser p, DeserializationContext ctxt,\n        PropertyValueBuffer buffer, PropertyBasedCreator creator)\n    throws IOException\n{\n    final int len = _properties.length;\n    Object[] values = new Object[len];\n    for (int i = 0; i < len; ++i) {\n        String typeId = _typeIds[i];\n        final ExtTypedProperty extProp = _properties[i];\n        if (typeId == null) {\n            // no type id; maybe we never got any tokens either:\n            if (_tokens[i] == null) {\n                continue;\n            }\n            // but if we did, we must have a default impl\n            if (!extProp.hasDefaultType()) {\n                ctxt.reportInputMismatch(_beanType,\n                        \"Missing external type id property '%s'\",\n                        extProp.getTypePropertyName());\n            } else {\n                typeId = extProp.getDefaultTypeId();\n            }\n        } else if (_tokens[i] == null) {\n            // have type id but no value\n            SettableBeanProperty prop = extProp.getProperty();\n            ctxt.reportInputMismatch(_beanType,\n                    \"Missing property '%s' for external type id '%s'\",\n                    prop.getName(), extProp.getTypePropertyName());\n        }\n        // deserialize the real value\n        values[i] = _deserialize(p, ctxt, i, typeId);\n\n        // if it's a creator\u2010argument, assign it\n        final SettableBeanProperty prop = extProp.getProperty();\n        if (prop.getCreatorIndex() >= 0) {\n            buffer.assignParameter(prop, values[i]);\n\n            // also: possibly the type\u2010id itself is a creator\u2010argument\n            SettableBeanProperty typeProp = extProp.getTypeProperty();\n            if (typeProp != null && typeProp.getCreatorIndex() >= 0) {\n                // if the type\u2010id property is not simply String, run it through its deserializer\n                Object idValue = typeId;\n                Class<?> raw = typeProp.getType().getRawClass();\n                if (!String.class.equals(raw)) {\n                    // wrap the textual type id in a small TokenBuffer so we can\n                    // hand it to the property's deserializer\n                    com.fasterxml.jackson.databind.util.TokenBuffer tb = new com.fasterxml.jackson.databind.util.TokenBuffer(p);\n                    tb.writeString(typeId);\n                    JsonParser typeParser = tb.asParserOnFirstToken();\n                    idValue = typeProp.getValueDeserializer().deserialize(typeParser, ctxt);\n                }\n                buffer.assignParameter(typeProp, idValue);\n            }\n        }\n    }\n    // build the bean using creator\n    Object bean = creator.build(ctxt, buffer);\n    // and finally set any non\u2010creator properties\n    for (int i = 0; i < len; ++i) {\n        SettableBeanProperty prop = _properties[i].getProperty();\n        if (prop.getCreatorIndex() < 0) {\n            prop.set(bean, values[i]);\n        }\n    }\n    return bean;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}