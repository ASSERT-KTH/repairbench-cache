{
    "generation": "private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n        StringBuffer appendTo, boolean escapingOn) {\n    int start = pos.getIndex();\n    char[] c = pattern.toCharArray();\n    if (escapingOn && c[start] == QUOTE) {\n        return appendTo == null ? null : appendTo.append(QUOTE);\n    }\n    int lastHold = start;\n    int length = pattern.length();\n    for (int i = pos.getIndex(); i < length; i++) {\n        if (escapingOn && i + ESCAPED_QUOTE.length() <= length && pattern.charAt(i) == ESCAPE_CHAR && pattern.charAt(i + 1) == QUOTE) {\n            if (appendTo != null) {\n                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n            }\n            pos.setIndex(i + ESCAPED_QUOTE.length());\n            lastHold = pos.getIndex();\n            i += ESCAPED_QUOTE.length() - 1; // Skip the escaped quote\n            continue;\n        }\n        switch (c[pos.getIndex()]) {\n            case QUOTE:\n                next(pos);\n                return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n            default:\n                next(pos);\n        }\n    }\n    throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}