{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        if (escapingOn && start < pattern.length() && c[start] == QUOTE) {\n            return appendTo == null ? null : appendTo.append(QUOTE);\n        }\n        int lastHold = start;\n        int patternLength = pattern.length();\n        while (pos.getIndex() < patternLength) {\n            int currentIndex = pos.getIndex();\n            if (escapingOn) {\n                int escapedQuoteLength = ESCAPED_QUOTE.length();\n                if (currentIndex + escapedQuoteLength <= patternLength) {\n                    String substring = pattern.substring(currentIndex, currentIndex + escapedQuoteLength);\n                    if (ESCAPED_QUOTE.equals(substring)) {\n                        appendTo.append(c, lastHold, currentIndex - lastHold).append(QUOTE);\n                        pos.setIndex(currentIndex + escapedQuoteLength);\n                        lastHold = pos.getIndex();\n                        continue;\n                    }\n                }\n            }\n            if (c[currentIndex] == QUOTE) {\n                next(pos);\n                return appendTo == null ? null : appendTo.append(c, lastHold, currentIndex - lastHold);\n            } else {\n                next(pos);\n            }\n        }\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}