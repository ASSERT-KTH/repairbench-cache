{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        \n        if (start >= pattern.length() || c[start] != QUOTE) {\n            throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n        }\n        next(pos); // Consume opening quote\n        int lastHold = pos.getIndex();\n\n        for (int i = pos.getIndex(); i < pattern.length(); i++) {\n            if (escapingOn && i + ESCAPED_QUOTE.length() <= pattern.length() \n                    && pattern.startsWith(ESCAPED_QUOTE, i)) {\n                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n                pos.setIndex(i + ESCAPED_QUOTE.length());\n                i = pos.getIndex() - 1; // Adjust for loop increment\n                lastHold = pos.getIndex();\n                continue;\n            }\n            if (c[i] == QUOTE) {\n                appendTo.append(c, lastHold, i - lastHold);\n                pos.setIndex(i + 1); // Consume closing quote\n                return appendTo;\n            }\n            next(pos);\n        }\n\n        throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}