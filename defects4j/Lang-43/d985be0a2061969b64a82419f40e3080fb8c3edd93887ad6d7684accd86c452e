{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        if (escapingOn && start < pattern.length() && c[start] == QUOTE) {\n            return appendTo == null ? null : appendTo.append(QUOTE);\n        }\n        int lastHold = start;\n        final int length = pattern.length();\n        final String escapedQuote = ESCAPED_QUOTE;\n        final int escapedQuoteLength = escapedQuote.length();\n        while (pos.getIndex() < length) {\n            int currentIndex = pos.getIndex();\n            if (escapingOn && (currentIndex + escapedQuoteLength <= length)\n                    && pattern.startsWith(escapedQuote, currentIndex)) {\n                appendTo.append(c, lastHold, currentIndex - lastHold).append(QUOTE);\n                pos.setIndex(currentIndex + escapedQuoteLength);\n                lastHold = pos.getIndex();\n            } else {\n                char currentChar = c[currentIndex];\n                if (currentChar == QUOTE) {\n                    appendTo.append(c, lastHold, currentIndex - lastHold);\n                    next(pos);\n                    return appendTo == null ? null : appendTo;\n                } else {\n                    next(pos);\n                }\n            }\n        }\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}