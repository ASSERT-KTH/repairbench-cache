{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        if (start >= pattern.length() || c[start] != QUOTE) {\n            throw new IllegalArgumentException(\"Not starting with quote at position \" + start);\n        }\n        next(pos); // Consume the opening quote\n        int lastHold = pos.getIndex();\n\n        while (pos.getIndex() < pattern.length()) {\n            if (escapingOn && pattern.substring(pos.getIndex()).startsWith(ESCAPED_QUOTE)) {\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);\n                pos.setIndex(pos.getIndex() + ESCAPED_QUOTE.length());\n                lastHold = pos.getIndex();\n                continue;\n            }\n            if (c[pos.getIndex()] == QUOTE) { // Closing quote\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n                next(pos); // Consume the closing quote\n                return appendTo;\n            }\n            next(pos);\n        }\n        throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}