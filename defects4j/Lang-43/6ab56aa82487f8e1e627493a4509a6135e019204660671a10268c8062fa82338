{
    "generation": "private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n        StringBuffer appendTo, boolean escapingOn) {\n    int start = pos.getIndex();\n    char[] c = pattern.toCharArray();\n    if (escapingOn && c[start] == QUOTE) {\n        return appendTo == null ? null : appendTo.append(QUOTE);\n    }\n    int lastHold = start;\n    for (int i = pos.getIndex(); i < pattern.length(); i++) {\n        if (escapingOn && i + 1 < pattern.length() && c[i] == ESCAPE_CHAR && c[i + 1] == QUOTE) {\n            if (appendTo != null) {\n                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n            }\n            pos.setIndex(i + 2);\n            lastHold = pos.getIndex();\n            i++; // Skip the next character as it is part of the escape sequence\n            continue;\n        }\n        switch (c[i]) {\n            case QUOTE:\n                if (appendTo != null) {\n                    appendTo.append(c, lastHold, i - lastHold);\n                }\n                pos.setIndex(i + 1);\n                return appendTo;\n            default:\n                next(pos);\n        }\n    }\n    throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}