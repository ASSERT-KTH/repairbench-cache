{
    "generation": "private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n        StringBuffer appendTo, boolean escapingOn) {\n    int start = pos.getIndex();\n    char[] c = pattern.toCharArray();\n    int patternLength = pattern.length();\n    if (escapingOn && start < patternLength && c[start] == QUOTE) {\n        // It's an escaped quote ('')\n        pos.setIndex(start + 1);\n        return appendTo == null ? null : appendTo.append(QUOTE);\n    }\n    int lastHold = start;\n    boolean found = false;\n    StringBuffer result = appendTo == null ? new StringBuffer() : appendTo;\n    while (pos.getIndex() < patternLength) {\n        char ch = c[pos.getIndex()];\n        if (escapingOn && (pos.getIndex() + 1 < patternLength) && ch == QUOTE && c[pos.getIndex() + 1] == QUOTE) {\n            // Escaped quote ('')\n            result.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);\n            pos.setIndex(pos.getIndex() + 2);\n            lastHold = pos.getIndex();\n            continue;\n        }\n        if (ch == QUOTE) {\n            // Closing quote\n            pos.setIndex(pos.getIndex() + 1);\n            result.append(c, lastHold, pos.getIndex() - lastHold - 1);\n            found = true;\n            break;\n        }\n        pos.setIndex(pos.getIndex() + 1);\n    }\n    if (!found) {\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }\n    return appendTo == null ? result : appendTo;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}