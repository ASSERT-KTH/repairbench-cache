{
    "generation": "/**\n * Consume a quoted string, adding it to <code>appendTo</code> if\n * specified.\n * \n * @param pattern pattern to parse\n * @param pos current parse position\n * @param appendTo optional StringBuffer to append\n * @param escapingOn whether to process escaped quotes\n * @return <code>appendTo</code>\n */\nprivate StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n        StringBuffer appendTo, boolean escapingOn) {\n    int start = pos.getIndex();\n    char[] c = pattern.toCharArray();\n    // Handle an escaped quote at the very start: two single quotes => one literal quote\n    if (escapingOn\n            && start + 1 < c.length\n            && c[start] == QUOTE\n            && c[start + 1] == QUOTE) {\n        pos.setIndex(start + 2);\n        return appendTo == null ? null : appendTo.append(QUOTE);\n    }\n    // Skip the opening quote\n    pos.setIndex(start + 1);\n    // If we're not accumulating, just skip until the matching quote\n    if (appendTo == null) {\n        while (pos.getIndex() < c.length) {\n            int idx = pos.getIndex();\n            // skip escaped quotes inside\n            if (escapingOn\n                    && idx + 1 < c.length\n                    && c[idx] == QUOTE\n                    && c[idx + 1] == QUOTE) {\n                pos.setIndex(idx + 2);\n            }\n            else if (c[idx] == QUOTE) {\n                pos.setIndex(idx + 1);\n                return null;\n            }\n            else {\n                pos.setIndex(idx + 1);\n            }\n        }\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }\n    // Accumulate into appendTo\n    int lastHold = pos.getIndex();\n    while (pos.getIndex() < c.length) {\n        int idx = pos.getIndex();\n        // escaped quote inside quoted string\n        if (escapingOn\n                && idx + 1 < c.length\n                && c[idx] == QUOTE\n                && c[idx + 1] == QUOTE) {\n            // append everything up to here\n            appendTo.append(c, lastHold, idx - lastHold);\n            // then one literal quote\n            appendTo.append(QUOTE);\n            // advance past the two quotes\n            pos.setIndex(idx + 2);\n            lastHold = pos.getIndex();\n        }\n        // closing quote\n        else if (c[idx] == QUOTE) {\n            appendTo.append(c, lastHold, idx - lastHold);\n            pos.setIndex(idx + 1);\n            return appendTo;\n        }\n        // normal character\n        else {\n            pos.setIndex(idx + 1);\n        }\n    }\n    throw new IllegalArgumentException(\n            \"Unterminated quoted string at position \" + start);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}