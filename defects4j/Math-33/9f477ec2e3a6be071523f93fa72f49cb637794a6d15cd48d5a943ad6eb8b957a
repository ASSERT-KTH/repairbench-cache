{
    "generation": "    /**\n     * Removes the phase 1 objective function, positive cost non-artificial variables,\n     * and the non-basic artificial variables from this tableau.\n     */\n    protected void dropPhase1Objective() {\n        if (getNumObjectiveFunctions() == 1) {\n            return;\n        }\n\n        List<Integer> columnsToDrop = new ArrayList<Integer>();\n        columnsToDrop.add(0);\n\n        // positive cost non-artificial variables\n        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(0, i);\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                columnsToDrop.add(i);\n            }\n        }\n\n        // non-basic artificial variables\n        for (int i = 0; i < getNumArtificialVariables(); i++) {\n            int col = i + getArtificialVariableOffset();\n            if (getBasicRow(col) == null) {\n                columnsToDrop.add(col);\n            }\n        }\n\n        // Sort columns to drop in descending order\n        Collections.sort(columnsToDrop, Collections.reverseOrder());\n\n        // Remove columns from right to left to preserve indices\n        for (int col : columnsToDrop) {\n            tableau = tableau.getSubMatrix(0, tableau.getRowDimension() - 1,\n                                         0, col - 1)\n                           .createMatrix(tableau.getRowDimension(),\n                                        col)\n                           .add(tableau.getSubMatrix(0, tableau.getRowDimension() - 1,\n                                                   col + 1, tableau.getColumnDimension() - 1));\n            columnLabels.remove(col);\n        }\n\n        this.numArtificialVariables = 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}