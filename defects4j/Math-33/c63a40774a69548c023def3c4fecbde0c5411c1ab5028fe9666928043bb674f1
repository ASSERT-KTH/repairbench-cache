{
    "generation": "/**\n * Removes the phase 1 objective function, positive cost non-artificial variables,\n * and the non-basic artificial variables from this tableau.\n */\n@Override\nprotected void dropPhase1Objective() {\n    // only for two\u2013phase tableaus\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    // drop the phase-1 \"z\" column\n    columnsToDrop.add(0);\n\n    // drop any non-artificial variable with positive cost in the phase-1 row\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // drop any artificial variable that is not in the basis\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // build a new matrix without the dropped columns and without the phase-1 row\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i = 1; i < getHeight(); i++) {\n        int destCol = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][destCol++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // remove the corresponding columnLabels in reverse order\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove(columnsToDrop.get(i).intValue());\n    }\n\n    // replace the tableau, clear out artificial variables, and reset to single objective\n    this.tableau             = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n    this.numObjectiveFunctions  = 1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}