{
    "generation": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0);\n\n    // positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // Convert to array for easier access\n    Integer[] columnsToDropArray = columnsToDrop.toArray(new Integer[0]);\n\n    // Create new matrix without the dropped columns\n    int newWidth = getWidth() - columnsToDrop.size();\n    int newHeight = getHeight() - 1;\n    double[][] matrix = new double[newHeight][newWidth];\n    for (int i = 0; i < newHeight; i++) {\n        int colIndex = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i][colIndex++] = tableau.getEntry(i + 1, j);\n            }\n        }\n    }\n\n    // Remove the columns from the tableau\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        int column = columnsToDrop.get(i);\n        tableau.removeColumn(column);\n    }\n\n    // Replace the old tableau with the new matrix\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}