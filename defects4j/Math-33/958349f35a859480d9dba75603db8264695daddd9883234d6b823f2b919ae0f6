{
    "generation": "/**\n * Removes the phase 1 objective function, positive\u2010cost slack variables,\n * and the non\u2010basic artificial variables from this tableau.\n */\n@Override\nprotected void dropPhase1Objective() {\n    // if there is only one objective function, there's nothing to drop\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    // we will rebuild the tableau without:\n    //  1) the phase\u20101 objective column (index 0)\n    //  2) any slack columns whose cost in the phase\u20101 row is strictly positive\n    //  3) any non\u2010basic artificial columns\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    // drop the phase\u20101 objective variable column\n    columnsToDrop.add(0);\n\n    // drop only slack columns with positive cost in the phase\u20101 objective row\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        if (columnLabels.get(i).getColumnType() == ColumnType.SLACK) {\n            double cost = tableau.getEntry(0, i);\n            if (Precision.compareTo(cost, 0d, maxUlps) > 0) {\n                columnsToDrop.add(i);\n            }\n        }\n    }\n\n    // drop any artificial variable columns that are not in the basis\n    for (int k = 0; k < getNumArtificialVariables(); k++) {\n        int col = getArtificialVariableOffset() + k;\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // build a new matrix without the dropped columns, and without the top (phase\u20101) row\n    int newRows = getHeight() - 1;\n    int newCols = getWidth() - columnsToDrop.size();\n    double[][] data = new double[newRows][newCols];\n    for (int r = 1; r < getHeight(); r++) {\n        int destCol = 0;\n        for (int c = 0; c < getWidth(); c++) {\n            if (!columnsToDrop.contains(c)) {\n                data[r - 1][destCol++] = tableau.getEntry(r, c);\n            }\n        }\n    }\n\n    // remove the corresponding labels (in reverse order so indices stay valid)\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove(columnsToDrop.get(i).intValue());\n    }\n\n    // install the trimmed tableau and reset the count of artificial variables\n    this.tableau = new Array2DRowRealMatrix(data);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}