{
    "generation": "/**\n * Removes the phase 1 objective function column, positive\u2010cost slack/surplus\n * variables (but not the decision\u2010variable columns when variables are free),\n * and the non\u2010basic artificial variables from this tableau.\n */\n@Override\nprotected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    // drop the phase\u20101 objective function column (the first z1 column)\n    columnsToDrop.add(0);\n\n    // drop positive\u2010cost slack/surplus vars only; if variables are free (restrictToNonNegative==false)\n    // skip over the decision\u2010variable columns which were split\n    int start = getNumObjectiveFunctions();\n    if (!restrictToNonNegative) {\n        start += getNumDecisionVariables();\n    }\n    int artOffset = getArtificialVariableOffset();\n    for (int i = start; i < artOffset; i++) {\n        double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // drop non\u2010basic artificial variable columns\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = artOffset + i;\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // build the new matrix skipping the phase\u20101 objective row and the dropped columns\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i = 1; i < getHeight(); i++) {\n        int destCol = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][destCol++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // remove the corresponding column labels (in descending order to keep indices valid)\n    Collections.sort(columnsToDrop, Collections.reverseOrder());\n    for (int colIdx : columnsToDrop) {\n        columnLabels.remove(colIdx);\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix, false);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}