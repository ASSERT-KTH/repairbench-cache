{
    "generation": "    /**\n     * Removes the phase 1 objective function, positive cost non-artificial variables,\n     * and the non-basic artificial variables from this tableau.\n     */\n    @Override\n    protected void dropPhase1Objective() {\n        // if we never did a two\u2010phase solve, nothing to drop\n        if (getNumObjectiveFunctions() == 1) {\n            return;\n        }\n\n        // we will drop column 0 (the phase\u20101 objective constant)\n        List<Integer> columnsToDrop = new ArrayList<Integer>();\n        columnsToDrop.add(0);\n\n        // determine which objective\u2010row holds the original (phase\u20102) costs\n        final int phase2Row = getNumObjectiveFunctions() - 1;\n        // scan all non\u2010artificial columns and drop those with positive phase\u20102 cost\n        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(phase2Row, i);\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                columnsToDrop.add(i);\n            }\n        }\n\n        // drop any artificial variables that are not basic\n        for (int i = 0; i < getNumArtificialVariables(); i++) {\n            final int col = i + getArtificialVariableOffset();\n            if (getBasicRow(col) == null) {\n                columnsToDrop.add(col);\n            }\n        }\n\n        // build a new matrix without the dropped columns and without the phase\u20101 row\n        final int newRows = getHeight() - 1;\n        final int newCols = getWidth() - columnsToDrop.size();\n        double[][] newData = new double[newRows][newCols];\n        for (int r = 1; r < getHeight(); r++) {\n            int destCol = 0;\n            for (int c = 0; c < getWidth(); c++) {\n                if (!columnsToDrop.contains(c)) {\n                    newData[r - 1][destCol++] = tableau.getEntry(r, c);\n                }\n            }\n        }\n\n        // remove the corresponding labels (in reverse order so indices stay valid)\n        Collections.sort(columnsToDrop, Collections.reverseOrder());\n        for (int colIndex : columnsToDrop) {\n            columnLabels.remove(colIndex);\n        }\n\n        // install the reduced tableau and clear out artificials\n        this.tableau = new Array2DRowRealMatrix(newData, false);\n        this.numArtificialVariables = 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}