{
    "generation": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0);  // remove phase 1 objective row\n\n    // positive cost non-artificial variables\n    int firstNonSlackColumn = getNumObjectiveFunctions();\n    int lastNonSlackColumn = getArtificialVariableOffset() - 1;\n    for (int i = firstNonSlackColumn; i <= lastNonSlackColumn; i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    int firstArtificialVariable = getArtificialVariableOffset();\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = firstArtificialVariable + i;\n        if (!isBasic(col)) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i = 1; i < getHeight(); i++) {  // exclude the first row (phase 1 objective)\n        int targetCol = 0;\n        for (int sourceCol = 0; sourceCol < getWidth(); sourceCol++) {\n            if (!columnsToDrop.contains(sourceCol)) {\n                matrix[i - 1][targetCol++] = tableau.getEntry(i, sourceCol);\n            }\n        }\n    }\n\n    // Remove the columns in reverse order to avoid index issues\n    Collections.sort(columnsToDrop, Collections.reverseOrder());\n    for (int col : columnsToDrop) {\n        columnLabels.remove(col);\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}