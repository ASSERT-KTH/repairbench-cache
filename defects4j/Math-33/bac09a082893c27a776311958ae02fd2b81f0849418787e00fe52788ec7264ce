{
    "generation": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<>();\n    columnsToDrop.add(0); // drop phase 1 objective row\n\n    // positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null && getNumObjectiveFunctions() > 1) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    Set<Integer> columnsToKeep = new HashSet<>();\n    for (int j = 0; j < getWidth(); j++) {\n        if (!columnsToDrop.contains(j)) {\n            columnsToKeep.add(j);\n        }\n    }\n\n    int numRows = getHeight() - 1;\n    int numCols = columnsToKeep.size();\n\n    double[][] matrix = new double[numRows][numCols];\n    int[] colIndices = new ArrayList<>(columnsToKeep).stream().mapToInt(i -> i).toArray();\n\n    for (int i = 0; i < numRows; i++) {\n        for (int j = 0; j < numCols; j++) {\n            matrix[i][j] = tableau.getEntry(i + 1, colIndices[j]);\n        }\n    }\n\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}