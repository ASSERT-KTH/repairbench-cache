{
    "generation": "/**\n * Removes the phase 1 objective function, positive cost non-artificial variables,\n * and the non-basic artificial variables from this tableau.\n */\nprotected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0);\n\n    // positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i = 1; i < getHeight(); i++) {\n        int col = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // Fix: Remove artificial variable labels *before* dropping objective row and variable columns\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n\n    // Also adjust the objective function value coefficients vector\n    double[][] newTableau = new double[getHeight()][getWidth() - columnsToDrop.size()];\n    // Copy the objective row (skip the removed row 0 entirely, as phase 1 objective is dropped)\n    double[][] data = tableau.getData();\n    // Rebuild tableau including the new objective row (row index zero)\n    newTableau[0] = new double[newTableau[0].length];\n    int col = 0;\n    for (int j = 0; j < getWidth(); j++) {\n        if (!columnsToDrop.contains(j)) {\n            newTableau[0][col++] = data[0][j];\n        }\n    }\n    // Copy the rest of the rows (already copied at the beginning)\n    for (int i = 1; i < newTableau.length; i++) {\n        for (int j = 0; j < newTableau[i].length; j++) {\n            newTableau[i][j] = matrix[i -1][j];\n        }\n    }\n    this.tableau = new Array2DRowRealMatrix(newTableau);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}