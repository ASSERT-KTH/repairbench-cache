{
    "generation": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<>();\n\n    // Check if the first column is an artificial variable before dropping it\n    boolean isArtificial = false;\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        if (i + getArtificialVariableOffset() == 0) {\n            isArtificial = true;\n            break;\n        }\n    }\n    if (isArtificial) {\n        columnsToDrop.add(0);\n    }\n\n    // Add positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // Add non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (col >= getWidth() || getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // Remove duplicate columns to avoid issues\n    Set<Integer> uniqueColumns = new HashSet<>(columnsToDrop);\n    columnsToDrop.clear();\n    columnsToDrop.addAll(uniqueColumns);\n\n    // Create the new matrix\n    int newWidth = getWidth() - columnsToDrop.size();\n    int newHeight = getHeight() - 1;\n    double[][] matrix = new double[newHeight][newWidth];\n\n    for (int i = 1; i < getHeight(); i++) {\n        int colIndex = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][colIndex++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // Remove columns from labels\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        int colToRemove = columnsToDrop.get(i);\n        if (colToRemove < columnLabels.size()) {\n            columnLabels.remove(colToRemove);\n        }\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}