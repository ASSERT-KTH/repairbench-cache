{
    "generation": "/**\n * Removes the phase 1 objective function, positive cost non-artificial variables,\n * and the non-basic artificial variables from this tableau.\n */\nprotected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0);\n\n    // positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i = 1; i < getHeight(); i++) {\n        int col = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // Remove phase 1 row from columnLabels (first row corresponds to phase 1 objective function)\n    // Remove in descending order to maintain correct indices\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n\n    // Adjust numArtificialVariables: retain only those that remain basic variables\n    int newNumArtificial = 0;\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = getArtificialVariableOffset() + i;\n        // Check if this artificial var column was NOT dropped (i.e., still exists)\n        boolean stillExists = true;\n        for (int dropCol : columnsToDrop) {\n            if (dropCol == col) {\n                stillExists = false;\n                break;\n            }\n        }\n        if (stillExists) {\n            newNumArtificial++;\n        }\n    }\n    this.numArtificialVariables = newNumArtificial;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}