{
    "generation": "/**\n * Removes the phase 1 objective function, positive cost non-artificial variables,\n * and the non-basic artificial variables from this tableau.\n */\nprotected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    // Always drop the first column (the phase 1 objective constant column)\n    columnsToDrop.add(0);\n\n    // In a two-phase tableau, the original objective function is located\n    // in the last row. Use that row to decide which non-artificial variables\n    // (i.e. decision variables) have a positive cost.\n    int objRow = getHeight() - 1;\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(objRow, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // Drop the non-basic artificial variables.\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // Build a new tableau by removing the dropped columns and also the\n    // phase 1 objective row (row 0).\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i = 1; i < getHeight(); i++) {\n        int col = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // Remove column labels, in reverse order so that indices remain valid.\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}