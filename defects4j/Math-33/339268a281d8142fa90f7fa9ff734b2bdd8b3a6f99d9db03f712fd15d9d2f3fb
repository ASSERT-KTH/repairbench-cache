{
    "generation": "/**\n * Removes the phase 1 objective function, positive cost non-artificial variables,\n * and the non-basic artificial variables from this tableau.\n */\nprotected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0); // Drop the phase 1 objective function column\n\n    // Drop positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // Drop non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // Create a new matrix excluding the columns to drop\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i = 1; i < getHeight(); i++) {\n        int col = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // Update column labels\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n\n    // Update the tableau and reset the number of artificial variables\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n\n    // Re-create the objective function row excluding dropped columns\n    double[] newObjectiveRow = new double[getWidth() - columnsToDrop.size()];\n    int col = 0;\n    for (int j = 0; j < getWidth(); j++) {\n        if (!columnsToDrop.contains(j)) {\n            newObjectiveRow[col++] = tableau.getEntry(0, j);\n        }\n    }\n    this.tableau = new Array2DRowRealMatrix(addRow(matrix, newObjectiveRow));\n}\n\n// Helper method to add a row to the matrix\nprivate double[][] addRow(double[][] matrix, double[] row) {\n    double[][] newMatrix = new double[matrix.length + 1][matrix[0].length];\n    System.arraycopy(matrix, 0, newMatrix, 1, matrix.length);\n    System.arraycopy(row, 0, newMatrix[0], 0, row.length);\n    return newMatrix;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}