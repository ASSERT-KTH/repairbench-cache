{
    "generation": "/**\n * Removes the phase 1 objective function and the non\u2010basic artificial variables\n * from this tableau.\n */\n@Override\nprotected void dropPhase1Objective() {\n    // if there is only one objective (no artificial vars were added), nothing to do\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    // collect the columns to drop:\n    //   0 = the phase-1 RHS column\n    //   any non\u2010basic artificial variable columns\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0);\n\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // build a new matrix with one fewer row (drop the phase-1 objective row)\n    // and without the dropped columns\n    int oldHeight = getHeight();\n    int oldWidth  = getWidth();\n    int newHeight = oldHeight - 1;\n    int newWidth  = oldWidth  - columnsToDrop.size();\n    double[][] newData = new double[newHeight][newWidth];\n\n    for (int i = 1; i < oldHeight; i++) {\n        int newCol = 0;\n        for (int j = 0; j < oldWidth; j++) {\n            if (!columnsToDrop.contains(j)) {\n                newData[i - 1][newCol++] = tableau.getEntry(i, j);\n            }\n        }\n    }\n\n    // remove the corresponding column labels in reverse order\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove(columnsToDrop.get(i).intValue());\n    }\n\n    // replace the tableau and clear out the artificial-variable count\n    this.tableau = new Array2DRowRealMatrix(newData);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}