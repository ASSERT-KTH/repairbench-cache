{
    "generation": "/**\n     * Removes the phase 1 objective function, positive cost non-artificial variables,\n     * and the non-basic artificial variables from this tableau.\n     */\n    protected void dropPhase1Objective() {\n        if (getNumObjectiveFunctions() == 1) {\n            return;\n        }\n\n        List<Integer> columnsToDrop = new ArrayList<Integer>();\n        columnsToDrop.add(0); // drop the phase 1 objective function\n\n        // positive cost non-artificial variables\n        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(0, i);\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                columnsToDrop.add(i);\n            }\n        }\n\n        // non-basic artificial variables\n        for (int i = 0; i < getNumArtificialVariables(); i++) {\n            int col = i + getArtificialVariableOffset();\n            if (getBasicRow(col) == null) {\n                columnsToDrop.add(col);\n            }\n        }\n\n        // Create a new matrix excluding the columns to drop\n        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n        for (int i = 1; i < getHeight(); i++) {\n            int col = 0;\n            for (int j = 0; j < getWidth(); j++) {\n                if (!columnsToDrop.contains(j)) {\n                    matrix[i - 1][col++] = tableau.getEntry(i, j);\n                }\n            }\n        }\n\n        // Update column labels by removing the dropped columns\n        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n            int colToRemove = columnsToDrop.get(i);\n            if (colToRemove < columnLabels.size()) {\n                columnLabels.remove(colToRemove);\n            }\n        }\n\n        // Update the objective function row by removing the dropped columns\n        double[] objectiveRow = new double[getWidth() - columnsToDrop.size()];\n        int col = 0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                objectiveRow[col++] = tableau.getEntry(0, j);\n            }\n        }\n\n        // Create a new tableau with the updated objective row and matrix\n        double[][] newTableau = new double[getHeight() - 1][];\n        newTableau[0] = objectiveRow;\n        System.arraycopy(matrix, 0, newTableau, 1, matrix.length);\n\n        this.tableau = new Array2DRowRealMatrix(newTableau);\n        this.numArtificialVariables = 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}