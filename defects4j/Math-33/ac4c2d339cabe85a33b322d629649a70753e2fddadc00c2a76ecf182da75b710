{
    "generation": "/**\n     * Removes the phase 1 objective function, positive cost non-artificial variables,\n     * and the non-basic artificial variables from this tableau.\n     */\n    protected void dropPhase1Objective() {\n        if (getNumObjectiveFunctions() == 1) {\n            return;\n        }\n\n        List<Integer> columnsToDrop = new ArrayList<Integer>();\n        columnsToDrop.add(0); // Drop the phase 1 objective function\n\n        // Drop positive cost non-artificial variables\n        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(0, i);\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                columnsToDrop.add(i);\n            }\n        }\n\n        // Drop non-basic artificial variables\n        for (int i = 0; i < getNumArtificialVariables(); i++) {\n            int col = i + getArtificialVariableOffset();\n            if (getBasicRow(col) == null) {\n                columnsToDrop.add(col);\n            }\n        }\n\n        // Create a new matrix excluding the columns to drop\n        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n        for (int i = 1; i < getHeight(); i++) {\n            int col = 0;\n            for (int j = 0; j < getWidth(); j++) {\n                if (!columnsToDrop.contains(j)) {\n                    matrix[i - 1][col++] = tableau.getEntry(i, j);\n                }\n            }\n        }\n\n        // Adjust column labels by removing dropped columns\n        Collections.sort(columnsToDrop, Collections.reverseOrder());\n        for (int col : columnsToDrop) {\n            columnLabels.remove(col);\n        }\n\n        // Update the tableau and reset the number of artificial variables\n        this.tableau = new Array2DRowRealMatrix(matrix);\n        this.numArtificialVariables = 0;\n\n        // Reassign basic variables after dropping columns\n        reassignmentOfBasicVariables();\n    }\n\n    private void reassignmentOfBasicVariables() {\n        for (int i = 0; i < getHeight() - 1; i++) {\n            for (int j = 0; j < getWidth() - 1; j++) {\n                if (Precision.compareTo(tableau.getEntry(i, j), 1d, maxUlps) == 0 && \n                    Precision.compareTo(tableau.getEntry(i, getWidth() - 1), 0d, maxUlps) == 0) {\n                    basicVars[i] = columnLabels.get(j);\n                    break;\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}