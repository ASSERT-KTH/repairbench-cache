{
    "generation": "  private String format(JSError error, boolean warning) {\n    // extract source excerpt\n    SourceExcerptProvider source = getSource();\n    String sourceExcerpt = source == null ? null :\n        excerpt.get(\n            source, error.sourceName, error.lineNumber, excerptFormatter);\n\n    // formatting the message\n    StringBuilder b = new StringBuilder();\n    if (error.sourceName != null) {\n      b.append(error.sourceName);\n      if (error.lineNumber > 0) {\n        b.append(':');\n        b.append(error.lineNumber);\n      }\n      b.append(\": \");\n    }\n\n    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));\n    b.append(\" - \");\n\n    b.append(error.description);\n    b.append('\\n');\n    if (sourceExcerpt != null) {\n      b.append(sourceExcerpt);\n      b.append('\\n');\n      int charno = error.getCharno();\n\n      // padding equal to the excerpt and arrow at the end\n      // charno == sourceExcerpt.length() means something is missing\n      // at the end of the line\n      // Use <= instead of < to handle errors at the end of the line or\u306b\u5bfe\u5fdc\u3059\u308b\u4f4d\u7f6e.\n      if (excerpt.equals(LINE)\n          && 0 <= charno && charno <= sourceExcerpt.length()) { // FIX: Changed < to <=\n        for (int i = 0; i < charno; i++) {\n          // If the loop iterates up to the max length of the excerpt,\n          // accessing charAt(i) is still safe because the loop condition is i < charno.\n          // Example: If sourceExcerpt.length() is 10 and charno is 10,\n          // the loop runs for i = 0 to 9. charAt(9) is valid.\n          char c = sourceExcerpt.charAt(i);\n          if (Character.isWhitespace(c)) {\n            b.append(c);\n          } else {\n            b.append(' ');\n          }\n        }\n        b.append(\"^\\n\");\n      }\n    }\n    return b.toString();\n  }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}