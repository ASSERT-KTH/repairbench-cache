{
    "generation": "private String format(JSError error, boolean warning) {\n  // extract source excerpt\n  SourceExcerptProvider source = getSource();\n  String sourceExcerpt = source == null ? null\n      : excerpt.get(source, error.sourceName, error.lineNumber, excerptFormatter);\n\n  // formatting the message\n  StringBuilder b = new StringBuilder();\n  if (error.sourceName != null) {\n    b.append(error.sourceName);\n    if (error.lineNumber > 0) {\n      b.append(':').append(error.lineNumber);\n    }\n    b.append(\": \");\n  }\n\n  b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR))\n   .append(\" - \")\n   .append(error.description)\n   .append('\\n');\n\n  if (sourceExcerpt != null) {\n    b.append(sourceExcerpt).append('\\n');\n    int charno = error.getCharno();\n\n    // allow an arrow even when charno == sourceExcerpt.length()\n    if (excerptFormatter == Excerpt.LINE\n        && charno >= 0\n        && charno <= sourceExcerpt.length()) {\n      for (int i = 0; i < charno; i++) {\n        char c = sourceExcerpt.charAt(i);\n        b.append(Character.isWhitespace(c) ? c : ' ');\n      }\n      b.append(\"^\\n\");\n    }\n  }\n  return b.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}