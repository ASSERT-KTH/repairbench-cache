{
    "generation": "  private String format(JSError error, boolean warning) {\n    // extract source excerpt\n    SourceExcerptProvider source = getSource();\n    String sourceExcerpt = source == null ? null :\n        excerpt.get(\n            source, error.sourceName, error.lineNumber, excerptFormatter);\n\n    // formatting the message\n    StringBuilder b = new StringBuilder();\n    if (error.sourceName != null) {\n      b.append(error.sourceName);\n      if (error.lineNumber > 0) {\n        b.append(':');\n        b.append(error.lineNumber);\n      }\n      b.append(\": \");\n    }\n\n    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));\n    b.append(\" - \");\n    b.append(error.description);\n    b.append('\\n');\n    if (sourceExcerpt != null) {\n      b.append(sourceExcerpt);\n      b.append('\\n');\n      int charno = error.getCharno();\n\n      if (0 <= charno && charno <= sourceExcerpt.length()) {\n        // Calculate the proper position for the caret\n        int position = Math.min(charno, sourceExcerpt.length());\n        for (int i = 0; i < position; i++) {\n          char c = sourceExcerpt.charAt(i);\n          b.append(Character.isWhitespace(c) ? c : ' ');\n        }\n        b.append(\"^\\n\");\n      }\n    }\n    return b.toString();\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}