{
    "generation": "    /**\n     * Declares all of a function's arguments.\n     */\n    private void declareArguments(Node functionNode) {\n        Node astParameters = functionNode.getFirstChild().getNext();\n        Node body = astParameters.getNext();\n        FunctionType functionType = (FunctionType) functionNode.getJSType();\n        if (functionType != null) {\n            Node jsDocParameters = functionType.getParametersNode();\n            if (jsDocParameters != null) {\n                Node jsDocParameter = jsDocParameters.getFirstChild();\n                for (Node astParameter : astParameters.children()) {\n                    if (jsDocParameter != null) {\n                        defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);\n                        jsDocParameter = jsDocParameter.getNext();\n                    } else {\n                        defineSlot(astParameter, functionNode, null, true);\n                    }\n                }\n            }\n        }\n\n        // Check for redefined variables within the function body\n        for (Node declaration : body.children()) {\n            if (declaration.isVar() || declaration.isConst() || declaration.isLet()) {\n                Node varNode = declaration.getFirstChild();\n                while (varNode != null) {\n                    String varName = varNode.getString();\n                    if (varName != null && astParameters.containsName(varName)) {\n                        report(JsError.DUP_VAR_DECLARATION, varNode);\n                    }\n                    varNode = varNode.getNext();\n                }\n            }\n        }\n    } // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}