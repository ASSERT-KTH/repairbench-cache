{
    "generation": "/**\n * Declares all of a function's arguments.\n */\nprivate void declareArguments(Node functionNode) {\n  Node astParameters = functionNode.getFirstChild().getNext();\n  Node body = astParameters.getNext();\n  FunctionType functionType = (FunctionType) functionNode.getJSType();\n\n  Node jsDocParameters = null;\n  if (functionType != null) {\n    jsDocParameters = functionType.getParametersNode();\n  }\n\n  Node jsDocParameter = (jsDocParameters != null) ? jsDocParameters.getFirstChild() : null;\n\n  for (Node astParameter : astParameters.children()) {\n    if (jsDocParameter != null) {\n      defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);\n      jsDocParameter = jsDocParameter.getNext();\n    } else if (functionType != null) {\n      // Use the parameter type from the functionType if available (important for forward-declared types)\n      JSType paramType = functionType.getParameters() != null && functionType.getParameters().size() > 0\n          ? functionType.getParameters().get(astParameter.getIndex()).getJSType()\n          : null;\n      defineSlot(astParameter, functionNode, paramType, true);\n    } else {\n      defineSlot(astParameter, functionNode, null, true);\n    }\n  }\n} // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}