{
    "generation": "private void declareArguments(Node functionNode) {\n  // Starts by declaring all parameters from the AST.\n  Node parameters = functionNode.getFirstChild().getNext();\n  Node body = parameters.getNext();\n  FunctionType functionType = (FunctionType) functionNode.getJSType();\n  if (functionType != null) {\n    Node jsDocParameters = functionType.getParametersNode();\n    if (jsDocParameters != null) {\n      // Create a list of all JSDoc parameters, their names and types.\n      List<Node> jsDocParameterList = new ArrayList<>();\n      for (Node jsDocParam : jsDocParameters.children()) {\n        jsDocParameterList.add(jsDocParam.getJSType());\n      }\n\n      // Iterate over each parameter from the AST.\n      for (Node param : parameters.children()) {\n        boolean found = false;\n        String paramName = param.getFirstChild().getNext().getString();\n\n        // Check if there is a corresponding JSDoc parameter.\n        for (int i = 0; i < jsDocParameterList.size(); i++) {\n          Node jsDocParamType = jsDocParameterList.get(i);\n          if (jsDocParamType != null) {\n            found = true;\n            defineSlot(param, functionNode, jsDocParamType, true);\n            // Remove the parameter from the list to avoid reuse.\n            jsDocParameterList.set(i, null);\n            break;\n          }\n        }\n\n        // If no corresponding JSDoc parameter was found, declare without type.\n        if (!found) {\n          defineSlot(param, functionNode, null, true);\n        }\n      }\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}