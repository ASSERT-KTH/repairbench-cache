{
    "generation": "/**\n * Declares all of a function's arguments.\n */\nprivate void declareArguments(Node functionNode) {\n  Node astParameters = functionNode.getFirstChild().getNext();\n  Node body = astParameters.getNext();\n  FunctionType functionType = (FunctionType) functionNode.getJSType();\n  if (functionType != null) {\n    Node jsDocParameters = functionType.getParametersNode();\n    if (jsDocParameters != null) {\n      Node jsDocParameter = jsDocParameters.getFirstChild();\n      for (Node astParameter : astParameters.children()) {\n        JSType parameterType = null;\n        if (jsDocParameter != null) {\n          parameterType = jsDocParameter.getJSType();\n          jsDocParameter = jsDocParameter.getNext();\n        }\n        // Always declare the argument with its JSDoc type or null,\n        // but explicitly allow duplicate declarations to be flagged\n        defineSlot(astParameter, functionNode, parameterType, true);\n      }\n    } else {\n      // No parameter docs; declare parameters with no explicit type\n      for (Node astParameter : astParameters.children()) {\n        defineSlot(astParameter, functionNode, null, true);\n      }\n    }\n  } else {\n    // No function type info; declare parameters with no explicit type\n    for (Node astParameter : astParameters.children()) {\n      defineSlot(astParameter, functionNode, null, true);\n    }\n  }\n} // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}