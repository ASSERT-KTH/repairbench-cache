{
    "generation": "private void declareArguments(Node functionNode) {\n    Node astParameters = functionNode.getFirstChild().getNext();\n    Node body = astParameters.getNext();\n    FunctionType functionType = (FunctionType) functionNode.getJSType();\n    \n    if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n            Node jsDocParameter = jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                JSType type = null;\n                if (jsDocParameter != null) {\n                    type = jsDocParameter.getJSType();\n                    jsDocParameter = jsDocParameter.getNext();\n                }\n                defineSlot(astParameter, functionNode, type, true);\n            }\n        } else {\n            for (Node astParameter : astParameters.children()) {\n                defineSlot(astParameter, functionNode, null, true);\n            }\n        }\n    } else {\n        for (Node astParameter : astParameters.children()) {\n            defineSlot(astParameter, functionNode, null, true);\n        }\n    }\n} // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}