{
    "generation": "    /**\n     * Declares all of a function's arguments.\n     */\n    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            if (jsDocParameter != null) {\n              // Use the type from JSDoc and mark it as not inferred.\n              defineSlot(astParameter, functionNode,\n                  jsDocParameter.getJSType(), false); // Pass false for inferred when type comes from JSDoc\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              // Declare with null type, allowing inference.\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n          // TODO(nicksantos): Handle var_args.\n        } else {\n           // Declare all parameters with null type, allowing inference.\n           for (Node astParameter : astParameters.children()) {\n             defineSlot(astParameter, functionNode, null, true);\n           }\n        }\n      }\n       // TODO(nicksantos): Handle arguments if functionType is null.\n    } // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}