{
    "generation": "    /**\n     * Declares all of a function's arguments.\n     */\n    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            if (jsDocParameter != null) {\n              defineSlot(astParameter, functionNode,\n                  jsDocParameter.getJSType(), true);\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              // fill in the type for remaining parameters\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n          // check extra JsDoc parameters\n          while (jsDocParameter != null) {\n            if (jsDocParameter.getJSType() != null && !jsDocParameter.isOptionalArg() && !jsDocParameter.isVarArgs()) {\n              compiler.report(JSError.make(jsDocParameter, INEXISTENT_PARAMETER,\n                      jsDocParameter.getString(), functionNode.getFirstChild().getNext().getNext().getQualifiedName()));\n            }\n            jsDocParameter = jsDocParameter.getNext();\n          }\n        } else {\n          // If there are no JsDoc params, then define the function arguments\n          // with what ever type they were declared with.\n          for (Node astParameter : astParameters.children()) {\n            defineSlot(astParameter, functionNode, null, true);\n          }\n        }\n      }\n    } // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}