{
    "generation": "private void declareArguments(Node functionNode) {\n    Node astParameters = functionNode.getFirstChild().getNext();\n    FunctionType functionType = (FunctionType) functionNode.getJSType();\n    Scope scope = functionNode.getScope(); // Retrieve the function's scope\n\n    if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n            Node jsDocParameter = jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.getChildren()) {\n                // Get the parameter name\n                String paramName = astParameter.getQualifiedName();\n\n                // Check if the parameter is already declared in the scope\n                if (scope.lookup(paramName) != null) {\n                    reportError(new JSError(\n                        JSDocgetMessage \u043f\u0440\u0438\u043c\u0435\u043dkrv_\u0430\u043d\u0435_HEADERS.DUPLICATE_PARAMETER,\n                        astParameter, paramName));\n                    continue;\n                }\n\n                // Define the slot for the parameter\n                JSType paramType = jsDocParameter != null ? jsDocParameter.getJSType() : null;\n                defineSlot(astParameter, functionNode, paramType, true);\n\n                // Move to the next JSDoc parameter\n                jsDocParameter = jsDocParameter != null ? jsDocParameter.getNext() : null;\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}