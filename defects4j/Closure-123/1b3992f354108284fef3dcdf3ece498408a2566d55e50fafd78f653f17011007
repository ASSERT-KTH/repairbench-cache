{
    "generation": "case Token.HOOK: {\n  Preconditions.checkState(childCount == 3);\n  int p = NodeUtil.precedence(type);\n  Context rhsContext = Context.OTHER;\n  addExpr(first, p + 1, context);\n  cc.addOp(\"?\", true);\n  // Add parentheses when the middle expression is an 'in' expression\n  // since 'in' has lower precedence than ternary operators\n  Node middleExpr = first.getNext();\n  if (middleExpr.getType() == Token.IN) {\n    add(\"(\");\n    addExpr(middleExpr, 1, rhsContext);\n    add(\")\");\n  } else {\n    addExpr(middleExpr, 1, rhsContext);\n  }\n  cc.addOp(\":\", true);\n  addExpr(last, 1, rhsContext);\n  break;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}