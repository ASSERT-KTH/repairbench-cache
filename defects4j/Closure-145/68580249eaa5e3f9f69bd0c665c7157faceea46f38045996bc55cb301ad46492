{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n    // For labels with block children, we need to ensure that a\n    // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n    // are skipped. \n    // Either a empty statement or an block with more than one child,\n    // way it isn't a FUNCTION or DO.\n    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n      return true;\n    }\n    // A LABEL node can wrap a FUNCTION or DO statement. For compatibility\n    // purposes, we need to treat such labeled statements similarly to\n    // raw FUNCTION/DO statements, ensuring they are wrapped in a BLOCK\n    // when necessary (e.g., as the 'then' branch of an IF statement).\n    if (n.getType() == Token.LABEL) {\n      Node labeledStatement = n.getFirstChild();\n      return labeledStatement != null && \n             (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO);\n    }\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}