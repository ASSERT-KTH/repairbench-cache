{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n    // If the node itself is a FUNCTION or DO.\n    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n      return true;\n    }\n    // Check if it's a LABEL node whose immediate child is a FUNCTION or DO.\n    // A LABEL node has two children: the label name (child 0) and the\n    // labeled statement (child 1).\n    if (n.getType() == Token.LABEL) {\n      // Ensure the LABEL node has a child for the labeled statement.\n      if (n.getChildCount() >= 2) {\n        Node labeledStatement = n.getChildAtIndex(1);\n        return (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO);\n      }\n    }\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}