{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels) and it is not the child of an IF statement without braces.\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n    // For labels with block children, we need to ensure that a\n    // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n    // are skipped. \n    // Either an empty statement or a block with more than one child,\n    // way it isn't a FUNCTION or DO.\n    // Additionally, check if the parent is an IF statement without braces.\n    return (n.getType() == Token.FUNCTION || n.getType() == Token.DO) && \n           !(n.getParent() != null && n.getParent().getType() == Token.IF && \n             n.getParent().getChildCount() > 1 && \n             n.getParent().getChildAtIndex(1) == n &&\n             n.getParent().getFirstChild().getNext().getChildCount() == 1);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}