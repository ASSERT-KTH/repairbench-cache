{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n        // For labels with block children, we need to ensure that a\n        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs\n        // are skipped.\n          // Either a empty statement or an block with more than one child,\n          // way it isn't a FUNCTION or DO.\n      Node child = n.getFirstChild();\n      if (child != null && child.getType() == Token.LABEL) {\n        Node labeledNode = child.getFirstChild();\n        return labeledNode != null &&\n               (labeledNode.getType() == Token.FUNCTION ||\n                labeledNode.getType() == Token.DO);\n      }\n      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}