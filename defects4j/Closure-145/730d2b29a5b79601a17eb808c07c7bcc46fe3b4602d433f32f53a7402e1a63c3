{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n      // For labels with block children, we need to ensure that a\n      // labeled FUNCTION or DO isn't generated when extraneous BLOCKs\n      // are skipped.\n      // Either a empty statement or an block with more than one child,\n      // way it isn't a FUNCTION or DO.\n      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n          // Check if the node has a single child that is a BLOCK\n          Node child = n.getFirstChild();\n          if (child != null && child.getType() == Token.BLOCK) {\n              // If the BLOCK has more than one child, it's not a FUNCTION or DO\n              return child.getChildCount() == 1;\n          }\n          return true;\n      }\n      return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}