{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n        // Check if the node itself is FUNCTION or DO\n        if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n            return true;\n        }\n        // Check if the node is a LABEL whose child is FUNCTION or DO\n        // For labels with block children, we need to ensure that a\n        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs\n        // are skipped. This is handled by only checking the direct child\n        // of the LABEL.\n        if (n.getType() == Token.LABEL) {\n            Node labeledStatement = n.getLastChild(); // The statement associated with the label\n            // Check if the labeled statement exists and is a FUNCTION or DO\n            if (labeledStatement != null &&\n                (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO)) {\n                return true;\n            }\n        }\n        // Otherwise, it's not a FUNCTION or DO (or a label directly wrapping one)\n        return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}