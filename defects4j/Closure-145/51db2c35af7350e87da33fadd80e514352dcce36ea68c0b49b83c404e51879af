{
    "generation": "  private boolean isOneExactlyFunctionOrDo(Node n) {\n      // For labels with block children, we need to ensure that a\n      // labeled FUNCTION or DO isn't generated when extraneous BLOCKs\n      // are skipped.\n      // Either a empty statement or an block with more than one child,\n      // way it isn't a FUNCTION or DO.\n      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO) &&\n             !hasBlockParent(n);\n  }\n\n  private boolean hasBlockParent(Node n) {\n      Node parent = n.getParent();\n      while (parent != null) {\n          if (parent.getType() == Token.BLOCK) {\n              return true;\n          }\n          parent = parent.getParent();\n      }\n      return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}