{
    "generation": "/**\n * @return Whether the Node is a DO or FUNCTION (with or without\n * labels), possibly wrapped in a LABEL node.\n */\nprivate boolean isOneExactlyFunctionOrDo(Node n) {\n    // For labels with block children, we need to ensure that a\n    // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n    // are skipped. \n    // Either an empty statement or a block with more than one child,\n    // way it isn't a FUNCTION or DO.\n\n    // Unwrap LABEL nodes.\n    while (n != null && n.getType() == Token.LABEL) {\n        n = n.getFirstChild();\n    }\n    return (n != null && (n.getType() == Token.FUNCTION || n.getType() == Token.DO));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}