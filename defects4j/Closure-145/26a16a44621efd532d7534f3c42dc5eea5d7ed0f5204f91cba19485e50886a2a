{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n        // For labels with block children, we need to ensure that a\n        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n        // are skipped. \n          // Either a empty statement or an block with more than one child,\n          // way it isn't a FUNCTION or DO.\n      // Check if the node itself is a FUNCTION or DO.\n      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n          return true;\n      }\n      // If the node is a LABEL, check if the statement it labels\n      // is a FUNCTION or DO.\n      if (n.getType() == Token.LABEL) {\n          if (n.hasChildren()) {\n              Node labeledStatement = n.getFirstChild();\n              return (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO);\n          }\n      }\n      return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}