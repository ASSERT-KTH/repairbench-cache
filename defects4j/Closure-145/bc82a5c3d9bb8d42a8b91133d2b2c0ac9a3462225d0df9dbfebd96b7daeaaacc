{
    "generation": "private boolean isOneExactlyFunctionOrDo(Node n) {\n  if (n == null) {\n    return false;\n  }\n  // If we have a block with exactly one child, use that child\u2019s info.\n  if (n.getType() == Token.BLOCK) {\n    return n.getChildCount() == 1 && isOneExactlyFunctionOrDo(n.getFirstChild());\n  }\n  // For labels, if the label\u2019s child is a block then we must not count it\n  // as \u201cone exactly\u201d so that extra braces will be preserved.\n  if (n.getType() == Token.LABEL) {\n    Node child = n.getLastChild();\n    if (child != null && child.getType() == Token.BLOCK) {\n      return false;\n    }\n    return isOneExactlyFunctionOrDo(n.getOnlyChild());\n  }\n  // Originally this function returned true if n was a FUNCTION or DO.\n  // However, to work around Safari/IE bugs we now want to force extra braces\n  // when the statement is a function or do loop.\n  return n.getType() != Token.FUNCTION && n.getType() != Token.DO;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}