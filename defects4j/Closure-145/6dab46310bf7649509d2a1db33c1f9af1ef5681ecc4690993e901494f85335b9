{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n        // For labels with block children, we need to ensure that a\n        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs\n        // are skipped. \n          // Either a empty statement or an block with more than one child,\n          // way it isn't a FUNCTION or DO.\n      // The original condition only checked if the node itself was a FUNCTION or DO.\n      // However, the Javadoc states \"with or without labels\".\n      // If the node 'n' is a LABEL, its first child might be the FUNCTION or DO.\n      // This fix ensures that labeled FUNCTION/DO statements are also identified.\n      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO ||\n              (n.getType() == Token.LABEL && n.getFirstChild() != null &&\n               (n.getFirstChild().getType() == Token.FUNCTION || n.getFirstChild().getType() == Token.DO)));\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}