{
    "generation": "/**\n * @return Whether the Node is a DO or FUNCTION (with or without\n * labels) and it has a parent that requires explicit block wrapping.\n */\nprivate boolean isOneExactlyFunctionOrDo(Node n) {\n    // Check if the node is a FUNCTION or DO\n    if (n.getType() != Token.FUNCTION && n.getType() != Token.DO) {\n        return false;\n    }\n\n    // Get the parent node\n    Node parent = n.getParent();\n\n    // If the parent is null, return false\n    if (parent == null) {\n        return false;\n    }\n\n    // Check if the parent is an IF or ELSE statement\n    if (parent.getType() == Token.IF || parent.getType() == Token.ELSE) {\n        // If the parent is an IF or ELSE, the current node needs explicit block wrapping\n        return true;\n    }\n\n    // For other cases, return false\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}