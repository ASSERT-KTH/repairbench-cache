{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION, or a LABEL containing\n   *     a DO or FUNCTION.\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n        // For labels with block children, we need to ensure that a\n        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs\n        // are skipped.\n        if (n.getType() == Token.LABEL) {\n          Node labeledStatement = n.getLastChild();\n          // Check the type of the actual statement, not the label node.\n          return (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO);\n        } else {\n          // Either a empty statement or an block with more than one child,\n          // way it isn't a FUNCTION or DO.\n          return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);\n        }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}