{
    "generation": "/**\n * @return Whether the Node is a FUNCTION or DO (with or without\n * labels) and has a parent that requires block wrapping (e.g., IF).\n */\nprivate boolean isOneExactlyFunctionOrDo(Node n) {\n    // Check if the node is a FUNCTION or DO\n    if (n.getType() != Token.FUNCTION && n.getType() != Token.DO) {\n        return false;\n    }\n\n    // Check if the parent requires block wrapping\n    Node parent = n.getParent();\n    if (parent == null) {\n        return false;\n    }\n\n    int parentType = parent.getType();\n    return parentType == Token.IF || parentType == Token.ELSE;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}