{
    "generation": "/**\n * @return Whether the Node is a DO or FUNCTION (with or without\n * labels) and it has no block statement as its parent or it is the only child\n * of the block statement.\n */\nprivate boolean isOneExactlyFunctionOrDo(Node n) {\n    // For labels with block children, we need to ensure that a\n    // labeled FUNCTION or DO isn't generated when extraneous BLOCKs \n    // are skipped. \n    // Either an empty statement or a block with more than one child,\n    // way it isn't a FUNCTION or DO.\n    if (n.getType() != Token.FUNCTION && n.getType() != Token.DO) {\n        return false;\n    }\n    Node parent = n.getParent();\n    if (parent == null) {\n        return true;\n    }\n    if (parent.getType() == Token.BLOCK) {\n        return parent.hasOneChild();\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}