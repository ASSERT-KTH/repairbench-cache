{
    "generation": "    public TarArchiveEntry getNextTarEntry() throws IOException {\n        if (hasHitEOF) {\n            return null;\n        }\n\n        if (currEntry != null) {\n            long numToSkip = entrySize - entryOffset;\n\n            while (numToSkip > 0) {\n                long skipped = skip(numToSkip);\n                if (skipped <= 0) {\n                    throw new RuntimeException(\"failed to skip current tar entry\");\n                }\n                numToSkip -= skipped;\n            }\n\n            // Skip padding to reach the next header\n            long padding = (512 - (entrySize % 512)) % 512;\n            while (padding > 0) {\n                long skipped = skip(padding);\n                if (skipped <= 0) {\n                    throw new RuntimeException(\"failed to skip padding\");\n                }\n                padding -= skipped;\n            }\n\n            readBuf = null;\n        }\n\n        byte[] headerBuf = getRecord();\n\n        if (hasHitEOF) {\n            currEntry = null;\n            return null;\n        }\n\n        currEntry = new TarArchiveEntry(headerBuf);\n        entryOffset = 0;\n        entrySize = currEntry.getSize();\n\n        if (currEntry.isGNULongNameEntry()) {\n            // Read the long name data\n            StringBuffer longName = new StringBuffer();\n            byte[] buf = new byte[SMALL_BUFFER_SIZE];\n            long remaining = entrySize;\n            while (remaining > 0) {\n                int len = (int) Math.min(remaining, buf.length);\n                int bytesRead = read(buf, 0, len);\n                if (bytesRead == -1) {\n                    throw new IOException(\"Unexpected EOF reading long name entry\");\n                }\n                longName.append(new String(buf, 0, bytesRead));\n                entryOffset += bytesRead; // Track bytes read\n                remaining -= bytesRead;\n            }\n\n            // Get the actual entry following the long name\n            getNextEntry();\n            if (currEntry == null) {\n                return null;\n            }\n\n            // Remove trailing null terminator\n            if (longName.length() > 0 && longName.charAt(longName.length() - 1) == 0) {\n                longName.deleteCharAt(longName.length() - 1);\n            }\n            currEntry.setName(longName.toString());\n        }\n\n        if (currEntry.isPaxHeader()) {\n            paxHeaders();\n        }\n\n        if (currEntry.isGNUSparse()) {\n            readGNUSparse();\n        }\n\n        entrySize = currEntry.getSize();\n        return currEntry;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}