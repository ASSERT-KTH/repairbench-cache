{
    "generation": "public List<Connection.KeyVal> formData() {\n    ArrayList<Connection.KeyVal> data = new ArrayList<>();\n\n    // iterate the form elements to build the form data\n    for (Element el : elements()) {\n        if (!el.tag().isFormSubmittable()) continue; // contents not submittable\n        if (el.hasAttr(\"disabled\")) continue; // skip disabled elements\n        \n        String name = el.attr(\"name\");\n        if (name.length() == 0) continue; // skip elements without a name (allows attribute omission)\n        \n        Tag tag = el.tag();\n        if (\"select\".equals(tag.normalName())) {\n            Elements options = el.select(\"option[selected]\");\n            boolean hasValue = false;\n            for (Element option : options) {\n                if (!option.hasAttr(\"value\")) {\n                    data.add(new Connection.KeyVal(name, option.text()));\n                } else {\n                    data.add(new Connection.KeyVal(name, option.attr(\"value\")));\n                }\n                hasValue = true;\n            }\n            // if no selected options, check if multiple, if not then default to first option\n            if (!hasValue && el.attr(\"multiple\").length() == 0) {\n                Element option = el.selectFirst(\"option\");\n                if (option != null) {\n                    data.add(new Connection.KeyVal(name, option.hasAttr(\"value\") ? option.attr(\"value\") : option.text()));\n                }\n            }\n        } else if (\"textarea\".equals(tag.normalName())) {\n            data.add(new Connection.KeyVal(name, el.text()));\n        } else {\n            String val = el.val();\n            if (\"checkbox\".equals(val) && !el.hasAttr(\"checked\")) continue; // skip unchecked checkbox\n            data.add(new Connection.KeyVal(name, val));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}