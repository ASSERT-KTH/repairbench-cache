{
    "generation": "public List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n    \n    // iterate the form control elements and accumulate their values\n    for (Element el: elements) {\n        if (!el.tag().isFormSubmittable()) continue; // skip non-submittable elements\n        if (el.hasAttr(\"disabled\")) continue; // skip disabled elements\n        if (el.parent() != null && el.parent().tag().equals(\"form\")) { // only include elements still in the form\n            String name = el.attr(\"name\");\n            if (name.length() == 0) continue;\n            String type = el.attr(\"type\");\n            \n            if (\"select\".equals(el.tagName())) {\n                Elements options = el.select(\"option[selected]\");\n                for (Element option: options) {\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n                }\n            } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n                // only add checkbox or radio if they have the checked attribute\n                if (el.hasAttr(\"checked\")) {\n                    data.add(HttpConnection.KeyVal.create(name, el.val().length() > 0 ? el.val() : \"on\"));\n                }\n            } else {\n                data.add(HttpConnection.KeyVal.create(name, el.val()));\n            }\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}