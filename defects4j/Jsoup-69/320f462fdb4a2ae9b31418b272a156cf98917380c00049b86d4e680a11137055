{
    "generation": "public List<Connection.KeyVal> formData() {\n    final ArrayList<Connection.KeyVal> data = new ArrayList<>();\n\n    // Dynamically select all form input elements with a 'name' attribute within this form.\n    // This ensures that the formData reflects the current state of the DOM,\n    // rather than relying on a potentially stale cached list of elements.\n    // It includes input, textarea, select, and button elements, consistent with isFormListed().\n    Elements formInputs = select(\"input[name], textarea[name], select[name], button[name]\");\n\n    for (Element el : formInputs) {\n        // Skip disabled elements, as they are not submitted in form data.\n        if (el.hasAttr(\"disabled\")) {\n            continue;\n        }\n\n        String name = el.attr(\"name\");\n        // Ensure the element has a non-empty 'name' attribute.\n        // (The selector already tries to ensure this, but a defensive check is good).\n        if (name.length() == 0) {\n            continue;\n        }\n\n        // Handle checkboxes and radio buttons: only include if they are 'checked'.\n        if (el.is(\"input[type=checkbox], input[type=radio]\")) {\n            if (!el.hasAttr(\"checked\")) {\n                continue;\n            }\n        }\n\n        // Handle multiple select boxes: include all 'selected' options.\n        if (el.is(\"select[multiple]\")) {\n            for (Element option : el.select(\"option[selected]\")) {\n                data.add(org.jsoup.Connection.KeyVal.create(name, option.val()));\n            }\n        } else {\n            // For other input types (text, password, hidden, submit, textarea, single-select, button),\n            // add their name and value.\n            data.add(org.jsoup.Connection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}