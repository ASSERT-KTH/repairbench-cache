{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    // ensure that only inputs currently attached to this form element are considered\n    List<Connection.KeyVal> data = new ArrayList<>();\n    Elements elements = elements(); // gets all associated input/textarea/select within this FormElement\n    for (Element el : elements) {\n        if (el.parent() == null) continue; // skip detached elements\n        if (el.hasAttr(\"name\")) {\n            String type = el.attr(\"type\");\n            String tagName = el.tagName();\n            if (\"select\".equals(tagName)) {\n                Elements options = el.select(\"option[selected]\");\n                boolean set = false;\n                for (Element option : options) {\n                    data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), option.val()));\n                    set = true;\n                }\n                if (!set) {\n                    Element option = el.selectFirst(\"option\");\n                    if (option != null)\n                        data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), option.val()));\n                }\n            } else if (!\"radio\".equalsIgnoreCase(type) && !\"checkbox\".equalsIgnoreCase(type)) {\n                data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), el.val()));\n            } else if (el.hasAttr(\"checked\")) {\n                data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), el.val()));\n            }\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}