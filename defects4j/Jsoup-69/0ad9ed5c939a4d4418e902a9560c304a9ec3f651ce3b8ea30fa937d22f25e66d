{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();\n    for (Element el : elements) {\n        // skip elements that have been removed from the DOM (e.g. via Element.remove())\n        if (el.parent() == null)\n            continue;\n        // skip disabled controls\n        if (el.hasAttr(\"disabled\"))\n            continue;\n        String name = el.attr(\"name\");\n        if (name.length() == 0)\n            continue;\n        String tag = el.tagName();\n        if (\"input\".equals(tag)) {\n            String type = el.attr(\"type\").toLowerCase();\n            if (\"submit\".equals(type) || \"button\".equals(type))\n                continue;\n            if ((\"checkbox\".equals(type) || \"radio\".equals(type)) && !el.hasAttr(\"checked\"))\n                continue;\n            data.add(Connection.KeyVal.create(name, el.val(), el.baseUri()));\n        } else if (\"textarea\".equals(tag)) {\n            data.add(Connection.KeyVal.create(name, el.text(), el.baseUri()));\n        } else if (\"button\".equals(tag)) {\n            data.add(Connection.KeyVal.create(name, el.val(), el.baseUri()));\n        } else if (\"select\".equals(tag)) {\n            Elements options = el.select(\"option[selected]\");\n            // if no selected and not multiple, pick first\n            if (options.isEmpty() && !el.hasAttr(\"multiple\")) {\n                Element firstOpt = el.selectFirst(\"option\");\n                if (firstOpt != null)\n                    options = new Elements(firstOpt);\n            }\n            for (Element option : options) {\n                String value = option.hasAttr(\"value\") ? option.attr(\"value\") : option.text();\n                data.add(Connection.KeyVal.create(name, value, el.baseUri()));\n            }\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}