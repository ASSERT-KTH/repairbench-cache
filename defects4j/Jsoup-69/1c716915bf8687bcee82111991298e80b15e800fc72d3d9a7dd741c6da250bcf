{
    "generation": "public List<Connection.KeyVal> formData() {\n    Validate.isTrue(tagName().equals(\"form\"),\n        \"Form data only available on form elements\");\n    List<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();\n    for (Element el : elements) {\n        // Skip inputs/textareas/selects that have been removed from the form\n        if (el.parent() == null)\n            continue;\n        if (el.hasAttr(\"disabled\") || !el.hasAttr(\"name\"))\n            continue;\n\n        String key = el.attr(\"name\");\n        String tag = el.tagName();\n\n        if (\"input\".equals(tag)) {\n            String type = el.attr(\"type\");\n            // skip unchecked checkboxes/radios\n            if ((\"checkbox\".equals(type) || \"radio\".equals(type)) && !el.hasAttr(\"checked\"))\n                continue;\n            // for submit/image/button we include value if present\n            String val = el.hasAttr(\"value\") ? el.attr(\"value\") : \"\";\n            data.add(Connection.KeyVal.create(key, val));\n\n        } else if (\"textarea\".equals(tag)) {\n            data.add(Connection.KeyVal.create(key, el.text()));\n\n        } else if (\"select\".equals(tag)) {\n            boolean multiple = el.hasAttr(\"multiple\");\n            for (Element option : el.select(\"option\")) {\n                boolean selected = option.hasAttr(\"selected\");\n                if (selected || (!multiple && !selected)) {\n                    String optVal = option.hasAttr(\"value\")\n                        ? option.attr(\"value\")\n                        : option.text();\n                    data.add(Connection.KeyVal.create(key, optVal));\n                }\n            }\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}