{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n    // Only consider elements that are still connected to the DOM (i.e., no longer removed)\n    for (Element el : elements) {\n        // skip elements that have been removed from the DOM\n        if (!el.hasParent())\n            continue;\n        if (!el.tag().isFormSubmittable())\n            continue;\n        String name = el.attr(\"name\");\n        if (name.length() == 0)\n            continue;\n\n        if (el.tagName().equals(\"select\")) {\n            Elements options = el.select(\"option[selected]\");\n            boolean set = false;\n            for (Element option : options) {\n                data.add(HttpConnection.KeyVal.create(name, option.val()));\n                set = true;\n            }\n            if (!set) {\n                // only add first option if no option selected\n                Element option = el.selectFirst(\"option\");\n                if (option != null)\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n            }\n        } else if (el.tagName().equals(\"checkbox\") || el.tagName().equals(\"radio\")) {\n            if (el.hasAttr(\"checked\")) {\n                data.add(HttpConnection.KeyVal.create(name, el.val()));\n            }\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}