{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n    // Use select to only get currently present input elements of the form\n    // 'input', 'textarea', and 'select' that have a name attribute\n    Elements elements = this.select(\"input, select, textarea\");\n    for (Element el : elements) {\n        // Only process elements that are direct descendants of this form\n        Element parentForm = el.parents().select(\"form\").first();\n        if (parentForm != null && parentForm == this) {\n            if (el.hasAttr(\"name\") && !el.tagName().equalsIgnoreCase(\"button\")) {\n                String type = el.attr(\"type\");\n                if (\"radio\".equalsIgnoreCase(type) || \"checkbox\".equalsIgnoreCase(type)) {\n                    if (el.hasAttr(\"checked\")) {\n                        data.add(Connection.KeyVal.create(el.attr(\"name\"), el.val()));\n                    }\n                } else {\n                    data.add(Connection.KeyVal.create(el.attr(\"name\"), el.val()));\n                }\n            }\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}