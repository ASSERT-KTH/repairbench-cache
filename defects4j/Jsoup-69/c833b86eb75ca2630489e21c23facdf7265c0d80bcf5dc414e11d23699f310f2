{
    "generation": "public List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n    Elements inputs = getElementsByTag(\"input\")\n            .stream()\n            .filter(element -> !element.hasAttr(\"type\") ||\n                              !element.attr(\"type\").equals(\"submit\") ||\n                              element.hasAttr(\"name\"))\n            .collect(Collectors.toList());\n\n    // Also include other form elements like textarea, select\n    Elements otherInputs = select(\"textarea,select\");\n    inputs.addAll(otherInputs);\n\n    // Collect data\n    for (Element input : inputs) {\n        if (input.hasAttr(\"disabled\")) continue;\n        String name = input.attr(\"abs:name\");\n        if (name.length() == 0) continue;\n\n        String type = input.hasAttr(\"type\") ? input.attr(\"type\").trim().toLowerCase() : \"text\";\n        if (input.tag().getName().equals(\"input\") && type.equals(\"file\")) continue; // skip files\n\n        String value;\n        if (input.tag().getName().equals(\"textarea\")) {\n            value = input.text();\n        } else if (input.tag().getName().equals(\"select\")) {\n            Element select = (Element)input.select(\"option[selected]\").first();\n            value = select == null ? \"\" : select.val();\n        } else if (input.hasAttr(\"value\")) {\n            value = input.val();\n        } else {\n            value = \"\";\n        }\n\n        if (type.equals(\"checkbox\") || type.equals(\"radio\")) {\n            if (!input.hasAttr(\"checked\") && !value.equalsIgnoreCase(\"on\")) continue;\n        }\n\n        data.add(new Connection.KeyVal(name, value));\n    }\n\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}