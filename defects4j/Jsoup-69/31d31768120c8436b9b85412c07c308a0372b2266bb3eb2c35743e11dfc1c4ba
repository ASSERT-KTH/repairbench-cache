{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();\n    // re\u2010query the live DOM for current form controls, so removed inputs are not included\n    for (Element el : this.select(\"input, textarea, select\")) {\n        // must have a non-empty name and not be disabled\n        if (!el.hasAttr(\"name\")) continue;\n        String name = el.attr(\"name\").trim();\n        if (name.isEmpty() || el.hasAttr(\"disabled\")) continue;\n\n        String tag = el.tagName();\n        if (\"input\".equals(tag)) {\n            String type = el.attr(\"type\").toLowerCase();\n            // skip submit/button/image inputs\n            if (\"submit\".equals(type) || \"button\".equals(type) || \"image\".equals(type))\n                continue;\n            // for checkbox/radio, only include if checked\n            if ((\"checkbox\".equals(type) || \"radio\".equals(type)) && !el.hasAttr(\"checked\"))\n                continue;\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n\n        } else if (\"textarea\".equals(tag)) {\n            data.add(HttpConnection.KeyVal.create(name, el.text()));\n\n        } else if (\"select\".equals(tag)) {\n            // only options that are currently selected\n            for (Element opt : el.select(\"option[selected]\")) {\n                String val = opt.hasAttr(\"value\") ? opt.attr(\"value\") : opt.text();\n                data.add(HttpConnection.KeyVal.create(name, val));\n            }\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}