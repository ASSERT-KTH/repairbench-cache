{
    "generation": "public List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n\n    // Iterate through all form-associated elements dynamically each time\n    Elements elements = select(\"input, select, textarea, button\");\n    for (Element el : elements) {\n        if (!el.tag().isFormSubmittable()) continue; // skip non-submittable elements\n        if (el.hasAttr(\"disabled\")) continue; // skip disabled elements\n        String name = el.attr(\"name\");\n        if (name.length() == 0) continue;\n        String type = el.attr(\"type\");\n\n        if (\"select\".equals(el.normalName())) {\n            Element select = el;\n            Elements options = select.select(\"option[selected]\");\n            boolean set = false;\n            for (Element option : options) {\n                data.add(HttpConnection.KeyVal.create(name, option.val()));\n                set = true;\n            }\n            if (!set) {\n                Element option = select.selectFirst(\"option\");\n                if (option != null)\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n            }\n        } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n            if (el.hasAttr(\"checked\")) {\n                String value = el.val().length() > 0 ? el.val() : \"on\";\n                data.add(HttpConnection.KeyVal.create(name, value));\n            }\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}