{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n    for (Element el : elements) {\n        // skip if the element has been removed from this form\n        Node node = el;\n        boolean inForm = false;\n        while (node != null) {\n            if (node == this) {\n                inForm = true;\n                break;\n            }\n            node = node.parent();\n        }\n        if (!inForm)\n            continue;\n\n        String name = el.attr(\"name\");\n        if (name.isEmpty() || el.hasAttr(\"disabled\"))\n            continue;\n\n        String tag = el.tagName();\n        if (tag.equals(\"input\")) {\n            String type = el.attr(\"type\").toLowerCase();\n            // skip un\u2010valued buttons\n            if ((type.equals(\"submit\") || type.equals(\"button\") || type.equals(\"reset\")) && !el.hasAttr(\"value\"))\n                continue;\n            // skip unchecked checkboxes/radios\n            if ((type.equals(\"checkbox\") || type.equals(\"radio\")) && !el.hasAttr(\"checked\"))\n                continue;\n            data.add(Connection.KeyVal.create(name, el.val()));\n\n        } else if (tag.equals(\"textarea\")) {\n            data.add(Connection.KeyVal.create(name, el.text()));\n\n        } else if (tag.equals(\"select\")) {\n            Elements options = el.select(\"option[selected]\");\n            if (options.isEmpty())\n                options = el.select(\"option\");\n            for (Element opt : options) {\n                data.add(Connection.KeyVal.create(name, opt.val()));\n            }\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}