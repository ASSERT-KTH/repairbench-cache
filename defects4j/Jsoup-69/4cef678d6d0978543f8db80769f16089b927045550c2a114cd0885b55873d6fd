{
    "generation": "public List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n    // Use a fresh selector on the live DOM so that removed form elements are not included.\n    Elements elements = this.select(\"input[name], textarea[name], select[name], keygen[name], button[name]\");\n    for (Element el : elements) {\n        // Skip disabled elements.\n        if (el.hasAttr(\"disabled\"))\n            continue;\n        String tag = el.tagName();\n        if (\"input\".equals(tag)) {\n            String type = el.attr(\"type\").toLowerCase();\n            // For radio/checkbox, only include if checked.\n            if ((type.equals(\"radio\") || type.equals(\"checkbox\")) && !el.hasAttr(\"checked\"))\n                continue;\n            data.add(Connection.KeyVal.create(el.attr(\"name\"), el.val()));\n        } else if (\"textarea\".equals(tag)) {\n            data.add(Connection.KeyVal.create(el.attr(\"name\"), el.text()));\n        } else if (\"select\".equals(tag)) {\n            // For select elements, add each selected option.\n            for (Element option : el.select(\"option[selected]\"))\n                data.add(Connection.KeyVal.create(el.attr(\"name\"), option.val()));\n        } else if (\"button\".equals(tag)) {\n            // Only include buttons if no type is specified or it is of type submit.\n            String btnType = el.attr(\"type\");\n            if (btnType.isEmpty() || btnType.equalsIgnoreCase(\"submit\"))\n                data.add(Connection.KeyVal.create(el.attr(\"name\"), el.val()));\n        } else if (\"keygen\".equals(tag)) {\n            data.add(Connection.KeyVal.create(el.attr(\"name\"), el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}