{
    "generation": "/**\n * Get the data elements of this form that are submittable. The returned list is a copy of the data, so changes to the\n * contents of the list will not be reflected in the DOM.\n * @return List of {@link Connection.KeyVal}s of submittable form data\n */\npublic List<Connection.KeyVal> formData() {\n    ArrayList<Connection.KeyVal> data = new ArrayList<>();\n    \n    // Only include elements that are still attached to the DOM\n    Elements elements = this.select(\"input, textarea, select\");\n    \n    for (Element el : elements) {\n        if (!el.hasAttr(\"name\") || \"submit\".equalsIgnoreCase(el.attr(\"type\")))\n            continue; // Skip elements without names and submit inputs\n            \n        String name = el.attr(\"name\");\n        if (name.length() == 0) continue;\n        String type = el.attr(\"type\");\n        \n        if (\"select\".equals(el.normalName())) {\n            Elements options = el.select(\"option[selected]\");\n            boolean found = false;\n            for (Element option : options) {\n                data.add(HttpConnection.KeyVal.create(name, option.val()));\n                found = true;\n            }\n            if (!found && el.select(\"option\").size() > 0)\n                data.add(HttpConnection.KeyVal.create(name, el.select(\"option\").first().val()));\n        } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n            if (el.hasAttr(\"checked\"))\n                data.add(HttpConnection.KeyVal.create(name, el.val().length() > 0 ? el.val() : \"on\"));\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}