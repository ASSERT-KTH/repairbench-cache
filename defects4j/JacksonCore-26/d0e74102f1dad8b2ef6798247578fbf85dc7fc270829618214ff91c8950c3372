{
    "generation": "@Override\npublic void feedInput(byte[] buf, int start, int end) throws IOException\n{\n    // Must not have remaining input\n    if (_inputPtr < _inputEnd) {\n        _reportError(\"Still have %d undecoded bytes, should not call 'feedInput'\",\n                     _inputEnd - _inputPtr);\n    }\n    if (end < start) {\n        _reportError(\"Input end (%d) may not be before start (%d)\", end, start);\n    }\n    if (_endOfInput) {\n        _reportError(\"Already closed, can not feed more input\");\n    }\n\n    // 1) Account for the bytes we fully processed in the previous buffer\n    _currInputProcessed += _origBufferLen;\n\n    // 2) Compute how many bytes there were from the row\u2010start to the end\n    //    of the old buffer; in the new buffer (which we'll copy to index 0),\n    //    the row\u2010start pointer must be shifted to \u2013that length.\n    int pastRow = _inputEnd - _currInputRowStart;\n    _currInputRowStart = -pastRow;\n\n    // 3) Copy only the [start,end) slice into a fresh buffer that begins at 0\n    int len = end - start;\n    byte[] newBuf = new byte[len];\n    System.arraycopy(buf, start, newBuf, 0, len);\n\n    // 4) Install the new buffer\n    _inputBuffer = newBuf;\n    _inputPtr = 0;\n    _inputEnd = len;\n    _origBufferLen = len;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}