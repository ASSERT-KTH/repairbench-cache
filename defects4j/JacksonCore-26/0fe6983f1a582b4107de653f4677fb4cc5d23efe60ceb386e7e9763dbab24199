{
    "generation": "@Override\npublic void feedInput(byte[] buf, int start, int end) throws IOException {\n    // Must not have remaining input\n    if (_inputPtr < _inputEnd) {\n        _reportError(\"Still have %d undecoded bytes, should not call 'feedInput'\",\n                     _inputEnd - _inputPtr);\n    }\n    // sanity check on arguments\n    if (end < start) {\n        _reportError(\"Input end (%d) may not be before start (%d)\", end, start);\n    }\n    // must not have been closed already\n    if (_endOfInput) {\n        _reportError(\"Already closed, can not feed more input\");\n    }\n\n    // save old state for adjustments\n    int oldEnd = _inputEnd;\n    int oldRowStart = _currInputRowStart;\n    int oldBufLen = _origBufferLen;\n\n    // advance total processed by amount of last segment\n    _currInputProcessed += oldBufLen;\n\n    // install the new buffer/pointers\n    _inputBuffer = buf;\n    _inputPtr    = start;\n    _inputEnd    = end;\n    _origBufferLen = end - start;\n\n    // adjust row\u2010start so column counts carry across chunks\n    if (oldBufLen == 0) {\n        // first feed: row begins at the start of this segment\n        _currInputRowStart = start;\n    } else {\n        // continuing a line from previous buffer\n        _currInputRowStart = start - (oldEnd - oldRowStart);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}