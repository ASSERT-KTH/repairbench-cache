{
    "generation": "@Override\npublic void feedInput(byte[] buf, int start, int end) throws IOException\n{\n    // Must not have remaining input\n    if (_inputPtr < _inputEnd) {\n        _reportError(\"Still have %d undecoded bytes, should not call 'feedInput'\",\n                     _inputEnd - _inputPtr);\n    }\n    if (end < start) {\n        _reportError(\"Input end (%d) may not be before start (%d)\", end, start);\n    }\n    // and shouldn't have been marked as end-of-input\n    if (_endOfInput) {\n        _reportError(\"Already closed, can not feed more input\");\n    }\n\n    // 1) advance total processed by length of previous chunk\n    _currInputProcessed += _origBufferLen;\n    // 2) adjust row\u2010start so that it remains correct across the boundary\n    _currInputRowStart -= _origBufferLen;\n\n    // 3) slice out the new input so that ptr/row\u2010start are relative to 0\n    int sliceLen = end - start;\n    byte[] slice = new byte[sliceLen];\n    System.arraycopy(buf, start, slice, 0, sliceLen);\n\n    // 4) install the new buffer\n    _inputBuffer = slice;\n    _inputPtr     = 0;\n    _inputEnd     = sliceLen;\n    _origBufferLen = sliceLen;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}