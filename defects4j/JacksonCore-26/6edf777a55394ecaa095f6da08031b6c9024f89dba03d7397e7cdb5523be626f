{
    "generation": "@Override\npublic void feedInput(byte[] buf, int start, int end) throws IOException\n{\n    // Must not have remaining input\n    if (_inputPtr < _inputEnd) {\n        _reportError(\"Still have %d undecoded bytes, should not call 'feedInput'\", _inputEnd - _inputPtr);\n    }\n    if (end < start) {\n        _reportError(\"Input end (%d) may not be before start (%d)\", end, start);\n    }\n    // and shouldn't have been marked as end-of-input\n    if (_endOfInput) {\n        _reportError(\"Already closed, can not feed more input\");\n    }\n\n    // Update the count of processed input from the previous segment:\n    _currInputProcessed += _origBufferLen;\n    // Adjust the row start position to keep location offsets continuous.\n    // For the very first feed (_origBufferLen == 0) we set row start equal to the feed's start;\n    // for subsequent feeds we back up one byte so that column numbers continue correctly.\n    _currInputRowStart = (_origBufferLen == 0) ? start : (start - 1);\n\n    // And then update buffer settings\n    _inputBuffer = buf;\n    _inputPtr = start;\n    _inputEnd = end;\n    _origBufferLen = end - start;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}