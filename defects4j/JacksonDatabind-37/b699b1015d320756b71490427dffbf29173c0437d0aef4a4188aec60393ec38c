{
    "generation": "    @Override\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        // Should not be called if identical, but just in case...\n        if (_class == subclass) {\n            return this;\n        }\n\n        // ASSERT check removed from 2.3 (fasterxml/jackson-databind#186)\n        /*\n        if (!_class.isAssignableFrom(subclass)) {\n             throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n                     +_class.getName());\n        }\n        */\n\n        // 15-Jan-2016, tatu: As per [databind#1083], need to be careful NOT to retain\n        //    type parameters from the super class; probably need to re-resolve.\n        //    Also: super class must be specific, not generic.\n\n        // 19-May-2017, tatu: As per [databind#1613], super-class will be this\n        //     type, not its super-class (regardless of how they differ)\n        // 08-Nov-2018, tatu: And fixing super-class binding passing `this` finally fixed\n        //    the problem. Original code passed `_superClass` which was just wrong.\n        return new SimpleType(subclass,\n                // NOTE: per [databind#1083], MUST drop TypeBindings here\n                _bindings.emptyBindings(), /* TypeBindings */\n                // Should be this type, not inherited super-class\n                this, /* super-class */\n                _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}