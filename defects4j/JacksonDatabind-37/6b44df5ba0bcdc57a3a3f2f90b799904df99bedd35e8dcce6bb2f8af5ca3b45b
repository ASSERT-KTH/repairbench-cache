{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // Attempt to narrow super types and interfaces if possible\n    JavaType superClass = (_superClass == null) ? null : _superClass.narrowBy(subclass);\n    JavaType[] superInterfaces = null;\n    if (_superInterfaces != null) {\n        superInterfaces = new JavaType[_superInterfaces.length];\n        for (int i = 0; i < _superInterfaces.length; ++i) {\n            superInterfaces[i] = _superInterfaces[i].narrowBy(subclass);\n        }\n    }\n    return new SimpleType(subclass, _bindings, superClass, superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}