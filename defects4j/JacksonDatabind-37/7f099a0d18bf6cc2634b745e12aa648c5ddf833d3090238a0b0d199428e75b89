{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass) {\n    if (_class == subclass) {\n        return this;\n    }\n    // Should we check that there is a sub\u2010class relationship? (omitted for placeholder types)\n    // Re-resolve everything via the global TypeFactory so that\n    // super-class, interfaces and bindings are correct for the subclass:\n    com.fasterxml.jackson.databind.type.TypeFactory tf = com.fasterxml.jackson.databind.type.TypeFactory.defaultInstance();\n    // construct a new SimpleType for the subclass, carrying over the old bindings\n    com.fasterxml.jackson.databind.type.SimpleType narrowed = tf.simpleType(subclass, _bindings);\n    // copy any handlers and static\u2010typing flag\n    if (_valueHandler != null) {\n        narrowed = narrowed.withValueHandler(_valueHandler);\n    }\n    if (_typeHandler != null) {\n        narrowed = narrowed.withTypeHandler(_typeHandler);\n    }\n    if (_asStatic) {\n        narrowed = narrowed.withStaticTyping();\n    }\n    return narrowed;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}