{
    "generation": "    @Override\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // Re-resolve the super class and interfaces for the subclass\n        JavaType superClass = _class.getSuperClass();\n        JavaType[] superInterfaces = _class.getSuperInterfaces();\n        // Use empty bindings as the subclass might be a raw type\n        return new SimpleType(subclass, TypeBindings.empty(), superClass, superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}