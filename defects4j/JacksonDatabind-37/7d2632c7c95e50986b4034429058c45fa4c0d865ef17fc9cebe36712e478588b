{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    /* Update _superClass and _superInterfaces to match subclass's hierarchy */\n    // Determine new super-type, if any\n    JavaType superClassType = null;\n    if (_class.isAssignableFrom(subclass)) {\n        // Only if subclass is compatible with _class otherwise, null\n        superClassType = this;\n    }\n    // Create new instance with updated subclass but inherited bindings and handlers\n    return new SimpleType(subclass, _bindings, superClassType, null,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}