{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass) {\n    if (_class == subclass) {\n        return this;\n    }\n    // Instead of blindly re\u2010using old super\u2010types, re\u2010resolve the new class\n    com.fasterxml.jackson.databind.type.TypeFactory tf = com.fasterxml.jackson.databind.type.TypeFactory.defaultInstance();\n    JavaType newType = tf.constructType(subclass);\n    if (_valueHandler != null) {\n        newType = newType.withValueHandler(_valueHandler);\n    }\n    if (_typeHandler != null) {\n        newType = newType.withTypeHandler(_typeHandler);\n    }\n    if (_asStatic) {\n        newType = newType.withStaticTyping();\n    }\n    return newType;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}