{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass) {\n    if (_class == subclass) {\n        return this;\n    }\n    // 15-Jan-2016, tatu: Almost yes, but there are some complications with\n    //    placeholder values, so no.\n    // 15-Jan-2015, tatu: Not correct; should really re-resolve...\n    // However, we need to ensure that the new type is compatible with the original type\n    // to avoid unrecognized property exceptions.\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \" + subclass.getName() + \" not sub-type of \"\n                + _class.getName());\n    }\n    return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}