{
    "generation": "@Override\npublic void process(Node externs, Node root) {\n  NodeTraversal.traverse(compiler, root, this);\n  if (MAKE_LOCAL_NAMES_UNIQUE) {\n    MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique() {\n      @Override\n      public void visit(NodeTraversal t, Node n, Node parent) {\n        if (n.isName() && \"arguments\".equals(n.getString())) {\n          // Skip renaming the 'arguments' variable\n          return;\n        }\n        super.visit(t, n, parent);\n      }\n    };\n    NodeTraversal t = new NodeTraversal(compiler, renamer);\n    t.traverseRoots(externs, root);\n  }\n  removeDuplicateDeclarations(root);\n  new PropogateConstantAnnotations(compiler, assertOnChange)\n      .process(externs, root);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}