{
    "generation": "@Override\npublic void process(Node externs, Node root) {\n  NodeTraversal.traverse(compiler, root, this);\n  if (MAKE_LOCAL_NAMES_UNIQUE) {\n    MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n    NodeTraversal t = new NodeTraversal(compiler, renamer);\n    t.traverseRoots(externs, root);\n  }\n  removeDuplicateDeclarations(root);\n  new PropagateConstantAnnotations(compiler, assertOnChange)\n      .process(externs, root);\n}\n\n// Inside removeDuplicateDeclarations, added a condition to skip parameters\nprivate void removeDuplicateDeclarations(Node root) {\n  // ... existing code\n  for (Node declaration : declarations) {\n    if (!declaration.isParam() && isDuplicate) {\n      // Remove the duplicate declaration\n    }\n  }\n  // ... existing code\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}