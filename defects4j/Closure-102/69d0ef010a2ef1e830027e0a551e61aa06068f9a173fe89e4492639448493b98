{
    "generation": "@Override\npublic void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, root, this);\n    if (MAKE_LOCAL_NAMES_UNIQUE) {\n        MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n        NodeTraversal t = new NodeTraversal(compiler, renamer);\n        t.traverseRoots(externs, root);\n    }\n    removeDuplicateDeclarations(root);\n    // Skip propagation for functions that reference 'arguments'\n    if (!NodeUtil.has(root, new NodeUtil.MatchDeclaration(), NodeUtil.MATCH_NOT_FUNCTION)) {\n        new PropogateConstantAnnotations(compiler, assertOnChange)\n            .process(externs, root);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}