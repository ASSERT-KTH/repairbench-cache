{
    "generation": "@Override\npublic void process(Node externs, Node root) {\n  // First do our normal peephole traversal\n  NodeTraversal.traverse(compiler, root, this);\n\n  // Remove duplicate var-declarations (in particular\n  // this will strip out \u201cvar arguments = \u2026\u201d when it merely\n  // shadows the built-in arguments object).\n  removeDuplicateDeclarations(root);\n\n  // Only after duplicate-removal do we run the \u201cmake local\n  // names unique\u201d pass.\n  if (MAKE_LOCAL_NAMES_UNIQUE) {\n    MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n    NodeTraversal t = new NodeTraversal(compiler, renamer);\n    t.traverseRoots(externs, root);\n  }\n\n  // Finally, propagate any constant @annotations.\n  new PropogateConstantAnnotations(compiler, assertOnChange)\n      .process(externs, root);\n}",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}