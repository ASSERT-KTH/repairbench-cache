{
    "generation": "  @Override\n  public void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, root, this);\n    if (MAKE_LOCAL_NAMES_UNIQUE) {\n      MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n      NodeTraversal t = new NodeTraversal(compiler, renamer);\n      t.traverseRoots(externs, root);\n    }\n    removeDuplicateDeclarations(root);\n    new PropogateConstantAnnotations(compiler, assertOnChange)\n        .process(externs, root);\n    // Workaround for issue 115: Arguments shadow variable.\n    Node nameNode = root.getFirstChild();\n    if (nameNode != null && nameNode.getType() == Token.FUNCTION) {\n      for (Node parameter : nameNode.getChildAtIndex(1).getChildren()) {\n        if (parameter.getString().equals(\"arguments\")) {\n          compiler.report(\n              new JSError(\n                  parameter,\n                  \"The name 'arguments' is a reserved word and should not be used as a variable name.\"));\n        }\n      }\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}