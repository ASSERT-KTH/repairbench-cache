{
    "generation": "int readEscape() throws IOException {\n    // the escape char has just been read (normally a backslash or the configured escape)\n    int c = in.read();\n    if (c == END_OF_STREAM) {\n        throw new IOException(\"EOF whilst processing escape sequence\");\n    }\n    switch (c) {\n        case 'r':\n            return CR;\n        case 'n':\n            return LF;\n        case 't':\n            return TAB;\n        case 'b':\n            return BACKSPACE;\n        case 'f':\n            return FF;\n        case CR:\n        case LF:\n        case FF:\n        case TAB:\n        case BACKSPACE:\n            return c;\n        default:\n            // If the character after the escape is the escape char itself\n            // or the quote char (if quoting is enabled), then it's a valid escape.\n            if (c == escape || c == quote) {\n                return c;\n            }\n            // Otherwise, the escape is not recognized.\n            // Push the read character back so that it\u2019s processed later,\n            // and return the literal escape character.\n            in.setLastChar(c);\n            return escape;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}