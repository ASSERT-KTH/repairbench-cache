{
    "generation": "int readEscape() throws IOException {\n    // the escape char has just been read (normally a backslash or the configured escape)\n    int c = in.read();\n    switch (c) {\n        case 'r':\n            return CR;\n        case 'n':\n            return LF;\n        case 't':\n            return TAB;\n        case 'b':\n            return BACKSPACE;\n        case 'f':\n            return FF;\n        case CR:\n        case LF:\n        case FF:\n        case TAB:\n        case BACKSPACE:\n            return c;\n        case END_OF_STREAM:\n            throw new IOException(\"EOF whilst processing escape sequence\");\n        default:\n            // If the character following the escape is one of the meta\u2010characters\n            // that are allowed to be escaped (for example, the escape char itself,\n            // the quote char, or the delimiter) then return it.\n            // Otherwise, it is not a special escape. In that case, we \u201cunread\u201d that\n            // character so it will be processed normally and we return the literal\n            // escape character.\n            if (c == escape || c == quote || c == delimiter) {\n                return c;\n            } else {\n                in.unread(c);\n                return escape;\n            }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}