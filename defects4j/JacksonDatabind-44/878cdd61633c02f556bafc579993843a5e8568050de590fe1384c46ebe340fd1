{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // If narrowing to Object.class, act as SimpleType without super-class info.\n    if (subclass == Object.class) {\n        return new SimpleType(subclass, _bindings, null, null,\n                _valueHandler, _typeHandler, _asStatic);\n    }\n    // Otherwise, stitch together the hierarchy. First, super-class\n    // if not found, try a super-interface\n    return new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}