{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    // If _class == subclass, return this\n    if (_class == subclass) {\n        return this;\n    }\n    // If subclass is NOT assignable from _class, construct a new SimpleType\n    // Otherwise, if _class is assignable from subclass (subclass is a subtype of _class), construct a new SimpleType\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \" + subclass.getName() + \" not a subtype of \" + _class.getName());\n    }\n    return new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}