{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass) {\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \" + subclass.getName()\n                + \" is not a subclass of \" + _class.getName());\n    }\n    // By passing a null super-type instead of \"this\", we force a full\n    // re-resolution of the subtype so that any extra properties on the\n    // subclass (like \"b\") will be discovered.\n    return new SimpleType(subclass, _bindings, null, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}