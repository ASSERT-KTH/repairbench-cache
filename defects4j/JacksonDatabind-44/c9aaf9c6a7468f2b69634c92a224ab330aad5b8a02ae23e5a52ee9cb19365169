{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // If subclass is NOT assignable to _class, consider error or just new instance\n    if (!_class.isAssignableFrom(subclass)) {\n        // Not a subtype; maybe error or handle as unrelated\n        // For now, construct with subclass explicitly without hierarchy stitching\n        return new SimpleType(subclass, _bindings, null, null,\n                _valueHandler, _typeHandler, _asStatic);\n    }\n    // Compatible subtype: stitch hierarchy with this as super type\n    return new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}