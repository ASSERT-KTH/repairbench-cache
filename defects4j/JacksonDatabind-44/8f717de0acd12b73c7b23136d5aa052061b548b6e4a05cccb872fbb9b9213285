{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \" \n                + subclass.getName() + \" not subtype of \" + _class.getName());\n    }\n    // Instead of passing \"this\" as the super-type we must narrow the existing super-type.\n    JavaType narrowedSuper = (_superClass == null)\n            ? null\n            : _superClass._narrow(subclass.getSuperclass());\n    return new SimpleType(subclass, _bindings, narrowedSuper, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}