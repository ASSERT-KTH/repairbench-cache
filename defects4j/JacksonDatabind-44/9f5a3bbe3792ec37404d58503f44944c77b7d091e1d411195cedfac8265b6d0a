{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass) {\n    if (_class == subclass) {\n        return this;\n    }\n    // verify that subclass is actually a subtype\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \"+subclass.getName()\n                +\" not sub-type of \"+_class.getName());\n    }\n    // create a plain SimpleType for the subclass, but drop the type-handler\n    // (so nested polymorphic handling isn't re\u2010applied)\n    return new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, /*typeHandler*/null, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}