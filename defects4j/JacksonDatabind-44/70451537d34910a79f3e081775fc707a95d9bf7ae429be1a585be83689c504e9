{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // 18-Jun-2015, tatu: Really not sure what's the right thing to do here...\n    // Should we check that there is a sub-class relationship?\n    // 15-Jan-2016, tatu: Almost yes, but there are some complications with\n    //    placeholder values (`Void`, `NoClass`), so can not quite do yet.\n    // TODO: fix in 2.8\n    JavaType newType = new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n    return newType.refine(subclass, _bindings, this, _superInterfaces);\n    // Otherwise, stitch together the hierarchy. First, super-class\n    // if not found, try a super-interface\n    // should not get here but...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}