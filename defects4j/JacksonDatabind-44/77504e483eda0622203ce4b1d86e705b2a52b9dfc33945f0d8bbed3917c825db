{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // Should we check that there is a sub-class relationship?\n    // 15-Jan-2016, tatu: Almost yes, but there are some complications with\n    //    placeholder values (`Void`, `NoClass`), so can not quite do yet.\n    // TODO: fix in 2.8\n        /*\n        throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n                +_class.getName());\n                */\n    // If subclass is a superclass (or unrelated), preserve supertypes info\n    Class<?> currSuper = subclass.getSuperclass();\n    JavaType superClass = null;\n    if (currSuper != null && _class.isAssignableFrom(currSuper)) {\n        superClass = _narrow(currSuper);\n    }\n    return new SimpleType(subclass, _bindings, superClass, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}