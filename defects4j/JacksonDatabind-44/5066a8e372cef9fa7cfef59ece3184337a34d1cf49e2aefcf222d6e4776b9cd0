{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass) {\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \" + subclass.getName()\n                + \" not a subtype of \" + _class.getName());\n    }\n    // IMPORTANT: Do not \u201cstitch together\u201d the hierarchy here.\n    // Passing null forces full re\u2010introspection of the subclass,\n    // so that any additional properties (like \"b\") are discovered.\n    return new SimpleType(subclass, _bindings, null, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}