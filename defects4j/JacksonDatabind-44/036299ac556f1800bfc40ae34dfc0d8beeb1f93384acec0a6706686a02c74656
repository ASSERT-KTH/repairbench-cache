{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // 15-Jan-2016, tatu: Ensure subclass IS related to _class, except for special placeholders\n    if (!_class.isAssignableFrom(subclass)\n            && !subclass.isInterface()\n            && !Void.class.equals(subclass)\n            && !NoClass.class.equals(subclass)) {\n        throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n                +_class.getName());\n    }\n    return new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}