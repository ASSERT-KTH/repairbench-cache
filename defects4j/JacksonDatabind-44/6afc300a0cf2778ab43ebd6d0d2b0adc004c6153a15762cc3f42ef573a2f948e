{
    "generation": "    @Override\n    @Deprecated\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // Compute super interfaces for the subclass\n        Class<?>[] interfaces = subclass.getInterfaces();\n        JavaType[] superIntfs = new JavaType[interfaces.length];\n        for (int i = 0; i < interfaces.length; i++) {\n            superIntfs[i] = _fromClass(interfaces[i], _bindings);\n        }\n        return new SimpleType(subclass, _bindings, this, superIntfs,\n                _valueHandler, _typeHandler, _asStatic);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}