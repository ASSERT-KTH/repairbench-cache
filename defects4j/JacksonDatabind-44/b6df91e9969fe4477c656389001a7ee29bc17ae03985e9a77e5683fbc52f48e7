{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // 26-Jun-2017, tatu: Not sure if this is the right place to add this\n    //    check, but it does seem like a reasonable place.\n    if(!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n                +_class.getName());\n    }\n    JavaType newSuper = _superClass == null ? null : _superClass._narrow(subclass);\n    return new SimpleType(subclass, _bindings, newSuper, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}