{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // Special case: if the subclass is assignable from _class (i.e., superclass),\n    // do NOT \"narrow\", but instead return a widened type for correct deserialization.\n    if (!_class.isAssignableFrom(subclass)) {\n        // Should actually check that there is a sub-class relationship\n        throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n                +_class.getName());\n    }\n    return new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}