{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // [databind#1125]: Allow subtyping in face of default implementation,\n    // which may not actually be a subtype due to interface-abstract mismatch.\n    if (!_class.isAssignableFrom(subclass)) {\n        // Instead of throwing, return a SimpleType for subclass, \n        // without supertype and interfaces, to prevent \"UnrecognizedPropertyException\"\n        return new SimpleType(subclass, _bindings, null, null,\n                _valueHandler, _typeHandler, _asStatic);\n    }\n    return new SimpleType(subclass, _bindings, this, _superInterfaces,\n            _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}