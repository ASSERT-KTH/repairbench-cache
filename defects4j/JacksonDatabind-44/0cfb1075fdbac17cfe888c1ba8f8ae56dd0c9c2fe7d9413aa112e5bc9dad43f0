{
    "generation": "    @Override\n    @Deprecated\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // 20-Feb-2016, tatu: Should NOT pass handlers here as type is different\n        //   (and if new type is NOT sub-type, handlers are wrong anyway)\n        //   Instead let's re-resolve handlers from TypeFactory\n        // And importantly, also need to pass original type (this) as 'super-type'\n        //   (for generic parameter resolution etc)\n        // Also note that the only case where `_narrow()` is valid is when\n        // `subclass` IS a sub-type of `_class`.\n        return _factory.constructSpecializedType(this, subclass);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}