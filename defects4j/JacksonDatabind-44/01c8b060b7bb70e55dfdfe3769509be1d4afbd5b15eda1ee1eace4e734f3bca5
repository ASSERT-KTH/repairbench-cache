{
    "generation": "    @Override\n    @Deprecated\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // Should we check that there is a sub-class relationship?\n        // 15-Jan-2016, tatu: Almost yes, but there are some complications with\n        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.\n        // TODO: fix in 2.8\n        //   Let's attempt the fix suggested in comments and related commits (like 6f47f0a4):\n        //   pass null for super-interfaces, as copying them from the supertype is incorrect.\n        //   The expectation is that null might signal deferred resolution or simply mean\n        //   no interfaces, which is better than incorrect ones.\n            /*\n            throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n                    +_class.getName());\n                    */\n            // Original code passed `_superInterfaces` here.\n            return new SimpleType(subclass, _bindings, this, null,\n                    _valueHandler, _typeHandler, _asStatic);\n        // Otherwise, stitch together the hierarchy. First, super-class\n        // if not found, try a super-interface\n        // should not get here but...\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}