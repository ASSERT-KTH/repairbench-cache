{
    "generation": "    public static Number createNumber(String val) throws NumberFormatException {\n        if (val == null || val.isEmpty()) {\n            throw new NumberFormatException(\"\\\"\\\" is not a valid number.\");\n        }\n        if (val.startsWith(\"--\")) {\n            return null;\n        }\n        if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\n            return createInteger(val);\n        }\n        char lastChar = val.charAt(val.length() - 1);\n        String mant;\n        String dec;\n        String exp;\n        int decPos = val.indexOf('.');\n        int expPos = val.indexOf('e') + val.indexOf('E');\n\n        /* Fix the calculation of expPos */\n        if (expPos == -2) expPos = val.indexOf('e') != -1 ? val.indexOf('e') : val.indexOf('E');\n\n        if (decPos > -1) {\n            if (expPos > decPos) {\n                dec = val.substring(decPos + 1, expPos);\n            } else {\n                dec = val.substring(decPos + 1);\n            }\n            mant = val.substring(0, decPos);\n        } else {\n            if (expPos > -1) {\n                mant = val.substring(0, expPos);\n            } else {\n                mant = val;\n            }\n            dec = null;\n        }\n\n        if (!Character.isDigit(lastChar)) {\n            // Impl...\n        } else {\n            // Impl...\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}