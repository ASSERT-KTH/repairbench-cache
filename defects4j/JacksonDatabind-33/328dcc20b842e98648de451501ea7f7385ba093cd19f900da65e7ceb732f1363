{
    "generation": "    @Override\n    public PropertyName findNameForSerialization(Annotated a)\n    {\n        String name = null;\n\n        JsonProperty pann = _findAnnotation(a, JsonProperty.class);\n        if (pann != null) {\n            name = pann.value();\n        } else if (_hasAnnotation(a, JsonUnwrapped.class)) {\n            // Special handling for unwrapped properties\n            return PropertyName.USE_DEFAULT;\n        } else if (_findAnnotation(a, JsonGetter.class) != null) {\n            name = \"\";\n        } else if (_hasAnnotation(a, JsonSerialize.class)\n                || _hasAnnotation(a, JsonView.class)\n                || _hasAnnotation(a, JsonRawValue.class)) {\n            name = \"\";\n        } else {\n            return null;\n        }\n\n        if (name != null) {\n            return PropertyName.construct(name.isEmpty() ? null : name);\n        }\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}