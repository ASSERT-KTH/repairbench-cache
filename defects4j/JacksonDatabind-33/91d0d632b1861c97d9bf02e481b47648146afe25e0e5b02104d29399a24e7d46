{
    "generation": "    @Override\n    public PropertyName findNameForSerialization(Annotated a)\n    {\n        String name = null;\n\n        JsonGetter jg = _findAnnotation(a, JsonGetter.class);\n        if (jg != null) {\n            name = jg.value();\n        } else {\n            JsonProperty pann = _findAnnotation(a, JsonProperty.class);\n            if (pann != null) {\n                name = pann.value();\n                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but\n                 *   it's actually bit tricky to do it more efficiently (meta-annotations\n                 *   add more lookups; AnnotationMap costs etc)\n                 */\n            } else if (_hasAnnotation(a, JsonSerialize.class)\n                    || _hasAnnotation(a, JsonView.class)\n                    || _hasAnnotation(a, JsonRawValue.class)\n                    // [databind#448]: @JsonUnwrapped needs to be considered too.\n                    || _hasAnnotation(a, JsonUnwrapped.class) \n                   ) {\n                // Even without name, indicates it's a property of some kind\n                name = \"\";\n            } else {\n                return null;\n            }\n        }\n        // If empty String, means \"use default name\", which is represented by\n        // null PropertyName for BeanPropertyWriter (and is NOT checked here)\n        // but as empty String for serializer code. Empty/null checks are somewhat\n        // confusing...\n        // 28-Apr-2015, tatu: Actually, let's just use `null` here, let caller figure out.\n        //   ... except that's not how it works. Need to use \"\" to indicate \"use default\"\n        \n        // 07-Aug-2019, tatu: As per [databind#2394], need to return `null` for \"don't care\"\n        //    (or \"\" for \"use default\"), differentiate from explicitly named empty String.\n        \n        // 23-Sep-2019, tatu: ... and back to returning `PropertyName.USE_DEFAULT` for \"\"\n        return PropertyName.construct(name);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}