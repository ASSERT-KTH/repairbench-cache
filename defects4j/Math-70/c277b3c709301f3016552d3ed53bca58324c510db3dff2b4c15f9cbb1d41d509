{
    "generation": "    /** {@inheritDoc} */\n    public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n        // Ensure the initial value is within the bounds\n        if (initial < min || initial > max) {\n            throw new IllegalArgumentException(\"Initial value must be within the bounds [min, max]\");\n        }\n\n        // Implement the bisection method\n        double result = initial;\n        double fa = f.value(min);\n        double fb = f.value(max);\n\n        // Ensure the function changes sign between min and max\n        if (fa * fb >= 0) {\n            throw new IllegalArgumentException(\"Function must change sign over the interval [min, max]\");\n        }\n\n        while (max - min > getAbsoluteAccuracy()) {\n            result = (min + max) / 2;\n            double fr = f.value(result);\n\n            if (fr == 0) {\n                return result;\n            } else if (fa * fr < 0) {\n                max = result;\n                fb = fr;\n            } else {\n                min = result;\n                fa = fr;\n            }\n        }\n\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}