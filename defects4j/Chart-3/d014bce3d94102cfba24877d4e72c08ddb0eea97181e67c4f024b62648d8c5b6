{
    "generation": "    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the index of the first time period to copy.\n     * @param end  the index of the last time period to copy.\n     *\n     * @return A series containing a copy of this times series from start until\n     *         end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = new TimeSeries(getKey());\n        copy.data = new java.util.ArrayList();\n        double minY = Double.MAX_VALUE;\n        double maxY = Double.MIN_VALUE;\n\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end && index < this.data.size(); index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                    // Update min and max values\n                    double value = clone.getValue().doubleValue();\n                    if (value < minY) {\n                        minY = value;\n                    }\n                    if (value > maxY) {\n                        maxY = value;\n                    }\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n            copy.minY = (minY != Double.MAX_VALUE) ? new Double(minY) : null;\n            copy.maxY = (maxY != Double.MIN_VALUE) ? new Double(maxY) : null;\n        }\n        return copy;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}