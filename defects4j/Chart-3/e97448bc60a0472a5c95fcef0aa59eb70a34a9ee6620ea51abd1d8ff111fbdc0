{
    "generation": "    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the index of the first time period to copy.\n     * @param end  the index of the last time period to copy.\n     *\n     * @return A series containing a copy of this times series from start until\n     *         end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        \n        // Reset the data list for the copy.\n        copy.data = new java.util.ArrayList();\n        \n        // BUG FIX: The minY and maxY fields are shallow copied and retain\n        // the values from the original series. They need to be reset\n        // to their default 'empty series' values before adding new data items,\n        // so that the add() method correctly recalculates them for the new subset.\n        copy.minY = Double.POSITIVE_INFINITY;\n        copy.maxY = Double.NEGATIVE_INFINITY;\n\n        if (this.data.size() > 0) {\n            // It's assumed that 'start' and 'end' are valid indices\n            // for 'this.data', or an IndexOutOfBoundsException will occur\n            // during data.get(index), which is outside the scope of this fix.\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return copy;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}