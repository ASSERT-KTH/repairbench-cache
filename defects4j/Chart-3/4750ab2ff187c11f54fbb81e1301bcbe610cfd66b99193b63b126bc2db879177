{
    "generation": "    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the index of the first time period to copy.\n     * @param end  the index of the last time period to copy.\n     *\n     * @return A series containing a copy of this times series from start until\n     *         end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n\n        // BUG FIX: The min/max Y values are copied from the original series\n        // by super.clone(), but they should be recalculated based only on\n        // the subset of data copied. Resetting them to NaN (or initial\n        // empty state) ensures the add() method correctly updates them.\n        // In JFreeChart's TimeSeries, minY and maxY are initialized to Double.NaN.\n        // Protected access is assumed for these fields within the class hierarchy.\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n\n        if (this.data.size() > 0) {\n            // Note: The original code relies on IndexOutOfBoundsException if 'end'\n            // exceeds this.data.size() - 1. For this fix, we maintain that behavior.\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    // The add method will update copy.minY and copy.maxY based on 'clone'\n                    // and the fact that copy.minY/maxY were reset to NaN.\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return copy;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}