{
    "generation": "    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        // Recalculate minY and maxY for the newly created copy\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        for (int i = 0; i < copy.data.size(); i++) {\n            Number y = ((TimeSeriesDataItem) copy.data.get(i)).getValue();\n            if (y != null) {\n                double yy = y.doubleValue();\n                if (!Double.isNaN(yy)) {\n                    if (Double.isNaN(copy.minY) || yy < copy.minY) {\n                        copy.minY = yy;\n                    }\n                    if (Double.isNaN(copy.maxY) || yy > copy.maxY) {\n                        copy.maxY = yy;\n                    }\n                }\n            }\n        }\n        return copy;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}