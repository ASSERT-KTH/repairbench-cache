{
    "generation": "public TimeSeries createCopy(int start, int end)\n        throws CloneNotSupportedException {\n    if (start < 0) {\n        throw new IllegalArgumentException(\"Requires start >= 0.\");\n    }\n    if (end < start) {\n        throw new IllegalArgumentException(\"Requires start <= end.\");\n    }\n    TimeSeries copy = (TimeSeries) super.clone();\n    copy.data = new java.util.ArrayList();\n    if (this.data.size() > 0) {\n        for (int index = start; index <= end; index++) {\n            TimeSeriesDataItem item\n                    = (TimeSeriesDataItem) this.data.get(index);\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(clone);\n            }\n            catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n        // Set initial min and max to the first item's value\n        if (copy.data.size() > 0) {\n            double minY = copy.data.get(0).getValue().doubleValue();\n            double maxY = copy.data.get(0).getValue().doubleValue();\n            for (int i = 1; i < copy.data.size(); i++) {\n                double value = copy.data.get(i).getValue().doubleValue();\n                if (value < minY) {\n                    minY = value;\n                }\n                if (value > maxY) {\n                    maxY = value;\n                }\n            }\n            copy.minY = minY;\n            copy.maxY = maxY;\n        }\n    }\n    return copy;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}