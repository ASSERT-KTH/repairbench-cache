{
    "generation": "public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n    if (length < 2) {\n        throw new IllegalArgumentException(\"Buffer length must be at least 2\");\n    }\n    if (buffer == null || offset < 0 || length < 0 || offset + length > buffer.length) {\n        throw new IllegalArgumentException(\"Invalid offset/length for buffer\");\n    }\n\n    int start = offset;\n    int end = offset + length;\n\n    // Check for all NULs\n    boolean allNuls = true;\n    for (int i = start; i < end; i++) {\n        if (buffer[i] != 0) {\n            allNuls = false;\n            break;\n        }\n    }\n    if (allNuls) {\n        return 0L;\n    }\n\n    // Must have a valid trailer (last or last two bytes)\n    int trailerPos = end - 1;\n    while (trailerPos >= start && (buffer[trailerPos] == 0 || buffer[trailerPos] == (byte) ' ')) {\n        trailerPos--;\n    }\n    trailerPos++;\n    if (trailerPos >= end) { // no trailer found\n        throw new IllegalArgumentException(\"Invalid trailer: missing trailing space or NUL\");\n    }\n\n    long result = 0L;\n    boolean stillPadding = true;\n    for (int i = start; i < trailerPos; i++) {\n        final byte currentByte = buffer[i];\n\n        if (currentByte == 0 || currentByte == (byte) ' ') {\n            if (stillPadding) {\n                continue; // skip leading spaces/NULs/padding zeros\n            } else {\n                throw new IllegalArgumentException(\n                        exceptionMessage(buffer, offset, length, i, currentByte)); // embedded space or NUL\n            }\n        }\n\n        stillPadding = false;\n\n        if (currentByte < '0' || currentByte > '7') {\n            throw new IllegalArgumentException(\n                    exceptionMessage(buffer, offset, length, i, currentByte));\n        }\n\n        result = (result << 3) + (currentByte - '0');\n    }\n\n    // After accumulating digits, make sure remaining chars (if any) are zeros/spaces\n    for (int i = trailerPos; i < end; i++) {\n        byte b = buffer[i];\n        if (b != 0 && b != (byte) ' ') {\n            throw new IllegalArgumentException(\n                    exceptionMessage(buffer, offset, length, i, b));\n        }\n    }\n    // Also, ensure at least one trailer character exists\n    if (trailerPos == end) {\n        throw new IllegalArgumentException(\"Invalid trailer: missing trailing space or NUL\");\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}