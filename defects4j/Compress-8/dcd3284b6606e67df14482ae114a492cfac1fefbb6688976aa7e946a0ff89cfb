{
    "generation": "    public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n        if (length < 2) {\n            throw new IllegalArgumentException(\"Buffer must contain at least 2 bytes\");\n        }\n\n        long    result = 0;\n        boolean stillPadding = true;\n        int     end = offset + length;\n        int     start = offset;\n        boolean foundTrailer = false;\n\n        for (int i = start; i < end; i++) {\n            final byte currentByte = buffer[i];\n\n            // Check for NUL-terminated buffer\n            if (currentByte == 0) {\n                foundTrailer = true;\n                break;\n            }\n\n            // Skip leading spaces\n            if (stillPadding && currentByte == ' ') {\n                continue;\n            }\n\n            stillPadding = false;\n\n            // Check for space termination after we've seen digits\n            if (!stillPadding && currentByte == ' ') {\n                foundTrailer = true;\n                break;\n            }\n\n            // Check for invalid characters\n            if (currentByte < '0' || currentByte > '7') {\n                throw new IllegalArgumentException(\n                        exceptionMessage(buffer, offset, length, start, currentByte));\n            }\n\n            result = (result << 3) + (currentByte - '0');\n        }\n\n        // If we didn't find a trailer (space or NUL) and we processed some digits\n        if (!foundTrailer && !stillPadding) {\n            throw new IllegalArgumentException(\"Missing trailing space or NUL\");\n        }\n\n        // Check if buffer contains only NULs (special case mentioned in docs)\n        boolean allNulls = true;\n        for (int i = start; i < end; i++) {\n            if (buffer[i] != 0) {\n                allNulls = false;\n                break;\n            }\n        }\n        if (allNulls) {\n            return 0L;\n        }\n\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}