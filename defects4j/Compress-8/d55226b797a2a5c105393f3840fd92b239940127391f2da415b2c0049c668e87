{
    "generation": "public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n    if (length < 2) {\n        throw new IllegalArgumentException(\"Buffer must be at least 2 bytes long\");\n    }\n\n    long result = 0;\n    boolean stillPadding = true;\n    int end = offset + length;\n\n    for (int i = offset; i < end; i++) {\n        final byte currentByte = buffer[i];\n\n        // Skip leading spaces\n        if (currentByte == (byte) ' ' || currentByte == '0') {\n            if (stillPadding) {\n                continue;\n            } else if (currentByte == (byte) ' ') {\n                break;\n            }\n        }\n\n        // Must have trailing NUL or space\n        // May have additional NUL or space\n        stillPadding = false;\n\n        // CheckStyle:MagicNumber OFF\n        if (currentByte < '0' || currentByte > '7') {\n            throw new IllegalArgumentException(\n                    exceptionMessage(buffer, offset, length, offset, currentByte));\n        }\n        result = (result << 3) + (currentByte - '0'); // convert from ASCII\n        // CheckStyle:MagicNumber ON\n    }\n\n    // Ensure trailing NUL or space\n    if (buffer[offset + length - 1] != 0 && buffer[offset + length - 1] != ' ') {\n        throw new IllegalArgumentException(\"Missing trailing NUL or space\");\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}