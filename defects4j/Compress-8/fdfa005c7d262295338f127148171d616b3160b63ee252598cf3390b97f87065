{
    "generation": "public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n    if (buffer == null) {\n        throw new IllegalArgumentException(\"buffer must not be null\");\n    }\n    if (length < 2) {\n        throw new IllegalArgumentException(\"length must be at least 2\");\n    }\n    long result = 0;\n    boolean stillPadding = true;\n    boolean foundNonPadding = false;\n    int end = offset + length;\n    for (int i = offset; i < end; i++) {\n        final byte currentByte = buffer[i];\n        if (currentByte == 0) {\n            break;\n        }\n        if (currentByte == (byte) ' ') {\n            if (stillPadding) {\n                continue;\n            } else {\n                break;\n            }\n        }\n        if (currentByte < '0' || currentByte > '7') {\n            throw new IllegalArgumentException(\n                    exceptionMessage(buffer, offset, length, i, currentByte));\n        }\n        stillPadding = false;\n        foundNonPadding = true;\n        result = (result << 3) + (currentByte - '0');\n    }\n    if (!foundNonPadding) {\n        return 0L;\n    }\n    if (end > offset + 1 && buffer[offset + length - 1] != 0 && buffer[offset + length - 1] != (byte) ' ') {\n        throw new IllegalArgumentException(\"Missing trailing space or NUL\");\n    }\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}