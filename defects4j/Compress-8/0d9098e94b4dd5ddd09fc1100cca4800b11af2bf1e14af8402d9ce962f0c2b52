{
    "generation": "    public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n        if (length < 2) {\n            throw new IllegalArgumentException(\"Buffer length must be at least 2 bytes\");\n        }\n\n        long result = 0;\n        boolean stillPadding = true;\n        int end = offset + length;\n        int start = offset;\n\n        for (int i = start; i < end; i++) {\n            final byte currentByte = buffer[i];\n            if (currentByte == 0 || currentByte == (byte) ' ') {\n                break;\n            }\n\n            if (currentByte == (byte) ' ') {\n                continue;\n            }\n\n            stillPadding = false;\n\n            if (currentByte < '0' || currentByte > '7') {\n                throw new IllegalArgumentException(\n                        exceptionMessage(buffer, offset, length, start, currentByte));\n            }\n\n            result = (result << 3) + (currentByte - '0');\n        }\n\n        if (result == 0 && (buffer[start] == (byte) ' ' || buffer[start] == 0)) {\n            return 0;\n        }\n\n        if (buffer[start + length - 1] != 0 && buffer[start + length - 1] != (byte) ' ') {\n            throw new IllegalArgumentException(\"Missing trailing space or NUL\");\n        }\n\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}