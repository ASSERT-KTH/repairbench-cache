{
    "generation": "    public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n        if (length < 2) {\n            throw new IllegalArgumentException(\"Length must be at least 2\");\n        }\n\n        long result = 0;\n        boolean stillPadding = true;\n        int end = offset + length;\n        int start = offset;\n        boolean foundTerminator = false;\n\n        // Check if all bytes are NULs\n        boolean allNuls = true;\n        for (int i = offset; i < end; i++) {\n            if (buffer[i] != 0) {\n                allNuls = false;\n                break;\n            }\n        }\n        if (allNuls) {\n            return 0L;\n        }\n\n        for (int i = start; i < end; i++) {\n            byte currentByte = buffer[i];\n            if (stillPadding) {\n                if (currentByte == ' ' || currentByte == '0') {\n                    continue;\n                }\n                stillPadding = false;\n            }\n\n            if (currentByte == ' ' || currentByte == 0) {\n                foundTerminator = true;\n                // Check remaining characters are space or NUL\n                for (int j = i + 1; j < end; j++) {\n                    byte b = buffer[j];\n                    if (b != ' ' && b != 0) {\n                        throw new IllegalArgumentException(\n                            exceptionMessage(buffer, offset, length, i, buffer[j]));\n                    }\n                }\n                break;\n            }\n\n            if (currentByte < '0' || currentByte > '7') {\n                throw new IllegalArgumentException(\n                    exceptionMessage(buffer, offset, length, start, currentByte));\n            }\n\n            result = (result << 3) + (currentByte - '0');\n        }\n\n        if (!foundTerminator) {\n            throw new IllegalArgumentException(\n                exceptionMessage(buffer, offset, length, end - 1, buffer[end - 1]));\n        }\n\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}