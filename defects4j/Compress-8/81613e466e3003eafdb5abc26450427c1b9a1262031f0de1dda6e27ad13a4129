{
    "generation": "public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n    if (length < 2) {\n        throw new IllegalArgumentException(\"Length must be at least 2\");\n    }\n\n    int end = offset + length;\n    int start = offset;\n    boolean allNuls = true;\n\n    // Check if buffer is all NULs\n    for (int i = start; i < end; i++) {\n        if (buffer[i] != 0) {\n            allNuls = false;\n            break;\n        }\n    }\n    if (allNuls) {\n        return 0L;\n    }\n\n    // Find first trailer (space or NUL)\n    int trailerIdx = -1;\n    for (int i = start; i < end; i++) {\n        byte currentByte = buffer[i];\n        if (currentByte == 0 || currentByte == (byte) ' ') {\n            trailerIdx = i;\n            break;\n        }\n    }\n    if (trailerIdx == -1) {\n        throw new IllegalArgumentException(\n            \"Invalid octal byte: no trailing space or NUL found\");\n    }\n\n    // Any bytes after first trailer must also be trailer (either space or NUL)\n    for (int i = trailerIdx + 1; i < end; i++) {\n        byte currentByte = buffer[i];\n        if (currentByte != 0 && currentByte != (byte) ' ') {\n            throw new IllegalArgumentException(\n                \"Invalid octal byte: extra non-padding bytes after trailer\");\n        }\n    }\n\n    long result = 0;\n    boolean stillPadding = true;\n    for (int i = start; i < trailerIdx; i++) {\n        final byte currentByte = buffer[i];\n\n        // Skip leading spaces and zeros\n        if (stillPadding && (currentByte == (byte) ' ' || currentByte == '0')) {\n            continue;\n        }\n\n        stillPadding = false;\n\n        if (currentByte < '0' || currentByte > '7') {\n            throw new IllegalArgumentException(\n                exceptionMessage(buffer, offset, length, start, currentByte));\n        }\n        result = (result << 3) + (currentByte - '0');\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}