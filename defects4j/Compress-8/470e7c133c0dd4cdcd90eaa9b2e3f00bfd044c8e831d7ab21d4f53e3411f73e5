{
    "generation": "    public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n        if (length < 2) {\n            throw new IllegalArgumentException(\"Buffer length must be at least 2\");\n        }\n        long result = 0;\n        boolean stillPadding = true;\n        int end = offset + length;\n        for (int i = offset; i < end; i++) {\n            final byte currentByte = buffer[i];\n            if (currentByte == 0) {\n                break;\n            }\n            if (currentByte == (byte) ' ' || currentByte == (byte) '0') {\n                if (stillPadding) {\n                    continue;\n                } else if (currentByte == (byte) ' ') {\n                    break;\n                }\n            }\n            stillPadding = false;\n            if (currentByte < (byte) '0' || currentByte > (byte) '7') {\n                throw new IllegalArgumentException(\n                        exceptionMessage(buffer, offset, length, i, currentByte));\n            }\n            result = (result << 3) + (currentByte - (byte) '0');\n        }\n        if (stillPadding) {\n            return 0;\n        }\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}