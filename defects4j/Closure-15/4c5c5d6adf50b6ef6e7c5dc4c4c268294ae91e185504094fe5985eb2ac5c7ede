{
    "generation": "@Override\npublic boolean apply(Node n) {\n  // When the node is null it means we reached an implicit return (for example,\n  // in functions without an explicit return statement).\n  if (n == null) {\n    return false;\n  }\n\n  // We only care about calls to functions that pass one of the dependent\n  // variables to a non-side-effect free function.\n  if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {\n    return true;\n  }\n\n  if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {\n    return true;\n  }\n  \n  // Delete operations have side effects.\n  if (n.isDelProp()) {\n    return true;\n  }\n\n  for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n    if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {\n      return true;\n    }\n  }\n  return false;\n}",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}