{
    "generation": "  @Override\n  public boolean apply(Node n) {\n    if (n == null) {\n      return false;\n    }\n\n    if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {\n      return true;\n    }\n\n    if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {\n      return true;\n    }\n\n    if (n.isForIn() && !NodeUtil.sideEffectFree(n)) {\n      return true;\n    }\n\n    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {\n        return true;\n      }\n    }\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}