{
    "generation": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n        return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n            && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n        // Only strip arguments if in advanced mode, as in simple mode functions' parameters\n        // should not be modified.\n        if (compiler.getOptions().compilationLevel.compareTo(CompilationLevel.ADVANCED_OPTIMIZATIONS) >= 0) {\n            Node lastArg;\n            while ((lastArg = argList.getLastChild()) != null) {\n                Var var = fnScope.getVar(lastArg.getString());\n                if (!referenced.contains(var)) {\n                    argList.removeChild(lastArg);\n                    compiler.reportCodeChange();\n                } else {\n                    break;\n                }\n            }\n        }\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}