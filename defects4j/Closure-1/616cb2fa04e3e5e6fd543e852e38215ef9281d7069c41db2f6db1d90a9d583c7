{
    "generation": "  private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    // ... existing comments ...\n\n    Node function = fnScope.getRootNode();\n\n    Preconditions.checkState(function.isFunction());\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n      return;\n    }\n\n    Node argList = getFunctionArgList(function);\n    boolean modifyCallers = modifyCallSites\n        && callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n      // Check if we are in a mode where removing unused arguments is allowed\n      if (compiler.getOptions().getCompilationLevel().isHigherThan(CompilationLevel.SIMPLE_OPTIMIZATIONS)) {\n        Node lastArg;\n        while ((lastArg = argList.getLastChild()) != null) {\n          Var var = fnScope.getVar(lastArg.getString());\n          if (!referenced.contains(var)) {\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n          } else {\n            break;\n          }\n        }\n      }\n    } else {\n      callSiteOptimizer.optimize(fnScope, referenced);\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}