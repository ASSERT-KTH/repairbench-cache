{
    "generation": "@Override\npublic int translate(CharSequence input, int index, Writer out) throws IOException {\n    // TODO: Protect from ArrayIndexOutOfBounds\n    int inputLength = input.length();\n    if (index + 1 < inputLength && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n        int start = index + 2;\n        boolean isHex = false;\n\n        if (start < inputLength) {\n            char firstChar = input.charAt(start);\n            if (firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n        }\n\n        int end = start;\n        // Find the end semicolon\n        while (end < inputLength && input.charAt(end) != ';') {\n            end++;\n        }\n        // If no semicolon, return 0 (no entity)\n        if (end == inputLength || input.charAt(end) != ';') {\n            return 0;\n        }\n\n        int entityValue;\n        try {\n            String entityText = input.subSequence(start, end).toString();\n            entityValue = Integer.parseInt(entityText, isHex ? 16 : 10);\n        } catch (NumberFormatException nfe) {\n            return 0;\n        }\n\n        if (entityValue > 0xFFFF) {\n            // Write surrogate pair for supplementary characters\n            char[] chars = Character.toChars(entityValue);\n            out.write(chars);\n        } else {\n            out.write(entityValue);\n        }\n\n        return end - index + 1;\n    }\n    return 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}