{
    "generation": "    @Override\n    public int translate(CharSequence input, int index, Writer out) throws IOException {\n        // Check for '&' followed by '#' at the current index\n        if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n            int start = index + 2;\n            boolean isHex = false;\n\n            // Determine if the entity is hexadecimal\n            char firstChar = input.charAt(start);\n            if (firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n\n            // Find the end of the entity value before the ';'\n            int end = start;\n            while (end < input.length() && input.charAt(end) != ';') {\n                end++;\n            }\n\n            // Parse the entity value either as hex or decimal\n            int entityValue;\n            try {\n                String entityStr = input.subSequence(start, end).toString();\n                entityValue = isHex ? Integer.parseInt(entityStr, 16) : Integer.parseInt(entityStr, 10);\n            } catch (NumberFormatException nfe) {\n                return 0;\n            }\n\n            // Handle supplementary characters by splitting into surrogates\n            if (entityValue >= 0x10000) {\n                char[] surrogates = Character.toChars(entityValue);\n                out.write(surrogates[0]);\n                out.write(surrogates[1]);\n            } else {\n                out.write(entityValue);\n            }\n\n            // Return the number of characters processed in the input\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        }\n        return 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}