{
    "generation": "@Override\npublic int translate(CharSequence input, int index, Writer out) throws IOException {\n    // TODO: Protect from ArrayIndexOutOfBounds\n    if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n        int start = index + 2;\n        boolean isHex = false;\n\n        char firstChar = input.charAt(start);\n        if (firstChar == 'x' || firstChar == 'X') {\n            start++;\n            isHex = true;\n        }\n\n        int end = start;\n        while (end < input.length() && input.charAt(end) != ';') {\n            end++;\n        }\n\n        if (end >= input.length()) {\n            return 0;\n        }\n\n        int entityValue;\n        try {\n            String entityStr = input.subSequence(start, end).toString();\n            if (isHex) {\n                entityValue = Integer.parseInt(entityStr, 16);\n            } else {\n                entityValue = Integer.parseInt(entityStr, 10);\n            }\n        } catch (NumberFormatException nfe) {\n            return 0;\n        }\n\n        // Check if the entity value is a valid Unicode code point\n        if (entityValue < 0 || entityValue > 0x10FFFF) {\n            return 0;\n        }\n\n        // Convert the code point to char array, handling supplementary characters\n        char[] chars = Character.toChars(entityValue);\n        for (char c : chars) {\n            out.write(c);\n        }\n\n        return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n    }\n    return 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}