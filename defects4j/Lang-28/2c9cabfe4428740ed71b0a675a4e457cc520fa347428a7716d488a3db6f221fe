{
    "generation": "@Override\npublic int translate(CharSequence input, int index, Writer out) throws IOException {\n    // Ensure there are at least two characters ('&' and '#' at minimum)\n    if (index < 0 || index + 1 >= input.length()) {\n        return 0;\n    }\n\n    if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n        int start = index + 2;\n        if (start >= input.length()) {\n            return 0;\n        }\n        boolean isHex = false;\n        char firstChar = input.charAt(start);\n        if (firstChar == 'x' || firstChar == 'X') {\n            isHex = true;\n            start++;\n            if (start >= input.length()) {\n                return 0;\n            }\n        }\n        \n        int end = start;\n        // Search for the terminating ';'\n        while (end < input.length() && input.charAt(end) != ';') {\n            end++;\n        }\n        if (end == input.length()) {\n            return 0;\n        }\n        \n        int entityValue;\n        try {\n            String entity = input.subSequence(start, end).toString();\n            entityValue = isHex ? Integer.parseInt(entity, 16) : Integer.parseInt(entity, 10);\n        } catch (NumberFormatException nfe) {\n            return 0;\n        }\n        \n        // Write the character(s) using Character.toChars to properly handle supplementary code points\n        out.write(Character.toChars(entityValue));\n        \n        // The consumed count is from the starting '&' to the ';'\n        return end - index + 1;\n    }\n    return 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}