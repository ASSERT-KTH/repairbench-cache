{
    "generation": "    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int translate(CharSequence input, int index, Writer out) throws IOException {\n        // TODO: Protect from ArrayIndexOutOfBounds\n        if(index < input.length() - 1 && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n            int start = index + 2;\n            boolean isHex = false;\n\n            if(start >= input.length()) {\n                return 0;\n            }\n\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n\n            int end = start;\n            while(end < input.length() && input.charAt(end) != ';') {\n                end++;\n            }\n\n            if(end >= input.length() || input.charAt(end) != ';') {\n                return 0;\n            }\n\n            String entityStr = input.subSequence(start, end).toString();\n            if(entityStr.isEmpty()) {\n                return 0;\n            }\n\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(entityStr, 16);\n                } else {\n                    entityValue = Integer.parseInt(entityStr, 10);\n                }\n\n                if (entityValue > Character.MAX_VALUE) {\n                    // Handle supplementary characters\n                    char[] chars = Character.toChars(entityValue);\n                    out.write(chars);\n                } else {\n                    out.write(entityValue);\n                }\n                return end - index + 1;\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n        }\n        return 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}