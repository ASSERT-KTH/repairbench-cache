{
    "generation": "@Override\npublic int translate(CharSequence input, int index, Writer out) throws IOException {\n    // protect from ArrayIndexOutOfBounds\n    if (index + 1 >= input.length() || input.charAt(index) != '&' || input.charAt(index + 1) != '#') {\n        return 0;\n    }\n    int start = index + 2;\n    boolean isHex = false;\n    if (start < input.length()) {\n        char firstChar = input.charAt(start);\n        if (firstChar == 'x' || firstChar == 'X') {\n            isHex = true;\n            start++;\n        }\n    }\n    if (start >= input.length()) {\n        return 0;\n    }\n    int end = start;\n    while (end < input.length() && input.charAt(end) != ';') {\n        end++;\n    }\n    if (end >= input.length()) {\n        return 0;\n    }\n    int entityValue;\n    try {\n        entityValue = Integer.parseInt(input.subSequence(start, end).toString(), isHex ? 16 : 10);\n    } catch (NumberFormatException nfe) {\n        return 0;\n    }\n    // correctly handle supplementary code points\n    char[] chars = Character.toChars(entityValue);\n    out.write(chars, 0, chars.length);\n    return end - index + 1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}