{
    "generation": "    /**\n     * Returns a (possibly empty) collection of legend items for the series\n     * that this renderer is responsible for drawing.\n     *\n     * @return The legend item collection (never <code>null</code>).\n     *\n     * @see #getLegendItem(int, int)\n     */\n    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = new LegendItemCollection();\n        if (this.plot == null || this.plot.getDataset() == null) {\n            return result;\n        }\n        CategoryDataset dataset = this.plot.getDataset();\n        if (dataset == null) {\n            return result;\n        }\n        \n        int seriesCount = dataset.getColumnCount();\n        if (dataset instanceof IntervalCategoryDataset) {\n            seriesCount = ((IntervalCategoryDataset) dataset).getRowCount();\n        }\n        \n        boolean ascending = plot.getRowRenderingOrder().equals(SortOrder.ASCENDING);\n        int[] seriesOrder = ascending ? \n                rowsInOrder(dataset.getRowCount()) : \n                reverseRowsInOrder(dataset.getRowCount());\n        \n        for (int series : seriesOrder) {\n            if (isSeriesVisibleInLegend(series)) {\n                LegendItem item = getLegendItem(series);\n                if (item != null) {\n                    result.add(item);\n                }\n            }\n        }\n        return result;\n    }\n\n    private int[] rowsInOrder(int rowCount) {\n        int[] order = new int[rowCount];\n        for (int i = 0; i < rowCount; i++) {\n            order[i] = i;\n        }\n        return order;\n    }\n\n    private int[] reverseRowsInOrder(int rowCount) {\n        int[] order = new int[rowCount];\n        for (int i = 0; i < rowCount; i++) {\n            order[i] = rowCount - 1 - i;\n        }\n        return order;\n    }\n\n    private intExporter getLegendItem(int series) {\n        return getLegendItem(this.plot.getIndexOf(this), series);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}