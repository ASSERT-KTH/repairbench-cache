{
    "generation": "  static boolean isSimpleNumber(String s) {\n    int len = s.length();\n    if (len == 0) return false;\n\n    // Check if the string is a simple decimal number with no leading zeros\n    // (unless the number is 0 itself)\n    if (s.length() > 1 && s.charAt(0) == '0') {\n      // Special case: \"0x\" prefix (hex)\n      if (s.length() >= 3 && s.charAt(1) == 'x') {\n        for (int i = 2; i < s.length(); i++) {\n          char c = s.charAt(i);\n          if (!(c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F')) {\n            return false;\n          }\n        }\n        return true;\n      }\n      // Leading zero (not just \"0\") -> not a simple number\n      if (s.equals(\"0\")) return true;  // But \"0\" is valid\n      if (s.charAt(1) >= '0' && s.charAt(1) <= '9') return false;\n    }\n\n    // Check if it's a decimal number with optional decimal point\n    boolean hasDecimal = false;\n    for (int index = 0; index < len; index++) {\n      char c = s.charAt(index);\n      if (c == '.') {\n        if (hasDecimal) return false; // multiple decimal points\n        hasDecimal = true;\n      } else if (c < '0' || c > '9') {\n        return false;\n      }\n    }\n    return len > 0; // hasDecimal is allowed in certain contexts per the tests\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}