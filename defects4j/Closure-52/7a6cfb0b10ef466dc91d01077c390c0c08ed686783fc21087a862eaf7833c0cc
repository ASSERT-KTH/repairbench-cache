{
    "generation": "static boolean isSimpleNumber(String s) {\n  if (s.isEmpty()) {\n    return false;\n  }\n  // Preserve octal '0' prefix, hexadecimal '0x'/'0X' prefix, and decimals with '.' or exponent\n  char firstChar = s.charAt(0);\n  if (firstChar == '0') {\n    if (s.length() > 1) {\n      char secondChar = s.charAt(1);\n      if (secondChar == 'x' || secondChar == 'X') {\n        // Hexadecimal\n        for (int i = 2; i < s.length(); i++) {\n          char c = s.charAt(i);\n          if (!((c >= '0' && c <= '9') ||\n                (c >= 'a' && c <= 'f') ||\n                (c >= 'A' && c <= 'F'))) {\n            return false;\n          }\n        }\n        return true;\n      } else if (secondChar >= '0' && secondChar <= '9') {\n        // Octal with '0' prefix\n        for (int i = 1; i < s.length(); i++) {\n          char c = s.charAt(i);\n          if (c < '0' || c > '7') {\n            return false;\n          }\n        }\n        return true;\n      }\n    } else {\n      // Single zero '0'\n      return true;\n    }\n  }\n\n  // Check for decimal number (integer or float)\n  boolean seenDot = false;\n  boolean seenExp = false;\n  for (int i = 0; i < s.length(); i++) {\n    char c = s.charAt(i);\n    if (c >= '0' && c <= '9') {\n      continue;\n    } else if (c == '.') {\n      if (seenDot || seenExp) {\n        return false;\n      }\n      seenDot = true;\n    } else if (c == 'e' || c == 'E') {\n      if (seenExp) {\n        return false;\n      }\n      seenExp = true;\n      // Exponent may have optional sign next\n      if (i + 1 < s.length() && (s.charAt(i + 1) == '+' || s.charAt(i + 1) == '-')) {\n        i++;\n      }\n      if (i + 1 >= s.length()) {\n        return false; // must have digits after exponent\n      }\n    } else {\n      return false;\n    }\n  }\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}