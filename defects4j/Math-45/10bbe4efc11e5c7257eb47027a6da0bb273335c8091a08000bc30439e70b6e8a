{
    "generation": "    /**\n     * Build a sparse matrix with the supplied row and column dimensions.\n     *\n     * @param rowDimension Number of rows of the matrix.\n     * @param columnDimension Number of columns of the matrix.\n     */\n    public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n        super(rowDimension, columnDimension);\n        // The total number of cells (rowDimension * columnDimension) must not\n        // exceed Integer.MAX_VALUE, as this would cause internal indexing\n        // (e.g., row * columnDimension + column) to overflow if a flattened\n        // 1D index is used, even for sparse matrices.\n        long n = (long) rowDimension * columnDimension;\n        if (n > Integer.MAX_VALUE) {\n            throw new org.apache.commons.math.exception.NumberIsTooLargeException(n, Integer.MAX_VALUE, false);\n        }\n        this.rows = rowDimension;\n        this.columns = columnDimension;\n        this.entries = new OpenIntToDoubleHashMap(0.0);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}