{
    "generation": "/**\n * Build a sparse matrix with the supplied row and column dimensions.\n *\n * @param rowDimension Number of rows of the matrix.\n * @param columnDimension Number of columns of the matrix.\n * @throws NumberIsTooLargeException if the total size (rowDimension * columnDimension) is too large to represent.\n */\npublic OpenMapRealMatrix(int rowDimension, int columnDimension) {\n    super(rowDimension, columnDimension);\n    this.rows = rowDimension;\n    this.columns = columnDimension;\n    // Check for potential integer overflow in dimension multiplication\n    long totalEntries = (long) rowDimension * (long) columnDimension;\n    if (totalEntries > Integer.MAX_VALUE) {\n        throw new org.apache.commons.math.exception.NumberIsTooLargeException(\n            totalEntries, Integer.MAX_VALUE, true);\n    }\n    this.entries = new OpenIntToDoubleHashMap(0.0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}