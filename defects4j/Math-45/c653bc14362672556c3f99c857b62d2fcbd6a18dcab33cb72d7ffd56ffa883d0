{
    "generation": "/**\n * Build a sparse matrix with the supplied row and column dimensions.\n *\n * @param rowDimension Number of rows of the matrix.\n * @param columnDimension Number of columns of the matrix.\n * @throws NumberIsTooLargeException if the product of the dimensions\n *         would overflow an int (i.e. exceed Integer.MAX_VALUE).\n */\npublic OpenMapRealMatrix(int rowDimension, int columnDimension) {\n    super(rowDimension, columnDimension);\n    // guard against overflow in the row*column \u2192 single int index\n    if ((long) rowDimension * columnDimension > Integer.MAX_VALUE) {\n        throw new NumberIsTooLargeException(\n                LocalizedFormats.OVERFLOW_SIMPLE,\n                (long) rowDimension * columnDimension,\n                Integer.MAX_VALUE);\n    }\n    this.rows    = rowDimension;\n    this.columns = columnDimension;\n    this.entries = new OpenIntToDoubleHashMap(0.0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}