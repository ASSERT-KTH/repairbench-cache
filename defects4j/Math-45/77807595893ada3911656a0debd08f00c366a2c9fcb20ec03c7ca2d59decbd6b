{
    "generation": "/**\n * Build a sparse matrix with the supplied row and column dimensions.\n *\n * @param rowDimension Number of rows of the matrix.\n * @param columnDimension Number of columns of the matrix.\n * @throws NumberIsTooLargeException if the total number of entries would overflow an int\n */\npublic OpenMapRealMatrix(int rowDimension, int columnDimension) {\n    super(rowDimension, columnDimension);\n    // sanity check: flattening (row*column) must fit into an int key space\n    long size = (long) rowDimension * columnDimension;\n    if (size > Integer.MAX_VALUE) {\n        throw new NumberIsTooLargeException(\n            LocalizedFormats.INVALID_MATRIX_DIMENSION,\n            size, Integer.MAX_VALUE);\n    }\n    this.rows    = rowDimension;\n    this.columns = columnDimension;\n    this.entries = new OpenIntToDoubleHashMap(0.0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}