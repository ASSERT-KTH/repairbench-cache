{
    "generation": "import org.apache.commons.math.exception.NumberIsTooLargeException;\nimport org.apache.commons.math.util.OpenIntToDoubleHashMap;\n\n    /**\n     * Build a sparse matrix with the supplied row and column dimensions.\n     *\n     * @param rowDimension Number of rows of the matrix.\n     * @param columnDimension Number of columns of the matrix.\n     * @throws org.apache.commons.math.exception.NotStrictlyPositiveException if row or column dimension is not\n     * positive.\n     * @throws NumberIsTooLargeException if the total number of entries of the\n     * matrix is larger than {@code Integer.MAX_VALUE}.\n     */\n    public OpenMapRealMatrix(int rowDimension, int columnDimension) {\n        super(rowDimension, columnDimension); // Checks for rowDimension > 0 and columnDimension > 0\n\n        // Check if the total number of elements exceeds Integer.MAX_VALUE\n        long maxEntries = (long) rowDimension * columnDimension;\n        if (maxEntries > Integer.MAX_VALUE) {\n            throw new NumberIsTooLargeException(maxEntries, Integer.MAX_VALUE, true);\n        }\n\n        this.rows = rowDimension;\n        this.columns = columnDimension;\n        this.entries = new OpenIntToDoubleHashMap(0.0);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}