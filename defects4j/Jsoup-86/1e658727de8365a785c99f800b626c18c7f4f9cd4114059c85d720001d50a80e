{
    "generation": "/**\n * Attempt to cast this comment to an XML Declaration note.\n * @return an XML declaration if it could be parsed as one, null otherwise.\n */\npublic XmlDeclaration asXmlDeclaration() {\n    String data = getData();\n    // XML Declarations should start with \"!\" or \"?\" and contain at least 2 chars\n    if (data.length() < 3) return null;\n    char firstChar = data.charAt(0);\n    char lastChar = data.charAt(data.length() - 1);\n    // Valid XML Declarations look like e.g., ?xml version=\"1.0\"? or !DOCTYPE html\n    if (!((firstChar == '!' || firstChar == '?') && (lastChar == '?' || lastChar == '!')))\n        return null;\n    // Remove the leading and trailing ?, ! characters\n    String declData = data.substring(1, data.length() - 1).trim();\n    if (declData.isEmpty()) return null;\n    Document doc;\n    try {\n        doc = Jsoup.parse(\"<\" + declData + \">\", baseUri(), Parser.xmlParser());\n    } catch (Exception e) {\n        return null;\n    }\n    XmlDeclaration decl = null;\n    if (doc != null && doc.childNodeSize() > 0 && doc.child(0) instanceof Element) {\n        Element el = doc.child(0);\n        decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n        decl.attributes().addAll(el.attributes());\n    }\n    return decl;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}