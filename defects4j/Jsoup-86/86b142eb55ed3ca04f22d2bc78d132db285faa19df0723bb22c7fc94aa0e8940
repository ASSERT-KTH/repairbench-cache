{
    "generation": "/**\n * Attempt to cast this comment to an XML Declaration note.\n * @return an XML declaration if it could be parsed as one, null otherwise.\n */\npublic XmlDeclaration asXmlDeclaration() {\n    String data = getData();\n    if (data.length() < 2 || data.charAt(0) != '<' || data.charAt(data.length() - 1) != '>') {\n        return null; // Not a valid XML declaration\n    }\n    String content = data.substring(1, data.length() - 1);\n    Document doc = Jsoup.parse(\"<\" + content + \">\", baseUri(), Parser.xmlParser());\n    XmlDeclaration decl = null;\n    if (doc.childNodeSize() > 0 && doc.child(0) instanceof Element) {\n        Element el = doc.child(0);\n        String tagName = NodeUtils.parser(doc).settings().normalizeTag(el.tagName());\n        if (tagName.equalsIgnoreCase(\"?xml\")) {\n            decl = new XmlDeclaration(tagName, data.startsWith(\"<!\"));\n            decl.attributes().addAll(el.attributes());\n        }\n    }\n    return decl;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}