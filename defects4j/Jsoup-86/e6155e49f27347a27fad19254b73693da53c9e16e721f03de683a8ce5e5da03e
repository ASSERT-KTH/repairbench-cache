{
    "generation": "/**\n * Attempt to cast this comment to an XML Declaration note.\n * @return an XML declaration if it could be parsed as one, null otherwise.\n */\npublic XmlDeclaration asXmlDeclaration() {\n    String data = getData();\n    if (data.length() < 2) return null; // not enough length for <...>\n    // Avoid IndexOutOfBoundsException if data doesn't have 'correct' pseudo-declaration shape\n    int start = 1;\n    int end = data.length() - 1;\n    if (start >= end) return null;\n    Document doc = Jsoup.parse(\"<\" + data.substring(start, end) + \">\", baseUri(), Parser.xmlParser());\n    XmlDeclaration decl = null;\n    // Check if the first node is an Element, as an XML Declaration would be parsed to an Element\n    for (org.jsoup.nodes.Node node : doc.childNodes()) {\n        if (node instanceof Element) {\n            Element el = (Element) node;\n            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            decl.attributes().addAll(el.attributes());\n            return decl;\n        }\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}