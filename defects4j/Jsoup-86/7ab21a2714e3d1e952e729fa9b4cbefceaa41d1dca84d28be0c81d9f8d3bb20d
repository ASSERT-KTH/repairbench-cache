{
    "generation": "/**\n * Attempt to cast this comment to an XML Declaration note.\n * @return an XML declaration if it could be parsed as one, null otherwise.\n */\npublic XmlDeclaration asXmlDeclaration() {\n    String data = getData();\n    if (data == null || data.length() < 2)\n        return null;\n    // Ensure that data starts with '!' or '?' and ends with '?'\n    char first = data.charAt(0);\n    char last = data.charAt(data.length() - 1);\n    if (!((first == '!' || first == '?') && (last == '?')))\n        return null;\n    // Only attempt parsing if it matches typical declaration patterns\n    String inner = data.substring(1, data.length() - 1).trim();\n    if (inner.isEmpty())\n        return null;\n    Document doc = Jsoup.parse(\"<\" + inner + \">\", baseUri(), Parser.xmlParser());\n    XmlDeclaration decl = null;\n    if (doc.children().size() > 0) { // use children() to get element nodes only\n        Element el = doc.child(0);\n        decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n        decl.attributes().addAll(el.attributes());\n    }\n    return decl;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}