{
    "generation": "/**\n * Attempt to cast this comment to an XML Declaration node.\n * @return an XML declaration if it could be parsed as one, null otherwise.\n */\npublic XmlDeclaration asXmlDeclaration() {\n    String data = getData();\n    // Avoid parsing if data is empty or too short to be a declaration\n    if (data == null || data.length() < 2)\n        return null;\n    String inner;\n    try {\n        inner = data.substring(1, data.length() - 1);\n    } catch (StringIndexOutOfBoundsException e) {\n        return null;\n    }\n    Document doc = Jsoup.parse(\"<\" + inner + \">\", baseUri(), Parser.xmlParser());\n    if (doc.childNodeSize() == 0)\n        return null;\n    Node first = doc.childNode(0);\n    // Look for an element child\n    Element el = null;\n    if (first instanceof Element) {\n        el = (Element) first;\n    } else {\n        // Or search children for an element\n        for (Node n : doc.childNodes()) {\n            if (n instanceof Element) {\n                el = (Element) n;\n                break;\n            }\n        }\n    }\n    if (el == null)\n        return null;\n    XmlDeclaration decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n    decl.attributes().addAll(el.attributes());\n    return decl;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}