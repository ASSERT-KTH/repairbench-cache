{
    "generation": "// does not recurse.\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    // Insert the moved nodes at the start of body, preserving order\n    Element body = body();\n    int insertPos = 0; // position to insert at the start of body\n    for (Node node : toMove) {\n        element.removeChild(node);\n        body.insertChildren(insertPos++, new TextNode(\" \", \"\"));\n        body.insertChildren(insertPos++, node);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}