{
    "generation": "// does not recurse.\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node: element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank()) {\n                toMove.add(tn);\n            }\n        }\n    }\n\n    // detach all text nodes from the original element\n    for (Node node: toMove) {\n        element.removeChild(node);\n    }\n    // prepend them into the body in their original order\n    for (int i = toMove.size() - 1; i >= 0; i--) {\n        body().prependChild(toMove.get(i));\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}