{
    "generation": "// does not recurse.\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    // Insert each TextNode at the start of the body, in order\n    Element body = body();\n    int insertIndex = 0;\n    for (Node node : toMove) {\n        element.removeChild(node);\n        // Insert a space if needed between moved nodes\n        if (insertIndex > 0) {\n            body.insertChildren(insertIndex, new TextNode(\" \", \"\"));\n            insertIndex++;\n        }\n        body.insertChildren(insertIndex, node);\n        insertIndex++;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}