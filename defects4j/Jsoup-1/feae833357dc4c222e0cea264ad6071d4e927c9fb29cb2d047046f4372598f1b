{
    "generation": "// does not recurse.\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node: element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    // Insert moved nodes at the beginning of body in original order\n    Element body = body();\n    int insertPos = 0;\n    for (Node node: toMove) {\n        element.removeChild(node);\n        // Insert a space if there are already nodes in the body and previous is not a space\n        if (insertPos > 0 || body.childNodeSize() > 0) {\n            body.insertChildren(insertPos++, new TextNode(\" \", \"\"));\n        }\n        body.insertChildren(insertPos++, node);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}