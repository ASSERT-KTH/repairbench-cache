{
    "generation": "private void normalise(Element element) {\n    // Collect non-blank text nodes.\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    // We must move these orphan text nodes into the start of the body,\n    // preserving their original order. To do this we iterate in reverse and \u201cprepend\u201d them.\n    for (int i = toMove.size() - 1; i >= 0; i--) {\n        Node node = toMove.get(i);\n        element.removeChild(node);\n        // By prepending a space and then the text node, we ensure that, when rendered,\n        // the moved text becomes the first part of body (separated from following text by a space)\n        body().prependChild(new TextNode(\" \", \"\"));\n        body().prependChild(node);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}