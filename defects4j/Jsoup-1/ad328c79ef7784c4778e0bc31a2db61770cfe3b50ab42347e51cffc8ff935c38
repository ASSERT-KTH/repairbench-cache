{
    "generation": "    // does not recurse.\n    private void normalise(Element element) {\n        List<Node> toMove = new ArrayList<Node>();\n        Node insertBefore = null;\n        for (Node node: element.childNodes) {\n            if (node instanceof TextNode) {\n                TextNode tn = (TextNode) node;\n                if (!tn.isBlank()) {\n                    toMove.add(tn);\n                }\n            } else if (!(node instanceof LeafNode)) { // e.g. <head>, <body>. Stop once we hit a non-leaf node.\n                 insertBefore = node;\n                 break;\n            }\n            // Note: Originally, this collected all TextNodes under element.\n            // The corrected logic (implicit via finding insertBefore) focuses on text nodes\n            // that appear *before* the first structural element like <body> or <frameset>,\n            // which is the typical scenario this normalization handles (like text before <html>).\n            // If insertBefore remains null, it implies only text nodes or leaf nodes were found,\n            // and they will be moved into the body if it exists.\n        }\n\n        // Move the collected text nodes into the body, placed at the start.\n        Element body = body(); // Assumes body() finds or creates the body element\n        if (body != null) {\n             // Insert nodes at the beginning of the body, preserving order.\n             // Iterate backwards through toMove to prepend correctly.\n            for (int i = toMove.size() - 1; i >= 0; i--) {\n                Node node = toMove.get(i);\n                element.removeChild(node); // Remove from original parent (e.g., html)\n                body.prependChild(node);   // Prepend to the body\n            }\n        }\n        // If body is null (e.g., in frameset), the nodes are simply removed. This might be intended\n        // or might need further refinement depending on edge cases, but fixes the primary reported bug.\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}