{
    "generation": "@Override\npublic boolean isSubtype(JSType other) {\n  if (!(other instanceof ArrowType)) {\n    return false;\n  }\n\n  ArrowType that = (ArrowType) other;\n\n  // this.returnType <: that.returnType (covariant)\n  if (!this.returnType.isSubtype(that.returnType)) {\n    return false;\n  }\n\n  // We do not allow extra required parameters in the subtype (this).\n  // So \"function(x, y)\" is NOT a subtype of \"function(x)\".\n  // Required parameters in \"this\" must not outnumber required parameters in \"that\".\n\n  Node thisParam = parameters.getFirstChild();\n  Node thatParam = that.parameters.getFirstChild();\n\n  while (thisParam != null || thatParam != null) {\n    boolean thisIsVarArgs = thisParam != null && thisParam.isVarArgs();\n    boolean thatIsVarArgs = thatParam != null && thatParam.isVarArgs();\n\n    if (thisParam != null && thatParam != null) {\n      JSType thisParamType = thisParam.getJSType();\n      JSType thatParamType = thatParam.getJSType();\n\n      // Contravariant: that.paramType[i] <: this.paramType[i]\n      if (thisParamType != null) {\n        if (thatParamType == null || !thatParamType.isSubtype(thisParamType)) {\n          return false;\n        }\n      }\n\n      // Move to next param unless we have varargs\n      if (!thisIsVarArgs) {\n        thisParam = thisParam.getNext();\n      }\n      if (!thatIsVarArgs) {\n        thatParam = thatParam.getNext();\n      }\n      // If both are varargs, we're done with parameters\n      if (thisIsVarArgs && thatIsVarArgs) {\n        thisParam = null;\n        thatParam = null;\n      }\n      continue;\n    }\n\n    // If \"this\" has remaining required parameters and \"that\" does not,\n    // then \"this\" is not a subtype of \"that\".\n    if (thisParam != null && !thisParam.isOptional() && !thisParam.isVarArgs()) {\n      return false;\n    }\n\n    // If \"that\" has remaining params, that's OK (fewer required in \"this\").\n    // So, just advance.\n    if (thisParam != null) {\n      thisParam = thisParam.getNext();\n    }\n    if (thatParam != null) {\n      thatParam = thatParam.getNext();\n    }\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}