{
    "generation": "@Override\npublic boolean isSubtype(JSType other) {\n  if (!(other instanceof ArrowType)) {\n    return false;\n  }\n\n  ArrowType that = (ArrowType) other;\n\n  // This is described in Draft 2 of the ES4 spec,\n  // Section 3.4.7: Subtyping Function Types.\n\n  // this.returnType <: that.returnType (covariant)\n  if (!this.returnType.isSubtype(that.returnType)) {\n    return false;\n  }\n\n  Node thisParam = parameters.getFirstChild();\n  Node thatParam = that.parameters.getFirstChild();\n\n  // We must check that every required parameter in the supertype (thatParam) is present\n  // and thatParamType <: thisParamType (contravariant).\n  while (thatParam != null) {\n    JSType thatParamType = thatParam.getJSType();\n    boolean thatIsVarArgs = thatParam.isVarArgs();\n\n    // If thisParam is null, then this function does not have enough parameters\n    if (thisParam == null) {\n      // If the supertype is expecting a variable-arity argument, then that's fine.\n      if (!thatIsVarArgs) {\n        return false;\n      } else {\n        // we're done (no more parameters required)\n        break;\n      }\n    }\n\n    JSType thisParamType = thisParam.getJSType();\n    boolean thisIsVarArgs = thisParam.isVarArgs();\n\n    // If the supertype provides a type, that type should be a subtype of the matching\n    // parameter type in this function type (contravariant)\n    if (thatParamType != null) {\n      if (thisParamType == null ||\n          !thatParamType.isSubtype(thisParamType)) {\n        return false;\n      }\n    }\n\n    // If both sides are varargs, we're done.\n    if (thatIsVarArgs && thisIsVarArgs) {\n      break;\n    }\n\n    // Advance thisParam & thatParam unless they are varargs\n    if (!thisIsVarArgs) {\n      thisParam = thisParam.getNext();\n    }\n    if (!thatIsVarArgs) {\n      thatParam = thatParam.getNext();\n    }\n\n    // Both var_args indicates the end (handled above).\n  }\n\n  // Any extra params in 'this' are okay (subtype can accept more arguments).\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}