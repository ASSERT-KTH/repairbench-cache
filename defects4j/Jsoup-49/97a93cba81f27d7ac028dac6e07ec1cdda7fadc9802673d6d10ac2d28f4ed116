{
    "generation": "    protected void addChildren(int index, Node... children) {\n        Validate.noNullElements(children);\n        ensureChildNodes();\n\n        // 1. Detach all nodes from their existing parent first.\n        // This ensures that removals happen cleanly before additions, avoiding index issues\n        // when children are moved within the same parent node.\n        for (Node child : children) {\n            // Note: Node.remove() is a public method that calls parentNode.removeChild(this)\n            // If child has no parent, this is a no-op.\n            // If child is already a child of 'this', this removes it first.\n            child.remove();\n        }\n\n        // 2. Add the children at the specified index. Iterate backwards to maintain order.\n        for (int i = children.length - 1; i >= 0; i--) {\n            Node in = children[i];\n            // At this point, 'in' is detached (its parentNode is null).\n            // Set the parent node link and add to the childNodes list.\n            in.setParentNode(this); // Assign current node as parent\n            childNodes.add(index, in); // Add to list at specified index\n        }\n\n        // 3. Reindex the children starting from the insertion point to update sibling indices.\n        // The prior remove() calls handled reindexing in the original parent list(s).\n        // This call handles reindexing in *this* node's list after the additions.\n        reindexChildren(index);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}