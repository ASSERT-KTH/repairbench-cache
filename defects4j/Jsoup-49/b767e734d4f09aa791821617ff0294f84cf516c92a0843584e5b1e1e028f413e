{
    "generation": "protected void addChildren(int index, Node... children) {\n    Validate.noNullElements(children);\n    ensureChildNodes();\n    // Compute an effective insertion point. When moving nodes that are already\n    // in this parent, if they currently come *before* the given index then their removal\n    // will shift the remaining nodes left, so we adjust.\n    int effectiveIndex = index;\n    for (Node child : children) {\n        if (child.parent() == this) {\n            int pos = childNodes.indexOf(child);\n            if (pos < effectiveIndex)\n                effectiveIndex--;\n        }\n    }\n    // Insert the nodes in the order they appear in the array.\n    for (int i = 0; i < children.length; i++) {\n        Node in = children[i];\n        reparentChild(in);\n        childNodes.add(effectiveIndex + i, in);\n    }\n    reindexChildren(0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}