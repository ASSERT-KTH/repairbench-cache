{
    "generation": "    protected void addChildren(int index, Node... children) {\n        Validate.noNullElements(children);\n        ensureChildNodes();\n\n        // Create a temporary list to hold the nodes to be processed.\n        // This is crucial for handling cases where nodes are moved within the same parent.\n        // If a node is already a child of 'this' element, it needs to be removed from its\n        // current position before being re-added at the new 'index'. Doing this in a\n        // separate pass prevents index shifting issues while iterating and adding.\n        ArrayList<Node> nodesToProcess = new ArrayList<>(children.length);\n        for (Node child : children) {\n            // If the child is already a child of 'this' element, remove it from its\n            // current position. This is the responsibility of `addChildren` because\n            // `reparentChild` (as of Jsoup 1.15.1) does not remove the child if its\n            // parent is already 'this'. `removeChild` also sets child.parent to null.\n            if (child.parent() == this) {\n                removeChild(child);\n            }\n            nodesToProcess.add(child);\n        }\n\n        // Now, all children that were originally part of 'this' have been detached\n        // from the `childNodes` list. We can safely add all nodes from `nodesToProcess`.\n        // Iterate in reverse order to ensure that `index` remains consistent for all insertions.\n        for (int i = nodesToProcess.size() - 1; i >= 0; i--) {\n            Node in = nodesToProcess.get(i);\n            // reparentChild will set the parent of 'in' to 'this'. If 'in' had a\n            // different parent, it would be removed from that parent. If it was\n            // just removed from 'this' above, its parent is null, and reparentChild\n            // simply sets its parent to 'this'.\n            reparentChild(in);\n            childNodes.add(index, in);\n        }\n        reindexChildren(index);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}