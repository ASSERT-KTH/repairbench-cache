{
    "generation": "    protected void addChildren(int index, Node... children) {\n        Validate.noNullElements(children);\n        ensureChildNodes();\n\n        List<Node> newChildren = new ArrayList<>(children.length); // Temporary list to hold nodes to be inserted\n\n        // Phase 1: Reparent children (which also handles detaching them from their current parent, if any)\n        // If a child is already parented by 'this', this will remove it from 'this.childNodes'.\n        // Collect them into newChildren to preserve their relative order for later insertion.\n        for (Node in : children) {\n            reparentChild(in); // This call ensures parent is set to 'this' and removes from old parent's childNodes (if old parent is 'this', it removes from 'this.childNodes').\n            newChildren.add(in);\n        }\n\n        // At this point, any children that were previously in 'this.childNodes' are now removed from it.\n        // The 'childNodes' list has shrunk, and 'newChildren' holds the nodes ready to be inserted.\n\n        // Phase 2: Add all processed children to 'this.childNodes' at the specified index.\n        // Iterate backwards over 'newChildren' to correctly insert them at the fixed 'index'.\n        for (int i = newChildren.size() - 1; i >= 0; i--) {\n            childNodes.add(index, newChildren.get(i));\n        }\n\n        // Reindex children from the insertion point to update sibling indices.\n        reindexChildren(index);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}