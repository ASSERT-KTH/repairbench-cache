{
    "generation": "    protected void addChildren(int index, Node... children) {\n        Validate.noNullElements(children);\n        ensureChildNodes();\n\n        // Step 1: Identify nodes from the input 'children' array that are already\n        // children of *this* element. These nodes need to be removed from their\n        // current positions to prepare for re-insertion at the specified 'index'.\n        List<Node> existingChildrenInThisElement = new ArrayList<>(children.length);\n        for (Node child : children) {\n            if (child.parent() == this) {\n                existingChildrenInThisElement.add(child);\n            }\n        }\n\n        // Step 2: Remove the identified existing children from 'this.childNodes'.\n        // Using 'removeAll' ensures removal by object reference, avoiding issues\n        // with stale 'siblingIndex' values and ensuring correct list manipulation.\n        // After removal, set their parent to null so reparentChild treats them as new.\n        if (!existingChildrenInThisElement.isEmpty()) {\n            childNodes.removeAll(existingChildrenInThisElement);\n            for (Node child : existingChildrenInThisElement) {\n                child.setParentNode(null);\n                child.setSiblingIndex(-1); // Defensive reset\n            }\n        }\n\n        // Step 3: Add all children from the input 'children' array at the specified index.\n        // Iterate backwards to correctly maintain the insertion point.\n        for (int i = children.length - 1; i >= 0; i--) {\n            Node in = children[i];\n            reparentChild(in); // Sets 'in.parent = this' and resets 'siblingIndex'.\n                               // Since 'in' might have its parent set to null in Step 2,\n                               // or might be from a different parent, this method will\n                               // correctly attach it to 'this' without attempting to remove\n                               // it from 'this.childNodes' if its parent is already null.\n            childNodes.add(index, in);\n        }\n        reindexChildren(index);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}