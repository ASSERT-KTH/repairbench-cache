{
    "generation": "    /**\n     * For this distribution, {@code X}, this method returns {@code P(X < x)}.\n     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,\n     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.\n     *\n     * @param x Value at which the CDF is evaluated.\n     * @return CDF evaluated at {@code x}.\n     * @throws MathException if the algorithm fails to converge\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        if (Double.isInfinite(dev)) {\n            // For very large positive or negative values, the expression\n            // used to compute the error function (and therefore the\n            // cumulative probability) is very sensitive to the\n            // accumulation of round-off errors.  Since extreme values\n            // are effectively zero or one, we can use the mean and\n            // standard deviation to compute the extreme values\n            // directly.\n            return (x < mean) ? 0 : 1;\n        }\n        return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * FastMath.sqrt(2.0))));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}