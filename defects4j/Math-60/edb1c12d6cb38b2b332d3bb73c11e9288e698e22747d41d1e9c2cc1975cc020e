{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    if (Double.isNaN(x)) {\n        return Double.NaN;\n    }\n    if (x == Double.POSITIVE_INFINITY) {\n        return 1.0;\n    }\n    if (x == Double.NEGATIVE_INFINITY) {\n        return 0.0;\n    }\n    final double dev = x - mean;\n    // Top-code for extreme values (compare to +/-40 stddev as in Javadoc)\n    if (dev < -40.0 * standardDeviation) {\n        return 0.0;\n    } else if (dev > 40.0 * standardDeviation) {\n        return 1.0;\n    }\n    try {\n        return 0.5 * (1.0 + Erf.erf((dev) /\n                (standardDeviation * FastMath.sqrt(2.0))));\n    } catch (MaxIterationsExceededException ex) {\n        throw new MathException(ex);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}