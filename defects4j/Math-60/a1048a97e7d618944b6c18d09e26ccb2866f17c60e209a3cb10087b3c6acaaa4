{
    "generation": "    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        try {\n            // Handle infinite cases explicitly\n            if (Double.isInfinite(x)) {\n                if (x < 0) {\n                    return 0.0;\n                } else {\n                    return 1.0;\n                }\n            }\n            return 0.5 * (1.0 + Erf.erf((dev) /\n                        (standardDeviation * FastMath.sqrt(2.0))));\n        } catch (MaxIterationsExceededException ex) {\n            if (Double.isInfinite(x)) {\n                if (x < 0) {\n                    return 0.0;\n                } else {\n                    return 1.0;\n                }\n            }\n            if (x < (mean - 20 * standardDeviation)) {\n                return 0;\n            } else if (x > (mean + 20 * standardDeviation)) {\n                return 1;\n            } else {\n                throw ex;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}