{
    "generation": "    /**\n     * For this distribution, {@code X}, this method returns {@code P(X < x)}.\n     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,\n     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.\n     *\n     * @param x Value at which the CDF is evaluated.\n     * @return CDF evaluated at {@code x}.\n     * @throws MathException if the algorithm fails to converge\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        if (Math.abs(dev) > 40 * standardDeviation) {\n            return dev < 0 ? 0 : 1;\n        }\n        return cumulativeProbability(dev / standardDeviation);\n    }\n\n    /**\n     * For this distribution, {@code X}, this method returns {@code P(X > x)}.\n     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,\n     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.\n     *\n     * @param x Value at which the CDF is evaluated.\n     * @return CDF evaluated at {@code x}.\n     * @throws MathException if the algorithm fails to converge\n     */\n    public double tailProbability(double x) throws MathException {\n        return 1 - cumulativeProbability(x);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}