{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    // Handle NaN and infinite values explicitly.\n    if (Double.isNaN(x)) {\n        return Double.NaN;\n    }\n    if (x == Double.POSITIVE_INFINITY) {\n        return 1.0;\n    }\n    if (x == Double.NEGATIVE_INFINITY) {\n        return 0.0;\n    }\n    \n    // For extreme values, return 0 or 1 as appropriate, avoiding numerical issues.\n    if (x > mean + 20 * standardDeviation) {\n        return 1.0;\n    }\n    if (x < mean - 20 * standardDeviation) {\n        return 0.0;\n    }\n    \n    // Compute the cumulative probability using the error function.\n    double arg = (x - mean) / (standardDeviation * FastMath.sqrt(2.0));\n    return 0.5 * (1.0 + Erf.erf(arg));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}