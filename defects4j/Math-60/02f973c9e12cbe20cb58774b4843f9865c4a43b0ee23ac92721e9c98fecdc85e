{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    final double dev = x - mean;\n    if (dev < -40 * standardDeviation) {\n        return 0;\n    } else if (dev > 40 * standardDeviation) {\n        return 1;\n    }\n    try {\n        return 0.5 * (1.0 + Erf.erf((dev) / (standardDeviation * FastMath.sqrt(2.0))));\n    } catch (MaxIterationsExceededException ex) {\n        // This catch is redundant now but kept for completeness if needed\n        throw ex;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}