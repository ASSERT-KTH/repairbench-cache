{
    "generation": "@Override\npublic double cumulativeProbability(double x) throws MathException {\n    // handle infinities explicitly to avoid ERF convergence errors\n    if (x == Double.POSITIVE_INFINITY) {\n        return 1.0;\n    }\n    if (x == Double.NEGATIVE_INFINITY) {\n        return 0.0;\n    }\n    final double dev = x - mean;\n    try {\n        return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * FastMath.sqrt(2.0))));\n    } catch (MaxIterationsExceededException ex) {\n        // top\u2010code extreme finite values if Erf fails to converge\n        if (x < (mean - 20 * standardDeviation)) {\n            return 0.0;\n        } else if (x > (mean + 20 * standardDeviation)) {\n            return 1.0;\n        }\n        throw ex;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}