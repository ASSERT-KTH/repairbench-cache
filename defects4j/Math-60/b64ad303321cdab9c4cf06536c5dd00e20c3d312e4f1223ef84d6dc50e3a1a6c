{
    "generation": "    /**\n     * For this distribution, {@code X}, this method returns {@code P(X < x)}.\n     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,\n     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.\n     *\n     * @param x Value at which the CDF is evaluated.\n     * @return CDF evaluated at {@code x}.\n     * @throws MathException if the algorithm fails to converge for arguments\n     *                       within 40 standard deviations of the mean.\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        // Handle infinite cases first, to avoid issues with Erf.erf implementation\n        if (x == Double.NEGATIVE_INFINITY) {\n            return 0.0;\n        }\n        if (x == Double.POSITIVE_INFINITY) {\n            return 1.0;\n        }\n\n        final double dev = x - mean;\n        // Handle cases far from the mean (|z| > 40) as specified in javadoc\n        // This also prevents passing extremely large values (like Double.MAX_VALUE)\n        // or potentially problematic values derived from them to Erf.erf.\n        if (FastMath.abs(dev) > 40 * standardDeviation) {\n             return x < mean ? 0.0d : 1.0d;\n        }\n\n        // Use Erf function for values within 40 standard deviations.\n        try {\n            return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * FastMath.sqrt(2.0))));\n        } catch (MaxIterationsExceededException ex) {\n            // If Erf.erf fails to converge for an argument within 40 standard deviations,\n            // it indicates a genuine convergence problem for a reasonable input range.\n            // The original catch block's conditions for returning 0 or 1 are now\n            // effectively handled by the 40 standard deviation check above.\n            // Therefore, rethrow the exception if convergence fails in this range.\n            throw ex;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}