{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    if (x == Double.POSITIVE_INFINITY) {\n        return 1.0;\n    } else if (x == Double.NEGATIVE_INFINITY) {\n        return 0.0;\n    }\n\n    final double dev = x - mean;\n    try {\n        return 0.5 * (1.0 + Erf.erf((dev) /\n                (standardDeviation * FastMath.sqrt(2.0))));\n    } catch (ConvergenceException ex) {\n        if (x < (mean - 40 * standardDeviation)) {\n            return 0.0;\n        } else if (x > (mean + 40 * standardDeviation)) {\n            return 1.0;\n        } else {\n            throw ex;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}