{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    // explicitly handle infinities so Erf.erf is never called with \u00b1\u221e\n    if (x == Double.POSITIVE_INFINITY) {\n        return 1.0;\n    }\n    if (x == Double.NEGATIVE_INFINITY) {\n        return 0.0;\n    }\n    final double dev = x - mean;\n    try {\n        return 0.5 * (1.0 +\n               Erf.erf(dev / (standardDeviation * FastMath.sqrt(2.0))));\n    } catch (MaxIterationsExceededException ex) {\n        // fall back to top\u2010coding if extreme values blow up\n        if (x < (mean - 20 * standardDeviation)) {\n            return 0.0;\n        } else if (x > (mean + 20 * standardDeviation)) {\n            return 1.0;\n        }\n        // otherwise rethrow\n        throw ex;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}