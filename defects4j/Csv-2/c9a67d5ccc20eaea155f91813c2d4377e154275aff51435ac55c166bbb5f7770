{
    "generation": "    /**\n     * Returns a value by name.\n     *\n     * @param name\n     *            the name of the column to be retrieved.\n     * @return the column value, or {@code null} if the column name is not found\n     * @throws IllegalStateException\n     *             if no header mapping was provided\n     * @throws IllegalArgumentException\n     *             if the record is inconsistent\n     * @see #isConsistent()\n     */\n    public String get(final String name) {\n        if (mapping == null) {\n            throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");\n        }\n        final Integer index = mapping.get(name);\n        if (index != null) {\n            // The Javadoc states that an IllegalArgumentException should be thrown if the record is inconsistent.\n            // An inconsistency occurs if a header mapping points to an index that is\n            // out of bounds for the actual values array of the record.\n            if (index.intValue() < 0 || index.intValue() >= values.length) {\n                throw new IllegalArgumentException(\n                        String.format(\"The header for column '%s' maps to index %d, which is out of bounds for the record's %d values.\",\n                                name, index.intValue(), values.length));\n            }\n            return values[index.intValue()];\n        }\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}