{
    "generation": "    /**\n     * Returns a value by name.\n     *\n     * @param name\n     *            the name of the column to be retrieved.\n     * @return the column value, or {@code null} if the column name is not found\n     * @throws IllegalStateException\n     *             if no header mapping was provided\n     * @throws IllegalArgumentException\n     *             if the record is inconsistent\n     * @see #isConsistent()\n     */\n    public String get(final String name) {\n        if (mapping == null) {\n            throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");\n        }\n        final Integer index = mapping.get(name);\n        if (index != null) {\n            // Check if the retrieved index is out of bounds for the actual values array.\n            // This indicates an inconsistent record where the header mapping does not match the actual data length.\n            if (index.intValue() >= values.length) {\n                throw new IllegalArgumentException(\n                        String.format(\"The header mapping contains an index %s which is out of bounds for the actual record of length %s. \" +\n                                      \"This can happen if the record is inconsistent.\", index.intValue(), values.length));\n            }\n            return values[index.intValue()];\n        } else {\n            return null;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}