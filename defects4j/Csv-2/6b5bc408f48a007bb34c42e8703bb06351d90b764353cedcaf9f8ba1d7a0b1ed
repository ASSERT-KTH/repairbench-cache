{
    "generation": "    /**\n     * Returns a value by name.\n     *\n     * @param name\n     *            the name of the column to be retrieved.\n     * @return the column value, or {@code null} if the column name is not found\n     * @throws IllegalStateException\n     *             if no header mapping was provided\n     * @throws IllegalArgumentException\n     *             if the record is inconsistent\n     * @see #isConsistent()\n     */\n    public String get(final String name) {\n        if (mapping == null) {\n            throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");\n        }\n        final Integer index = mapping.get(name);\n        if (index != null) {\n            // Check for consistency: the retrieved index must be within the bounds of the actual values array.\n            // If it's out of bounds, the record is inconsistent.\n            if (index.intValue() >= values.length) {\n                throw new IllegalArgumentException(\n                    String.format(\"The record is inconsistent. The index %d for column '%s' is out of bounds for the values array of length %d.\",\n                                    index.intValue(), name, values.length));\n            }\n            return values[index.intValue()];\n        } else {\n            return null;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}