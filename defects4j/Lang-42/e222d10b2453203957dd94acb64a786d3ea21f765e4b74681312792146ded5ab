{
    "generation": "public void escape(Writer writer, String str) throws IOException {\n    int len = str.length();\n    for (int i = 0; i < len; i++) {\n        char c = str.charAt(i);\n        int codepoint;\n        // If we have a surrogate pair, combine them into a single Unicode codepoint.\n        if (Character.isHighSurrogate(c) && i + 1 < len && Character.isLowSurrogate(str.charAt(i + 1))) {\n            codepoint = Character.toCodePoint(c, str.charAt(i + 1));\n            i++; // Skip the low surrogate.\n        } else {\n            codepoint = c;\n        }\n        // Only BMP characters could have a predefined entity name.\n        String entityName = codepoint < 0x10000 ? this.entityName((char) codepoint) : null;\n        if (entityName == null) {\n            if (codepoint > 0x7F) {\n                writer.write(\"&#\");\n                writer.write(Integer.toString(codepoint, 10));\n                writer.write(';');\n            } else {\n                writer.write(codepoint);\n            }\n        } else {\n            writer.write('&');\n            writer.write(entityName);\n            writer.write(';');\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}