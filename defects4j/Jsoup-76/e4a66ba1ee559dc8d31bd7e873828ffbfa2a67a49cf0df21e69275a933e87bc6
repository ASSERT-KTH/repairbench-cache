{
    "generation": "// In HtmlTreeBuilderState.InBody:\n@Override\nboolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            Token.Character c = t.asCharacter();\n\n            // --- FIX: skip a single leading LF inside a <pre> (or <listing>) ---\n            // If we're directly inside a freshly\u2010opened <pre> and the first\n            // character is a line feed, drop it.\n            Element curr = tb.currentElement();\n            if (\"pre\".equals(curr.nodeName()) \n                && curr.childNodeSize() == 0 \n                && c.getData().length() > 0 \n                && c.getData().charAt(0) == '\\n') {\n                \n                String remainder = c.getData().substring(1);\n                if (remainder.isEmpty()) {\n                    // consumed the token, nothing to insert\n                    return true;\n                }\n                // mutate the token to remove the first LF\n                c.data(remainder);\n            }\n            // --- end FIX ---\n\n            if (c.getData().equals(nullString)) {\n                tb.error(this);\n                return false;\n            } else if (tb.framesetOk() && isWhitespace(c)) {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n                tb.framesetOk(false);\n            }\n            break;\n        }\n\n        case Comment: {\n            tb.insert(t.asComment());\n            break;\n        }\n\n        case Doctype: {\n            tb.error(this);\n            return false;\n        }\n\n        case StartTag: {\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.normalName();\n\n            // Preserve existing <pre> / <listing> handling:\n            if (StringUtil.inSorted(name, Constants.InBodyStartPreListing)) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n                tb.framesetOk(false);\n            }\n            // --- the rest of your StartTag branches remain unchanged ---\n            else if (name.equals(\"a\")) {\n                // ...\n            } \n            // etc.\n            break;\n        }\n\n        case EndTag:\n            // ... unchanged ...\n            break;\n\n        case EOF:\n            // ... unchanged ...\n            break;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}