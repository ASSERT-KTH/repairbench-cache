{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            Token.Character c = t.asCharacter();\n            if (c.getData().equals(nullString)) {\n                // todo confirm that check\n                tb.error(this);\n                return false;\n            } else if (tb.framesetOk() && isWhitespace(c)) { // don't check if whitespace if frames already closed\n                if (tb.inScope(\"pre\") && isNewLine(c)) {\n                    // Skip first newline in pre blocks\n                    boolean isPreContext = false;\n                    ArrayList<Element> stack = tb.getStack();\n                    for (int i = stack.size() - 1; i >= 0; i--) {\n                        Element el = stack.get(i);\n                        if (el.nodeName().equals(\"pre\")) {\n                            isPreContext = true;\n                            break;\n                        }\n                    }\n                    if (isPreContext) {\n                        // Check if this is the first non-whitespace after entering pre\n                        boolean hasPriorContent = false;\n                        for (Element el : stack) {\n                            if (el.hasChildren()) {\n                                hasPriorContent = true;\n                                break;\n                            }\n                        }\n                        if (!hasPriorContent) {\n                            return true; // skip the first newline in pre\n                        }\n                    }\n                }\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n                tb.framesetOk(false);\n            }\n            break;\n        }\n        // ... rest of the function remains unchanged ...\n    }\n    return true;\n}\n\nprivate boolean isNewLine(Token.Character c) {\n    String data = c.getData();\n    return data != null && data.equals(\"\\n\");\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}