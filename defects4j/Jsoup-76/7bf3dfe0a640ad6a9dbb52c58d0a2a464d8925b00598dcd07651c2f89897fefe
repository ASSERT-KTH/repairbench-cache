{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            Token.Character c = t.asCharacter();\n\n            // ---- FIX: skip a single leading LF in <pre> elements ----\n            if (tb.currentElement().nodeName().equals(\"pre\")\n                && c.getData().length() > 0\n                && c.getData().charAt(0) == '\\n') \n            {\n                String d = c.getData().substring(1);\n                // if that was all the data, swallow it\n                if (d.isEmpty())\n                    return true;\n                // otherwise replace the token's data with the remainder\n                c.data(d);\n            }\n            // ---------------------------------------------------------\n\n            if (c.getData().equals(nullString)) {\n                tb.error(this);\n                return false;\n            } else if (tb.framesetOk() && isWhitespace(c)) {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n                tb.framesetOk(false);\n            }\n            break;\n        }\n        case Comment: {\n            tb.insert(t.asComment());\n            break;\n        }\n        case Doctype: {\n            tb.error(this);\n            return false;\n        }\n        case StartTag: {\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.normalName();\n            // ... the rest of your StartTag logic unchanged ...\n            break;\n        }\n        case EndTag: {\n            Token.EndTag endTag = t.asEndTag();\n            String name = endTag.normalName();\n            // ... the rest of your EndTag logic unchanged ...\n            break;\n        }\n        case EOF:\n            // stop parsing\n            break;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}