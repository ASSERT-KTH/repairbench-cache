{
    "generation": "public List<Connection.KeyVal> formData() {\n    ArrayList<Connection.KeyVal> data = new ArrayList<>();\n\n    // iterate the form control elements and accumulate their values\n    for (Element el: elements) {\n        if (!el.tag().isFormSubmittable()) continue;\n        if (el.hasAttr(\"disabled\")) continue;\n        String name = el.attr(\"name\");\n        if (name.isEmpty()) continue;\n\n        String tagName = el.normalName();\n        String type = el.attr(\"type\");\n\n        // skip <button> tags and input types that are never successful controls\n        if (\"button\".equals(tagName)\n            || (\"input\".equals(tagName)\n                && (\"submit\".equalsIgnoreCase(type)\n                    || \"reset\".equalsIgnoreCase(type)\n                    || \"button\".equalsIgnoreCase(type)\n                    || \"image\".equalsIgnoreCase(type)))) {\n            continue;\n        }\n\n        if (\"select\".equals(tagName)) {\n            Elements options = el.select(\"option[selected]\");\n            boolean set = false;\n            for (Element option: options) {\n                data.add(HttpConnection.KeyVal.create(name, option.val()));\n                set = true;\n            }\n            if (!set) {\n                Element first = el.select(\"option\").first();\n                if (first != null)\n                    data.add(HttpConnection.KeyVal.create(name, first.val()));\n            }\n        } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n            // only add checkbox or radio if they have the checked attribute\n            if (el.hasAttr(\"checked\")) {\n                String val = el.val().isEmpty() ? \"on\" : el.val();\n                data.add(HttpConnection.KeyVal.create(name, val));\n            }\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}