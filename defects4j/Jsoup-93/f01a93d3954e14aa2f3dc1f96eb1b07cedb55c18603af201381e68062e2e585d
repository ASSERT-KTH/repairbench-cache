{
    "generation": "    /**\n     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the\n     * list will not be reflected in the DOM.\n     * @return a list of key vals\n     */\n    public List<Connection.KeyVal> formData() {\n        ArrayList<Connection.KeyVal> data = new ArrayList<>();\n\n        // iterate the form control elements and accumulate their values\n        for (Element el: elements) {\n            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable\n            if (el.hasAttr(\"disabled\")) continue; // skip disabled form inputs\n            String name = el.attr(\"name\");\n            if (name.length() == 0) continue; // Every submitted element has a name.\n            String type = el.attr(\"type\").toLowerCase(); // Use lowercase type for consistency\n            String tagName = el.normalName();\n\n            if (tagName.equals(\"select\")) {\n                Elements options = el.select(\"option[selected]\");\n                boolean set = false;\n                for (Element option: options) {\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n                    set = true;\n                }\n                if (!set) { // A select without any options selected submits the first option\n                    Element option = el.select(\"option\").first();\n                    if (option != null)\n                        data.add(HttpConnection.KeyVal.create(name, option.val()));\n                }\n            } else if (tagName.equals(\"input\")) {\n                // Handle input types\n                if (type.equals(\"checkbox\") || type.equals(\"radio\")) {\n                    // only add checkbox or radio if they have the checked attribute\n                    if (el.hasAttr(\"checked\")) {\n                        // Use \"on\" as value if value attribute not specified, per HTML spec\n                        final String val = el.val().length() > 0 ? el.val() : \"on\";\n                        data.add(HttpConnection.KeyVal.create(name, val));\n                    }\n                } else if (!type.equals(\"button\") && !type.equals(\"reset\") && !type.equals(\"submit\") && !type.equals(\"image\")) {\n                    // Add all other submittable input types (text, password, hidden, date, color, file, etc.)\n                    // NB: file inputs ship filename, but not file contents. Value is appropriate.\n                    data.add(HttpConnection.KeyVal.create(name, el.val()));\n                }\n                // Otherwise, input type is not submitted (button, reset, submit, image)\n            } else if (tagName.equals(\"textarea\")) {\n                // Textareas are simpler\n                data.add(HttpConnection.KeyVal.create(name, el.val()));\n            }\n            // Future improvement: handle <button> elements if needed (similar to submit inputs)\n            // Future improvement: handle <input type=\"image\"> coordinates submission if needed\n        }\n        return data;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}