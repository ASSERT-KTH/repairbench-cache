{
    "generation": "    /**\n     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the\n     * list will not be reflected in the DOM.\n     * @return a list of key vals\n     */\n    public List<Connection.KeyVal> formData() {\n        ArrayList<Connection.KeyVal> data = new ArrayList<>();\n\n        // iterate the form control elements and accumulate their values\n        for (Element el: elements) {\n            // Check if the element's tag is submittable (e.g., input, select, textarea).\n            // This filters out non-form elements or elements like fieldset.\n            if (!el.tag().isFormSubmittable()) continue;\n\n            // Skip disabled form inputs as they are not submitted.\n            if (el.hasAttr(\"disabled\")) continue;\n\n            String name = el.attr(\"name\");\n            // Skip elements without a name attribute, as they are not submitted.\n            if (name.length() == 0) continue;\n\n            String type = el.attr(\"type\");\n\n            // According to HTML spec, input types \"button\" and \"reset\" are not submitted.\n            // Even if el.tag().isFormSubmittable() might sometimes incorrectly include them\n            // depending on the Jsoup version or specific tag definition,\n            // they must be explicitly excluded from form data.\n            if (\"button\".equalsIgnoreCase(type) || \"reset\".equalsIgnoreCase(type)) {\n                continue;\n            }\n\n            if (\"select\".equals(el.normalName())) {\n                Elements options = el.select(\"option[selected]\");\n                boolean set = false;\n                for (Element option: options) {\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n                    set = true;\n                }\n                // If no option was explicitly selected, and it's not a multiple select,\n                // the first option in the select element is typically submitted by default.\n                // Jsoup follows this behavior for general form data collection.\n                if (!set) {\n                    Element option = el.select(\"option\").first();\n                    if (option != null)\n                        data.add(HttpConnection.KeyVal.create(name, option.val()));\n                }\n            } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n                // Only add checkboxes and radios if they have the 'checked' attribute.\n                if (el.hasAttr(\"checked\")) {\n                    // If a checkbox/radio has no value attribute, its submitted value defaults to \"on\".\n                    final String val = el.val().length() >  0 ? el.val() : \"on\";\n                    data.add(HttpConnection.KeyVal.create(name, val));\n                }\n            } else {\n                // For all other submittable input types (text, hidden, password, file, etc.) and textarea,\n                // add their name and value.\n                data.add(HttpConnection.KeyVal.create(name, el.val()));\n            }\n        }\n        return data;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}