{
    "generation": "    /**\n     * <p>Internal calculation method.</p>\n     * \n     * @param val  the calendar\n     * @param field  the field constant\n     * @param round  true to round, false to truncate\n     * @throws ArithmeticException if the year is over 280 million\n     */\n    private static void modify(Calendar val, int field, boolean round) {\n        if (val.get(Calendar.YEAR) > 280000000) {\n            throw new ArithmeticException(\"Calendar value too large for accurate calculations\");\n        }\n        switch (field) {\n            case Calendar.ERA:\n                break;\n            case Calendar.YEAR:\n                break;\n            case Calendar.MONTH:\n                break;\n            case Calendar.WEEK_OF_YEAR:\n                break;\n            case Calendar.WEEK_OF_MONTH:\n                break;\n            case Calendar.DATE:\n                break;\n            case Calendar.DAY_OF_MONTH:\n                break;\n            case Calendar.DAY_OF_YEAR:\n                break;\n            case Calendar.DAY_OF_WEEK:\n                break;\n            case Calendar.DAY_OF_WEEK_IN_MONTH:\n                break;\n        }\n        throw new IllegalArgumentException(\"The field \" + field + \" is not supported\");\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}