{
    "generation": "static boolean isValidDefineValue(Node val, Set<String> defines) {\n    switch (val.getType()) {\n        case Token.STRING:\n        case Token.NUMBER:\n        case Token.TRUE:\n        case Token.FALSE:\n            return true;\n\n        case Token.BITAND:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.PLUS:\n        case Token.MINUS:\n        case Token.MUL:\n        case Token.DIV:\n        case Token.MOD:\n            return isValidDefineValue(val.getFirstChild(), defines)\n                && isValidDefineValue(val.getSecondChild(), defines);\n\n        case Token.NOT:\n        case Token.NEG:\n        case Token.BITNOT:\n            return isValidDefineValue(val.getFirstChild(), defines);\n\n        case Token.NAME:\n        case Token.GETPROP:\n            if (val.isQualifiedName()) {\n                return defines.contains(val.getQualifiedName());\n            }\n            break;\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}