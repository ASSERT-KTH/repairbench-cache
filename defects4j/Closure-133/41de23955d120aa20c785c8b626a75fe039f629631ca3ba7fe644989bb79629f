{
    "generation": "  /**\n   * Returns the remainder of the line, including the preceding whitespace\n   * (which stream.getRemainingJSDocLine() skips). This is important for accurate\n   * position tracking, especially when calculating text extents.\n   */\n  private String getRemainingJSDocLine() {\n    int start = stream.getCharno();\n    String line = stream.getLine();\n    if (line == null) {\n      return \"\";\n    }\n    if (start >= line.length()) {\n      return \"\";\n    }\n    return line.substring(start);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}