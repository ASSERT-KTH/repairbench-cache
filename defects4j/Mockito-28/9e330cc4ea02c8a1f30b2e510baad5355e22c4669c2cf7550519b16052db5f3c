{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    // First try to inject by exact type match\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        if (mockCandidateFilter.filterCandidate(mocks, field, fieldInstance)\n                .withPriority(MockCandidateFilter.ONE_MOCK_CANDIDATE_FOUND_FOR_FIELD_WITH_EXACT_TYPE)\n                .thenInject()) {\n            return;\n        }\n    }\n    \n    // Then try to inject by assignable type match\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}