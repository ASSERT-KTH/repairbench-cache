{
    "generation": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            Optional<Object> mockCandidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n            if (mockCandidate.isPresent()) {\n                mockCandidate.get();\n                try {\n                    field.set(fieldInstance, mockCandidate.get());\n                } catch (IllegalAccessException e) {\n                    throw new IllegalStateException(\"Failed to inject mock candidate into field \" + field.getName(), e);\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}