{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    Map<Field, Object> bestMatchingMocks = new HashMap<>();\n    \n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Object mock = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).getMock();\n        if (mock != null && (bestMatchingMocks.get(field) == null || field.getType().isInstance(mock))) {\n            bestMatchingMocks.put(field, mock);\n        }\n    }\n    \n    for (Map.Entry<Field, Object> entry : bestMatchingMocks.entrySet()) {\n        entry.getKey().setAccessible(true);\n        try {\n            entry.getKey().set(fieldInstance, entry.getValue());\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(\"Unable to set field\", e);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}