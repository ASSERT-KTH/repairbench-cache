{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Iterable<Object> sortedMocks = sortMocksForInjection(field.getType(), mocks);\n        for (Object mock : sortedMocks) {\n            if (mockCandidateFilter.filterCandidate(Collections.singleton(mock), field, fieldInstance).thenInject().wasInjected()) {\n                mocks.remove(mock); // Injected once, remove so it won't be injected again\n                break;\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}