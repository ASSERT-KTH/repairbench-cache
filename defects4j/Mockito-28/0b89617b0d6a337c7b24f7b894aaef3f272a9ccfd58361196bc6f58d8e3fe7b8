{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    List<Field> fields = orderedInstanceFieldsFrom(awaitingInjectionClazz);\n    \n    // First try to inject with exact type match\n    for (Field field : fields) {\n        Object matchingMock = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true);\n        if (matchingMock != null) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            mocks.remove(matchingMock);\n        }\n    }\n    \n    // Then try to inject remaining mocks with compatible types\n    for (Field field : fields) {\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}