{
    "generation": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        // First try exact type matches\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n        // Then try ancestor types if no exact match was found\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            if (field.getType().isAssignableFrom(fieldInstance.getClass()) &&\n                !field.getType().equals(fieldInstance.getClass())) {\n                mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}