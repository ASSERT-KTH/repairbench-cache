{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    // First, process fields that exactly match the type of the mock\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        if (field.getType().equals(mockedBean.getClass())) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n    }\n    // Then, process fields of ancestor types if no exact match was found\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        if (!field.getType().equals(mockedBean.getClass())) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}