{
    "generation": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).ifPresent(mock -> {\n                try {\n                    field.set(fieldInstance, mock);\n                } catch (IllegalAccessException e) {\n                    throw new InjectionException(e);\n                }\n            });\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}