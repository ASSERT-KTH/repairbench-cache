{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    List<Field> orderedFields = orderedInstanceFieldsFrom(awaitingInjectionClazz);\n    for (Field field : orderedFields) {\n        MockCandidateFilter.MockCandidate candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n        if (candidate != null && candidate.getMock() != null) {\n            candidate.thenInject();\n            mocks.remove(candidate.getMock()); // Ensure the mock is injected only once\n            break; // Stop after injecting the best matching mock\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}