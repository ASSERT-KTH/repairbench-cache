{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    List<Field> fields = orderedInstanceFieldsFrom(awaitingInjectionClazz);\n    Set<Object> injectedMocks = new HashSet<>();\n    for (Field field : fields) {\n        // Only consider mocks that haven't been injected yet\n        Set<Object> remainingMocks = new HashSet<>(mocks);\n        remainingMocks.removeAll(injectedMocks);\n        Object injected = mockCandidateFilter.filterCandidate(remainingMocks, field, fieldInstance).thenInject();\n        if (injected != null) {\n            injectedMocks.add(injected);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}