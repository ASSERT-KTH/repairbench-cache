{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Object bestMock = mockCandidateFilter.findBestMatchingMock(mocks, field.getType());\n        if (bestMock != null) {\n            try {\n                field.setAccessible(true);\n                field.set(fieldInstance, bestMock);\n            } catch (IllegalAccessException e) {\n                throw new RuntimeException(\"Failed to inject mock into field \" + field.getName(), e);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}