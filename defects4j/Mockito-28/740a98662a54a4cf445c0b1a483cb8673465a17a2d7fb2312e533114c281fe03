{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    // First try to find exact type matches\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance)\n            .ifPresent(candidate -> {\n                try {\n                    field.set(fieldInstance, candidate);\n                } catch (IllegalAccessException e) {\n                    throw new RuntimeException(e);\n                }\n            });\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}