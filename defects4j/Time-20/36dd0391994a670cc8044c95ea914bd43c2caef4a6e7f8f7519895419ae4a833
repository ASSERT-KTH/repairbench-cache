{
    "generation": "        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n            String str = text.substring(position);\n            // Sort ALL_IDS by length in descending order to prefer longer matches\n            List<String> sortedIds = new ArrayList<>(Arrays.asList(ALL_IDS));\n            sortedIds.sort((a, b) -> Integer.compare(b.length(), a.length()));\n\n            for (String id : sortedIds) {\n                if (str.startsWith(id)) {\n                    // Check if the match is part of a longer ID (e.g. \"Dawson\" vs \"Dawson_Creek\")\n                    boolean found = true;\n                    for (String longerId : sortedIds) {\n                        if (longerId.length() > id.length() && longerId.startsWith(id) &&\n                            str.startsWith(longerId)) {\n                            found = false;\n                            break;\n                        }\n                    }\n                    if (found) {\n                        bucket.setZone(DateTimeZone.forID(id));\n                        return position + id.length();\n                    }\n                }\n            }\n            return ~position;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}