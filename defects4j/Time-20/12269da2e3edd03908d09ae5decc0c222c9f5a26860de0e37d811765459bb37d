{
    "generation": "        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n            String str = text.substring(position);\n            String bestMatchId = null;\n            int bestMatchLength = 0;\n\n            // Iterate through all known time zone IDs to find the longest match\n            for (String id : ALL_IDS) {\n                int idLength = id.length();\n                // Check if the substring starts with this ID and if it's the longest match found so far\n                if (str.startsWith(id) && idLength > bestMatchLength) {\n                    bestMatchId = id;\n                    bestMatchLength = idLength;\n                }\n            }\n\n            // If a matching ID was found\n            if (bestMatchId != null) {\n                // Set the zone in the bucket using the best (longest) matching ID\n                bucket.setZone(DateTimeZone.forID(bestMatchId));\n                // Return the position immediately after the matched ID\n                return position + bestMatchLength;\n            }\n\n            // If no match was found, return the bitwise complement of the position to indicate failure\n            return ~position;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}