{
    "generation": "        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n            String str = text.substring(position);\n            String bestId = null;\n            int bestLength = 0;\n\n            // Iterate through all known time zone IDs to find the longest matching one.\n            // This is necessary because some IDs are prefixes of others (e.g., \"America/Dawson\" and \"America/Dawson_Creek\").\n            // To ensure the correct ID is parsed, we must pick the longest possible match.\n            for (String id : ALL_IDS) {\n                if (str.startsWith(id)) {\n                    if (id.length() > bestLength) {\n                        bestId = id;\n                        bestLength = id.length();\n                    }\n                }\n            }\n\n            if (bestId != null) {\n                bucket.setZone(DateTimeZone.forID(bestId));\n                return position + bestLength;\n            } else {\n                return ~position; // No matching ID found\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}