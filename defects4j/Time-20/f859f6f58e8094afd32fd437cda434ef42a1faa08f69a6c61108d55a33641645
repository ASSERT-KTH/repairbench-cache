{
    "generation": "        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n            String str = text.substring(position);\n            // Sort the IDs by length in descending order to match longest first\n            List<String> sortedIds = new ArrayList<>(Arrays.asList(ALL_IDS));\n            sortedIds.sort((a, b) -> b.length() - a.length());\n\n            for (String id : sortedIds) {\n                if (str.startsWith(id)) {\n                    // Check if it's a valid timezone ID to avoid partial matches\n                    try {\n                        DateTimeZone.forID(id);\n                        bucket.setZone(DateTimeZone.forID(id));\n                        return position + id.length();\n                    } catch (IllegalArgumentException e) {\n                        // Skip invalid IDs\n                    }\n                }\n            }\n            return ~position;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}