{
    "generation": "    @Override\n    Node processForInLoop(ForInLoop loopNode) {\n        // Check if this is a \"for each\" loop which is not supported\n        if (isForEachLoop(loopNode)) {\n            throw new Error(\"unsupported language extension: for each\");\n        }\n        // Return the bare minimum to put the AST in a valid state.\n        return newNode(\n            Token.FOR,\n            transform(loopNode.getIterator()),\n            transform(loopNode.getIteratedObject()),\n            transformBlock(loopNode.getBody()));\n    }\n\n    // Helper method to detect \"for each\" loops\n    private boolean isForEachLoop(ForInLoop loopNode) {\n        // The logic would depend on how ForInLoop is actually implemented\n        // This is a placeholder implementation\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}