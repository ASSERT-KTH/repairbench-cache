{
    "generation": "    @Override\n    Node processForInLoop(ForInLoop loopNode) {\n        // Check if the loop is a \"for each\" loop\n        if (loopNode.getIterator().isForEach()) {\n            // Handle the \"for each\" loop as an unsupported language extension\n            return newNode(\n                Token.FOR,\n                newNode(Token.ERROR, \"unsupported language extension: for each\"),\n                loopNode.getIterator(),\n                transform(loopNode.getIteratedObject()),\n                transformBlock(loopNode.getBody()));\n        }\n\n        // Return the bare minimum to put the AST in a valid state.\n        return newNode(\n            Token.FOR,\n            transform(loopNode.getIterator()),\n            transform(loopNode.getIteratedObject()),\n            transformBlock(loopNode.getBody()));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}