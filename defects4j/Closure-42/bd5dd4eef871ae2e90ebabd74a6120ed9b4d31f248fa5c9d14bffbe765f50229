{
    "generation": "@Override\nNode processForInLoop(ForInLoop loopNode) {\n    if (loopNode.isForEach()) {\n        reportUnsupportedLanguageExtension(loopNode, \"for each\");\n        // Return a valid AST structure for 'for each' loop, typically by converting it to a standard 'for...in' loop.\n        // However, since 'for each' is not supported, we need to ensure the AST is valid.\n        // Here, we simulate a standard 'for...in' loop structure as a fallback.\n        return newNode(\n            Token.FOR,\n            newNode(Token.IN, transform(loopNode.getIterator()), transform(loopNode.getIteratedObject())),\n            transformBlock(loopNode.getBody()));\n    }\n\n    // Standard 'for...in' loop processing\n    return newNode(\n        Token.FOR,\n        newNode(Token.IN, transform(loopNode.getIterator()), transform(loopNode.getIteratedObject())),\n        transformBlock(loopNode.getBody()));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}