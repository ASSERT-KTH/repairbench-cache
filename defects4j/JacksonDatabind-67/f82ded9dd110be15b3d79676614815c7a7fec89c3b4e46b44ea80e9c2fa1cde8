{
    "generation": "@Override\npublic KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,\n        JavaType type)\n    throws JsonMappingException\n{\n    final DeserializationConfig config = ctxt.getConfig();\n    KeyDeserializer deser = null;\n\n    // First, check if type is Enum and whether a custom deserializer is available\n    if (type != null && type.isEnumType()) {\n        deser = _createEnumKeyDeserializer(ctxt, type);\n    }\n\n    // If not set yet, proceed with other deserializers\n    if (deser == null) {\n        if (_factoryConfig.hasKeyDeserializers()) {\n            BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());\n            for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {\n                deser = d.findKeyDeserializer(type, config, beanDesc);\n                if (deser != null) {\n                    break;\n                }\n            }\n        }\n\n        // Fall back to standard string-based deserializer\n        if (deser == null) {\n            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);\n        }\n    }\n\n    // Apply deserializer modifiers\n    if (deser != null && _factoryConfig.hasDeserializerModifiers()) {\n        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {\n            deser = mod.modifyKeyDeserializer(config, type, deser);\n        }\n    }\n\n    return deser;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}