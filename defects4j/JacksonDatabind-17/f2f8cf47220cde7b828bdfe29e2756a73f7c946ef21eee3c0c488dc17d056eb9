{
    "generation": "        /**\n         * Method called to check if the default type handler should be\n         * used for given type.\n         * Note: \"natural types\" (String, Boolean, Integer, Double) will never\n         * use typing; that is both due to them being concrete and final,\n         * and since actual serializers and deserializers will also ignore any\n         * attempts to enforce typing.\n         */\n        public boolean useForType(JavaType t)\n        {\n            switch (_appliesFor) {\n            case NON_CONCRETE_AND_ARRAYS:\n                while (t.isArrayType()) {\n                    t = t.getContentType();\n                }\n                // fall through\n            case OBJECT_AND_NON_CONCRETE:\n//                return t.isJavaLangObject() || \n                // [databind#88] Should not apply to JSON tree models:\n                // The original code was `|| TreeNode.class.isAssignableFrom(t.getRawClass())`\n                // which caused `TreeNode` types to be included if they were concrete, or\n                // if they were non-concrete (because they were implicitly `true` due to `||`).\n                // This was incorrect; `TreeNode` types should generally be excluded.\n                // The logic should be: if it's `Object.class`, OR (if it's non-concrete AND NOT a `TreeNode`).\n                return (t.getRawClass() == Object.class)\n                        || (!t.isConcrete()\n                                && !TreeNode.class.isAssignableFrom(t.getRawClass()));\n\n            case NON_FINAL:\n                while (t.isArrayType()) {\n                    t = t.getContentType();\n                }\n                // [Issue#88] Should not apply to JSON tree models:\n                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());\n            default:\n            //case JAVA_LANG_OBJECT:\n//                return t.isJavaLangObject();\n                return (t.getRawClass() == Object.class);\n            }\n        }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}