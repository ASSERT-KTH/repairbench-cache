{
    "generation": "public boolean useForType(JavaType t)\n{\n    switch (_appliesFor) {\n    case NON_CONCRETE_AND_ARRAYS:\n        while (t.isArrayType()) {\n            t = t.getContentType();\n        }\n        // fall through\n    case OBJECT_AND_NON_CONCRETE:\n        // Avoid applying DefaultTyping to TreeNode types (like JsonNode)\n        Class<?> raw = t.getRawClass();\n        if (TreeNode.class.isAssignableFrom(raw)) {\n            return false;\n        }\n//      return t.isJavaLangObject() || \n        return (raw == Object.class) || !t.isConcrete();\n\n    case NON_FINAL:\n        while (t.isArrayType()) {\n            t = t.getContentType();\n        }\n        raw = t.getRawClass();\n        if (TreeNode.class.isAssignableFrom(raw)) {\n            return false;\n        }\n        return !t.isFinal();\n    default:\n    //case JAVA_LANG_OBJECT:\n//      return t.isJavaLangObject();\n        return (t.getRawClass() == Object.class);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}