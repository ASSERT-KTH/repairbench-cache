{
    "generation": "    @SuppressWarnings(\"resource\")\n    protected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p, DeserializationContext ctxt)\n        throws IOException\n    {\n        final ExternalTypeHandler ext = _externalTypeIdHandler.start();\n        final PropertyBasedCreator creator = _propertyBasedCreator;\n        PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n\n        // 03-Feb-2017, tatu: Need to store non-creator properties apparently, merge later\n        TokenBuffer tokens = new TokenBuffer(p, ctxt);\n        tokens.writeStartObject();\n\n        JsonToken t = p.getCurrentToken();\n        for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n            String propName = p.getCurrentName();\n            p.nextToken(); // to point to value\n            // creator property?\n            SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n            if (creatorProp != null) {\n                // Check if external type handler should handle this property\n                // (NOTE: passing buffer feeds information back to handler case, but does not work with current impl)\n                if (ext.handlePropertyValue(p, ctxt, propName, buffer)) {\n                    // yes, handled by handler, who will figure out value to use, buffer\n                    continue;\n                }\n                // If not handled by external handler, buffer it:\n                // (also need to check if pointing to creator property that is NOT visible; if so, skip)\n                if (buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {\n                    // Ok, fully buffered parameter, but we don't try to build bean yet,\n                    // need to accumulate all properties for type handler to work properly.\n                    // Just continue with loop.\n                     t = p.nextToken(); // Need to move past value, maybe?\n\n                     // [databind#928]: Need to check if this resolves everything? Can't know for sure yet...\n                     // but maybe see if we could now determine the type? Or possibly just buffer the whole thing?\n\n                     // 16-Dec-2015, tatu: Note: used to try building here, but that does not work\n                     //    with external type id case. Need to defer building.\n                 }\n                continue;\n            }\n\n            // If not creator property, maybe Object Id property?\n            if (buffer.readIdProperty(propName)) {\n                continue;\n            }\n            // Or regular property? Needs buffering too.\n            SettableBeanProperty prop = _beanProperties.find(propName);\n            if (prop != null) {\n                buffer.bufferProperty(prop, prop.deserialize(p, ctxt));\n                continue;\n            }\n\n            // Or external type id itself? This has to be checked AFTER property search above\n            // A) because we need to know Type Id property name (could be creator property)\n            // B) because it is possible that Type Id property is also Object Id property\n            //    or Creator property. Whoops. Latter case should be fine, former... need to verify.\n            //\n            // And note: we pass 'null' and not 'buffer', as we can't be using CreatorProperty method here\n             if (ext.handlePropertyValue(p, ctxt, propName, null)) {\n                 continue;\n             }\n\n            /* As per [JACKSON-313], things marked as ignorable should not be\n             * passed to any setter\n             */\n            Set<String> ignorables = _ignorableProps;\n            if (ignorables != null && ignorables.contains(propName)) {\n                handleIgnoredProperty(p, ctxt, handledType(), propName);\n                continue;\n            }\n            // \"any property\"?\n            if (_anySetter != null) {\n                // TODO: Needs work... Add buffered anything measurement?\n                 buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));\n                 continue; // continue loop\n            }\n\n            // Unknown: buffer typically?\n            // 13-Jun-2020, tatu: Let's try buffering to TokenBuffer, for now\n            //   Need to refine this aspect based on reported problems\n             tokens.writeFieldName(propName);\n             tokens.copyCurrentStructure(p);\n        }\n\n        // We hit END_OBJECT; resolve the pieces: build bean, possibly using creator\n        try {\n             // Creation delegated to ExternalTypeHandler\n            return ext.complete(p, ctxt, buffer, creator);\n        } catch (Exception e) {\n            // We may get here if PropertyBasedCreator does not cooperate enough\n            // wrt missing creator properties... has been the case with some older JAXB aspects\n            // 18-Sep-2017, tatu: Let's try wrapInstantiationProblem here? Seems logical?\n//            return wrapInstantiationProblem(e, ctxt);\n            wrapInstantiationProblem(e, ctxt);\n            return null; // never gets here\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}