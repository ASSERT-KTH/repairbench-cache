{
    "generation": "    /**\n     * <p>Checks if String contains a search String irrespective of case,\n     * handling <code>null</code>. Case-insensitivity is defined as by\n     * {@link String#equalsIgnoreCase(String)}.\n     *\n     * <p>A <code>null</code> String will return <code>false</code>.</p>\n     *\n     * <pre>\n     * StringUtils.contains(null, *) = false\n     * StringUtils.contains(*, null) = false\n     * StringUtils.contains(\"\", \"\") = true\n     * StringUtils.contains(\"abc\", \"\") = true\n     * StringUtils.contains(\"abc\", \"a\") = true\n     * StringUtils.contains(\"abc\", \"z\") = false\n     * StringUtils.contains(\"abc\", \"A\") = true\n     * StringUtils.contains(\"abc\", \"Z\") = false\n     * </pre>\n     *\n     * @param str  the String to check, may be null\n     * @param searchStr  the String to find, may be null\n     * @return true if the String contains the search String irrespective of\n     * case or false if not or <code>null</code> string input\n     */\n    public static boolean containsIgnoreCase(String str, String searchStr) {\n        if (str == null || searchStr == null) {\n            return false;\n        }\n        int len1 = str.length();\n        int len2 = searchStr.length();\n\n        if (len2 == 0) {\n            // Empty search string is always contained\n            return true;\n        }\n        if (len1 < len2) {\n            // Main string is shorter than search string\n            return false;\n        }\n\n        // Iterate through the main string, checking for the search string case-insensitively\n        // The upper bound for the iteration is len1 - len2 as the substring must fit\n        for (int i = 0; i <= len1 - len2; i++) {\n            // regionMatches with true for ignoreCase performs a case-insensitive comparison\n            // Note: This comparison is locale-independent in a way that differs from toLowerCase/toUpperCase(Locale)\n            // but aligns with the test expectations for Turkish 'i'/'I' and German '\u00df'/'SS'.\n            if (str.regionMatches(true, i, searchStr, 0, len2)) {\n                return true;\n            }\n        }\n\n        // No match found\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}