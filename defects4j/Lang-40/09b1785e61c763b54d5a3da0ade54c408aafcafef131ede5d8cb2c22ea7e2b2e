{
    "generation": "public static boolean containsIgnoreCase(String str, String searchStr) {\n    if (str == null || searchStr == null) {\n        return false;\n    }\n    int len = searchStr.length();\n    int max = str.length() - len;\n    for (int i = 0; i <= max; i++) {\n        if (regionMatches(str, i, searchStr, 0, len, true)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate static boolean regionMatches(String str, int strStart, String searchStr, int searchStart, int len, boolean ignoreCase) {\n    if (str == null || searchStr == null) {\n        throw new IllegalArgumentException(\"StringUtils.regionMatches: String arguments cannot be null\");\n    }\n    if (strStart < 0 || searchStart < 0 || strStart > str.length() - len || searchStart > searchStr.length() - len) {\n        return false;\n    }\n    if (ignoreCase) {\n        return str.regionMatches(true, strStart, searchStr, searchStart, len);\n    } else {\n        return str.regionMatches(strStart, searchStr, searchStart, len);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}