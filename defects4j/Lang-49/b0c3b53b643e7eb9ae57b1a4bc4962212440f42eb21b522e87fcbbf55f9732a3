{
    "generation": "public Fraction reduce() {\n    // handle zero numerator: always canonicalize to ZERO\n    if (numerator == 0) {\n        return ZERO;\n    }\n    // compute gcd on absolute values\n    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n    int n = numerator / gcd;\n    int d = denominator / gcd;\n    // ensure denominator is positive\n    if (d < 0) {\n        n = -n;\n        d = -d;\n    }\n    // if no change, return this\n    if (n == numerator && d == denominator) {\n        return this;\n    }\n    // else return a new, reduced fraction\n    return Fraction.getFraction(n, d);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}