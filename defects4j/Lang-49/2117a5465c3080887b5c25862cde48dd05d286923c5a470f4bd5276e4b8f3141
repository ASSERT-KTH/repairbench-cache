{
    "generation": "public Fraction reduce() {\n    // Handle zero specially: if numerator is 0, then the canonical value is 0/1.\n    if (numerator == 0) {\n        return (denominator == 1) ? this : Fraction.ZERO;\n    }\n\n    // Use the absolute value for both numerator and denominator.\n    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n    int newNumerator = numerator / gcd;\n    int newDenominator = denominator / gcd;\n\n    // Ensure the denominator is positive.\n    if (newDenominator < 0) {\n        newNumerator = -newNumerator;\n        newDenominator = -newDenominator;\n    }\n\n    // If nothing changed, return this.\n    if (newNumerator == numerator && newDenominator == denominator) {\n        return this;\n    }\n    return Fraction.getFraction(newNumerator, newDenominator);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}