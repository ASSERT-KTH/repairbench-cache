{
    "generation": "public Fraction reduce() {\n    // Special case: if numerator is 0, then the canonical fraction is 0/1.\n    if (numerator == 0) {\n        return (denominator == 1) ? this : Fraction.ZERO;\n    }\n    // Compute the gcd on the absolute values.\n    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n    // Divide numerator and denominator by the gcd.\n    int newNumerator = numerator / gcd;\n    int newDenom = denominator / gcd;\n    // Ensure the denominator is positive.\n    if (newDenom < 0) {\n        newNumerator = -newNumerator;\n        newDenom = -newDenom;\n    }\n    // If nothing has changed, return this; otherwise, return a new fraction.\n    if (newNumerator == numerator && newDenom == denominator) {\n        return this;\n    }\n    return Fraction.getFraction(newNumerator, newDenom);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}