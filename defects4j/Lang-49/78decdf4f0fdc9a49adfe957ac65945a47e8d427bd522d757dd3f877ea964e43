{
    "generation": "public Fraction reduce() {\n    // Special-case for a zero numerator: always return the canonical ZERO fraction,\n    // unless this is already the canonical instance.\n    if (numerator == 0) {\n        return (denominator == 1) ? this : Fraction.ZERO;\n    }\n    // Compute the greatest common divisor using the absolute values\n    int common = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n    int num = numerator / common;\n    int den = denominator / common;\n    // Ensure the denominator is positive; if it's negative, flip the signs.\n    if (den < 0) {\n        num = -num;\n        den = -den;\n    }\n    // If no changes were made, return this instance.\n    if (num == numerator && den == denominator) {\n        return this;\n    }\n    return Fraction.getFraction(num, den);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}