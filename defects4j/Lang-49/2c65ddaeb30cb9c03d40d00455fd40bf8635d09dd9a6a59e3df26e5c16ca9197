{
    "generation": "public Fraction reduce() {\n    if (numerator == 0) {\n        // If the numerator is zero, then the fraction is 0/1 in canonical form.\n        // Return 'this' if it\u2019s already 0/1; otherwise, return the canonical ZERO.\n        return (denominator == 1) ? this : Fraction.ZERO;\n    }\n    // Compute the greatest common divisor using absolute values.\n    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n    // If already in lowest terms, fix the sign if necessary.\n    if (gcd == 1) {\n        if (denominator < 0) {\n            return Fraction.getFraction(-numerator, -denominator);\n        }\n        return this;\n    }\n    int newNumerator = numerator / gcd;\n    int newDenom = denominator / gcd;\n    // Ensure the denominator is positive.\n    if (newDenom < 0) {\n        newNumerator = -newNumerator;\n        newDenom = -newDenom;\n    }\n    return Fraction.getFraction(newNumerator, newDenom);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}