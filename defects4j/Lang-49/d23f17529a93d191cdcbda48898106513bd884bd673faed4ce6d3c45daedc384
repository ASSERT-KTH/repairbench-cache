{
    "generation": "public Fraction reduce() {\n    // special-case: if numerator is 0, then the canonical representation is 0/1.\n    if (numerator == 0) {\n        return (denominator == 1) ? this : Fraction.ZERO;\n    }\n    // Compute the greatest common divisor using absolute values.\n    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n    int num = numerator / gcd;\n    int den = denominator / gcd;\n    // Normalize the sign so that the denominator is always positive.\n    if (den < 0) {\n        num = -num;\n        den = -den;\n    }\n    // If nothing has changed, return this instance.\n    if (num == numerator && den == denominator) {\n        return this;\n    }\n    return Fraction.getFraction(num, den);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}