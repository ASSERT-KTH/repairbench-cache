{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        return iChronology.get(partial, instant);\n    } else {\n        // Handle the end-of-month adjustments\n        int dayOfMonth = values[DateTimeFieldType.DAY_OF_MONTH.getFieldIndex()];\n        int month = values[DateTimeFieldType.MONTH_OF_YEAR.getFieldIndex()];\n        int year = values[DateTimeFieldType.YEAR.getFieldIndex()];\n\n        // Add the valueToAdd to the specified field\n        if (fieldIndex == DateTimeFieldType.DAY_OF_MONTH.getFieldIndex()) {\n            dayOfMonth += valueToAdd;\n        } else if (fieldIndex == DateTimeFieldType.MONTH_OF_YEAR.getFieldIndex()) {\n            month += valueToAdd;\n        } else if (fieldIndex == DateTimeFieldType.YEAR.getFieldIndex()) {\n            year += valueToAdd;\n        }\n\n        // Adjust the day of the month if necessary\n        int maxDaysInMonth = iChronology.monthLength(year, month);\n        if (dayOfMonth > maxDaysInMonth) {\n            dayOfMonth = maxDaysInMonth;\n        } else if (dayOfMonth < 1) {\n            dayOfMonth = 1;\n        }\n\n        // Set the adjusted values\n        values[DateTimeFieldType.DAY_OF_MONTH.getFieldIndex()] = dayOfMonth;\n        values[DateTimeFieldType.MONTH_OF_YEAR.getFieldIndex()] = month;\n        values[DateTimeFieldType.YEAR.getFieldIndex()] = year;\n\n        return values;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}