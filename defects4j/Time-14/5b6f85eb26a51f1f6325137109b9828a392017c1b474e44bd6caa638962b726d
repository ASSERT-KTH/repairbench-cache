{
    "generation": "//-----------------------------------------------------------------------\npublic int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        // Create a helper field to determine if we're dealing with a month-day scenario\n        boolean isMonthDay = partial.size() == 2 &&\n                           partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&\n                           partial.getFieldType(1) == DateTimeFieldType.dayOfMonth();\n\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n\n        // Handle month-day cases specially for leap days\n        if (isMonthDay && partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&\n            values[1] == 29 && values[0] == 2) {\n            // Get the resulting instant first\n            long resultInstant = add(instant, valueToAdd);\n\n            // Check if the day would be invalid in the resulting month\n            int newMonth = iChronology.monthOfYear().get(resultInstant);\n            int year = iChronology.year().get(0L); // Get any year to check max day\n            int maxDay = iChronology.dayOfMonth().getMaximumValueForSet(instant, newMonth);\n\n            if (maxDay < values[1]) {\n                // Day is too large for new month, set to last day of month\n                return new int[] {newMonth, maxDay};\n            }\n        }\n\n        instant = add(instant, valueToAdd);\n        return iChronology.get(partial, instant);\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}