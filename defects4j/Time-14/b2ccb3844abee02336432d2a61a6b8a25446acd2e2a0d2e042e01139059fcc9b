{
    "generation": "//-----------------------------------------------------------------------\npublic int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    \n    // If the partial contains both month and day fields, we need special handling\n    if (partial instanceof MonthDay) {\n        // Get current field types\n        DateTimeFieldType[] fieldTypes = new DateTimeFieldType[partial.size()];\n        for (int i = 0; i < fieldTypes.length; i++) {\n            fieldTypes[i] = partial.getFieldType(i);\n        }\n        \n        // Check if we're modifying month field in a MonthDay\n        if (fieldTypes[fieldIndex].equals(DateTimeFieldType.monthOfYear())) {\n            // Get a working chronology\n            Chronology chronology = DateTimeUtils.getChronology(iChronology);\n            \n            // Create a base year that will properly handle the leap year case\n            // Use a leap year (2000) as our base to allow Feb 29\n            int year = 2000;\n            \n            // Create a local datetime to work with\n            LocalDate date = new LocalDate(year, values[0], values[1], chronology);\n            \n            // Apply the value change\n            date = date.plusMonths(valueToAdd);\n            \n            // Return the updated values\n            return new int[] {date.getMonthOfYear(), date.getDayOfMonth()};\n        }\n    }\n    \n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        return iChronology.get(partial, instant);\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}