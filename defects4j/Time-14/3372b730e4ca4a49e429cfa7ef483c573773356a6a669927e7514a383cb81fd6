{
    "generation": "    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n        // overridden as superclass algorithm can't handle\n        // 2004-02-29 + 48 months -> 2008-02-29 type dates\n        if (valueToAdd == 0) {\n            return values;\n        }\n\n        // month is largest field and being added to, such as month-day\n        if (DateTimeUtils.isContiguous(partial)) {\n            long instant = 0L;\n            for (int i = 0, isize = partial.size(); i < isize; i++) {\n                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n            }\n\n            int[] newValues = new int[values.length];\n            System.arraycopy(values, 0, newValues, 0, values.length);\n\n            // Adjust the values based on the fieldIndex and valueToAdd\n            if (fieldIndex == partial.getFieldType(0).getFieldIndex()) {\n                // Handle month adjustment\n                int month = newValues[fieldIndex];\n                month += valueToAdd;\n                int year = newValues[fieldIndex - 1];\n                int day = newValues[fieldIndex + 1];\n\n                // Handle end of month adjustment\n                if (month > 12) {\n                    year += month / 12;\n                    month = month % 12;\n                } else if (month < 1) {\n                    year += (month - 1) / 12;\n                    month = (month - 1) % 12 + 1;\n                }\n\n                // Handle day adjustment for leap years and month lengths\n                if (day > DateTimeUtils.getDaysInMonth(year, month)) {\n                    day = DateTimeUtils.getDaysInMonth(year, month);\n                }\n\n                newValues[fieldIndex] = month;\n                newValues[fieldIndex - 1] = year;\n                newValues[fieldIndex + 1] = day;\n            } else if (fieldIndex == partial.getFieldType(1).getFieldIndex()) {\n                // Handle day adjustment\n                int day = newValues[fieldIndex];\n                day += valueToAdd;\n                int month = newValues[fieldIndex - 1];\n                int year = newValues[fieldIndex - 2];\n\n                // Handle end of month adjustment\n                if (day > DateTimeUtils.getDaysInMonth(year, month)) {\n                    day = DateTimeUtils.getDaysInMonth(year, month);\n                    month++;\n                    if (month > 12) {\n                        month = 1;\n                        year++;\n                    }\n                } else if (day < 1) {\n                    day = DateTimeUtils.getDaysInMonth(year, month - 1);\n                    month--;\n                    if (month < 1) {\n                        month = 12;\n                        year--;\n                    }\n                }\n\n                newValues[fieldIndex] = day;\n                newValues[fieldIndex - 1] = month;\n                newValues[fieldIndex - 2] = year;\n            }\n\n            return newValues;\n        } else {\n            return super.add(partial, fieldIndex, values, valueToAdd);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}