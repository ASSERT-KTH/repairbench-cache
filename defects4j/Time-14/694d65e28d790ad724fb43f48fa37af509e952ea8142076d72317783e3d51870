{
    "generation": "//-----------------------------------------------------------------------\npublic int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        int[] newValues = iChronology.get(partial, instant);\n\n        // Adjust day-of-month if it increased due to month rollover from a shorter to longer month\n        DateTimeFieldType fieldType = partial.getFieldType(fieldIndex);\n        DateTimeField field = fieldType.getField(iChronology);\n\n        // Special handling when adding months to end-of-month\n        if (fieldType == DateTimeFieldType.monthOfYear() || fieldType == DateTimeFieldType.dayOfMonth()) {\n            int month = 0;\n            int day = 0;\n            for (int i = 0; i < partial.size(); i++) {\n                if (partial.getFieldType(i) == DateTimeFieldType.monthOfYear()) {\n                    month = newValues[i];\n                }\n                if (partial.getFieldType(i) == DateTimeFieldType.dayOfMonth()) {\n                    day = newValues[i];\n                }\n            }\n            // find max valid day for the new month/year\n            int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);\n            if (day > maxDay) {\n                // adjust day to last valid day\n                for (int i = 0; i < partial.size(); i++) {\n                    if (partial.getFieldType(i) == DateTimeFieldType.dayOfMonth()) {\n                        newValues[i] = maxDay;\n                    }\n                }\n            }\n        }\n        return newValues;\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}