{
    "generation": "    //-----------------------------------------------------------------------\n    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n        // overridden as superclass algorithm can't handle\n        // 2004-02-29 + 48 months -> 2008-02-29 type dates\n        if (valueToAdd == 0) {\n            return values;\n        }\n        // month is largest field and being added to, such as month-day\n        if (DateTimeUtils.isContiguous(partial)) {\n            // The original code initialized 'instant' to 0L, which corresponds to 1970-01-01.\n            // 1970 is not a leap year. When trying to set MonthDay fields like 02-29\n            // on a 1970 base instant, it leads to IllegalFieldValueException because 02-29-1970 is invalid.\n            // MonthDay internally uses a fixed leap year (2000) for its calculations to handle\n            // leap year days correctly without a specific year context.\n            // Therefore, we should initialize the base instant with a leap year\n            // (e.g., 2000-01-01) to allow correct handling of February 29th.\n            long instant = iChronology.getDateTimeMillis(2000, 1, 1, 0); // Use a leap year as the base.\n\n            for (int i = 0, isize = partial.size(); i < isize; i++) {\n                // Set the current values of the partial onto the chosen base instant.\n                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n            }\n            // Now, perform the addition using the appropriate field's 'add' method.\n            // This 'add' refers to the add(long instant, int valueToAdd) method of this field.\n            instant = add(instant, valueToAdd);\n            // Extract the fields from the modified instant back into the values array.\n            return iChronology.get(partial, instant);\n        } else {\n            // For non-contiguous partials, fall back to the superclass implementation.\n            return super.add(partial, fieldIndex, values, valueToAdd);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}