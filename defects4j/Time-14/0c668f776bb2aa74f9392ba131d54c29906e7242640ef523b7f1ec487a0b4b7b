{
    "generation": "    //-----------------------------------------------------------------------\n    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n        if (valueToAdd == 0) {\n            return values;\n        }\n        \n        // Handle month addition specially to maintain day-of-month where possible\n        if (partial instanceof MonthDay) {\n            int month = values[0];\n            int day = values[1];\n            \n            if (fieldIndex == 0) { // adding to month field\n                // Calculate new month (1-12)\n                int newMonth = ((month - 1 + valueToAdd) % 12 + 12) % 12 + 1;\n                \n                // Adjust day if needed (e.g., Feb 29 -> Mar 29)\n                int maxDay = iChronology.dayOfMonth().getMaximumValue(newMonth, \n                    iChronology.year().get(DateTimeUtils.currentTimeMillis()));\n                if (day > maxDay) {\n                    day = maxDay;\n                }\n                \n                return new int[] {newMonth, day};\n            } else if (fieldIndex == 1) { // adding to day field\n                // Convert to instant and add days\n                long instant = 0L;\n                instant = partial.getFieldType(0).getField(iChronology).set(instant, values[0]);\n                instant = partial.getFieldType(1).getField(iChronology).set(instant, values[1]);\n                instant = add(instant, valueToAdd);\n                return iChronology.get(partial, instant);\n            }\n        }\n        \n        // Default handling for other cases\n        if (DateTimeUtils.isContiguous(partial)) {\n            long instant = 0L;\n            for (int i = 0, isize = partial.size(); i < isize; i++) {\n                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n            }\n            instant = add(instant, valueToAdd);\n            return iChronology.get(partial, instant);\n        } else {\n            return super.add(partial, fieldIndex, values, valueToAdd);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}