{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException\n{\n    if (property == null) {\n        return this;\n    }\n    JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n    if (format == null) {\n        return this;\n    }\n    // Simple case first: serialize as numeric timestamp?\n    JsonFormat.Shape shape = format.getShape();\n    if (shape.isNumeric()) {\n        return withFormat(Boolean.TRUE, null);\n    }\n\n    if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()\n            || format.hasLocale() || format.hasTimeZone()) {\n        TimeZone tz = format.getTimeZone();\n        final String pattern;\n        final Locale loc;\n        if (format.hasPattern()) {\n            pattern = format.getPattern();\n        } else {\n            // If no pattern, get pattern from existing DateFormat if any\n            DateFormat existingDf = serializers.getConfig().getDateFormat();\n            if (existingDf instanceof SimpleDateFormat) {\n                pattern = ((SimpleDateFormat) existingDf).toPattern();\n            } else {\n                // Fallback to ISO-8601 if no pattern provided and original DF is not SimpleDateFormat\n                pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;\n            }\n        }\n        if (format.hasLocale()) {\n            loc = format.getLocale();\n        } else {\n            Locale existingLocale = null;\n            DateFormat existingDf = serializers.getConfig().getDateFormat();\n            if (existingDf instanceof SimpleDateFormat) {\n                existingLocale = ((SimpleDateFormat) existingDf).getLocale();\n            }\n            loc = (existingLocale != null) ? existingLocale : serializers.getLocale();\n        }\n        SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n        if (tz == null) {\n            tz = serializers.getTimeZone();\n        }\n        df.setTimeZone(tz);\n        return withFormat(Boolean.FALSE, df);\n    }\n\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}