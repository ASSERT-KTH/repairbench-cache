{
    "generation": "    @Override\n    public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException\n    {\n        if (property == null) {\n            return this;\n        }\n        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n        if (format == null) {\n            return this;\n        }\n        JsonFormat.Shape shape = format.getShape();\n        if (shape.isNumeric()) {\n            return withFormat(Boolean.TRUE, null);\n        }\n\n        if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()\n                || format.hasLocale() || format.hasTimeZone()) {\n            TimeZone tz = format.getTimeZone();\n            String pattern = format.hasPattern()\n                    ? format.getPattern()\n                    : \"yyyy-MM-dd'X'HH:mm:ss.SSSXXX\";\n            Locale loc = format.hasLocale()\n                    ? format.getLocale()\n                    : serializers.getLocale();\n            SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n            if (tz == null) {\n                tz = serializers.getTimeZone();\n            }\n            df.setTimeZone(tz);\n            return withFormat(Boolean.FALSE, df);\n        }\n\n        return withFormat(Boolean.FALSE, new SimpleDateFormat(\"yyyy-MM-dd'X'HH:mm:ss.SSSXXX\", serializers.getLocale()));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}