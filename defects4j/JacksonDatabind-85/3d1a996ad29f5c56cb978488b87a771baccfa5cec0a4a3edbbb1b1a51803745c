{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException\n{\n    if (property == null) {\n        return this;\n    }\n    JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n    if (format == null) {\n        return this;\n    }\n    // Simple case first: serialize as numeric timestamp?\n    JsonFormat.Shape shape = format.getShape();\n    if (shape.isNumeric()) {\n        return withFormat(Boolean.TRUE, null);\n    }\n\n    // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..\n    // First: custom pattern will override things\n    if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()\n            || format.hasLocale() || format.hasTimeZone()) {\n        TimeZone tz = format.getTimeZone();\n        final String pattern;\n        final Locale loc;\n\n        if (format.hasPattern()) {\n            pattern = format.getPattern();\n        } else {\n            // 1648: if no pattern, but default DateFormat set, try to preserve that\n            DateFormat df = serializers.getConfig().getDateFormat();\n            if (df instanceof SimpleDateFormat) {\n                pattern = ((SimpleDateFormat) df).toPattern();\n            } else {\n                pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;\n            }\n        }\n\n        if (format.hasLocale()) {\n            loc = format.getLocale();\n        } else {\n            Locale providerLoc = serializers.getLocale();\n            if (providerLoc == null && serializers.getConfig() != null) {\n                providerLoc = serializers.getConfig().getLocale();\n            }\n            loc = (providerLoc != null) ? providerLoc : Locale.getDefault();\n        }\n\n        SimpleDateFormat sdf = new SimpleDateFormat(pattern, loc);\n\n        if (tz == null) {\n            tz = serializers.getTimeZone();\n            if (tz == null && serializers.getConfig() != null) {\n                tz = serializers.getConfig().getTimeZone();\n            }\n            if (tz == null) {\n                tz = TimeZone.getDefault();\n            }\n        }\n        sdf.setTimeZone(tz);\n        return withFormat(Boolean.FALSE, sdf);\n    }\n\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}