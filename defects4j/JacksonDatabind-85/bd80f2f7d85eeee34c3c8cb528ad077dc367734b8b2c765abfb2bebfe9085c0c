{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException\n{\n    if (property == null) {\n        return this;\n    }\n    JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n    if (format == null) {\n        return this;\n    }\n    // Simple case first: serialize as numeric timestamp?\n    JsonFormat.Shape shape = format.getShape();\n    if (shape.isNumeric()) {\n        return withFormat(Boolean.TRUE, null);\n    }\n\n    // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..\n    // First: custom pattern will override things\n    if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()\n            || format.hasLocale() || format.hasTimeZone()) {\n        TimeZone tz = format.getTimeZone();\n        final String pattern = format.hasPattern()\n                ? format.getPattern()\n                : null;\n        final Locale loc = format.hasLocale()\n                ? format.getLocale()\n                : serializers.getLocale();\n\n        // If pattern is not specified, and Shape is STRING only due to context,\n        // use provider's DateFormat instance if possible.\n        if (pattern == null) {\n            DateFormat df = serializers.getConfig().getDateFormat();\n            if (df instanceof SimpleDateFormat) {\n                SimpleDateFormat sdf = (SimpleDateFormat) ((SimpleDateFormat) df).clone();\n                if (format.hasLocale()) {\n                    sdf = new SimpleDateFormat(sdf.toPattern(), loc);\n                }\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                sdf.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, sdf);\n            }\n            // If not a SimpleDateFormat, fallback: just return this\n            return this;\n        }\n\n        // If pattern is specified, use it with SimpleDateFormat\n        SimpleDateFormat sdf = new SimpleDateFormat(pattern, loc);\n        if (tz == null) {\n            tz = serializers.getTimeZone();\n        }\n        sdf.setTimeZone(tz);\n        return withFormat(Boolean.FALSE, sdf);\n    }\n\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}