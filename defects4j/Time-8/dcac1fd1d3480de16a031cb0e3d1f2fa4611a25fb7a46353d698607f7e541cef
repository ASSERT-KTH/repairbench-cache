{
    "generation": "public static DateTimeZone forOffsetHoursMinutes(int hoursOffset, int minutesOffset) throws IllegalArgumentException {\n    if (hoursOffset == 0 && minutesOffset == 0) {\n        return DateTimeZone.UTC;\n    }\n    if (hoursOffset < -23 || hoursOffset > 23) {\n        throw new IllegalArgumentException(\"Hours out of range: \" + hoursOffset);\n    }\n    if (minutesOffset < -59 || minutesOffset > 59) {\n        throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);\n    }\n    // Rule: if hours positive, minutes must not be negative\n    if (hoursOffset > 0 && minutesOffset < 0) {\n        throw new IllegalArgumentException(\"Positive hours must not have negative minutes: \" + minutesOffset);\n    }\n    // Rule: if hours is zero, negative minutes means negative offset (handled below)\n    // Rule: if hours negative, minutes can be positive or negative (see table)\n\n    int offset = 0;\n    try {\n        int totalMinutes;\n        if (hoursOffset < 0) {\n            // -ve hour: sign of result is negative, add minutes with sign\n            totalMinutes = hoursOffset * 60 - Math.abs(minutesOffset);\n        } else if (hoursOffset > 0) {\n            // +ve hour: sign of result is positive, minutes must be >= 0 (already checked)\n            totalMinutes = hoursOffset * 60 + minutesOffset;\n        } else { // hour == 0\n            totalMinutes = minutesOffset;\n        }\n        offset = FieldUtils.safeMultiply(totalMinutes, DateTimeConstants.MILLIS_PER_MINUTE);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n    // Additional check: Do not allow offset to exceed +23:59:59.000 or below -23:59:59.000\n    int maxOffset = (23 * 60 + 59) * DateTimeConstants.MILLIS_PER_MINUTE;\n    if (offset > maxOffset || offset < -maxOffset) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n    return forOffsetMillis(offset);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}