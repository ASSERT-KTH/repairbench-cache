{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    double dev = (x - mean) / (standardDeviation * Math.sqrt(2.0));\n    try {\n        return 0.5 * (1.0 + Erf.erf(dev));\n    } catch (MaxIterationsExceededException ex) {\n        // For extreme values, return 0 or 1 depending on the sign of dev\n        if (dev < 0) {\n            return 0.0;\n        } else {\n            return 1.0;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}