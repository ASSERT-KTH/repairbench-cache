{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    try {\n        return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));\n    } catch (MaxIterationsExceededException ex) {\n        double devs = Math.abs(x - mean) / standardDeviation;\n        if (x < mean) {\n            if (devs > 20.0) {\n                return 0.0;\n            } else {\n                throw new MathException(ex);\n            }\n        } else {\n            if (devs > 20.0) {\n                return 1.0;\n            } else {\n                throw new MathException(ex);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}