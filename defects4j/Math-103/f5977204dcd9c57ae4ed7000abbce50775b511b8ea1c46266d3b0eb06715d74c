{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    double dev = (x - mean) / standardDeviation;\n    // top\u2010code extreme tails at \u00b120\u03c3 to avoid convergence failures\n    if (dev <= -20.0) {\n        return 0.0;\n    }\n    if (dev >= 20.0) {\n        return 1.0;\n    }\n    try {\n        return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));\n    } catch (MathException ex) {\n        // on rare convergence failure, fall back to 0 or 1\n        return dev < 0.0 ? 0.0 : 1.0;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}