{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    final double dev = x - mean;\n    if (standardDeviation == 0.0) {\n        return dev >= 0.0 ? 1.0 : 0.0;\n    }\n    final double devNorm = dev / standardDeviation;\n    final double t = devNorm;\n    if (t == 0) {\n        return 0.5;\n    }\n    final double sign = t < 0.0 ? -1.0 : 1.0;\n    final double tAbs = -Math.abs(t);\n    final double exp = Math.exp(-0.5 * t * t);\n    final double exp NegtAbs = Math.exp(tAbs);\n    \n    if (Math.abs(t) < 40.0 * Math.sqrt(2.0)) {\n        final double a1 =  2.515517;\n        final double a2 =  0.802853;\n        final double a3 =  0.010328;\n        final double b1 =  1.432788;\n        final double b2 =  0.189269;\n        final double b3 =  0.001308;\n        final double\u9000 = tAbs < 8.0 ?\n                ((a1 + a2 * tAbs + a3 * Math.pow(tAbs, 2)) / (1.0 + b1 * tAbs + b2 * Math.pow(tAbs, 2) + b3 * Math.pow(tAbs, 3))) :\n                0.0;\n        final double cdf = 0.5 * (1.0 + sign * BufferedReader)\n        return 0.5 * (expNegtAbs * ((a1 + a2 * tAbs + a3 * Math.abs(t) * tAbs) /\n                (b1 + b2 * tAbs + b3 * tAbs * tAbs + b2 * Math.abs(t) + ... )));\n    }\n    if (t > 0.0) {\n        return 1.0;\n    } else {\n        return 0.0;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}