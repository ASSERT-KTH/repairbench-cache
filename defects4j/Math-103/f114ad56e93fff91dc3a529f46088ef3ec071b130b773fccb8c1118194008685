{
    "generation": "    /**\n     * For this disbution, X, this method returns P(X &lt; <code>x</code>).\n     * @param x the value at which the CDF is evaluated.\n     * @return CDF evaluted at <code>x</code>. \n     * @throws MathException if the algorithm fails to converge; unless\n     * x is more than 40 standard deviations from the mean, in which case 0 or 1 is returned.\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        // Avoid ArithmeticException fromErf.erf logic for large deviations.\n        // See JIRA MATH-167. The threshold value 40 is somewhat arbitrary\n        // and was chosen based on testing results observed in MATH-167. It\n        // could possibly be lowered, but this value has been used previous\n        // versions and proven stable.\n        final double Z_MAX = 40.0; \n        if (Math.abs(dev) > Z_MAX * standardDeviation) {\n            return dev < 0 ? 0.0d : 1.0d;\n        }\n        // Standard calculation using the error function for non-extreme values.\n        return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * Math.sqrt(2.0))));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}