{
    "generation": "    /**\n     * For this disbution, X, this method returns P(X &lt; <code>x</code>).\n     * @param x the value at which the CDF is evaluated.\n     * @return CDF evaluted at <code>x</code>. \n     * @throws MathException if the algorithm fails to converge; unless\n     * x is more than 20 standard deviations from the mean, in which case the\n     * convergence exception is caught and 0 or 1 is returned.\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        double dev = (x - mean) / (standardDeviation * Math.sqrt(2.0));\n        if (dev < -20) {\n            return 0.0;\n        } else if (dev > 20) {\n            return 1.0;\n        } else {\n            try {\n                return 0.5 * (1.0 + Erf.erf(dev));\n            } catch (MaxIterationsExceededException ex) {\n                throw ex;\n            } catch (MathException ex) {\n                // Only catch the MathException if it's due to the argument being out of bounds,\n                // which should not happen given the above checks.\n                throw new MathException(ex);\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}