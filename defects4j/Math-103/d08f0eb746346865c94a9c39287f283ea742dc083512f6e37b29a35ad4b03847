{
    "generation": "    /**\n     * For this disbution, X, this method returns P(X &lt; <code>x</code>).\n     * @param x the value at which the CDF is evaluated.\n     * @return CDF evaluted at <code>x</code>. \n     * @throws MathException if the algorithm fails to converge; unless\n     * x is more than 20 standard deviations from the mean, in which case the\n     * convergence exception is caught and 0 or 1 is returned.\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        final double z = dev / standardDeviation; // Standardized value\n        try {\n            return 0.5 * (1.0 + Erf.erf(z / Math.sqrt(2.0)));\n        } catch (org.apache.commons.math.MaxIterationsExceededException ex) {\n            // As per Javadoc, catch convergence exception for extreme values.\n            // Use the documented threshold of 20 standard deviations.\n            if (Math.abs(z) > 20) { \n                return (z < 0) ? 0.0d : 1.0d;\n            } else {\n                // If convergence failed for non-extreme values, rethrow.\n                throw ex;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}