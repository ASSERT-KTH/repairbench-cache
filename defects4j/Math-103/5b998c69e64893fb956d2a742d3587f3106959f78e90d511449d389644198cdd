{
    "generation": "    /**\n     * For this disbution, X, this method returns P(X &lt; <code>x</code>).\n     * @param x the value at which the CDF is evaluated.\n     * @return CDF evaluted at <code>x</code>.\n     * @throws MathException if the algorithm fails to converge; unless\n     * x is more than 20 standard deviations from the mean, in which case the\n     * convergence exception is caught and 0 or 1 is returned.\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n        // Handle extreme values explicitly to avoid potential convergence issues\n        // in Erf.erf and honor the Javadoc note.\n        // Calculate the standardized score z = dev / standardDeviation\n        // Check if |z| > 20\n        if (Math.abs(dev) > 20 * standardDeviation) {\n             return dev < 0 ? 0.0 : 1.0;\n        } else {\n            // For values within 20 standard deviations, use the error function.\n            // The Erf.erf method might still throw a MathException if convergence fails\n            // for arguments within this range, as per the method signature.\n            return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * Math.sqrt(2.0))));\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}