{
    "generation": "/**\n * For this distribution, X, this method returns P(X < x).\n * @param x the value at which the CDF is evaluated.\n * @return CDF evaluated at x. \n * @throws MathException if the algorithm fails to converge; unless\n * x is 10 or more standard deviations from the mean, in which case the\n * convergence exception is caught and 0 or 1 is returned.\n */\npublic double cumulativeProbability(double x) throws MathException {\n    // Compute the number of standard deviations from the mean.\n    double dev = (x - mean) / standardDeviation;\n    \n    // Top-code extreme values to avoid convergence issues.\n    if (dev <= -10.0) {\n        return 0.0;\n    }\n    if (dev >= 10.0) {\n        return 1.0;\n    }\n    \n    // Compute the cumulative probability via the error function.\n    return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}