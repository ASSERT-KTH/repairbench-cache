{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    double dev = x - mean;\n    double sd = standardDeviation;\n    try {\n        return 0.5 * (1.0 + Erf.erf(dev / (sd * Math.sqrt(2.0))));\n    } catch (MaxIterationsExceededException ex) {\n        // x is too far from mean for Erf to converge,\n        // so fallback to 0 or 1 depending on side of mean\n        if (dev < 0) {\n            return 0.0;\n        } else {\n            return 1.0;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}