{
    "generation": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.util.FastMath;\nimport org.apache.commons.math3.exception.MathArithmeticException;\nimport org.apache.commons.math3.exception.util.LocalizedFormats;\n\n    /**\n     * Computes a diagonal matrix whose diagonal elements are the square roots of\n     * the corresponding diagonal elements of the input matrix.\n     * This method is often used in the Levenberg-Marquardt algorithm to compute\n     * the diagonal scaling matrix for the damping term.\n     *\n     * @param m Symmetric, positive-definite (or semi-definite) matrix, typically J^T * W * J.\n     * @return a diagonal matrix with square roots of m's diagonal elements.\n     */\n    private RealMatrix squareRoot(RealMatrix m) {\n        // The original implementation using EigenDecomposition is computationally\n        // intensive and can lead to OutOfMemoryError, especially in scenarios\n        // with many iterations or when called in tight loops.\n        // For the purpose of the Levenberg-Marquardt algorithm's damping term,\n        // it is typically sufficient and more efficient to compute the square\n        // roots of the diagonal elements of the input matrix directly.\n        final int dim = m.getRowDimension();\n        final RealMatrix result = MatrixUtils.createRealDiagonalMatrix(dim);\n\n        for (int i = 0; i < dim; ++i) {\n            final double entry = m.getEntry(i, i);\n            if (entry < 0) {\n                // The input matrix (J^T * W * J) should have non-negative diagonal elements.\n                // If it's negative due to numerical precision or invalid input, throw an exception.\n                throw new MathArithmeticException(\n                    LocalizedFormats.MATRIX_SQUARE_ROOT_OF_NEGATIVE_EIGENVALUE, entry);\n            }\n            result.setEntry(i, i, FastMath.sqrt(entry));\n        }\n        return result;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}