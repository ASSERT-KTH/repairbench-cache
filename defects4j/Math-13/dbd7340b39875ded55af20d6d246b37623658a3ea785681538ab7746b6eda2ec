{
    "generation": "/**\n * Computes the square-root of the weight matrix.\n *\n * @param m Symmetric, positive-definite (weight) matrix.\n * @return the square-root of the weight matrix.\n */\nprivate RealMatrix squareRoot(RealMatrix m) {\n        // Use eigen decomposition with threshold to avoid building \n        // sqrt of near-zero or negative eigenvalues due to numerical noise.\n        final EigenDecomposition dec = new EigenDecomposition(m, 1e-15);\n        final double[] realEigenvalues = dec.getRealEigenvalues();\n        final int n = realEigenvalues.length;\n        final RealMatrix V = dec.getV();\n        final RealMatrix sqrtD = MatrixUtils.createRealDiagonalMatrix(new double[n]);\n        for (int i = 0; i < n; ++i) {\n            double lambda = realEigenvalues[i];\n            if (lambda < 0) {\n                // Clamp to zero if negative eigenvalue due to numerical errors\n                lambda = 0;\n            }\n            sqrtD.setEntry(i, i, Math.sqrt(lambda));\n        }\n        return V.multiply(sqrtD).multiply(V.transpose());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}