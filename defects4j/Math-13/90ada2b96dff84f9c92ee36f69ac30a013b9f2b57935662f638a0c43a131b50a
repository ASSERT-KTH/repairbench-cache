{
    "generation": "/**\n * Computes the square-root of the weight matrix.\n *\n * @param m Symmetric, positive-definite (weight) matrix.\n * @return the square-root of the weight matrix.\n */\nprivate RealMatrix squareRoot(RealMatrix m) {\n    // Avoid unnecessary allocation for identity or diagonal matrices\n    int n = m.getRowDimension();\n    boolean isDiagonal = true;\n    for (int i = 0; i < n && isDiagonal; ++i) {\n        for (int j = 0; j < n; ++j) {\n            if (i != j && Math.abs(m.getEntry(i, j)) > 1e-15) {\n                isDiagonal = false;\n                break;\n            }\n        }\n    }\n    if (isDiagonal) {\n        // Square root each diagonal element\n        RealMatrix sqrt = m.copy();\n        for (int i = 0; i < n; ++i) {\n            sqrt.setEntry(i, i, Math.sqrt(m.getEntry(i, i)));\n        }\n        return sqrt;\n    }\n    // General case\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    return dec.getSquareRoot();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}