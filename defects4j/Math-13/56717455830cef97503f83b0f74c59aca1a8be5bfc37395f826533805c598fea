{
    "generation": "/**\n * Computes the square-root of the weight matrix.\n *\n * @param m Symmetric, positive-definite (weight) matrix.\n * @return the square-root of the weight matrix.\n */\nprivate RealMatrix squareRoot(RealMatrix m) {\n    final int dim = m.getRowDimension();\n    final RealMatrix sqrtM = MatrixUtils.createRealMatrix(dim, dim);\n    \n    // For a diagonal matrix, the square root is just the square root of each element\n    if (isDiagonal(m)) {\n        for (int i = 0; i < dim; i++) {\n            sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));\n        }\n        return sqrtM;\n    }\n    \n    // For non-diagonal matrices, use eigendecomposition\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    return dec.getSquareRoot();\n}\n\n/**\n * Checks if the matrix is diagonal (only diagonal elements are non-zero)\n * \n * @param m Matrix to check\n * @return true if the matrix is diagonal\n */\nprivate boolean isDiagonal(RealMatrix m) {\n    final int rows = m.getRowDimension();\n    final int cols = m.getColumnDimension();\n    \n    for (int i = 0; i < rows; i++) {\n        for (int j = 0; j < cols; j++) {\n            if (i != j && FastMath.abs(m.getEntry(i, j)) > 1e-12) {\n                return false;\n            }\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}