{
    "generation": "    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n\n      // Record global variable and function declarations\n      if (t.inGlobalScope()) {\n        if (NodeUtil.isVarDeclaration(n)) {\n          NameInformation ns = createNameInformation(t, n, parent);\n          Preconditions.checkNotNull(ns);\n          recordSet(ns.name, n);\n        } else if (NodeUtil.isFunctionDeclaration(n)) {\n          Node nameNode = n.getFirstChild();\n          NameInformation ns = createNameInformation(t, nameNode, n);\n          if (ns != null) {\n            JsName nameInfo = getName(nameNode.getString(), true);\n            recordSet(nameInfo.name, nameNode);\n          }\n        } else if (NodeUtil.isObjectLitKey(n, parent)) {\n          NameInformation ns = createNameInformation(t, n, parent);\n          if (ns != null) {\n            recordSet(ns.name, n);\n          }\n        }\n      }\n\n      // Record assignments and call sites\n      if (n.isAssign()) {\n        Node nameNode = n.getFirstChild();\n\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        if (ns != null) {\n          if (ns.isPrototype) {\n            recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);\n          } else {\n            recordSet(ns.name, nameNode);\n          }\n        }\n      } else if (n.isCall()) {\n        Node nameNode = n.getFirstChild();\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        if (ns != null && ns.onlyAffectsClassDef) {\n          JsName name = getName(ns.name, false);\n          if (name != null) {\n          refNodes.add(new ClassDefiningFunctionNode(\n              name, n, parent, parent.getParent()));\n          }\n        }\n\n        // Handle goog.inherits calls to record subclass and superclass references\n        String qualifiedName = NodeUtil.getQualifiedName(nameNode);\n        if (\"goog.inherits\".equals(qualifiedName)) {\n          Node subclassArg = nameNode.getNext();\n          if (subclassArg != null) {\n            NameInformation subclassNs = createNameInformation(t, subclassArg, n);\n            if (subclassNs != null) {\n              JsName subclassName = getName(subclassNs.name, true);\n              recordSet(subclassName.name, subclassArg);\n            }\n          }\n\n          Node superclassArg = subclassArg != null ? subclassArg.getNext() : null;\n          if (superclassArg != null) {\n            NameInformation superclassNs = createNameInformation(t, superclassArg, n);\n            if (superclassNs != null) {\n              JsName superclassName = getName(superclassNs.name, true);\n              recordSet(superclassName.name, superclassArg);\n            }\n          }\n        }\n      }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}