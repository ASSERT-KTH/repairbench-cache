{
    "generation": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n        // According to HTML5 spec, if a raw text element (like style, script, noframes)\n        // has a self-closing flag (e.g., <style />), it's a parse error.\n        // The spec implies the element should be immediately popped from the stack,\n        // effectively treating it as an empty element.\n        // Jsoup's `tb.insert()` method already handles this \"pop\" for non-void\n        // self-closing tags (like style, which is not void).\n        // If the tag is self-closing, it means there's no raw text content to parse.\n        // Therefore, we should *not* transition the tokeniser to Rawtext mode\n        // or change the insertion mode to Text, as that would affect subsequent tokens.\n        if (startTag.isSelfClosing()) {\n            // Insert the tag. For non-void self-closing tags, insert() will\n            // add it to the stack and then immediately pop it (closing the element).\n            tb.insert(startTag);\n            // No further tokeniser or insertion mode changes are needed for self-closing rawtext tags.\n        } else {\n            // For a regular raw text element (not self-closing),\n            // we insert it and then switch to rawtext parsing mode for its content\n            // until its closing tag is found.\n            tb.insert(startTag);\n            tb.tokeniser.transition(TokeniserState.Rawtext);\n            tb.markInsertionMode();\n            tb.transition(Text);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}