{
    "generation": "        boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n            String name = t.asEndTag().normalName();\n            ArrayList<Element> stack = tb.getStack();\n            for (int pos = stack.size() -1; pos >= 0; pos--) {\n                Element node = stack.get(pos);\n                // HTML tag names are case-insensitive for matching purposes, even when\n                // ParseSettings.preserveCase is enabled for DOM representation.\n                // The normalName from the token might be lowercased by CharacterReader,\n                // while node.nodeName() preserves the original case.\n                // Using equalsIgnoreCase ensures correct matching regardless of case differences.\n                if (node.nodeName().equalsIgnoreCase(name)) {\n                    tb.generateImpliedEndTags(name);\n                    // This error check compares the normalized name of the end tag (which might be lowercase)\n                    // with the nodeName of the current element (which preserves original case).\n                    // If cases differ (e.g., 'x' vs 'X'), it still triggers an error,\n                    // as it signifies a deviation from perfect case matching as might be desired\n                    // by ParseSettings.preserveCase, but the tag is still considered found for closing.\n                    if (!name.equals(tb.currentElement().nodeName()))\n                        tb.error(this);\n                    tb.popStackToClose(name);\n                    break;\n                } else {\n                    if (tb.isSpecial(node)) {\n                        tb.error(this);\n                        return false;\n                    }\n                }\n            }\n            // If the loop completes without finding a matching tag by equalsIgnoreCase,\n            // or without encountering a special tag that returns false,\n            // it implies the end tag should be ignored (as per HTML5 spec for unmatched end tags),\n            // which is signaled by returning true here, indicating it was \"handled\" by ignoring.\n            return true;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}