{
    "generation": "        boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n            // Get the normal (lowercase) name from the end tag. This is useful for functions\n            // that internally operate on normalized names (like generateImpliedEndTags).\n            String normalEndTagName = t.asEndTag().normalName();\n\n            // Get the actual name from the end tag. This will be case-preserved if ParseSettings.preserveCase is true.\n            // This is crucial for matching elements on the stack whose nodeName() is case-preserved,\n            // and for popStackToClose which compares against nodeName().\n            String actualEndTagName = tb.settings.preserveCase ? t.asEndTag().name() : normalEndTagName;\n\n            ArrayList<Element> stack = tb.getStack();\n            for (int pos = stack.size() -1; pos >= 0; pos--) {\n                Element node = stack.get(pos);\n\n                // Fix 1: Compare the node's actual name with the end tag's actual name.\n                // This correctly matches elements like \"<X>\" with \"</X>\" when preserveCase is true,\n                // and \"<body>\" with \"</body>\" when preserveCase is false (as actualEndTagName == normalEndTagName).\n                if (node.nodeName().equals(actualEndTagName)) {\n                    // Fix 2: Call generateImpliedEndTags with the normal (lowercase) name.\n                    // The generateImpliedEndTags function internally uses normalName() for comparisons,\n                    // so passing a normal name ensures it correctly identifies the 'exclude' tag to stop at.\n                    tb.generateImpliedEndTags(normalEndTagName);\n\n                    // The error check: Jsoup's preserveCase logic might sometimes report an error here\n                    // if the actual case-preserved element name doesn't exactly match the normal name being checked.\n                    // This is usually a warning and doesn't break parsing correctness.\n                    if (!normalEndTagName.equals(tb.currentElement().nodeName()))\n                        tb.error(this); // Keep original error logic.\n\n                    // Fix 3: Call popStackToClose with the actual (case-preserved if applicable) name.\n                    // The popStackToClose function compares against node.nodeName(), which is case-preserved,\n                    // so passing the actualEndTagName ensures the correct element is popped.\n                    tb.popStackToClose(actualEndTagName);\n                    break;\n                } else {\n                    if (tb.isSpecial(node)) {\n                        tb.error(this);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}