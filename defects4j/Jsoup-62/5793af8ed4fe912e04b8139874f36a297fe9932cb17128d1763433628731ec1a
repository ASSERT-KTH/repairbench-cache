{
    "generation": "        boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n            String endTagName = t.asEndTag().name(); // The original case of the end tag, e.g., \"X\"\n            String endTagNormalName = t.asEndTag().normalName(); // The normalized (lowercase) case of the end tag, e.g., \"x\"\n\n            // Determine the name to match against on the stack, based on the current parse settings.\n            // If preserving case, we match the original name. Otherwise, we match the normalized name.\n            String nameToMatch = tb.settings().preserveCase() ? endTagName : endTagNormalName;\n\n            ArrayList<Element> stack = tb.getStack();\n            for (int pos = stack.size() - 1; pos >= 0; pos--) {\n                Element node = stack.get(pos);\n                String nodeName = node.nodeName(); // The name of the element on the stack (original case)\n\n                boolean foundMatch;\n                if (tb.settings().preserveCase()) {\n                    // If preserving case, compare the node's original name directly with the end tag's original name.\n                    foundMatch = nodeName.equals(nameToMatch);\n                } else {\n                    // If not preserving case, compare the node's lowercased name with the end tag's normalized name.\n                    foundMatch = nodeName.toLowerCase().equals(nameToMatch);\n                }\n\n                if (foundMatch) {\n                    // Generate implied end tags: this typically follows HTML5 spec, which implies normalization.\n                    tb.generateImpliedEndTags(endTagNormalName);\n\n                    // Check if the current element matches the end tag for error reporting.\n                    // The comparison must be consistent with the case preservation settings.\n                    if (tb.settings().preserveCase()) {\n                        // If preserving case, direct comparison of original names.\n                        if (!nameToMatch.equals(tb.currentElement().nodeName()))\n                            tb.error(this);\n                    } else {\n                        // If not preserving case, compare normalized names.\n                        if (!nameToMatch.equals(tb.currentElement().nodeName().toLowerCase()))\n                            tb.error(this);\n                    }\n\n                    // Pop stack to close: pass the determined 'nameToMatch'.\n                    // The 'popStackToClose' method's internal comparison should then handle the case appropriately.\n                    tb.popStackToClose(nameToMatch);\n                    break;\n                } else {\n                    if (tb.isSpecial(node)) {\n                        tb.error(this);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}