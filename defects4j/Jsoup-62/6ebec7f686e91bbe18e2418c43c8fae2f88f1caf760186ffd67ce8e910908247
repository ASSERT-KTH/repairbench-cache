{
    "generation": "boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n    String name = t.asEndTag().normalName();\n    ArrayList<Element> stack = tb.getStack();\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        // match tag names case\u2010insensitively\n        if (node.nodeName().equalsIgnoreCase(name)) {\n            // generate implied end tags up to the matching node\n            tb.generateImpliedEndTags(node.nodeName());\n            // if the current element isn't exactly the matched one, it's a parse error\n            if (!node.nodeName().equals(tb.currentElement().nodeName()))\n                tb.error(this);\n            // pop the stack to close that element (preserving its original case)\n            tb.popStackToClose(node.nodeName());\n            return true;\n        } \n        // if we hit a \"special\" element before finding a match, it's a parse error\n        else if (tb.isSpecial(node)) {\n            tb.error(this);\n            return false;\n        }\n    }\n    // no matching start tag found \u2014 ignore the end tag\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}