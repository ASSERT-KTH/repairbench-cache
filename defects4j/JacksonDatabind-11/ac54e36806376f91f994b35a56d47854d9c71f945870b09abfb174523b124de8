{
    "generation": "protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)\n{\n    final String name = type.getName();\n    // 19-Mar-2015: Without context, all we can check are bounds.\n    if (context == null) {\n        // And to prevent infinite loops, now need this:\n        return _unknownType();\n    } else {\n        // Ok: here's where context might come in handy!\n        JavaType actualType = context.findType(name);\n        if (actualType != null) {\n            return actualType;\n        }\n\n        // 2023-04-14: As per [databind#609]/[databind#728], allow use of bounds\n        // even if context does NOT resolve variable, instead of failing\n        Type[] bounds = type.getBounds();\n        // To prevent infinite recursion, add the variable as placeholder\n        context._addPlaceholder(name);\n        // Only use first bound; if none, fall back to java.lang.Object\n        if (bounds.length > 0) {\n            return _constructType(bounds[0], context);\n        }\n        return _unknownType();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}