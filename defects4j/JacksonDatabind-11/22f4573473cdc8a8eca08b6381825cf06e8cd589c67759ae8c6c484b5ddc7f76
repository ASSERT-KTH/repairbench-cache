{
    "generation": "protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)\n{\n    final String name = type.getName();\n    if (context == null) {\n        return _unknownType();\n    }\n\n    JavaType actualType = context.findType(name);\n    if (actualType != null) {\n        return actualType;\n    }\n\n    Type[] bounds = type.getBounds();\n    if (bounds.length == 0) {\n        return _unknownType();\n    }\n\n    for (Type bound : bounds) {\n        if (bound instanceof TypeVariable) {\n            JavaType resolvedBound = _fromVariable((TypeVariable<?>) bound, context);\n            if (resolvedBound != null && !resolvedBound.hasNameVariable(name)) {\n                return _constructType(resolvedBound, context);\n            }\n        } else if (bound instanceof ParameterizedType) {\n            JavaType resolvedBound = _fromType(bound, context);\n            if (resolvedBound != null && !resolvedBound.hasNameVariable(name)) {\n                return _constructType(resolvedBound, context);\n            }\n        }\n    }\n\n    context._addPlaceholder(name);\n    return _constructType(bounds[0], context);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}