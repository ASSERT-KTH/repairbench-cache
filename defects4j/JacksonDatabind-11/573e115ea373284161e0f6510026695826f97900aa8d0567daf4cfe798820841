{
    "generation": "protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)\n{\n    final String name = type.getName();\n    if (context == null) {\n        return _unknownType();\n    }\n    // First: add a placeholder for this type variable so that recursive types can be handled.\n    context._addPlaceholder(name);\n    \n    // Resolve the variable by using its first bound.\n    // (Note: if there are multiple bounds, there might be a better match,\n    // but for now we simply use the first one.)\n    Type[] bounds = type.getBounds();\n    JavaType resolved = _constructType(bounds[0], context);\n    \n    // Now that we have resolved the actual type, update the placeholder mapping.\n    context.resolvePlaceholder(name, resolved);\n    return resolved;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}