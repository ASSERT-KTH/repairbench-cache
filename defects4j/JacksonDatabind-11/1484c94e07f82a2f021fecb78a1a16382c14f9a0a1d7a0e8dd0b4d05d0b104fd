{
    "generation": "protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context) {\n    final String name = type.getName();\n    if (context == null) {\n        return _unknownType();\n    } else {\n        JavaType actualType = context.findType(name);\n        if (actualType != null) {\n            return actualType;\n        }\n    }\n    Type[] bounds = type.getBounds();\n    \n    // For self-referential cases (e.g. T extends Comparable<T>),\n    // add a placeholder to prevent infinite recursion.\n    context._addPlaceholder(name);\n    JavaType result = _constructType(bounds[0], context);\n    \n    // Now resolve the placeholder, so that future lookups will find the proper type.\n    context._resolvePlaceholder(name, result);\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}