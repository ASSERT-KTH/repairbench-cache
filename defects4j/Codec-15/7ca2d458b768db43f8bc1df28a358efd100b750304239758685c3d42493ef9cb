{
    "generation": "/**\n * Used internally by the Soundex algorithm.\n *\n * Consonants from the same code group separated by W or H are treated as one.\n *\n * @param str\n *                  the cleaned working string to encode (in upper case).\n * @param index\n *                  the character position to encode\n * @return Mapping code for a particular character, or 0 to skip\n * @throws IllegalArgumentException\n *                  if the character is not mapped\n */\nprivate char getMappingCode(final String str, final int index) {\n    // map() throws IllegalArgumentException\n    final char mappedChar = this.map(str.charAt(index));\n\n    // HW\u2010rule: if a consonant is preceded by H or W,\n    // and the code two positions back is the same, skip it\n    if (index > 1 && mappedChar != '0') {\n        char hw = str.charAt(index - 1);\n        if (hw == 'H' || hw == 'W') {\n            char prev = str.charAt(index - 2);\n            if (this.map(prev) == mappedChar) {\n                return 0;\n            }\n        }\n    }\n\n    return mappedChar;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}