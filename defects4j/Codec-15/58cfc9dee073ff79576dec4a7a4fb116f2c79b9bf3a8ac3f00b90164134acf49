{
    "generation": "    /**\n     * Used internally by the Soundex algorithm.\n     *\n     * Consonants from the same code group separated by W or H are treated as one.\n     *\n     * @param str\n     *                  the cleaned working string to encode (in upper case).\n     * @param index\n     *                  the character position to encode\n     * @return Mapping code for a particular character\n     * @throws IllegalArgumentException\n     *                  if the character is not mapped\n     */\n    private char getMappingCode(final String str, final int index) {\n        // map() throws IllegalArgumentException\n        final char mappedChar = this.map(str.charAt(index));\n        // HW rule check\n        // This rule applies if:\n        // 1. The current character (str.charAt(index)) is a consonant (mappedChar != '0').\n        // 2. There's a character before the 'H' or 'W' (index > 1).\n        // 3. The character immediately before the current one (str.charAt(index - 1)) is 'H' or 'W'.\n        // 4. The character before the 'H' or 'W' (str.charAt(index - 2)) has the same mapped code as the current character.\n        if (index > 1 && mappedChar != '0') {\n            final char hwChar = str.charAt(index - 1);\n            if ('H' == hwChar || 'W' == hwChar) {\n                final char preHWChar = str.charAt(index - 2);\n                final char firstCode = this.map(preHWChar);\n                // If the consonant before H/W (preHWChar) and the current consonant (str.charAt(index))\n                // have the same Soundex code, then the current consonant is ignored (code '0').\n                // The condition `mappedChar != '0'` at the top of the if-block ensures that\n                // if `firstCode == mappedChar` is true, then `firstCode` must also be non-'0',\n                // fulfilling the \"consonants from the same code group\" part of the rule.\n                if (firstCode == mappedChar) {\n                    return 0; // The character at 'index' is ignored due to the HW rule.\n                }\n            }\n        }\n        return mappedChar;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}