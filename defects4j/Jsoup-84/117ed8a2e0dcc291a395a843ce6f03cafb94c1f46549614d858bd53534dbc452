{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        String prefix = updateNamespaces(sourceEl);\n        String namespace = namespacesStack.peek().get(prefix);\n        String tagName = sourceEl.tagName();\n        Element el;\n        // If there is an undeclared namespace (i.e. namespace is null)\n        // and the tagName is qualified (has a colon), work around the DOM restriction.\n        if (namespace == null && tagName.indexOf(':') != -1) {\n            int colon = tagName.indexOf(':');\n            String localName = tagName.substring(colon + 1);\n            // Create an element using only the local name (which is safe since it lacks a colon)\n            el = doc.createElementNS(namespace, localName);\n            // Then rename the node so that its nodeName retains the original qualified name.\n            // This yields getLocalName() = localName and getNodeName() = original qualified name.\n            el = (Element) doc.renameNode(el, namespace, tagName);\n        } else {\n            el = doc.createElementNS(namespace, tagName);\n        }\n        copyAttributes(sourceEl, el);\n        if (dest == null) { // sets up the root\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest = el; // descend\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        Text node = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n        // unhandled\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}