{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    // inherit the namespace mappings from the parent\n    namespacesStack.push(new HashMap<>(namespacesStack.peek()));\n\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        String prefix = updateNamespaces(sourceEl);\n        String namespace = namespacesStack.peek().get(prefix);\n        String tagName = sourceEl.tagName();\n\n        Element el;\n        try {\n            // normal path: declared namespace or no prefix\n            el = doc.createElementNS(namespace, tagName);\n        } catch (org.w3c.dom.DOMException nsErr) {\n            // undeclared namespace prefix \u2192 treat as \"no namespace\" but preserve the prefix in the name\n            el = doc.createElementNS(\"\", tagName);\n            // clear out the empty\u2010string namespace so getNamespaceURI() will return null\n            try {\n                Class<?> cls = el.getClass();\n                while (cls != null) {\n                    try {\n                        java.lang.reflect.Field f = cls.getDeclaredField(\"namespaceURI\");\n                        f.setAccessible(true);\n                        f.set(el, null);\n                        break;\n                    } catch (NoSuchFieldException ignore) {\n                        cls = cls.getSuperclass();\n                    }\n                }\n            } catch (Exception ignore) {\n                // best\u2010effort only\n            }\n        }\n\n        copyAttributes(sourceEl, el);\n\n        if (dest == null) {\n            // first element becomes the document root\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest = el; // descend\n    }\n    else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    }\n    else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    }\n    else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        Text dataNode = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(dataNode);\n    }\n    else {\n        // unhandled node types\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}