{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    // inherit namespace mappings from parent\n    namespacesStack.push(new HashMap<>(namespacesStack.peek()));\n    \n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        String prefix = updateNamespaces(sourceEl);\n        String namespace = namespacesStack.peek().get(prefix);\n        String tagName = sourceEl.tagName();\n\n        // if we have a real namespace URI, use createElementNS, otherwise fall back to createElement\n        Element el;\n        if (namespace != null) {\n            el = doc.createElementNS(namespace, tagName);\n        } else {\n            el = doc.createElement(tagName);\n        }\n\n        copyAttributes(sourceEl, el);\n\n        if (dest == null) {\n            // this is the root element\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest = el; // descend\n\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        Text node = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n\n    } else {\n        // unhandled node types are skipped\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}