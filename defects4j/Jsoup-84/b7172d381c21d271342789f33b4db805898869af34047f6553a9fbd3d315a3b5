{
    "generation": "        public void head(org.jsoup.nodes.Node source, int depth) {\n            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n            if (source instanceof org.jsoup.nodes.Element) {\n                org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n                // Determine the prefix of the current Jsoup element's tag.\n                String sourceElPrefix = sourceEl.tagName().contains(\":\") ? sourceEl.tagName().substring(0, sourceEl.tagName().indexOf(\":\")) : null;\n\n                // Update the namespace stack based on xmlns attributes found on the current element.\n                // This call updates `namespacesStack.peek()` with any new namespace declarations.\n                // It must be called for its side-effect, as it's crucial for inheriting namespaces down the tree.\n                updateNamespaces(sourceEl);\n\n                // Determine the namespace URI for the current element's tag.\n                String elementNamespaceUri = null;\n                if (sourceElPrefix != null) {\n                    // If a prefix exists, look up its corresponding URI in the current namespace scope.\n                    elementNamespaceUri = namespacesStack.peek().get(sourceElPrefix);\n                } else {\n                    // If no prefix, check for a default namespace (xmlns=\"some_uri\").\n                    elementNamespaceUri = namespacesStack.peek().get(\"\");\n                }\n\n                String tagName = sourceEl.tagName(); // The full qualified name, e.g., \"fb:like\" or \"html\".\n\n                Element el;\n                // Fix for NAMESPACE_ERR:\n                // According to W3C DOM spec, createElementNS(null, \"prefix:local\") throws NAMESPACE_ERR.\n                // If an element has a prefix but that prefix is undeclared (elementNamespaceUri is null),\n                // we should create it as a non-namespaced element using createElement() to avoid the error.\n                // This mimics a more tolerant, browser-like behavior for such cases.\n                if (elementNamespaceUri == null && sourceElPrefix != null) {\n                    // This is the case of an undeclared prefixed element (e.g., <fb:like>).\n                    // Use createElement for non-namespaced creation.\n                    el = doc.createElement(tagName);\n                } else {\n                    // Standard case: either no prefix, or prefix is declared (even if default/empty namespace).\n                    el = doc.createElementNS(elementNamespaceUri, tagName);\n                }\n\n                copyAttributes(sourceEl, el);\n                if (dest == null) { // sets up the root\n                    doc.appendChild(el);\n                } else {\n                    dest.appendChild(el);\n                }\n                dest = el; // descend\n            } else if (source instanceof org.jsoup.nodes.TextNode) {\n                org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n                Text text = doc.createTextNode(sourceText.getWholeText());\n                dest.appendChild(text);\n            } else if (source instanceof org.jsoup.nodes.Comment) {\n                org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n                Comment comment = doc.createComment(sourceComment.getData());\n                dest.appendChild(comment);\n            } else if (source instanceof org.jsoup.nodes.DataNode) {\n                org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n                Text node = doc.createTextNode(sourceData.getWholeData());\n                dest.appendChild(node);\n            } else {\n                // unhandled\n            }\n        }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}