{
    "generation": "        public void head(org.jsoup.nodes.Node source, int depth) {\n            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n            if (source instanceof org.jsoup.nodes.Element) {\n                org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n                // Update namespaces map with declarations on this element\n                // Assumes updateNamespaces modifies namespacesStack.peek()\n                updateNamespaces(sourceEl);\n\n                String tagName = sourceEl.tagName();\n                String prefix = null;\n                String lookupKey;\n                int colon = tagName.indexOf(':');\n                if (colon > 0) {\n                    // Element tag has a prefix\n                    prefix = tagName.substring(0, colon);\n                    lookupKey = prefix;\n                } else {\n                    // Element tag has no prefix - look for default namespace\n                    lookupKey = \"\"; // xmlns\n                }\n\n                // Look up the namespace URI from the current stack frame\n                String namespace = namespacesStack.peek().get(lookupKey);\n\n                Element el;\n                // Check the condition that causes NAMESPACE_ERR with createElementNS:\n                // A null namespaceURI and a qualifiedName with a prefix.\n                if (namespace == null && colon > 0) {\n                    // Tag name has a prefix, but the prefix is not declared. Create element without namespace.\n                    // This avoids the NAMESPACE_ERR. The created element will have namespaceURI=null,\n                    // nodeName=tagName (e.g., \"fb:like\"), and potentially localName=tagName.\n                    el = doc.createElement(tagName);\n                } else {\n                    // Tag name has no prefix OR the prefix is declared. Use createElementNS.\n                    // If tagName has no prefix, namespace might be null (no default namespace), which is valid for createElementNS.\n                    // If tagName has a declared prefix, namespace will be non-null.\n                    el = doc.createElementNS(namespace, tagName);\n                }\n\n                copyAttributes(sourceEl, el);\n                if (dest == null) { // sets up the root\n                    doc.appendChild(el);\n                } else {\n                    dest.appendChild(el);\n                }\n                dest = el; // descend\n            } else if (source instanceof org.jsoup.nodes.TextNode) {\n                org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n                Text text = doc.createTextNode(sourceText.getWholeText());\n                dest.appendChild(text);\n            } else if (source instanceof org.jsoup.nodes.Comment) {\n                org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n                Comment comment = doc.createComment(sourceComment.getData());\n                dest.appendChild(comment);\n            } else if (source instanceof org.jsoup.nodes.DataNode) {\n                org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n                Text node = doc.createTextNode(sourceData.getWholeData());\n                dest.appendChild(node);\n            } else {\n                // unhandled\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}