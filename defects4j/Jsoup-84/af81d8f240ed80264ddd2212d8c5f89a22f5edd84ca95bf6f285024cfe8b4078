{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        String prefix = updateNamespaces(sourceEl);\n        String namespace = namespacesStack.peek().get(prefix);\n        String tagName = sourceEl.tagName();\n\n        org.w3c.dom.Element el;\n        // If there's a prefix but no namespace mapping, treat the prefix as part of the name\n        if (prefix != null && !prefix.isEmpty() && namespace == null) {\n            try {\n                // Use the internal ElementNSImpl constructor to bypass the QName check\n                Class<?> docClass = doc.getClass();\n                String pkg = docClass.getPackage().getName();\n                Class<?> elNSImpl = Class.forName(pkg + \".ElementNSImpl\");\n                java.lang.reflect.Constructor<?> ctor =\n                    elNSImpl.getDeclaredConstructor(docClass, String.class, String.class);\n                ctor.setAccessible(true);\n                // Pass null for namespaceURI and the full qName as tagName\n                el = (org.w3c.dom.Element) ctor.newInstance(doc, null, tagName);\n            } catch (Exception e) {\n                // Fallback: normal creation (may still throw, but in standard JDK the reflection path works)\n                el = doc.createElementNS(null, tagName);\n            }\n        } else {\n            el = doc.createElementNS(namespace, tagName);\n        }\n\n        copyAttributes(sourceEl, el);\n        if (dest == null) { // sets up the root\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest = el; // descend\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        org.w3c.dom.Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        org.w3c.dom.Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        org.w3c.dom.Text node = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n        // unhandled\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}