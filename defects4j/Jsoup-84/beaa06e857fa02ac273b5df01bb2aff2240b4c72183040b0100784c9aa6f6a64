{
    "generation": "        public void head(org.jsoup.nodes.Node source, int depth) {\n            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n            if (source instanceof org.jsoup.nodes.Element) {\n                org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n                // executes updateNamespaces primarily for side effect of updating namespacesStack\n                updateNamespaces(sourceEl);\n\n                String tagName = sourceEl.tagName(); // The potentially prefixed tag name (e.g., \"fb:like\")\n                String prefix = sourceEl.tag().getPrefix(); // The prefix (e.g., \"fb\") or null\n                String localName = sourceEl.tag().normalName(); // The local name (e.g., \"like\")\n\n                // Determine the namespace URI for this element by looking up the prefix (or default)\n                String namespace = null;\n                Map<String, String> currentNsMap = namespacesStack.peek();\n                if (prefix != null) {\n                    namespace = currentNsMap.get(prefix); // Look up the prefix\n                } else {\n                    namespace = currentNsMap.get(\"\"); // Look up the default namespace (xmlns=\"\")\n                }\n\n                Element el;\n                // If the namespace URI is null, but the tag name has a prefix,\n                // calling doc.createElementNS(null, tagName) will throw a NAMESPACE_ERR.\n                // Instead, we should use the local name and a null namespace URI.\n                if (namespace == null && prefix != null) {\n                    // Undeclared prefix: create element with null namespace and local name.\n                    // This satisfies namespace requirements but nodeName will be localName.\n                    el = doc.createElementNS(null, localName);\n                } else {\n                    // Namespace is declared, or element has no prefix.\n                    // Use the determined namespace (which might be null if no prefix and no default)\n                    // and the original tagName (which might or might not have a prefix).\n                    // If namespace is null and there's no prefix (e.g. <html>), tagName is just localName.\n                    el = doc.createElementNS(namespace, tagName);\n                }\n\n                copyAttributes(sourceEl, el);\n                if (dest == null) { // sets up the root\n                    doc.appendChild(el);\n                } else {\n                    dest.appendChild(el);\n                }\n                dest = el; // descend\n            } else if (source instanceof org.jsoup.nodes.TextNode) {\n                org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n                Text text = doc.createTextNode(sourceText.getWholeText());\n                dest.appendChild(text);\n            } else if (source instanceof org.jsoup.nodes.Comment) {\n                org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n                Comment comment = doc.createComment(sourceComment.getData());\n                dest.appendChild(comment);\n            } else if (source instanceof org.jsoup.nodes.DataNode) {\n                org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n                Text node = doc.createTextNode(sourceData.getWholeData());\n                dest.appendChild(node);\n            } else {\n                // unhandled\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}