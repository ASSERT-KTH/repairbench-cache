{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    // inherit namespace mappings from parent\n    namespacesStack.push(new HashMap<>(namespacesStack.peek()));\n\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        // Incorporate any xmlns declarations on this element\n        String prefix = updateNamespaces(sourceEl);\n        String namespace = namespacesStack.peek().get(prefix);\n        String tagName = sourceEl.tagName();\n\n        org.w3c.dom.Element el;\n        // If the element has a coloned name but no declared namespace, \n        // create it in no-namespace and then set its prefix manually.\n        if (namespace == null && tagName.contains(\":\")) {\n            int colonIndex = tagName.indexOf(':');\n            String undeclaredPrefix = tagName.substring(0, colonIndex);\n            String localName = tagName.substring(colonIndex + 1);\n            el = doc.createElementNS(null, localName);\n            el.setPrefix(undeclaredPrefix);\n        } else {\n            // Normal case: either namespace != null, or no colon in tagName\n            el = doc.createElementNS(namespace, tagName);\n        }\n\n        copyAttributes(sourceEl, el);\n\n        if (dest == null) {\n            // first real element becomes the document root\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest = el; // descend\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        org.w3c.dom.Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        org.w3c.dom.Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        org.w3c.dom.Text dataNode = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(dataNode);\n    } else {\n        // unhandled node types are ignored\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}