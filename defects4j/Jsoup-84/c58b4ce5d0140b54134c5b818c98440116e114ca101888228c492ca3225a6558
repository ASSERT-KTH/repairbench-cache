{
    "generation": "        public void head(org.jsoup.nodes.Node source, int depth) {\n            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n            if (source instanceof org.jsoup.nodes.Element) {\n                org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n                // Update the current namespace scope (top of stack) with any xmlns attributes defined on this element\n                // Assumes updateNamespaces modifies namespacesStack.peek()\n                updateNamespaces(sourceEl);\n\n                String tagName = sourceEl.tagName(); // The qualified tag name, e.g., \"fb:like\"\n                String prefix = null;\n                int colon = tagName.indexOf(':');\n                if (colon > 0) {\n                    prefix = tagName.substring(0, colon); // The prefix, e.g., \"fb\"\n                }\n\n                // Look up the namespace URI corresponding to the prefix (or default namespace if no prefix)\n                // in the current namespace scope (the top of the stack).\n                String namespace = null;\n                if (prefix != null) {\n                    namespace = namespacesStack.peek().get(prefix);\n                } else {\n                    // If there's no prefix, check for a default namespace definition (xmlns=\"...\")\n                    namespace = namespacesStack.peek().get(\"\");\n                }\n\n                Element el;\n                // If a non-empty namespace URI was found, create the element with namespace awareness.\n                if (namespace != null && !namespace.isEmpty()) {\n                    el = doc.createElementNS(namespace, tagName);\n                } else {\n                    // Otherwise (no namespace URI found for the prefix, or the URI is empty,\n                    // or there is no prefix and no default namespace), create the element without a namespace.\n                    // This specifically handles the case like <fb:like> where 'fb' is not declared,\n                    // preventing the NAMESPACE_ERR from createElementNS(null, \"fb:like\").\n                    el = doc.createElement(tagName);\n                }\n\n                copyAttributes(sourceEl, el);\n                if (dest == null) { // sets up the root\n                    doc.appendChild(el);\n                } else {\n                    dest.appendChild(el);\n                }\n                dest = el; // descend\n            } else if (source instanceof org.jsoup.nodes.TextNode) {\n                org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n                Text text = doc.createTextNode(sourceText.getWholeText());\n                dest.appendChild(text);\n            } else if (source instanceof org.jsoup.nodes.Comment) {\n                org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n                Comment comment = doc.createComment(sourceComment.getData());\n                dest.appendChild(comment);\n            } else if (source instanceof org.jsoup.nodes.DataNode) {\n                org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n                // Ensure Text nodes are used for DataNodes as well, consistent with original behavior\n                Text node = doc.createTextNode(sourceData.getWholeData());\n                dest.appendChild(node);\n            } else {\n                // unhandled node types - the original code did nothing here, so we maintain that.\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}