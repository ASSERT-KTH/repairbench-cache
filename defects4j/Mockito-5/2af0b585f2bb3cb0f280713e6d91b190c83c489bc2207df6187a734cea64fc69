{
    "generation": "    /**\n     * Verify the given ongoing verification data, and confirm that it satisfies the delegate verification mode\n     * before the full duration has passed.\n     *\n     * In practice, this polls the delegate verification mode until it is satisfied. If it is not satisfied once\n     * the full duration has passed, the last error returned by the delegate verification mode will be thrown\n     * here in turn. This may be thrown early if the delegate is unsatisfied and the verification mode is known\n     * to never recover from this situation (e.g. {@link AtMost}).\n     *\n     * If it is satisfied before the full duration has passed, behaviour is dependent on the returnOnSuccess parameter\n     * given in the constructor. If true, this verification mode is immediately satisfied once the delegate is. If\n     * false, this verification mode is not satisfied until the delegate is satisfied and the full time has passed.\n     *\n     * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout\n     * @throws AssertionError If the delegate verification mode throws an {@link AssertionError} that is not a\n     * {@link MockitoAssertionError} before the timeout.\n     */\n    public void verify(VerificationData data) {\n        AssertionError error = null;\n\n        timer.start();\n        while (timer.isCounting()) {\n            try {\n                delegate.verify(data);\n\n                if (returnOnSuccess) {\n                    return;\n                } else {\n                    // If delegate succeeds but we need to wait full duration,\n                    // reset the error cleared state.\n                    error = null;\n                }\n            } catch (AssertionError e) {\n                // Catch any AssertionError (including MockitoAssertionError and potentially\n                // JUnit framework errors if they are used by the delegate)\n                error = handleVerifyException(e);\n                // TODO - Issue 145 : VerificationOverTimeImpl can swallow assertion errors from JCStress tests\n                // This might need refinement if the delegate is known to never recover,\n                // allowing for an early exit. See description in AtMost.\n            }\n            // Consider adding a small sleep here to avoid busy-waiting,\n            // although the timer mechanism might handle this implicitly.\n        }\n\n        if (error != null) {\n            throw error;\n        }\n        // If error is null, it means the delegate verification succeeded\n        // either within the time (and returnOnSuccess is false, so we waited)\n        // or exactly on the last check.\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}