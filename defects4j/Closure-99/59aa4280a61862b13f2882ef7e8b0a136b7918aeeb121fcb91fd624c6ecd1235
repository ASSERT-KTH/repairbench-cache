{
    "generation": "@Override\npublic boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n  if (n.getType() == Token.FUNCTION) {\n    // Don't traverse constructors, @this, @override, or @interface functions.\n    JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n    if (jsDoc != null &&\n        (jsDoc.isConstructor()\n         || jsDoc.hasThisType()\n         || jsDoc.isOverride()\n         || jsDoc.isInterface())) {\n      return false;\n    }\n\n    // Only traverse functions in places where a @this could apply:\n    // block, script, a name, or an assignment.\n    if (parent != null) {\n      int pType = parent.getType();\n      if (!(pType == Token.BLOCK\n            || pType == Token.SCRIPT\n            || pType == Token.NAME\n            || pType == Token.ASSIGN)) {\n        return false;\n      }\n    }\n  }\n\n  if (parent != null && parent.getType() == Token.ASSIGN) {\n    Node lhs = parent.getFirstChild();\n    Node rhs = lhs.getNext();\n    if (n == lhs) {\n      // Always traverse the LHS of an assignment to handle nested assigns.\n      if (assignLhsChild == null) {\n        assignLhsChild = lhs;\n      }\n    } else {\n      // We're about to traverse the RHS.  Skip it if this is\n      // a direct assignment to Foo.prototype or one of its *direct* properties.\n      if (lhs.getType() == Token.GETPROP) {\n        // Skip Foo.prototype = ...\n        if (lhs.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n        // Skip Foo.prototype.bar = ...\n        Node obj = lhs.getFirstChild();\n        if (obj.getType() == Token.GETPROP\n            && obj.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n      } else if (lhs.getType() == Token.GETELEM) {\n        // Skip Foo.prototype['bar'] = ...\n        Node obj = lhs.getFirstChild();\n        if (obj.getType() == Token.GETPROP\n            && obj.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}