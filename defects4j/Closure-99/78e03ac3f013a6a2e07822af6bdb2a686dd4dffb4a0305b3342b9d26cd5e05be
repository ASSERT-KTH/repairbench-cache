{
    "generation": "@Override\npublic boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n  // Skip functions that are constructors, interfaces, have @this or @override.\n  if (n.getType() == Token.FUNCTION) {\n    JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n    if (jsDoc != null\n        && (jsDoc.isConstructor()\n            || jsDoc.isInterface()\n            || jsDoc.hasThisType()\n            || jsDoc.isOverride())) {\n      return false;\n    }\n    // Only traverse top\u2010level or simple assignments to functions.\n    int pType = (parent == null) ? -1 : parent.getType();\n    if (!(pType == Token.BLOCK\n          || pType == Token.SCRIPT\n          || pType == Token.NAME\n          || pType == Token.ASSIGN)) {\n      return false;\n    }\n  }\n\n  // In an assignment, skip the RHS if it's assigning to a prototype chain.\n  if (parent != null && parent.getType() == Token.ASSIGN) {\n    Node lhs = parent.getFirstChild();\n    if (n == lhs) {\n      // Always traverse the LHS once to track nested assignments.\n      if (assignLhsChild == null) {\n        assignLhsChild = lhs;\n      }\n    } else {\n      // Check for static prototype assignments: a.prototype = \u2026 or a.prototype.foo = \u2026\n      if (lhs.getType() == Token.GETPROP) {\n        if (lhs.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n        String qname = lhs.getQualifiedName();\n        if (qname != null && qname.contains(\".prototype.\")) {\n          return false;\n        }\n      }\n      // Check for dynamic prototype assignments: a.prototype['x'] = \u2026\n      else if (lhs.getType() == Token.GETELEM) {\n        Node obj = lhs.getFirstChild();\n        if (obj.getType() == Token.GETPROP\n            && obj.getLastChild().getString().equals(\"prototype\")) {\n          return false;\n        }\n        String qname2 = obj.getQualifiedName();\n        if (qname2 != null && qname2.contains(\".prototype.\")) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}