{
    "generation": "  /**\n   * Since this pass reports errors only when a global {@code this} keyword\n   * is encountered, there is no reason to traverse non global contexts.\n   */\n  public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() == Token.FUNCTION) {\n      // Don't traverse functions that are constructors or have the @this\n      // or @override annotation.\n      JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n      if (jsDoc != null &&\n          (jsDoc.isConstructor() ||\n           jsDoc.hasAnnotation(\"this\") ||\n           jsDoc.hasAnnotation(\"override\"))) {\n        return false;\n      }\n    } else if (n.getType() == Token.CLASS) {\n      // Don't traverse classes with the @this annotation.\n      JSDocInfo jsDoc = getClassJsDocInfo(n);\n      if (jsDoc != null && jsDoc.hasAnnotation(\"this\")) {\n        return false;\n      }\n    }\n    return true;\n  }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}