{
    "generation": "    public static boolean verifyCheckSum(byte[] header) {\n        long storedSum = 0;\n        long unsignedSum = 0;\n        long signedSum = 0;\n\n        // First calculate the sum as if checksum field was all spaces\n        for (int i = 0; i < header.length; i++) {\n            byte b = i >= CHKSUM_OFFSET && i < CHKSUM_OFFSET + CHKSUMLEN ? ' ' : header[i];\n            unsignedSum += 0xff & b;\n            signedSum += b;\n        }\n\n        // Now parse the actual checksum from the header\n        int digits = 0;\n        for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN && digits < 6; i++) {\n            byte b = header[i];\n            if ('0' <= b && b <= '7') {\n                storedSum = storedSum * 8 + b - '0';\n                digits++;\n            } else if (digits > 0) {\n                break; // Stop at first non-digit after digits started\n            }\n        }\n\n        return storedSum == unsignedSum || storedSum == signedSum;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}