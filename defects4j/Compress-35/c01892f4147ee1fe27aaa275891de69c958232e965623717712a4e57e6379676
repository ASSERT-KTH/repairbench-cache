{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    // Extract stored checksum as a 6-digit octal number (ignoring leading/trailing whitespace)\n    int chksumStart = CHKSUM_OFFSET;\n    int chksumEnd = CHKSUM_OFFSET + CHKSUMLEN;\n\n    // Skip leading whitespace\n    int idx = chksumStart;\n    while (idx < chksumEnd && (header[idx] == 0 || Character.isWhitespace(header[idx]))) {\n        idx++;\n    }\n\n    int digits = 0;\n    while (idx < chksumEnd && digits < 6 && header[idx] >= '0' && header[idx] <= '7') {\n        storedSum = (storedSum << 3) + (header[idx] - '0');\n        idx++;\n        digits++;\n    }\n\n    // Compute unsigned and signed checksum, with the chksum field treated as spaces (32)\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            b = 32; // ASCII space\n        }\n        unsignedSum += (b & 0xFF);\n        signedSum += b;\n    }\n\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}