{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    int digits = 0;\n    int i;\n    // Parse the stored checksum: skip leading whitespace, get up to 6 octal digits.\n    for (i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        byte b = header[i];\n        if (digits == 0 && (b == 0 || b == (byte) ' ')) {\n            continue;\n        }\n        if (digits < 6 && b >= '0' && b <= '7') {\n            storedSum = storedSum * 8 + (b - '0');\n            digits++;\n        } else {\n            break;\n        }\n    }\n    // Now calculate unsigned and signed checksums, with the checksum field treated as spaces\n    long unsignedSum = 0;\n    long signedSum = 0;\n    for (i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            b = (byte) ' ';\n        }\n        unsignedSum += (b & 0xFF);\n        signedSum += b;\n    }\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}