{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    int idx = CHKSUM_OFFSET;\n    int end = CHKSUM_OFFSET + CHKSUMLEN;\n    // Skip leading spaces and NULs in the checksum field\n    while (idx < end && (header[idx] == ' ' || header[idx] == 0)) {\n        idx++;\n    }\n    // Parse as many consecutive octal digits as present\n    while (idx < end) {\n        byte b = header[idx++];\n        if (b < '0' || b > '7') {\n            break;\n        }\n        storedSum = (storedSum << 3) + (b - '0');\n    }\n    long unsignedSum = 0;\n    long signedSum   = 0;\n    // Compute both unsigned and signed sums, treating the checksum bytes as spaces\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (i >= CHKSUM_OFFSET && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            b = ' ';\n        }\n        unsignedSum += (b & 0xFF);\n        signedSum   += b;\n    }\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}