{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    int digits = 0;\n    boolean foundDigit = false;\n\n    // Parse stored checksum according to octal digits in header\n    for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        byte b = header[i];\n        if (digits < 6 && b >= '0' && b <= '7') {\n            storedSum = storedSum * 8 + (b - '0');\n            digits++;\n            foundDigit = true;\n        } else if (digits > 0) {\n            // stop at first non-digit after digits started\n            break;\n        }\n    }\n\n    // Treated as a \"best effort\", so if no digits found, return false\n    if (!foundDigit) {\n        return false;\n    }\n\n    // Compute checksums: set chksum field bytes to space (ASCII 32)\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            b = (byte) ' ';\n        }\n        unsignedSum += 0xff & b;\n        signedSum += b;\n    }\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}