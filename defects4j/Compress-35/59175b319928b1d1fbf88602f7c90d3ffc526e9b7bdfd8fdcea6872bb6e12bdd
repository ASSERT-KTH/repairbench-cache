{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    int digits = 0;\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            if ('0' <= b && b <= '7' && digits++ < 6) {\n                storedSum = storedSum * 8 + (b - '0');\n            } else if (digits > 0) {\n                digits = 6;\n            }\n            // use ASCII space for checksum field when summing\n            b = ' ';\n        }\n        unsignedSum += (b & 0xFF);\n        signedSum += b;\n    }\n\n    // first try the usual octal checksum\n    if (storedSum == unsignedSum || storedSum == signedSum) {\n        return true;\n    }\n\n    // fallback: some tars use a binary (base-256 two's-complement) checksum field\n    long binarySum = 0;\n    for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        binarySum = (binarySum << 8) | (header[i] & 0xFF);\n    }\n    return binarySum == unsignedSum || binarySum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}