{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    // Calculate the stored checksum from the header\n    int digits = 0;\n    int chkStart = CHKSUM_OFFSET;\n    int chkEnd = CHKSUM_OFFSET + CHKSUMLEN;\n    for (int i = chkStart; i < chkEnd; i++) {\n        byte b = header[i];\n        // ignore leading whitespace\n        if (digits == 0 && (b == 0 || b == 32 /* space */)) {\n            continue;\n        }\n        if ('0' <= b && b <= '7' && digits < 6) {\n            storedSum = storedSum * 8 + b - '0';\n            digits++;\n        } else {\n            // If not a digit, break. According to spec, trailing NUL and space may follow\n            break;\n        }\n    }\n\n    // Now, for checksum calculation, set header[148..155] (CHKSUM_OFFSET..CHKSUM_OFFSET+7) to ascii ' ' (space, 32)\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (chkStart <= i && i < chkEnd) {\n            b = 32;\n        }\n        unsignedSum += (0xff & b);\n        signedSum += b;\n    }\n\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}