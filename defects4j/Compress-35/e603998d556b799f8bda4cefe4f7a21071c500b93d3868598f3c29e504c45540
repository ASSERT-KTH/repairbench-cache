{
    "generation": "    public static boolean verifyCheckSum(byte[] header) {\n        long storedSum = 0;\n        long unsignedSum = 0;\n        long signedSum = 0;\n\n        int digits = 0;\n        for (int i = 0; i < header.length; i++) {\n            byte b = header[i];\n            if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n                if ('0' <= b && b <= '7' && digits++ < 6) {\n                    storedSum = storedSum * 8 + (b - '0');\n                }\n                b = ' ';  // replace checksum bytes with spaces for calculation\n            }\n            unsignedSum += 0xff & b;\n            signedSum += b;\n        }\n\n        // Checksum in header might be followed by NUL and space, ignore those\n        // So we might have collected less than 6 digits if there was a NUL before\n        // Therefore pad with leading zeros if we got less than 6 digits\n        if (digits < 6) {\n            for (int i = digits; i < 6; i++) {\n                storedSum *= 8;\n            }\n        }\n\n        return storedSum == unsignedSum || storedSum == signedSum;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}