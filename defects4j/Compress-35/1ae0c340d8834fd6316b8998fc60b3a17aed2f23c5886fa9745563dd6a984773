{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    // First calculate the stored checksum\n    int digits = 0;\n    for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        byte b = header[i];\n        if ('0' <= b && b <= '7' && digits++ < 6) {\n            storedSum = storedSum * 8 + (b - '0');\n        } else if (digits > 0) {\n            break; // stop counting digits if non-digits are encountered\n        }\n    }\n\n    // Calculate checksum with the checksum field assumed to be spaces\n    byte[] copy = Arrays.copyOf(header, header.length);\n    Arrays.fill(copy, CHKSUM_OFFSET, CHKSUM_OFFSET + CHKSUMLEN, (byte) ' ');\n    for (byte b : copy) {\n        unsignedSum += 0xff & b;\n        signedSum += b;\n    }\n\n    // Compare with both signed and unsigned sums\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}