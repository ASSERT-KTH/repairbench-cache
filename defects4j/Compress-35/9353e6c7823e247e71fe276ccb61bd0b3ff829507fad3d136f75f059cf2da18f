{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    int digits = 0;\n    boolean foundNullOrSpace = false;\n\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            if (!foundNullOrSpace) {\n                if ('0' <= b && b <= '7' && digits < 6) {\n                    storedSum = storedSum * 8 + (b - '0');\n                    digits++;\n                } else if (b == 0 || b == ' ' || b == '\\0') {\n                    // Stop parsing storedSum at first null or space after digits\n                    foundNullOrSpace = true;\n                } else {\n                    // Unexpected, skip further digit accumulation\n                    foundNullOrSpace = true;\n                }\n            }\n            // Per spec, treat checksum field as if filled with spaces when calculating the sum\n            b = ' ';\n        }\n        unsignedSum += (b & 0xFF);\n        signedSum += b;\n    }\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}