{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    int digits = 0;\n    boolean foundDigit = false;\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            // Compute storedSum, ignoring any leading or trailing whitespace and stopping at first non-octal char\n            if (!foundDigit) {\n                // Skip leading whitespace\n                if (b == 0 || b == ' ' || b == '\\0') {\n                    b = ' ';\n                } else if ('0' <= b && b <= '7' && digits < 6) {\n                    foundDigit = true;\n                    storedSum = storedSum * 8 + b - '0';\n                    digits++;\n                    b = ' ';\n                } else {\n                    b = ' ';\n                }\n            } else if ('0' <= b && b <= '7' && digits < 6) {\n                storedSum = storedSum * 8 + b - '0';\n                digits++;\n                b = ' ';\n            } else {\n                // once digits started, stop on first non-octal or after 6 digits\n                b = ' ';\n            }\n        }\n        unsignedSum += (0xff & b);\n        signedSum += b;\n    }\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}