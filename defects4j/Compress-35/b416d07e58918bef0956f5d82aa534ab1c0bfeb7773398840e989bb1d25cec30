{
    "generation": "    public static boolean verifyCheckSum(byte[] header) {\n        long storedSum = 0;\n        long unsignedSum = 0;\n        long signedSum = 0;\n\n        int digits = 0;\n        for (int i = 0; i < header.length; i++) {\n            byte b = header[i];\n            if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n                if ('0' <= b && b <= '7' && digits++ < 6) {\n                    storedSum = storedSum * 8 + (b - '0');\n                } else if (digits > 0) {\n                    digits = 6;\n                }\n                b = ' ';\n            }\n            unsignedSum += 0xff & b;\n            signedSum += b;\n        }\n\n        // Handle cases where checksum might be stored as 7 digits or with different formatting\n        if (digits == 0) {\n            // If no digits found, try alternative parsing\n            String checksumStr = new String(header, CHKSUM_OFFSET, CHKSUMLEN).trim();\n            if (checksumStr.length() > 0) {\n                try {\n                    storedSum = Long.parseLong(checksumStr.trim(), 8);\n                } catch (NumberFormatException e) {\n                    return false;\n                }\n            }\n        }\n\n        return storedSum == unsignedSum || storedSum == signedSum;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}