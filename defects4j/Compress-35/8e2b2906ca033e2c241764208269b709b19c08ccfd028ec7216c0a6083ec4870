{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    // First calculate the stored checksum\n    for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        byte b = header[i];\n        if ('0' <= b && b <= '7') {\n            storedSum = storedSum * 8 + b - '0';\n        } else if (b == ' ' || b == 0) {\n            // Skip spaces and null bytes in checksum field\n            continue;\n        } else {\n            // If we encounter invalid characters, treat checksum as invalid\n            return false;\n        }\n    }\n\n    // Now calculate the checksums with checksum field treated as spaces\n    for (int i = 0; i < header.length; i++) {\n        byte b = (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) ? ' ' : header[i];\n        unsignedSum += 0xff & b;\n        signedSum += b;\n    }\n\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}