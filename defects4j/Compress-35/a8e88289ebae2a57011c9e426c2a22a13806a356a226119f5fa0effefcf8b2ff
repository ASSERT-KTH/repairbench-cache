{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    // Parse the stored checksum (octal, up to 6 digits, ignore leading/trailing whitespace/NUL)\n    long storedSum = 0;\n    boolean gotDigit = false;\n    int digitCount = 0;\n    for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        byte b = header[i];\n        if (b >= '0' && b <= '7') {\n            gotDigit = true;\n            storedSum = (storedSum << 3) + (b - '0');\n            if (++digitCount >= 6) {\n                break;\n            }\n        } else if (gotDigit) {\n            // stop at first non\u2010octal after having seen digits\n            break;\n        }\n        // else skip leading whitespace/NUL\n    }\n    // Compute four variants of the checksum:\n    //  1) unsigned sum, treating the checksum field as spaces\n    //  2) signed   sum, treating the checksum field as spaces\n    //  3) unsigned sum, treating the checksum field as NULs\n    //  4) signed   sum, treating the checksum field as NULs\n    long sumUnsignedSpace = 0;\n    long sumSignedSpace   = 0;\n    long sumUnsignedNull  = 0;\n    long sumSignedNull    = 0;\n    for (int i = 0; i < header.length; i++) {\n        if (i >= CHKSUM_OFFSET && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            // checksum field: space (0x20) or NUL (0x00)\n            sumUnsignedSpace += ' ';\n            sumSignedSpace   += ' ';\n            // for NUL\u2010based checksum:\n            sumUnsignedNull  += 0;\n            sumSignedNull    += 0;\n        } else {\n            // outside checksum field: use actual byte\n            sumUnsignedSpace += header[i] & 0xFF;\n            sumSignedSpace   += header[i];\n            sumUnsignedNull  += header[i] & 0xFF;\n            sumSignedNull    += header[i];\n        }\n    }\n    return storedSum == sumUnsignedSpace\n        || storedSum == sumSignedSpace\n        || storedSum == sumUnsignedNull\n        || storedSum == sumSignedNull;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}