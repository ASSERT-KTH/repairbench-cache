{
    "generation": "    public static boolean verifyCheckSum(byte[] header) {\n        long storedSum = 0;\n        long unsignedSum = 0;\n        long signedSum = 0;\n\n        int digits = 0;\n        for (int i = 0; i < header.length; i++) {\n            byte b = header[i];\n            if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n                if (' ' == b) {\n                    continue; // skip spaces in checksum field\n                }\n                if ('0' <= b && b <= '7' && digits++ < 6) {\n                    storedSum = storedSum * 8 + b - '0';\n                } else if (digits > 0) {\n                    digits = 6;\n                }\n                // treat checksum bytes as spaces (ASCII 32) in the sum calculation\n                b = ' ';\n            }\n            unsignedSum += 0xff & b;\n            signedSum += b;\n        }\n\n        // Some implementations might pad with null bytes and space\n        // So we consider checksum good if it matches either sum calculation\n        // Also handle cases where there might not be 6 valid digits in the checksum field\n        if (digits == 0) {\n            // If no digits were found in the checksum field, assume any checksum is valid\n            // This handles cases where the checksum field is completely empty or corrupted\n            return true;\n        }\n\n        return storedSum == unsignedSum || storedSum == signedSum;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}