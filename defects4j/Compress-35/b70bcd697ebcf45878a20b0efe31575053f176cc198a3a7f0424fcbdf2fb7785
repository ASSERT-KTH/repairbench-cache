{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    // Parse stored checksum (\"the first six digits\", ignoring whitespace, see doc)\n    int digits = 0;\n    for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        byte b = header[i];\n        if (('0' <= b && b <= '7') && digits < 6) {\n            storedSum = storedSum * 8 + (b - '0');\n            digits++;\n        } else if (digits == 0 && (b == 0 || b == ' ')) {\n            continue; // skip leading whitespace\n        } else {\n            break; // stop at non-digit after some digits\n        }\n    }\n\n    // Now, when computing the sums, treat the 8 header checksum bytes as spaces (decimal 32)\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            b = ' ';\n        }\n        unsignedSum += 0xFF & b;\n        signedSum += b;\n    }\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}