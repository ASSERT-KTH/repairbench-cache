{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    int digits = 0;\n    boolean foundDigit = false;\n    // The offset/length are usually set as:\n    // CHKSUM_OFFSET = 148, CHKSUMLEN = 8\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            // Extract the checksum field for parsing, ignore any leading/trailing non-digits\n            if (digits == 0 && (b == 0x20 || b == 0)) {\n                // skip whitespace and/or NUL at the start\n            } else if ('0' <= b && b <= '7' && digits < 6) {\n                storedSum = storedSum * 8 + (b - '0');\n                digits++;\n                foundDigit = true;\n            } else if ((b == 0x20 || b == 0) && foundDigit) {\n                // encountered space/NUL after digits, finish reading\n                break;\n            }\n            // All CHKSUMLEN bytes must be treated as ASCII spaces for computing the checksum\n            b = 0x20;\n        }\n        unsignedSum += 0xff & b;\n        signedSum += b;\n    }\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}