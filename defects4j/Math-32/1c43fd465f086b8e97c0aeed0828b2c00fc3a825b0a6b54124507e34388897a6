{
    "generation": "/** {@inheritDoc} */\n@Override\nprotected void computeGeometricalProperties() {\n\n    final Vector2D[][] v = getVertices();\n\n    if (v.length == 0) {\n        // no boundary loops \u2192 either empty or full plane\n        if (isFull()) {\n            // covers the whole space\n            setSize(Double.POSITIVE_INFINITY);\n            setBarycenter(Vector2D.NaN);\n        } else {\n            // empty\n            setSize(0);\n            setBarycenter(new Vector2D(0, 0));\n        }\n    } else if (v[0][0] == null) {\n        // at least one open\u2010loop \u2192 infinite\n        setSize(Double.POSITIVE_INFINITY);\n        setBarycenter(Vector2D.NaN);\n    } else {\n        // all loops are closed \u2192 compute the usual area integrals\n        double sum  = 0;\n        double sumX = 0;\n        double sumY = 0;\n\n        for (Vector2D[] loop : v) {\n            double x1 = loop[loop.length - 1].getX();\n            double y1 = loop[loop.length - 1].getY();\n            for (final Vector2D point : loop) {\n                final double x0 = x1;\n                final double y0 = y1;\n                x1 = point.getX();\n                y1 = point.getY();\n                final double factor = x0 * y1 - y0 * x1;\n                sum  += factor;\n                sumX += factor * (x0 + x1);\n                sumY += factor * (y0 + y1);\n            }\n        }\n\n        if (sum < 0) {\n            // finite outside, infinite inside\n            setSize(Double.POSITIVE_INFINITY);\n            setBarycenter(Vector2D.NaN);\n        } else {\n            // finite polygon\n            setSize(sum / 2);\n            setBarycenter(new Vector2D(sumX / (3 * sum),\n                                       sumY / (3 * sum)));\n        }\n    }\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}