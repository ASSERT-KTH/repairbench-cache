{
    "generation": "private static boolean isReduceableFunctionExpression(Node n) {\n    if (!NodeUtil.isFunctionExpression(n)) {\n        return false;\n    }\n    Node parent = n;\n    while (parent = parent.getParent()) {\n        if (parent.isKind(Token.PROPERTY)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}