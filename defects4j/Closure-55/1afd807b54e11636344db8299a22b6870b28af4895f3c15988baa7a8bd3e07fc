{
    "generation": "private static boolean isReduceableFunctionExpression(Node n) {\n  // Only plain function expressions, not ES6 object\u2010literal methods or accessors.\n  if (!NodeUtil.isFunctionExpression(n)) {\n    return false;\n  }\n  Node parent = n.getParent();\n  if (parent != null) {\n    if (parent.isMemberFunctionDef()   // foo() {\u2026}\n        || parent.isGetterDef()        // get foo() {\u2026}\n        || parent.isSetterDef()) {     // set foo(x) {\u2026}\n      return false;\n    }\n  }\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}