{
    "generation": "private static boolean isReduceableFunctionExpression(Node n) {\n  if (n == null) {\n    return false;\n  }\n  // If it's already a function expression, return true.\n  if (NodeUtil.isFunctionExpression(n)) {\n    return true;\n  }\n  // Also consider functions defined as getters or setters (accessor methods)\n  Node parent = n.getParent();\n  return parent != null && (parent.isGetterDef() || parent.isSetterDef());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}