{
    "generation": "private static boolean isReduceableFunctionExpression(Node n) {\n  // Only true function\u2010expressions (not declarations) in the \u201cright\u201d contexts\n  if (!NodeUtil.isFunctionExpression(n)) {\n    return false;\n  }\n  // But never reduce ES6 method/getter/setter definitions in object literals.\n  Node parent = n.getParent();\n  if (parent.isMemberFunctionDef()\n      || parent.isGetterDef()\n      || parent.isSetterDef()\n      || parent.isComputedProp()) {\n    return false;\n  }\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}