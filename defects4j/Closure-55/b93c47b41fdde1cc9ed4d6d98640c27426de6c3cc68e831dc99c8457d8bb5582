{
    "generation": "private static boolean isReduceableFunctionExpression(Node n) {\n    if (n == null) {\n        return false;\n    }\n    if (NodeUtil.isFunctionExpression(n) || NodeUtil.isFunction(n)) {\n        return true;\n    }\n    if (n.isCall()) {\n        Node callee = n.getFirstChild();\n        return callee != null && (NodeUtil.isFunctionExpression(callee) || NodeUtil.isFunction(callee));\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}