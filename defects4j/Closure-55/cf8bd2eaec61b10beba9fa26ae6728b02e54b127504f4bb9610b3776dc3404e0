{
    "generation": "  private static boolean isReduceableFunctionExpression(Node n) {\n    if (!NodeUtil.isFunctionExpression(n)) {\n      return false;\n    }\n    Node parent = n.getParent();\n    if (parent != null) {\n      int parentType = parent.getToken();\n      if (parentType == Token.GETTER_DEF || parentType == Token.SETTER_DEF) {\n        return false;\n      }\n    }\n    return true;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}