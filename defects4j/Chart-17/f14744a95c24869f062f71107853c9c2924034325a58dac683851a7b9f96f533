{
    "generation": "/**\n * Returns a clone of the time series.\n * <P>\n * Notes:\n * <ul>\n *   <li>no need to clone the domain and range descriptions, since String \n *     object is immutable;</li>\n *   <li>we pass over to the more general method clone(start, end), unless\n *     the series is empty;</li>\n * </ul>\n *\n * @return A clone of the time series.\n * \n * @throws CloneNotSupportedException not thrown by this class, but \n *         subclasses may differ.\n */\n@Override\npublic Object clone() throws CloneNotSupportedException {\n    int count = getItemCount();\n    if (count > 0) {\n        // non\u2010empty: delegate to createCopy to get a deep clone of the data list\n        return createCopy(0, count - 1);\n    }\n    else {\n        // empty: do a shallow clone and then replace the shared list with a new one\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        return copy;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}