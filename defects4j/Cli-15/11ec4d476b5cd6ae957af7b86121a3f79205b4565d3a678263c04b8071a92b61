{
    "generation": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = defaultValues;\n        }\n\n        // augment the list with the default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        }\n\n        // if there are default values available and the current list is smaller than defaults\n        List defaults = (List) this.defaultValues.get(option);\n        if (defaults != null && !defaults.isEmpty()) {\n            if (valueList == null) {\n                valueList = new ArrayList();\n            }\n            // add missing defaults to reach the required number of arguments\n            int needed = defaults.size() - valueList.size();\n            if (needed > 0) {\n                for (int i = valueList.size(); i < defaults.size(); i++) {\n                    valueList.add(defaults.get(i));\n                }\n            }\n        }\n        \n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}