{
    "generation": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = defaultValues;\n        }\n\n        // augment the list with the default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        }\n\n        // if there are more default values as specified, add them to\n        // the list.\n        if (valueList != null && !valueList.isEmpty() && this.defaultValues.containsKey(option)) {\n            List defaults = (List) this.defaultValues.get(option);\n            if (defaults != null && !defaults.isEmpty()) {\n                // Find how many defaults we need to add\n                int defIndex = valueList.size();\n                // Copy the list to avoid modifying the original\n                valueList = new ArrayList(valueList);\n                // Add remaining defaults\n                while (defIndex < defaults.size()) {\n                    valueList.add(defaults.get(defIndex));\n                    defIndex++;\n                }\n            }\n        }\n\n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}