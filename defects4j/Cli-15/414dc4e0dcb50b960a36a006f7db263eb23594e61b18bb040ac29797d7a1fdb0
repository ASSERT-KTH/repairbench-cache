{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n    \n    if (valueList == null) {\n        // if no values were provided, use all default values\n        valueList = defaultValues;\n    } else if (defaultValues != null && !defaultValues.isEmpty()) {\n        // if we have values but there are also default values,\n        // create a new list containing the provided values\n        List newValueList = new ArrayList(valueList);\n        \n        // add any remaining default values that aren't already used\n        for (int i = valueList.size(); i < defaultValues.size(); i++) {\n            newValueList.add(defaultValues.get(i));\n        }\n        \n        valueList = newValueList;\n    }\n    \n    // if still no values, check the class-level default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = (List) this.defaultValues.get(option);\n    }\n    \n    return valueList == null ? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}