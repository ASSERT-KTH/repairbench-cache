{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // if there are no parsed values, just use defaultValues or from this.defaultValues\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = defaultValues;\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        }\n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }\n\n    // If there are parsed values, we may still need to add more default values to reach the max arity\n    int parsedCount = valueList.size();\n    List defList = null;\n    if (defaultValues != null && !defaultValues.isEmpty()) {\n        defList = defaultValues;\n    } else {\n        defList = (List) this.defaultValues.get(option);\n    }\n\n    if (defList != null && !defList.isEmpty()) {\n        // Figure out how many more values we need, if any\n        int required = 0;\n        if (option instanceof CommandLineOption) {\n            Argument argument = ((CommandLineOption) option).getArgument();\n            if (argument != null && argument.getMaximum() != Integer.MAX_VALUE) {\n                required = argument.getMaximum() - valueList.size();\n            }\n        }\n        // fall back for DefaultOption (as seen in CLI2)\n        if (required <= 0 && option.getArgument() != null && option.getArgument().getMaximum() != Integer.MAX_VALUE) {\n            required = option.getArgument().getMaximum() - valueList.size();\n        }\n        if (required > 0) {\n            List result = new ArrayList(valueList);\n            int toAdd = Math.min(defList.size(), required);\n            for (int i = defList.size() - toAdd; i < defList.size(); i++) {\n                result.add(defList.get(i));\n            }\n            return result;\n        }\n    }\n    return valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}