{
    "generation": "public List getValues(final Option option,\n                      List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // grab the correct default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = defaultValues;\n    }\n\n    // augment the list with the default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = (List) this.defaultValues.get(option);\n    }\n\n    // if there are more default values as specified, add them to the list.\n    if (valueList != null && option != null && option.getArgument() != null) {\n        int max = ((Argument) option.getArgument()).getMaximum();\n        // copy the list first\n        valueList = new ArrayList(valueList);\n        List defaultArgumentValues = (List) this.defaultValues.get(option);\n        if (defaultArgumentValues != null && valueList.size() < max) {\n            int nbToAdd = Math.min(max - valueList.size(), defaultArgumentValues.size());\n            valueList.addAll(defaultArgumentValues.subList(0, nbToAdd));\n        }\n    }\n\n    return valueList == null ? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}