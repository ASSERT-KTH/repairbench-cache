{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // If valueList is null, try to get defaults from defaultValues or this.defaultValues\n    if (valueList == null || valueList.isEmpty()) {\n        // Try supplied defaultValues first\n        List computedDefaults = defaultValues;\n        if ((computedDefaults == null || computedDefaults.isEmpty()) && this.defaultValues != null) {\n            computedDefaults = (List) this.defaultValues.get(option);\n        }\n        // Compose result: any present value(s) plus missing defaults\n        if (computedDefaults == null || computedDefaults.isEmpty()) {\n            return valueList == null ? Collections.EMPTY_LIST : valueList;\n        } else {\n            return new ArrayList(computedDefaults);\n        }\n    } else {\n        // Value list has some user values, check if more needed from defaults\n        int userCount = valueList.size();\n        int max = Integer.MAX_VALUE;\n        if (option.getArgument() != null) {\n            if (option.getArgument().getMaximum() != null) {\n                max = option.getArgument().getMaximum().intValue();\n            }\n        }\n        List result = new ArrayList(valueList);\n        int totalNeeded = Math.min(max, result.size());\n        List computedDefaults = defaultValues;\n        if ((computedDefaults == null || computedDefaults.isEmpty()) && this.defaultValues != null) {\n            computedDefaults = (List) this.defaultValues.get(option);\n        }\n        if (computedDefaults != null && result.size() < max) {\n            // Only append enough defaults to reach the maximum\n            int remaining = max - result.size();\n            int i = 0;\n            for (Iterator it = computedDefaults.iterator(); it.hasNext() && i < remaining; i++) {\n                result.add(it.next());\n            }\n        }\n        return result;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}