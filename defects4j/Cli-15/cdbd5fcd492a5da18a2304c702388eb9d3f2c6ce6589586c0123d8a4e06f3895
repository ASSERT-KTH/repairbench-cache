{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // Get any user\u2010supplied values\n    List valueList = (List) values.get(option);\n\n    // If the user supplied no values, fall back to the declared defaults\n    if (valueList == null || valueList.isEmpty()) {\n        if (defaultValues != null && !defaultValues.isEmpty()) {\n            // use the builder\u2010supplied defaults\n            return new ArrayList(defaultValues);\n        }\n        // fall back to parser\u2010side defaults\n        List parserDefaults = (List) this.defaultValues.get(option);\n        if (parserDefaults != null && !parserDefaults.isEmpty()) {\n            return new ArrayList(parserDefaults);\n        }\n        // no values anywhere\n        return Collections.EMPTY_LIST;\n    }\n\n    // User did supply values; if there are declared defaults and a maximum\n    // count, fill in any missing trailing arguments from the defaults\n    if (defaultValues != null && !defaultValues.isEmpty()) {\n        Argument arg = option.getArgument();\n        int max = (arg != null ? arg.getMaximum() : -1);\n        // treat negative max as \"unbounded\" but only pull as many defaults as exist\n        if (max < 0) {\n            max = defaultValues.size();\n        }\n        int supplied = valueList.size();\n        if (supplied < max) {\n            List augmented = new ArrayList(valueList);\n            for (int i = supplied; i < max && i < defaultValues.size(); i++) {\n                augmented.add(defaultValues.get(i));\n            }\n            valueList = augmented;\n        }\n    }\n\n    return valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}