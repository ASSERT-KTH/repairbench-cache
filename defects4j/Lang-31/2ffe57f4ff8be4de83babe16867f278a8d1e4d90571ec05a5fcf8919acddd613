{
    "generation": "\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n\t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n\t\t\treturn false;\n\t\t}\n\t\tint csLength = cs.length();\n\t\tint searchLength = searchChars.length;\n\t\tint i = 0;\n\t\twhile (i < csLength) {\n\t\t\tchar ch = cs.charAt(i);\n\t\t\tif (Character.isHighSurrogate(ch) && (i + 1 < csLength)) {\n\t\t\t\tchar next = cs.charAt(i + 1);\n\t\t\t\tif (Character.isLowSurrogate(next)) {\n\t\t\t\t\t// Skip the supplementary character\n\t\t\t\t\ti += 2;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Check current character\n\t\t\tfor (int j = 0; j < searchLength; j++) {\n\t\t\t\tif (searchChars[j] == ch) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn false;\n\t}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}