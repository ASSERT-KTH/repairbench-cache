{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; ) {\n            char ch = cs.charAt(i);\n            // Handle surrogate pairs (supplementary characters)\n            if (Character.isHighSurrogate(ch) && i + 1 < csLength) {\n                char nextChar = cs.charAt(i + 1);\n                if (Character.isLowSurrogate(nextChar)) {\n                    // Check if the surrogate pair matches any in searchChars\n                    boolean found = false;\n                    for (int j = 0; j < searchLength; ) {\n                        char searchChar = searchChars[j];\n                        if (Character.isHighSurrogate(searchChar) && j + 1 < searchLength) {\n                            char nextSearchChar = searchChars[j + 1];\n                            if (Character.isLowSurrogate(nextSearchChar) &&\n                                ch == searchChar && nextChar == nextSearchChar) {\n                                return true;\n                            }\n                            j += 2;\n                        } else {\n                            j++;\n                        }\n                    }\n                    i += 2;\n                    continue;\n                }\n            }\n            // Check for regular characters\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n            i++;\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}