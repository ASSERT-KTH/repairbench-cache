{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            // Check if current character is a high surrogate\n            if (Character.isHighSurrogate(ch)) {\n                // If it's the last character, it's invalid, so we can skip\n                if (i + 1 >= csLength) {\n                    continue;\n                }\n                char nextChar = cs.charAt(i + 1);\n                if (Character.isLowSurrogate(nextChar)) {\n                    // Combine the surrogate pair and check against searchChars\n                    int codePoint = Character.toCodePoint(ch, nextChar);\n                    for (int j = 0; j < searchLength; j++) {\n                        if (Character.isHighSurrogate(searchChars[j])) {\n                            if (j + 1 < searchLength) {\n                                char nextSearchChar = searchChars[j + 1];\n                                if (Character.isLowSurrogate(nextSearchChar)) {\n                                    int searchCodePoint = Character.toCodePoint(searchChars[j], nextSearchChar);\n                                    if (codePoint == searchCodePoint) {\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else if (ch == searchChars[j] || nextChar == searchChars[j]) {\n                            return true;\n                        }\n                    }\n                    i++; // Skip the next character since we've processed it as a surrogate pair\n                }\n            } else {\n                // Regular BMP character check\n                for (int j = 0; j < searchLength; j++) {\n                    if (searchChars[j] == ch) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}