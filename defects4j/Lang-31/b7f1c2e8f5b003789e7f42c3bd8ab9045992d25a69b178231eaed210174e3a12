{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    // Check if we're dealing with a supplementary character\n                    if (Character.isHighSurrogate(ch)) {\n                        if (j == searchLength - 1) {\n                            // missing the low surrogate, so this is not a match\n                            continue;\n                        }\n                        if (i < csLength - 1 && searchChars[j + 1] == cs.charAt(i + 1)) {\n                            return true;\n                        }\n                    } else if (!Character.isLowSurrogate(ch)) {\n                        // ch is in the Basic Multilingual Plane\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}