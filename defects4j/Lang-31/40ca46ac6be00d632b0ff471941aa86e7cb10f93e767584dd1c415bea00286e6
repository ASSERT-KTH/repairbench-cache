{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLength; j++) {\n            if (ch == searchChars[j]) {\n                // Check for supplementary characters\n                if (Character.isHighSurrogate(ch) && (i + 1) < csLength && Character.isLowSurrogate(cs.charAt(i + 1))) {\n                    char[] supplementaryChar = { ch, cs.charAt(i + 1) };\n                    for (int k = 0; k < searchLength; k++) {\n                        if (searchChars[k] == ch && (k + 1) < searchLength && searchChars[k + 1] == cs.charAt(i + 1)) {\n                            return true;\n                        }\n                    }\n                } else {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}