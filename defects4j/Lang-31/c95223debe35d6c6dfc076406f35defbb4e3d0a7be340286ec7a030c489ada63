{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            if (Character.isHighSurrogate(ch)) {\n                // Handle supplementary characters (surrogate pairs)\n                if (i + 1 < csLength) {\n                    char lowSurrogate = cs.charAt(i + 1);\n                    if (Character.isLowSurrogate(lowSurrogate)) {\n                        // Check if the surrogate pair matches any in searchChars\n                        for (int j = 0; j < searchLength; j++) {\n                            if (searchChars[j] == ch && j + 1 < searchLength &&\n                                searchChars[j + 1] == lowSurrogate) {\n                                return true;\n                            }\n                        }\n                        i++; // Skip the low surrogate\n                        continue;\n                    }\n                }\n            }\n            // Check for regular characters\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}