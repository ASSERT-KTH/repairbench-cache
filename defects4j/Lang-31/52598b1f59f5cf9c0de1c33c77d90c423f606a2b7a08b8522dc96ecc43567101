{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLength; j++) {\n            if (searchChars[j] == ch) {\n                // Check if this is the first part of a supplementary character\n                if (i + 1 < csLength && Character.isHighSurrogate(ch) && Character.isLowSurrogate(cs.charAt(i + 1))) {\n                    // It's a supplementary character, check if the next char matches\n                    if (j + 1 < searchLength && searchChars[j + 1] == cs.charAt(i + 1)) {\n                        return true;\n                    }\n                } else if (!Character.isHighSurrogate(ch)) {\n                    // It's a BMP character or a low surrogate that doesn't form a pair\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}