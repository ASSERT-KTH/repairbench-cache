{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n\n    // handle supplementary (surrogate pair) case:\n    for (int i = 0; i < csLength; ) {\n        int cp = Character.codePointAt(cs, i);\n        int cpCharCount = Character.charCount(cp);\n        if (cpCharCount == 2) { // supplementary character\n            // try to match searchChars sequence as a surrogate pair\n            for (int j = 0; j < searchLength - 1; j++) {\n                if (Character.isSurrogatePair(searchChars[j], searchChars[j+1])) {\n                    int searchCp = Character.toCodePoint(searchChars[j], searchChars[j+1]);\n                    if (cp == searchCp) {\n                        return true;\n                    }\n                }\n            }\n        } else { // BMP\n            char ch = (char) cp;\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n        i += cpCharCount;\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}