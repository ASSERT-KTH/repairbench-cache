{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            if (Character.isHighSurrogate(ch)) {\n                // handle supplementary characters: combine surrogate pair\n                if (i + 1 < csLength) {\n                    char nextChar = cs.charAt(i + 1);\n                    if (Character.isLowSurrogate(nextChar)) {\n                        // form the supplementary character\n                        String supplementaryChar = String.valueOf(new char[]{ch, nextChar});\n                        for (int j = 0; j < searchLength; j++) {\n                            // check if searchChars has a surrogate pair that matches\n                            if (j + 1 < searchLength &&\n                                Character.isHighSurrogate(searchChars[j]) &&\n                                Character.isLowSurrogate(searchChars[j + 1])) {\n                                String supplementaryCharInSearch = String.valueOf(new char[]{searchChars[j], searchChars[j + 1]});\n                                if (supplementaryChar.equals(supplementaryCharInSearch)) {\n                                    return true;\n                                }\n                            }\n                        }\n                        i++; // skip the low surrogate\n                        continue;\n                    }\n                }\n            }\n            // handle regular BMP characters\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n                // check if current search char is part of a surrogate pair that matches\n                if (Character.isHighSurrogate(searchChars[j]) &&\n                    j + 1 < searchLength &&\n                    Character.isLowSurrogate(searchChars[j + 1])) {\n                    String supplementaryCharInSearch = String.valueOf(new char[]{searchChars[j], searchChars[j + 1]});\n                    if (supplementaryCharInSearch.length() == 2 &&\n                        ch == supplementaryCharInSearch.charAt(0) &&\n                        i + 1 < csLength &&\n                        cs.charAt(i + 1) == supplementaryCharInSearch.charAt(1)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}