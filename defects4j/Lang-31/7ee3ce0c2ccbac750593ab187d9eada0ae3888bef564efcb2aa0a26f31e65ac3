{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n\n    Set<Integer> searchCodePoints = new HashSet<>();\n    for (int j = 0; j < searchChars.length; ) {\n        if (j < searchChars.length - 1 && Character.isHighSurrogate(searchChars[j])) {\n            char high = searchChars[j];\n            char low = searchChars[j + 1];\n            if (Character.isLowSurrogate(low)) {\n                int codePoint = Character.toCodePoint(high, low);\n                searchCodePoints.add(codePoint);\n                j += 2;\n                continue;\n            }\n        }\n        int codePoint = Character.codePointAt(searchChars, j);\n        searchCodePoints.add(codePoint);\n        j += Character.charCount(codePoint);\n    }\n\n    for (int i = 0; i < cs.length(); ) {\n        int cp = Character.codePointAt(cs, i);\n        if (searchCodePoints.contains(cp)) {\n            return true;\n        }\n        i += Character.charCount(cp);\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}