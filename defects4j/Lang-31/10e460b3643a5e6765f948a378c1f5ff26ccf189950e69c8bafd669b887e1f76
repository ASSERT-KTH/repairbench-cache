{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    Set<Character> searchSet = new LinkedHashSet<>();\n    for (char c : searchChars) {\n        searchSet.add(c);\n    }\n    int csLength = cs.length();\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        if (i < csLength - 1 && Character.isHighSurrogate(ch)) {\n            char nextCh = cs.charAt(i + 1);\n            if (Character.isLowSurrogate(nextCh)) {\n                // Check for the supplementary character\n                String supplementary = new String(new char[]{ch, nextCh});\n                for (char sc : searchChars) {\n                    if (Character.toString(sc).equals(supplementary)) {\n                        return true;\n                    }\n                }\n                i++; // Skip the next char as it's part of the supplementary\n                continue;\n            }\n        }\n        if (searchSet.contains(ch)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}