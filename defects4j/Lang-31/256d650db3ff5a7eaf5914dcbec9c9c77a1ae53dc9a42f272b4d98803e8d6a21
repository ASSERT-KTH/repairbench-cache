{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            // Check if this is the first of a surrogate pair\n            if (Character.isHighSurrogate(ch) && i < csLength - 1) {\n                char nextChar = cs.charAt(i + 1);\n                if (Character.isLowSurrogate(nextChar)) {\n                    // This is a surrogate pair representing a supplementary character\n                    // Convert to code point\n                    int codePoint = Character.toCodePoint(ch, nextChar);\n                    // Check against all search characters\n                    for (int j = 0; j < searchLength; j++) {\n                        char searchChar = searchChars[j];\n                        if (Character.isHighSurrogate(searchChar) && j < searchLength - 1) {\n                            char nextSearchChar = searchChars[j + 1];\n                            if (Character.isLowSurrogate(nextSearchChar)) {\n                                int searchCodePoint = Character.toCodePoint(searchChar, nextSearchChar);\n                                if (codePoint == searchCodePoint) {\n                                    return true;\n                                }\n                                // Skip the next character as we've already processed it as part of the surrogate pair\n                                j++;\n                            }\n                        } else if (ch == searchChar) {\n                            return true;\n                        }\n                    }\n                    i++; // Skip the next character as we've already processed it as part of the surrogate pair\n                    continue;\n                }\n            }\n            // Regular character comparison\n            for (int j = 0; j < searchLength; j++) {\n                char searchChar = searchChars[j];\n                if (Character.isHighSurrogate(searchChar) && j < searchLength - 1) {\n                    char nextSearchChar = searchChars[j + 1];\n                    if (Character.isLowSurrogate(nextSearchChar)) {\n                        int searchCodePoint = Character.toCodePoint(searchChar, nextSearchChar);\n                        int csCodePoint;\n                        if (Character.isHighSurrogate(ch) && i < csLength - 1) {\n                            char nextCsChar = cs.charAt(i + 1);\n                            if (Character.isLowSurrogate(nextCsChar)) {\n                                csCodePoint = Character.toCodePoint(ch, nextCsChar);\n                                if (searchCodePoint == csCodePoint) {\n                                    return true;\n                                }\n                            }\n                        }\n                        j++;\n                    }\n                } else if (ch == searchChar) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}