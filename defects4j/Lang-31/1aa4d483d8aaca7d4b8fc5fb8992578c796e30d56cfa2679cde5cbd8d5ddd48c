{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            // Check if character is a high surrogate (start of supplementary character)\n            if (Character.isHighSurrogate(ch) && i + 1 < csLength) {\n                char lowSurrogate = cs.charAt(i + 1);\n                if (Character.isLowSurrogate(lowSurrogate)) {\n                    // This is a supplementary character (two chars)\n                    int codePoint = Character.toCodePoint(ch, lowSurrogate);\n                    for (int j = 0; j < searchLength; j++) {\n                        // Check if search char is also part of a surrogate pair\n                        if (Character.isHighSurrogate(searchChars[j]) && j + 1 < searchLength) {\n                            char searchLowSurrogate = searchChars[j + 1];\n                            if (Character.isLowSurrogate(searchLowSurrogate)) {\n                                int searchCodePoint = Character.toCodePoint(searchChars[j], searchLowSurrogate);\n                                if (codePoint == searchCodePoint) {\n                                    return true;\n                                }\n                                j++; // skip next low surrogate in search array\n                            }\n                        }\n                        // Compare as normal characters if not surrogate pair\n                        if (searchChars[j] == ch || searchChars[j] == lowSurrogate) {\n                            return true;\n                        }\n                    }\n                    i++; // skip next low surrogate in input string\n                    continue;\n                }\n            }\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}