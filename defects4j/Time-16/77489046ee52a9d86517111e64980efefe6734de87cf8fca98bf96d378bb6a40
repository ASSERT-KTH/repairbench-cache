{
    "generation": "public int parseInto(ReadWritableInstant instant, String text, int position) {\n    DateTimeParser parser = requireParser();\n    if (instant == null) {\n        throw new IllegalArgumentException(\"Instant must not be null\");\n    }\n\n    long instantMillis = instant.getMillis();\n    Chronology chrono = instant.getChronology();\n    long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n    chrono = selectChronology(chrono);\n\n    // Use the instant's year as the default year, as specified in the method's contract\n    int defaultYear = iDefaultYear; // preserve original\n    if (parser.isParser()) {\n        DateTimeParserBucket testBucket = new DateTimeParserBucket(\n            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n        // Only try set defaultYear to instant's year if not explicitly set via withDefaultYear\n        // If iDefaultYear is not set (i.e. default of 2000), or if defaultYear == 2000, set to instant's year\n        // However, if the user supplied .withDefaultYear(x), then always use x.\n        if (iDefaultYear == 2000) {\n            // mimic original Joda behavior: only override defaultYear if not set explicitly by user\n            DateTimeField yearField = chrono.year();\n            defaultYear = yearField.get(instantMillis);\n        }\n    }\n\n    DateTimeParserBucket bucket = new DateTimeParserBucket(\n        instantLocal, chrono, iLocale, iPivotYear, defaultYear);\n    int newPos = parser.parseInto(bucket, text, position);\n    // Only set millis if parsing (possibly partial) succeeds\n    instant.setMillis(bucket.computeMillis(false, text));\n    if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n        int parsedOffset = bucket.getOffsetInteger();\n        DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n        chrono = chrono.withZone(parsedZone);\n    } else if (bucket.getZone() != null) {\n        chrono = chrono.withZone(bucket.getZone());\n    }\n    instant.setChronology(chrono);\n    if (iZone != null) {\n        instant.setZone(iZone);\n    }\n    return newPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}