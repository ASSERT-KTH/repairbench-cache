{
    "generation": "    public int parseInto(ReadWritableInstant instant, String text, int position) {\n        DateTimeParser parser = requireParser();\n        if (instant == null) {\n            throw new IllegalArgumentException(\"Instant must not be null\");\n        }\n\n        long instantMillis = instant.getMillis();\n        Chronology chrono = instant.getChronology();\n        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n        chrono = selectChronology(chrono);\n\n        DateTimeParserBucket bucket = new DateTimeParserBucket(\n            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n        // Set the initial field values from the instant to ensure not parsed fields keep their original values\n        bucket.saveField(DateTimeFieldType.year(), instant.getChronology().year().get(instantMillis));\n        bucket.saveField(DateTimeFieldType.dayOfYear(), instant.getChronology().dayOfYear().get(instantMillis));\n        bucket.saveField(DateTimeFieldType.monthOfYear(), instant.getChronology().monthOfYear().get(instantMillis));\n        bucket.saveField(DateTimeFieldType.dayOfMonth(), instant.getChronology().dayOfMonth().get(instantMillis));\n        bucket.saveField(DateTimeFieldType.hourOfDay(), instant.getChronology().hourOfDay().get(instantMillis));\n        bucket.saveField(DateTimeFieldType.minuteOfHour(), instant.getChronology().minuteOfHour().get(instantMillis));\n        bucket.saveField(DateTimeFieldType.secondOfMinute(), instant.getChronology().secondOfMinute().get(instantMillis));\n        bucket.saveField(DateTimeFieldType.millisOfSecond(), instant.getChronology().millisOfSecond().get(instantMillis));\n\n        int newPos = parser.parseInto(bucket, text, position);\n        instant.setMillis(bucket.computeMillis(false, text));\n        if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n            int parsedOffset = bucket.getOffsetInteger();\n            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n            chrono = chrono.withZone(parsedZone);\n        } else if (bucket.getZone() != null) {\n            chrono = chrono.withZone(bucket.getZone());\n        }\n        instant.setChronology(chrono);\n        if (iZone != null) {\n            instant.setZone(iZone);\n        }\n        return newPos;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}