{
    "generation": "    @Override\n    public int translate(CharSequence input, int index, Writer out) throws IOException {\n        int seqEnd = input.length();\n        if (index < seqEnd - 1 && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n            int start = index + 2;\n            boolean isHex = false;\n\n            if (start < seqEnd && (input.charAt(start) == 'x' || input.charAt(start) == 'X')) {\n                isHex = true;\n                start++;\n            }\n\n            int end = start;\n            while (end < seqEnd && input.charAt(end) != ';') {\n                end++;\n            }\n\n            String entityContent = input.subSequence(start, end).toString();\n            try {\n                int entityValue = isHex ? Integer.parseInt(entityContent, 16) : Integer.parseInt(entityContent, 10);\n                \n                if (entityValue > 0xFFFF) {\n                    char[] chrs = Character.toChars(entityValue);\n                    out.write(chrs[0]);\n                    out.write(chrs[1]);\n                } else {\n                    out.write(entityValue);\n                }\n            } catch (NumberFormatException nfe) {\n                System.err.println(\"FAIL: \" + entityContent + \"[\" + start + \"]\" + \"[\" + end + \"]\");\n                return 0;\n            }\n\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        }\n        return 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}