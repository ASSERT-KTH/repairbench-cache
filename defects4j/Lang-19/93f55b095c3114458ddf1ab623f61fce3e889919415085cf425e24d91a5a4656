{
    "generation": "    @Override\n    public int translate(CharSequence input, int index, Writer out) throws IOException {\n        int seqEnd = input.length();\n        if (input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {\n            int start = index + 2;\n            boolean isHex = false;\n\n            char firstChar = input.charAt(start);\n            if (firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n\n            int end = start;\n            if (isHex) {\n                while (end < seqEnd && \n                       (Character.toUpperCase(input.charAt(end)) >= 'A' && Character.toUpperCase(input.charAt(end)) <= 'F' \n                        || input.charAt(end) >= '0' && input.charAt(end) <= '9')) {\n                    end++;\n                }\n            } else {\n                while (end < seqEnd && Character.isDigit(input.charAt(end))) {\n                    end++;\n                }\n            }\n\n            if (start == end) {\n                return 0;\n            }\n\n            String entityStr = input.subSequence(start, end).toString();\n            int entityValue;\n            try {\n                if (isHex) {\n                    entityValue = Integer.parseInt(entityStr, 16);\n                } else {\n                    entityValue = Integer.parseInt(entityStr, 10);\n                }\n            } catch (NumberFormatException nfe) {\n                System.err.println(\"FAIL: \" + entityStr + \"[\" + start +\"][\"+ end +\"]\");\n                return 0;\n            }\n\n            if (entityValue > 0xFFFF) {\n                char[] chrs = Character.toChars(entityValue);\n                out.write(chrs[0]);\n                out.write(chrs[1]);\n            } else {\n                out.write(entityValue);\n            }\n\n            return 2 + (end - (isHex ? (index + 3) : (index + 2))) + 1;\n        }\n        return 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}