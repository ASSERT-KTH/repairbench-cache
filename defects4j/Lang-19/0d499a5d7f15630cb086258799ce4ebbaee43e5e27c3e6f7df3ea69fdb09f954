{
    "generation": "@Override\npublic int translate(CharSequence input, int index, Writer out) throws IOException {\n    int seqEnd = input.length();\n    if (index + 1 >= seqEnd) {\n        return 0;\n    }\n    if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n        int start = index + 2;\n        boolean isHex = false;\n\n        if (start >= seqEnd) {\n            return 0;\n        }\n        char firstChar = input.charAt(start);\n        if (firstChar == 'x' || firstChar == 'X') {\n            start++;\n            isHex = true;\n\n            if (start >= seqEnd) {\n                return 0;\n            }\n        }\n\n        int end = start;\n        while (end < seqEnd && input.charAt(end) != ';') {\n            end++;\n        }\n        if (end > start) {\n            try {\n                String entityStr = input.subSequence(start, end).toString();\n                int entityValue;\n                if (isHex) {\n                    entityValue = Integer.parseInt(entityStr, 16);\n                } else {\n                    entityValue = Integer.parseInt(entityStr, 10);\n                }\n                \n                if (entityValue <= 0xFFFF) {\n                    char ch = (char) entityValue;\n                    out.write(ch);\n                    return end - index + 1;\n                } else {\n                    char[] chrs = Character.toChars(entityValue);\n                    out.write(chrs[0]);\n                    out.write(chrs[1]);\n                    return 2 + (end - start) + (isHex ? 1 : 0);\n                }\n            } catch (NumberFormatException nfe) {\n                System.err.println(\"FAIL: \" + input.subSequence(start, end) + \"[\" + start + \"][\" + end + \"]\");\n            }\n        }\n    }\n    return 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}