{
    "generation": "    @Override\n    public int translate(CharSequence input, int index, Writer out) throws IOException {\n        if (input.length() - index < 2 || input.charAt(index) != '&' || input.charAt(index + 1) != '#') {\n            return 0;\n        }\n        int seqEnd = input.length();\n        int start = index + 2;\n        boolean isHex = false;\n\n        if (start < seqEnd) {\n            char firstChar = input.charAt(start);\n            if (firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n        }\n\n        int end = start;\n        while (end < seqEnd && input.charAt(end) != ';') {\n            end++;\n        }\n\n        if (end > start) {\n            String entity = input.subSequence(start, end).toString();\n            try {\n                int entityValue;\n                if (isHex) {\n                    entityValue = Integer.parseInt(entity, 16);\n                } else {\n                    entityValue = Integer.parseInt(entity, 10);\n                }\n\n                if (entityValue > 0xFFFF) {\n                    char[] chrs = Character.toChars(entityValue);\n                    out.write(chrs[0]);\n                    out.write(chrs[1]);\n                } else {\n                    out.write(entityValue);\n                }\n\n                return end - index + 1;\n            } catch (NumberFormatException nfe) {\n                // Ignore invalid entities\n            }\n        }\n        return 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}