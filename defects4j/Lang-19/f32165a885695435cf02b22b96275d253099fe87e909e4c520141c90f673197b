{
    "generation": "    @Override\n    public int translate(CharSequence input, int index, Writer out) throws IOException {\n        int seqEnd = input.length();\n        if (index < seqEnd - 1 && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n            int start = index + 2;\n            boolean isHex = false;\n\n            if (start >= seqEnd) {\n                return 0;\n            }\n\n            char firstChar = input.charAt(start);\n            if (firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n                if (start >= seqEnd) {\n                    return 0;\n                }\n            }\n\n            int end = start;\n\n            if (isHex) {\n                while (end < seqEnd) {\n                    char c = input.charAt(end);\n                    if ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F')) {\n                        end++;\n                    } else {\n                        break;\n                    }\n                }\n            } else {\n                while (end < seqEnd) {\n                    char c = input.charAt(end);\n                    if (c >= '0' && c <= '9') {\n                        end++;\n                    } else {\n                        break;\n                    }\n                }\n            }\n\n            int digitsEnd = end;\n\n            if (digitsEnd < seqEnd && input.charAt(digitsEnd) == ';') {\n                end++;\n            }\n\n            if (digitsEnd == start) {\n                return 0;\n            }\n\n            try {\n                String number = input.subSequence(start, digitsEnd).toString();\n                int entityValue = isHex ? Integer.parseInt(number, 16) : Integer.parseInt(number, 10);\n\n                if (entityValue > 0xFFFF) {\n                    char[] chrs = Character.toChars(entityValue);\n                    out.write(chrs[0]);\n                    out.write(chrs[1]);\n                } else {\n                    out.write(entityValue);\n                }\n\n                return 2 + (digitsEnd - start) + (isHex ? 1 : 0) + (end - digitsEnd);\n            } catch (NumberFormatException e) {\n                return 0;\n            }\n        }\n        return 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}