{
    "generation": "    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the first time period to copy (<code>null</code> not\n     *         permitted).\n     * @param end  the last time period to copy (<code>null</code> not\n     *         permitted).\n     *\n     * @return A time series containing a copy of this time series from start\n     *         until end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\n        throws CloneNotSupportedException {\n\n        if (start == null) {\n            throw new IllegalArgumentException(\"Null 'start' argument.\");\n        }\n        if (end == null) {\n            throw new IllegalArgumentException(\"Null 'end' argument.\");\n        }\n        if (start.compareTo(end) > 0) {\n            throw new IllegalArgumentException(\n                    \"Requires start on or before end.\");\n        }\n        boolean emptyRange = false;\n\n        // Determine the start index\n        int startIndex = getIndex(start);\n        if (startIndex < 0) {\n            startIndex = -(startIndex + 1); // Insertion point\n            // If start is after the last data item, the range is empty\n            if (startIndex == this.data.size()) {\n                emptyRange = true;\n            }\n        }\n\n        // Determine the end index\n        int endIndex = getIndex(end);\n        if (endIndex < 0) {             // end period is not in original series\n            endIndex = -(endIndex + 1); // this is insertion point (first item AFTER end period)\n            endIndex = endIndex - 1;    // so this is last item BEFORE or AT end period\n        }\n\n        // Check if the calculated range is logically empty\n        // Condition 1: The end period is before the first data item\n        if (endIndex < 0) {\n            emptyRange = true;\n        }\n\n        // Condition 2: The start index is after the end index\n        // (occurs when the specified range contains no data points from the series)\n        // Check this only if we haven't already determined the range is empty\n        // from the start index calculation or the end index calculation.\n        if (!emptyRange && startIndex > endIndex) {\n            emptyRange = true;\n        }\n\n        // If the range is empty, create and return an empty series\n        if (emptyRange) {\n            TimeSeries copy = (TimeSeries) super.clone();\n            copy.data = new java.util.ArrayList();\n            return copy;\n        }\n        // Otherwise, create a copy using the calculated indices\n        else {\n            // At this point, we know:\n            // - 0 <= startIndex <= endIndex < data.size()\n            return createCopy(startIndex, endIndex);\n        }\n\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}