{
    "generation": "/**\n * Creates a new timeseries by copying a subset of the data in this time\n * series.\n *\n * @param start  the first time period to copy (<code>null</code> not\n *         permitted).\n * @param end  the last time period to copy (<code>null</code> not\n *         permitted).\n *\n * @return A time series containing a copy of this time series from start\n *         until end.\n *\n * @throws CloneNotSupportedException if there is a cloning problem.\n */\npublic TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\n    throws CloneNotSupportedException {\n\n    if (start == null) {\n        throw new IllegalArgumentException(\"Null 'start' argument.\");\n    }\n    if (end == null) {\n        throw new IllegalArgumentException(\"Null 'end' argument.\");\n    }\n    if (start.compareTo(end) > 0) {\n        throw new IllegalArgumentException(\n                \"Requires start on or before end.\");\n    }\n\n    boolean emptyRange = false;\n\n    // locate the start index (or insertion point)\n    int startIndex = getIndex(start);\n    if (startIndex < 0) {\n        startIndex = -(startIndex + 1);\n        if (startIndex == this.data.size()) {\n            // start is after the last data item\n            emptyRange = true;\n        }\n    }\n\n    // locate the end index (or insertion point - 1)\n    int endIndex = getIndex(end);\n    if (endIndex < 0) {\n        endIndex = -(endIndex + 1) - 1;\n        if (endIndex < 0) {\n            // end is before the first data item\n            emptyRange = true;\n        }\n    }\n\n    // if the computed bounds are out of order, it's an empty range\n    if (startIndex > endIndex) {\n        emptyRange = true;\n    }\n\n    // return the result\n    if (emptyRange) {\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        return copy;\n    }\n    else {\n        return createCopy(startIndex, endIndex);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}