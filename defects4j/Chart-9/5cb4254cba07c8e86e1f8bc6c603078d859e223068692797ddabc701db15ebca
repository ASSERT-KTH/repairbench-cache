{
    "generation": "    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the first time period to copy (<code>null</code> not\n     *         permitted).\n     * @param end  the last time period to copy (<code>null</code> not\n     *         permitted).\n     *\n     * @return A time series containing a copy of this time series from start\n     *         until end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\n        throws CloneNotSupportedException {\n\n        if (start == null) {\n            throw new IllegalArgumentException(\"Null 'start' argument.\");\n        }\n        if (end == null) {\n            throw new IllegalArgumentException(\"Null 'end' argument.\");\n        }\n        if (start.compareTo(end) > 0) {\n            throw new IllegalArgumentException(\n                    \"Requires start on or before end.\");\n        }\n        int startIndex = getIndex(start);\n        int endIndex = getIndex(end);\n        if (startIndex < 0) {\n            startIndex = -(startIndex + 1);\n        }\n        if (endIndex < 0) {\n            endIndex = -(endIndex + 1) - 1;\n        }\n        if (endIndex < 0) {\n            endIndex = -1;\n        }\n        return createCopy(startIndex, endIndex);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}