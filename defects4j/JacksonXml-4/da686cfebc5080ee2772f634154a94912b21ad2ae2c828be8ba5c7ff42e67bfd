{
    "generation": "    protected void _serializeXmlNull(JsonGenerator jgen) throws IOException\n    {\n        // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly\n        //    configured root name.\n        // For root-level null values, if ObjectWriter.withRootName() was used,\n        // that name should be honored. Otherwise, a default root name for null\n        // (e.g., \"null\") should be used.\n        if (jgen instanceof ToXmlGenerator) {\n            ToXmlGenerator xmlGen = (ToXmlGenerator) jgen;\n            \n            // Check if a root name was configured via ObjectWriter.withRootName()\n            // This information is available in the SerializationConfig.\n            PropertyName configuredRootName = _config.getRootName();\n            \n            Object nameToUse;\n            if (configuredRootName != null && configuredRootName.hasSimpleName()) {\n                // If an explicit root name is configured and valid, use it.\n                nameToUse = configuredRootName;\n            } else {\n                // Otherwise, fall back to the default root name for null values.\n                nameToUse = ROOT_NAME_FOR_NULL;\n            }\n            \n            // _initWithRootName internally checks if a root name is already set\n            // on the generator (e.g., by ObjectWriter), and if so, it will not\n            // override it. This ensures that the explicitly configured root name\n            // always takes precedence if already propagated to the generator.\n            _initWithRootName(xmlGen, nameToUse);\n        }\n        super.serializeValue(jgen, null);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}