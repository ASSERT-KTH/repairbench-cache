{
    "generation": "    protected void _serializeXmlNull(JsonGenerator jgen) throws IOException\n    {\n        // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly\n        //    configured root name...\n        if (jgen instanceof ToXmlGenerator) {\n            ToXmlGenerator xmlGen = (ToXmlGenerator) jgen;\n            QName rootName = null;\n            // In BeanSerializerBase (which XmlBeanSerializerBase extends), _serializerProvider\n            // is initialized during the serializer's construction or `createContextual` phase.\n            // It holds the context for serialization, including configuration.\n            if (_serializerProvider != null) {\n                rootName = _serializerProvider.getConfig().getFullRootName();\n            }\n\n            // If an explicit root name was configured (e.g., via writer().withRootName()),\n            // use that name. Otherwise, fall back to the default name for nulls (\"null\").\n            QName nameToUse = (rootName != null) ? rootName : ROOT_NAME_FOR_NULL;\n            _initWithRootName(xmlGen, nameToUse);\n\n            // For XML output, a 'null' value (especially when it's the root element or a property\n            // that represents an object/collection) is typically represented as an empty element,\n            // like <name/>. The ToXmlGenerator expects `writeStartObject()` and `writeEndObject()`\n            // to produce such an empty element for a \"null\" value that is treated as an empty tag.\n            // Calling `super.serializeValue(jgen, null)` would typically translate to `jgen.writeNull()`,\n            // which might not produce the desired `<name/>` (it could throw, or produce `<null/>` if\n            // `_initWithRootName` is not respected by `writeNull()` in certain contexts).\n            // Explicitly writing an empty object ensures the correct XML structure.\n            jgen.writeStartObject();\n            jgen.writeEndObject();\n        } else {\n            // For non-XML generators (e.g., standard JSON), or if ToXmlGenerator casting fails,\n            // delegate to the superclass's handling of null, which typically means `jgen.writeNull()`.\n            super.serializeValue(jgen, null);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}