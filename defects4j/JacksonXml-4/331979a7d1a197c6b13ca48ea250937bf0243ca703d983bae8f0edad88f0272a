{
    "generation": "    protected void _serializeXmlNull(JsonGenerator jgen) throws IOException\n    {\n        // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly\n        //    configured root name...\n        if (jgen instanceof ToXmlGenerator) {\n            ToXmlGenerator xmlGen = (ToXmlGenerator) jgen;\n            \n            // 23-Jan-2017, tatu: Need to use configured root name if any\n            // If ObjectWriter.withRootName() was used, _config.getRootName() will return it.\n            // Otherwise, it will be null (or empty if set to empty string).\n            PropertyName rootName = _config.getRootName();\n\n            QName actualRootName;\n            if (rootName != null && !rootName.isEmpty()) {\n                // If an explicit root name is configured, use it.\n                // Convert PropertyName to QName, handling potential namespace and prefix.\n                String ns = rootName.getNamespace();\n                if (ns == null || ns.isEmpty()) {\n                    actualRootName = new QName(rootName.getSimpleName());\n                } else {\n                    // It's good practice to pass prefix if available, though getPrefix() can be null\n                    actualRootName = new QName(ns, rootName.getSimpleName(), rootName.getPrefix());\n                }\n            } else {\n                // Otherwise, fall back to the default \"null\" root name for XML nulls.\n                actualRootName = ROOT_NAME_FOR_NULL;\n            }\n            _initWithRootName(xmlGen, actualRootName);\n        }\n        // The base class's serialization for null (JsonGenerator.writeNull())\n        // along with ToXmlGenerator's handling of empty elements (when nothing is written between start/end object),\n        // and the outer serialization context (e.g. ObjectWriter) calling writeEndObject(),\n        // will correctly produce an empty element like \"<rootName/>\".\n        super.serializeValue(jgen, null);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}