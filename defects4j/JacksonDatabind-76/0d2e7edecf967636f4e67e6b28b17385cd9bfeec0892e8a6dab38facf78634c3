{
    "generation": "@SuppressWarnings(\"resource\")\nprotected Object deserializeUsingPropertyBasedWithUnwrapped(JsonParser p,\n        DeserializationContext ctxt)\n    throws IOException, JsonProcessingException\n{\n    final PropertyBasedCreator creator = _propertyBasedCreator;\n    // start building (collect creator params, object id, etc)\n    PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n\n    // we need to buffer any unwrapped properties\n    TokenBuffer tokens = new TokenBuffer(p, ctxt);\n    tokens.writeStartObject();\n\n    // iterate over all fields\n    for (JsonToken t = p.getCurrentToken(); t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n        String propName = p.getCurrentName();\n        p.nextToken(); // move to the value\n        // is this a creator property?\n        SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n        if (creatorProp != null) {\n            // assign but do NOT build early; keep collecting everything\n            buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));\n        } else if (buffer.readIdProperty(propName)) {\n            // handled Object Id property\n        } else {\n            // any regular property?\n            SettableBeanProperty prop = _beanProperties.find(propName);\n            if (prop != null) {\n                buffer.bufferProperty(prop, prop.deserialize(p, ctxt));\n            } else if (_ignorableProps != null && _ignorableProps.contains(propName)) {\n                handleIgnoredProperty(p, ctxt, handledType(), propName);\n            } else {\n                // unknown / unwrapped property; buffer it\n                tokens.writeFieldName(propName);\n                tokens.copyCurrentStructure(p);\n                if (_anySetter != null) {\n                    Object val = _anySetter.deserialize(p, ctxt);\n                    buffer.bufferAnyProperty(_anySetter, propName, val);\n                }\n            }\n        }\n    }\n\n    // close our token buffer\n    tokens.writeEndObject();\n\n    // now that we've seen all fields, build the instance\n    Object bean;\n    try {\n        bean = creator.build(ctxt, buffer);\n    } catch (Exception e) {\n        return wrapInstantiationProblem(e, ctxt);\n    }\n    // finally apply unwrapped values\n    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}