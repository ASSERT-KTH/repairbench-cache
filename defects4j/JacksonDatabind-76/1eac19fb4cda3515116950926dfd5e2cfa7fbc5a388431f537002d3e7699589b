{
    "generation": "@SuppressWarnings(\"resource\")\nprotected Object deserializeUsingPropertyBasedWithUnwrapped(JsonParser p,\n        DeserializationContext ctxt)\n    throws IOException, JsonProcessingException\n{\n    final PropertyBasedCreator creator = _propertyBasedCreator;\n    PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n\n    // buffer for all non\u2010creator props (unwrapped + regular) to replay later\n    TokenBuffer tokens = new TokenBuffer(p, ctxt);\n    tokens.writeStartObject();\n\n    JsonToken t = p.getCurrentToken();\n    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n        String propName = p.getCurrentName();\n        p.nextToken(); // move to the property value\n\n        // 1) Creator\u2010parameter?\n        SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n        if (creatorProp != null) {\n            if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {\n                // All creator params have now been seen \u2013 build intermediate bean/builder:\n                t = p.nextToken();\n                Object bean;\n                try {\n                    bean = creator.build(ctxt, buffer);\n                } catch (Exception e) {\n                    wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);\n                    continue;\n                }\n                // Copy any remaining fields into our token buffer:\n                while (t == JsonToken.FIELD_NAME) {\n                    tokens.copyCurrentStructure(p);\n                    t = p.nextToken();\n                }\n                tokens.writeEndObject();\n                // must be same raw type (no polymorphic builder+unwrapped)\n                if (bean.getClass() != _beanType.getRawClass()) {\n                    ctxt.reportMappingException(\n                        \"Can not create polymorphic instances with unwrapped values\");\n                    return null;\n                }\n                // Now replay all buffered tokens (unwrapped + other props) on the bean/builder:\n                return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n            }\n            continue;\n        }\n\n        // 2) Object\u2010id?\n        if (buffer.readIdProperty(propName)) {\n            continue;\n        }\n\n        // 3) All other properties go into the token buffer, to be handled by processUnwrapped:\n        tokens.writeFieldName(propName);\n        tokens.copyCurrentStructure(p);\n        // \"any\" setter still gets its values buffered\n        if (_anySetter != null) {\n            buffer.bufferAnyProperty(\n                _anySetter, propName, _anySetter.deserialize(p, ctxt));\n        }\n    }\n\n    // No early\u2010build: build (or builder) now that we've seen all creator params\n    Object bean;\n    try {\n        bean = creator.build(ctxt, buffer);\n    } catch (Exception e) {\n        return wrapInstantiationProblem(e, ctxt);\n    }\n    // And replay everything (unwrapped + other props)\n    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}