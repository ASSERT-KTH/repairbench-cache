{
    "generation": "    @SuppressWarnings(\"resource\")\n    protected Object deserializeUsingPropertyBasedWithUnwrapped(JsonParser p,\n    \t\tDeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        final PropertyBasedCreator creator = _propertyBasedCreator;\n        PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n\n        TokenBuffer tokens = new TokenBuffer(p, ctxt);\n        tokens.writeStartObject();\n\n        Object resultBean = null; // This will hold the bean once successfully built\n\n        JsonToken t = p.getCurrentToken();\n        for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n            String propName = p.getCurrentName();\n            p.nextToken(); // to point to value\n\n            if (resultBean != null) { // Bean already built, assign properties directly\n                // Regular property?\n                SettableBeanProperty prop = _beanProperties.find(propName);\n                if (prop != null) {\n                    try {\n                        prop.deserializeAndSet(p, ctxt, resultBean);\n                    } catch (Exception e) {\n                        wrapAndThrow(e, resultBean, propName, ctxt);\n                    }\n                    continue;\n                }\n                // Ignorable property?\n                if (_ignorableProps != null && _ignorableProps.contains(propName)) {\n                    handleIgnoredProperty(p, ctxt, handledType(), propName);\n                    continue;\n                }\n                // Fall-through: assumed to be unwrapped property, or unknown.\n                // Buffer it into `tokens` for `_unwrappedPropertyHandler`.\n                tokens.writeFieldName(propName);\n                tokens.copyCurrentStructure(p);\n\n                // Any-setter property? For the main bean.\n                if (_anySetter != null) {\n                    try {\n                        _anySetter.deserializeAndSet(p, ctxt, resultBean, propName);\n                    } catch (Exception e) {\n                        wrapAndThrow(e, resultBean, propName, ctxt);\n                    }\n                }\n                continue; // Processed this field\n            }\n\n            // Bean not yet built (resultBean is null), collect creator properties or buffer others\n            SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n            if (creatorProp != null) {\n                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {\n                    try {\n                        resultBean = creator.build(ctxt, buffer);\n                    } catch (Exception e) {\n                        return wrapInstantiationProblem(e, ctxt);\n                    }\n                    // Apply any non-creator properties that were buffered before bean creation\n                    resultBean = buffer.assignBufferedProperties(resultBean);\n                    // Now that `resultBean` is built, we break the loop.\n                    // The loop's `t = p.nextToken()` will correctly advance `p` to the next field.\n                    break;\n                }\n                continue; // Creator property assigned, but not all creator properties satisfied.\n            }\n            // Object Id property?\n            if (buffer.readIdProperty(propName)) {\n                continue;\n            }\n            // Regular property? Needs buffering as bean not yet built\n            SettableBeanProperty prop = _beanProperties.find(propName);\n            if (prop != null) {\n                buffer.bufferProperty(prop, prop.deserialize(p, ctxt));\n                continue;\n            }\n            // Ignorable property?\n            if (_ignorableProps != null && _ignorableProps.contains(propName)) {\n                handleIgnoredProperty(p, ctxt, handledType(), propName);\n                continue;\n            }\n            // Fall-through: assumed to be unwrapped property, or unknown.\n            // Buffer it into `tokens` for `_unwrappedPropertyHandler`.\n            tokens.writeFieldName(propName);\n            tokens.copyCurrentStructure(p);\n\n            // Any-setter property? For the main bean, when bean is not built.\n            if (_anySetter != null) {\n                buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));\n            }\n        }\n\n        // We finished the loop (either by breaking when resultBean was built, or by reaching END_OBJECT).\n\n        // If resultBean is still null, it means not all creator properties were found before END_OBJECT.\n        if (resultBean == null) {\n            try {\n                resultBean = creator.build(ctxt, buffer);\n            } catch (Exception e) {\n                return wrapInstantiationProblem(e, ctxt);\n            }\n            // Apply any non-creator properties that were buffered (if any)\n            resultBean = buffer.assignBufferedProperties(resultBean);\n        }\n\n        tokens.writeEndObject(); // Close the token buffer's object\n\n        // Finally, process any unwrapped properties collected in `tokens`.\n        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, resultBean, tokens);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}