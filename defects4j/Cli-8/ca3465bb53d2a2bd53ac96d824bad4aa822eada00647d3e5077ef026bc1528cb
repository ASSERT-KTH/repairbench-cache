{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)\n{\n    int pos;\n    int newLinePos = text.indexOf(defaultNewLine);\n    while (newLinePos != -1 && newLinePos < text.length() - defaultNewLine.length()) {\n        // we found a new line character, let's process this line\n        // first, adjust pos for the case that the new line is the\n        // first char of the remaining text\n        if (newLinePos == 0) {\n            text = text.substring(defaultNewLine.length());\n            newLinePos = text.indexOf(defaultNewLine);\n            continue;\n        }\n        pos = findWrapPos(text, width, 0);\n        if (pos == -1 || pos > newLinePos) {\n            // no need to wrap, or next line is too short to be wrapped, just append it\n            sb.append(rtrim(text.substring(0, newLinePos)));\n            sb.append(defaultNewLine);\n            text = text.substring(newLinePos + defaultNewLine.length());\n        } else {\n            // we need to wrap and newline was not at end, so we need to process the line\n            sb.append(rtrim(text.substring(0, pos)));\n            sb.append(defaultNewLine);\n            text = padding + text.substring(pos).trim();\n        }\n        newLinePos = text.indexOf(defaultNewLine);\n    }\n\n    pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // all following lines must be padded with nextLineTabStop space \n    // characters\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        text = padding + text.substring(pos).trim();\n        pos = findWrapPos(text, width, nextLineTabStop);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n\n            return sb;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}