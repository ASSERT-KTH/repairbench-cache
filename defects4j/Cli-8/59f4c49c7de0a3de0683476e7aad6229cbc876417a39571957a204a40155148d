{
    "generation": "/**\n * <p>Render the specified text and return the rendered Options\n * in a StringBuffer.</p>\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    // Split input text into lines\n    String[] lines = text.split(\"\\\\r?\\\\n\");\n\n    for (int lineIdx = 0; lineIdx < lines.length; ++lineIdx) {\n        String line = lines[lineIdx];\n        boolean firstLine = (lineIdx == 0);\n\n        int offset = 0;\n\n        // On first line, no padding, others: add padding for the first line as well after first line\n        do {\n            int wrapWidth = width;\n            if (!firstLine || offset > 0) {\n                // lines after the very first overall AND first line after an explicit newline: indent\n                sb.append(createPadding(nextLineTabStop));\n                wrapWidth = width - nextLineTabStop;\n                if (wrapWidth <= 0) {\n                    wrapWidth = width; // fallback for invalid tab stop\n                }\n            }\n\n            int pos = findWrapPos(line, wrapWidth, offset);\n\n            if (pos == -1) {\n                // append the rest\n                sb.append(rtrim(line.substring(offset)));\n                break;\n            } else {\n                sb.append(rtrim(line.substring(offset, pos)));\n                sb.append(defaultNewLine);\n                offset = pos;\n                // Skip spaces at the start of next chunk\n                while (offset < line.length() && line.charAt(offset) == ' ') {\n                    offset++;\n                }\n                firstLine = false;\n            }\n        } while (offset < line.length());\n\n        // If there are more lines, add a newline if not already (except for the last chunk per line)\n        if (lineIdx != lines.length - 1) {\n            sb.append(defaultNewLine);\n        }\n    }\n\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}