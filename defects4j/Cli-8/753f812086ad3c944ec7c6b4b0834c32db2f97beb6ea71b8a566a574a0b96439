{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    // Handle multiple lines: preserve any intentional line breaks\n    int lineStart = 0;\n    int textLen = text.length();\n    while (lineStart < textLen) {\n        // Find next newline (either '\\n' or '\\r\\n')\n        int lineEnd = text.indexOf('\\n', lineStart);\n        int crEnd = text.indexOf('\\r', lineStart);\n        if (lineEnd == -1 || (crEnd != -1 && crEnd < lineEnd)) {\n            lineEnd = crEnd;\n        }\n\n        if (lineEnd == -1) {\n            // This is the last line\n            renderWrappedLine(sb, width, nextLineTabStop, text.substring(lineStart));\n            break;\n        } else {\n            // render the current line up to lineEnd\n            renderWrappedLine(sb, width, nextLineTabStop, text.substring(lineStart, lineEnd));\n            sb.append(defaultNewLine);\n            // if it was a CRLF, skip the \\n as well\n            if (lineEnd + 1 < textLen && text.charAt(lineEnd) == '\\r' && text.charAt(lineEnd + 1) == '\\n') {\n                lineStart = lineEnd + 2;\n            } else {\n                lineStart = lineEnd + 1;\n            }\n        }\n    }\n    return sb;\n}\n\nprivate void renderWrappedLine(StringBuffer sb, int width, int nextLineTabStop, String text) {\n    int pos = 0;\n    boolean firstLine = true;\n    final int textLen = text.length();\n    while (true) {\n        int wrapPos = findWrapPos(text, width, firstLine ? 0 : nextLineTabStop);\n        if (wrapPos == -1) {\n            if (!firstLine) {\n                sb.append(createPadding(nextLineTabStop));\n            }\n            sb.append(rtrim(text));\n            return;\n        }\n        if (!firstLine) {\n            sb.append(createPadding(nextLineTabStop));\n        }\n        sb.append(rtrim(text.substring(0, wrapPos)));\n        sb.append(defaultNewLine);\n        text = text.substring(wrapPos).trim();\n        firstLine = false;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}