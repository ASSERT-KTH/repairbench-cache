{
    "generation": "    protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)\n    {\n        int pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(rtrim(text));\n            return sb;\n        }\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n        // all following lines must be padded with nextLineTabStop space \n        // characters\n        final String padding = createPadding(nextLineTabStop);\n\n        while (true)\n        {\n            String remaining = text.substring(pos).trim();\n            // Check if the remaining text contains newlines\n            int nlPos = remaining.indexOf(defaultNewLine);\n            if (nlPos == -1)\n            {\n                text = padding + remaining;\n                pos = findWrapPos(text, width, nextLineTabStop);\n\n                if (pos == -1)\n                {\n                    sb.append(text);\n                    return sb;\n                }\n                sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n            }\n            else\n            {\n                // Handle the text before newline\n                String line = padding + remaining.substring(0, nlPos);\n                sb.append(line).append(defaultNewLine);\n                // Process remaining text after newline\n                text = remaining.substring(nlPos + defaultNewLine.length());\n                pos = 0;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}