{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    // Handle newlines in text and preserve them, splitting input into lines\n    String[] lines = text.split(\"\\\\r?\\\\n\");\n    for (int i = 0; i < lines.length; i++) {\n        String line = lines[i];\n        boolean firstLine = true;\n        int offset = 0;\n        while (true) {\n            int pos = findWrapPos(line, width, offset);\n            if (pos == -1) {\n                if (!firstLine) {\n                    sb.append(createPadding(nextLineTabStop));\n                }\n                sb.append(rtrim(line.substring(offset)));\n                break;\n            } else {\n                if (!firstLine) {\n                    sb.append(createPadding(nextLineTabStop));\n                }\n                sb.append(rtrim(line.substring(offset, pos))).append(defaultNewLine);\n                offset = pos;\n                // line.substring(pos) can start with spaces, skip them\n                while (offset < line.length() && Character.isWhitespace(line.charAt(offset))) {\n                    offset++;\n                }\n                firstLine = false;\n                if (offset >= line.length()) {\n                    break;\n                }\n            }\n        }\n        if (i < lines.length - 1) {\n            sb.append(defaultNewLine);\n        }\n    }\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}