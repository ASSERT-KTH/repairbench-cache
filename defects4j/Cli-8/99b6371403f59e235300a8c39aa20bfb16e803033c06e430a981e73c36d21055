{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width,\n                                         int nextLineTabStop, String text) {\n    // If the text already contains line breaks, preserve them and just\n    // apply padding to subsequent lines.\n    if (text.indexOf(defaultNewLine) >= 0) {\n        int start = 0;\n        int nlLen = defaultNewLine.length();\n        int lineIndex = 0;\n        while (true) {\n            int idx = text.indexOf(defaultNewLine, start);\n            if (idx == -1) {\n                break;\n            }\n            String line = text.substring(start, idx);\n            if (lineIndex > 0 && nextLineTabStop > 0) {\n                sb.append(createPadding(nextLineTabStop));\n            }\n            sb.append(line).append(defaultNewLine);\n            start = idx + nlLen;\n            lineIndex++;\n        }\n        // last segment after the final newline\n        String lastLine = text.substring(start);\n        if (lineIndex > 0 && nextLineTabStop > 0) {\n            sb.append(createPadding(nextLineTabStop));\n        }\n        sb.append(lastLine);\n        return sb;\n    }\n\n    // Single\u2010line wrapping logic\n    int pos = findWrapPos(text, width, 0);\n    if (pos == -1) {\n        // no wrap needed\n        sb.append(rtrim(text));\n        return sb;\n    }\n\n    // first line\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // prepare for subsequent lines\n    String padding = createPadding(nextLineTabStop);\n    String remaining = text.substring(pos).trim();\n    int wrapWidth = width - nextLineTabStop;\n\n    // wrap the rest\n    while ((pos = findWrapPos(remaining, wrapWidth, 0)) != -1) {\n        sb.append(padding)\n          .append(rtrim(remaining.substring(0, pos)))\n          .append(defaultNewLine);\n        remaining = remaining.substring(pos).trim();\n    }\n    // final fragment\n    sb.append(padding).append(remaining);\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}