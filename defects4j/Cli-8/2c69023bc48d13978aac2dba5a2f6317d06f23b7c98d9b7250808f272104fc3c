{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    String newLine = defaultNewLine;\n    int newLineLen = newLine.length();\n    int start = 0;\n    boolean firstParagraph = true;\n    // process each original line (paragraph) separated by newline\n    while (start < text.length()) {\n        int end = text.indexOf(newLine, start);\n        String paragraph;\n        if (end >= 0) {\n            paragraph = text.substring(start, end);\n        } else {\n            paragraph = text.substring(start);\n        }\n        // initial indent: none for first paragraph, else pad\n        String initialPad = firstParagraph ? \"\" : createPadding(nextLineTabStop);\n        String line = initialPad + paragraph;\n        // wrap the first line of this paragraph\n        int pos = findWrapPos(line, width, 0);\n        if (pos == -1) {\n            sb.append(rtrim(line));\n        } else {\n            sb.append(rtrim(line.substring(0, pos))).append(newLine);\n            // wrap subsequent lines\n            String remaining = line.substring(pos).trim();\n            String subsequentPad = createPadding(nextLineTabStop);\n            while (true) {\n                String nextLineStr = subsequentPad + remaining;\n                pos = findWrapPos(nextLineStr, width, nextLineTabStop);\n                if (pos == -1) {\n                    sb.append(nextLineStr);\n                    break;\n                }\n                sb.append(rtrim(nextLineStr.substring(0, pos))).append(newLine);\n                remaining = nextLineStr.substring(pos).trim();\n            }\n        }\n        // if there was a newline in the original text, preserve it and continue\n        if (end >= 0) {\n            sb.append(newLine);\n            start = end + newLineLen;\n            firstParagraph = false;\n        } else {\n            break;\n        }\n    }\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}