{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width,\n                                         int nextLineTabStop, String text)\n{\n    if (text == null) {\n        return sb;\n    }\n    final String lineSep = defaultNewLine;\n\n    // Preserve existing new\u2010lines: split text into \"paragraphs\"\n    if (text.indexOf(lineSep) != -1) {\n        int start = 0;\n        int sepLen = lineSep.length();\n        boolean firstParagraph = true;\n        while (start < text.length()) {\n            int end = text.indexOf(lineSep, start);\n            String segment;\n            if (end >= 0) {\n                segment = text.substring(start, end);\n            } else {\n                segment = text.substring(start);\n            }\n            if (!firstParagraph) {\n                sb.append(lineSep);\n            }\n            if (!firstParagraph && nextLineTabStop > 0) {\n                // indent the first line of subsequent paragraphs\n                sb.append(createPadding(nextLineTabStop));\n                // reduce width by the indent we just wrote\n                renderWrappedText(sb, width - nextLineTabStop,\n                                  nextLineTabStop, segment);\n            } else {\n                renderWrappedText(sb, width,\n                                  nextLineTabStop, segment);\n            }\n            if (end < 0) {\n                break;\n            }\n            start = end + sepLen;\n            firstParagraph = false;\n        }\n        return sb;\n    }\n\n    // Single \"paragraph\" \u2013 do the normal wrap\n    int pos = findWrapPos(text, width, 0);\n    if (pos == -1) {\n        sb.append(rtrim(text));\n        return sb;\n    }\n\n    // first line\n    sb.append(rtrim(text.substring(0, pos))).append(lineSep);\n\n    // following lines get the padding\n    final String padding = createPadding(nextLineTabStop);\n    String remainder = text.substring(pos).trim();\n    while (true) {\n        String line = padding + remainder;\n        pos = findWrapPos(line, width, nextLineTabStop);\n        if (pos == -1) {\n            sb.append(line);\n            return sb;\n        }\n        sb.append(rtrim(line.substring(0, pos))).append(lineSep);\n        remainder = line.substring(pos).trim();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}