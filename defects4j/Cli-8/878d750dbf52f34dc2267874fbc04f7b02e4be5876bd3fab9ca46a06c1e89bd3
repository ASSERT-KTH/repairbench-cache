{
    "generation": "/**\n * <p>Render the specified text and return the rendered Options\n * in a StringBuffer.</p>\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    // handle already-wrapped text correctly\n    int start = 0;\n    int len = text.length();\n    while (start < len) {\n        // Find the next newline, if any\n        int newline = text.indexOf(defaultNewLine, start);\n        String line;\n        boolean isLastLine;\n        if (newline == -1) {\n            line = text.substring(start);\n            isLastLine = true;\n        } else {\n            line = text.substring(start, newline);\n            isLastLine = false;\n        }\n\n        // Now wrap this line as normal\n        int pos = findWrapPos(line, width, 0);\n        if (pos == -1) {\n            sb.append(rtrim(line));\n        } else {\n            sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);\n\n            final String padding = createPadding(nextLineTabStop);\n\n            while (true) {\n                line = padding + line.substring(pos).trim();\n                pos = findWrapPos(line, width, nextLineTabStop);\n\n                if (pos == -1) {\n                    sb.append(line);\n                    break;\n                }\n\n                sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);\n            }\n        }\n\n        if (!isLastLine) {\n            sb.append(defaultNewLine);\n            start = newline + defaultNewLine.length();\n        } else {\n            break;\n        }\n    }\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}