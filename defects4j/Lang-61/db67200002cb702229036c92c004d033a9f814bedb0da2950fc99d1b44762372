{
    "generation": "public int indexOf(String str, int startIndex) {\n    // handle null and negative start\n    if (str == null) {\n        return -1;\n    }\n    if (startIndex < 0) {\n        startIndex = 0;\n    }\n    int strLen = str.length();\n    // empty string always matches at startIndex (clamped to size)\n    if (strLen == 0) {\n        return startIndex <= size ? startIndex : size;\n    }\n    // if start past end or pattern longer than current contents, no match\n    if (startIndex >= size || strLen > size) {\n        return -1;\n    }\n    // single\u2010char case\n    if (strLen == 1) {\n        return indexOf(str.charAt(0), startIndex);\n    }\n    // now search only up to the used length (size), not the full buffer\n    final char[] buf = buffer;\n    final int max = size - strLen;\n    outer:\n    for (int i = startIndex; i <= max; i++) {\n        for (int j = 0; j < strLen; j++) {\n            if (buf[i + j] != str.charAt(j)) {\n                continue outer;\n            }\n        }\n        return i;\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}