{
    "generation": "    private final static int _parseIndex(String str) {\n        final int len = str.length();\n        // [Issue#133]: beware of super long indexes; assume we never\n        // have arrays over 2 billion entries so ints are fine.\n        if (len == 0 || len > 10) {\n            return -1;\n        }\n        // First validate the string contains valid number characters\n        // (digits, '.', '-', 'e'/'E', '+' as possible parts of scientific notation)\n        for (int i = 0; i < len; ++i) {\n            char c = str.charAt(i);\n            if (!(Character.isDigit(c) ||\n                  (i == 0 && c == '-') || // leading minus sign\n                  c == '.' ||            // decimal point\n                  c == 'e' || c == 'E' || // scientific notation\n                  (c == '+' && i > 0 &&   // '+' in scientific notation\n                   (str.charAt(i-1) == 'e' || str.charAt(i-1) == 'E')))) {\n                return -1;\n            }\n        }\n\n        // Also validate that the string is a valid format that parseInt can handle\n        try {\n            // First check if it might be a long value that's too big\n            if (len == 10) {\n                long l = Long.parseLong(str);\n                if (l > Integer.MAX_VALUE) {\n                    return -1;\n                }\n            }\n            return Integer.parseInt(str);\n        } catch (NumberFormatException e) {\n            return -1;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}