{
    "generation": "    private final static int _parseIndex(String str) {\n        final int len = str.length();\n        // [Issue#133]: beware of super long indexes; assume we never\n        // have arrays over 2 billion entries so ints are fine.\n        if (len == 0 || len > 10) {\n            return -1;\n        }\n        // Validate that all characters are digits\n        for (int i = 0; i < len; ++i) {\n            char c = str.charAt(i); // Bug fix: removed i++ from here, as it was incrementing 'i' twice\n            if (c > '9' || c < '0') {\n                return -1;\n            }\n        }\n        // If length is 10, it might exceed Integer.MAX_VALUE, so parse as long first.\n        // For example, \"2147483648\" is 10 digits but too large for int.\n        if (len == 10) {\n            long l = NumberInput.parseLong(str);\n            if (l > Integer.MAX_VALUE) {\n                return -1;\n            }\n        }\n        // If all checks pass, it's a valid integer string representation within int range.\n        return NumberInput.parseInt(str);\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}