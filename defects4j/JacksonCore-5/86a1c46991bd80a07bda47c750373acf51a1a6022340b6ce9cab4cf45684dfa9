{
    "generation": "private final static int _parseIndex(String str) {\n    final int len = str.length();\n    if (len == 0 || len > 10) {\n        return -1;\n    }\n\n    int i = 0;\n    intParseException: {\n        if (str.indexOf('e') != -1 || str.indexOf('E') != -1) {\n            String[] parts = str.split(\"[eE]\");\n            if (parts.length != 2) {\n                break intParseException;\n            }\n            String base = parts[0];\n            String exponent = parts[1];\n            if (base.isEmpty() || exponent.isEmpty()) {\n                break intParseException;\n            }\n            long baseNum;\n            try {\n                baseNum = NumberInput.parseLong(base);\n            } catch (NumberFormatException e) {\n                break intParseException;\n            }\n            long exponentNum;\n            try {\n                exponentNum = NumberInput.parseLong(exponent);\n            } catch (NumberFormatException e) {\n                break intParseException;\n            }\n            double result = baseNum * Math.pow(10, exponentNum);\n            if (result > Integer.MAX_VALUE || result < Integer.MIN_VALUE) {\n                return -1;\n            }\n            return (int) result;\n        }\n\n        try {\n            return Integer.parseInt(str);\n        } catch (NumberFormatException e) {\n            return -1;\n        }\n    }\n    // If any parsing exception occurs, return -1\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}