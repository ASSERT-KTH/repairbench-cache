{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len == 2) {\n        // language only, must be 2 lower-case characters\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str, \"\");\n    }\n    if (len < 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // validate language\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // the third character must be underscore\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // Two cases: either language plus variant (with empty country) or language and country (optionally with variant).\n    // Case 1: language + variant, i.e. pattern \"xx__variant\" (note the double underscore, meaning country is empty)\n    if (len >= 4 && str.charAt(3) == '_') {\n        if (len == 4) { // no variant provided\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String variant = str.substring(4);\n        return new Locale(str.substring(0, 2), \"\", variant);\n    }\n    // Case 2: language and country (and possibly a variant)\n    // There must be exactly 2 characters for the country.\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch3 = str.charAt(3);\n    char ch4 = str.charAt(4);\n    if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String country = str.substring(3, 5);\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), country);\n    } else {\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 6) { // variant cannot be empty\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String variant = str.substring(6);\n        return new Locale(str.substring(0, 2), country, variant);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}