{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        // Check for minimum length of language (2 chars)\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        // Parse language (must be exactly 2 lowercase letters)\n        String language = str.substring(0, 2);\n        if (language.charAt(0) < 'a' || language.charAt(0) > 'z' ||\n            language.charAt(1) < 'a' || language.charAt(1) > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        if (len == 2) {\n            return new Locale(language, \"\");\n        }\n\n        // Check for underscore separator after language\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        // Case 1: language + country (5 chars)\n        if (len == 5) {\n            String country = str.substring(3, 5);\n            if (country.charAt(0) < 'A' || country.charAt(0) > 'Z' ||\n                country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(language, country);\n        }\n\n        // Case 2: language + country + variant\n        if (len > 5) {\n            // Check for second underscore after country\n            if (str.charAt(2) == '_' && len >= 7) { // We already checked position 2 is '_'\n                // Check if this is language + variant (no country)\n                if (str.charAt(3) == '_') {\n                    // Format: language__variant\n                    String variant = str.substring(4);\n                    return new Locale(language, \"\", variant);\n                }\n\n                // Format: language_country_variant\n                String country = str.substring(3, 5);\n                if (country.charAt(0) < 'A' || country.charAt(0) > 'Z' ||\n                    country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                String variant = str.substring(6);\n                return new Locale(language, country, variant);\n            }\n        }\n\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}