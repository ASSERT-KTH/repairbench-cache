{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // Validate language: first two characters must be lowercase letters.\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // If only language is provided.\n    if (len == 2) {\n        return new Locale(str, \"\");\n    }\n    // The third character must be an underscore.\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // If there is nothing after the underscore.\n    if (len == 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // Check if we have language__variant (i.e. no country, empty string)\n    if (str.charAt(3) == '_') {\n        // This is the pattern: language__variant.\n        String variant = str.substring(4);\n        if (variant.length() == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), \"\", variant);\n    }\n    // Otherwise, we expect language + country or language + country + variant.\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // Extract and validate country: must be exactly two uppercase letters.\n    String country = str.substring(3, 5);\n    for (int i = 0; i < country.length(); i++) {\n        char c = country.charAt(i);\n        if (c < 'A' || c > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    // If the string is exactly 5 characters, then it is language + country.\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), country);\n    } else {\n        // Must have an underscore separating the country and variant.\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String variant = str.substring(6);\n        if (variant.length() == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), country, variant);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}