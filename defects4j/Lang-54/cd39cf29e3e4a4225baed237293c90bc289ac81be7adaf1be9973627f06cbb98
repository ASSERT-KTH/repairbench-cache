{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    // Case 1: Language only must be exactly 2 characters.\n    if (len == 2) {\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str, \"\");\n    }\n    \n    // All other forms must have an underscore at position 2.\n    if (len < 4 || str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    \n    // Validate the language part.\n    String language = str.substring(0, 2);\n    char l0 = language.charAt(0);\n    char l1 = language.charAt(1);\n    if (l0 < 'a' || l0 > 'z' || l1 < 'a' || l1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    \n    // There are two cases now:\n    // Case 2: Language with variant but no country (pattern \"ll__variant\")\n    //         In this form, the character at index 3 is '_' indicating an empty country.\n    // Case 3: Language with country (and possibly variant) (pattern \"ll_CC\" or \"ll_CC_variant\")\n    if (str.charAt(3) == '_') {\n        // Must have a non-empty variant. Minimum length for \"ll__X\" is 5.\n        if (len == 4) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String variant = str.substring(4);\n        return new Locale(language, \"\", variant);\n    } else {\n        // Country code is expected.\n        // If there is no variant, the full string should be exactly 5 characters: \"ll_CC\".\n        // If there is a variant the string must be at least 7 characters: \"ll_CC_variant\"\n        if (len != 5 && len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String country = str.substring(3, 5);\n        char c0 = country.charAt(0);\n        char c1 = country.charAt(1);\n        if (c0 < 'A' || c0 > 'Z' || c1 < 'A' || c1 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(language, country);\n        } else {\n            // There MUST be an underscore after the country code.\n            if (str.charAt(5) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String variant = str.substring(6);\n            return new Locale(language, country, variant);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}