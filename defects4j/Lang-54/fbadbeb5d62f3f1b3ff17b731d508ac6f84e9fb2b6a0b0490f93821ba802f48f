{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len == 2) {\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str, \"\");\n    } else if (len == 5) {\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z'\n                || str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        char ch4 = str.charAt(4);\n        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    } else if (len >= 7) {\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z'\n                || str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(5) == '_') {\n            // language, country (possibly empty), variant\n            String language = str.substring(0, 2);\n            String country = str.substring(3, 5);\n            String variant = str.substring(6);\n            // country check: must be either empty or A-Z\n            if (country.length() > 0) {\n                if (country.length() != 2 ||\n                        country.charAt(0) < 'A' || country.charAt(0) > 'Z'\n                        || country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n            if (variant.length() == 0) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(language, country, variant);\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    } else {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}