{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                char ch3 = str.charAt(3);\n                char ch4 = str.charAt(4);\n                if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                // Handle cases with variant (including multiple underscores like \"fr__POSIX\")\n                int secondUnderscore = str.indexOf('_', 3);\n                String country, variant;\n\n                if (secondUnderscore == -1) {\n                    // Format like \"en_USX\" (invalid, but handle as best we can)\n                    secondUnderscore = 5; // default position if no second underscore\n                }\n\n                if (secondUnderscore != -1 && secondUnderscore <= len) {\n                    country = str.substring(3, secondUnderscore);\n                    if (country.length() != 2 ||\n                        country.charAt(0) < 'A' || country.charAt(0) > 'Z' ||\n                        country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    variant = str.substring(secondUnderscore + 1);\n                } else {\n                    country = str.substring(3, 5);\n                    variant = \"\";\n                    if (len > 5) {\n                        variant = str.substring(5);\n                    }\n                }\n\n                // If we have a variant but no country code (unlikely per format, but possible with fixed input)\n                if (country == null || country.isEmpty()) {\n                    country = \"\";\n                }\n\n                return new Locale(str.substring(0, 2), country, variant);\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}