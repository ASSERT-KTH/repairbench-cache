{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        // Check language code (first 2 chars)\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        // Case 1: just language (en)\n        if (len == 2) {\n            return new Locale(str, \"\");\n        }\n\n        // Check separator after language\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        // Case 2: language + country (en_GB)\n        if (len == 5) {\n            // Check country code (chars 3-4)\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        }\n\n        // Case 3: language + country + variant or language + variant (en_GB_xxx or en__POSIX)\n        // Need to look for second underscore\n        int secondUnderscorePos = str.indexOf('_', 3);\n        if (secondUnderscorePos == -1) {\n            // No second underscore, must be invalid (since len > 5)\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        // Check if we have country (between first and second underscore)\n        if (secondUnderscorePos == 5) {\n            // Check country code (chars 3-4)\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            // Rest is variant\n            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n        } else if (secondUnderscorePos == 3) {\n            // No country, just language + variant (like fr__POSIX)\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}