{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // validate language\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String language = str.substring(0, 2);\n    // simple language only\n    if (len == 2) {\n        return new Locale(language, \"\");\n    }\n    // must have underscore after language\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String rest = str.substring(3);\n    // look for second underscore\n    int idx = rest.indexOf('_');\n    if (idx < 0) {\n        // only country\n        String country = rest;\n        if (country.length() != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char c0 = country.charAt(0);\n        char c1 = country.charAt(1);\n        if (c0 < 'A' || c0 > 'Z' || c1 < 'A' || c1 > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, country);\n    } else {\n        // variant (country may be empty or 2 letters)\n        String country = rest.substring(0, idx);\n        if (country.length() != 0 && country.length() != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (country.length() == 2) {\n            char c0 = country.charAt(0);\n            char c1 = country.charAt(1);\n            if (c0 < 'A' || c0 > 'Z' || c1 < 'A' || c1 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n        String variant = rest.substring(idx + 1);\n        if (variant.length() == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, country, variant);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}