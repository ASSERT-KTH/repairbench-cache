{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // language only, e.g. \"en\"\n    if (len == 2) {\n        return new Locale(str, \"\");\n    }\n    // must have '_' after language\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // language + variant only, e.g. \"fr__POSIX\"\n    if (str.charAt(3) == '_') {\n        String variant = str.substring(4);\n        if (variant.isEmpty()) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), \"\", variant);\n    }\n    // language + country, and possibly + variant\n    char ch3 = str.charAt(3);\n    char ch4 = str.charAt(4);\n    if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // language + country, e.g. \"en_US\"\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    }\n    // language + country + variant, e.g. \"en_US_WIN\"\n    if (str.charAt(5) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String variant = str.substring(6);\n    if (variant.isEmpty()) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, 5), variant);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}