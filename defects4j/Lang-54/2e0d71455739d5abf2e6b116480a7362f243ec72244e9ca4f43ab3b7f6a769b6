{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len != 2 && len != 5 && !(len >= 7)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            int secondUnderscorePos = -1;\n            if (len > 5) {\n                // Find the second underscore (for variant)\n                secondUnderscorePos = str.indexOf('_', 3);\n                if (secondUnderscorePos == -1) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n\n            // Extract country part\n            String country;\n            if (secondUnderscorePos != -1) {\n                country = str.substring(3, secondUnderscorePos);\n                if (country.length() != 2) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                char ch3 = country.charAt(0);\n                char ch4 = country.charAt(1);\n                if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            } else {\n                // No variant, simple language_country format\n                char ch3 = str.charAt(3);\n                char ch4 = str.charAt(4);\n                if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                country = str.substring(3, 5);\n            }\n\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), country);\n            } else {\n                if (secondUnderscorePos == -1) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                // Check that there's actually a variant after the second underscore\n                if (secondUnderscorePos + 1 > len - 1) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), country, str.substring(secondUnderscorePos + 1));\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}