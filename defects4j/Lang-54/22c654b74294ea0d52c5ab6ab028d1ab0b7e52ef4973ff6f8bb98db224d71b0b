{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && (len < 7 || len == 6)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        } else {\n            // len >=7 (and not 6 due to check above)\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len > 5) {\n                char ch3 = str.charAt(3);\n                char ch4 = str.charAt(4);\n                if (!(ch3 >= 'A' && ch3 <= 'Z' && ch4 >= 'A' && ch4 <= 'Z') &&\n                    !(str.charAt(5) == '_')) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n            if (len > 5) {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n            // Handle cases with variant\n            int variantStart = len == 5 ? -1 : (str.charAt(5) == '_' ? 6 : -1);\n            if (variantStart == -1) {\n                // Should only happen if len >5 and no '_' at position 5\n                // But we've already checked for this, so this is just a safeguard\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                return new Locale(str.substring(0, 2),\n                                len > 5 ? str.substring(3, 5) : \"\",\n                                len > 6 ? str.substring(6) : \"\");\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}