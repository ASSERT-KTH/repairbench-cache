{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        // Check for at least language code (len >= 2)\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        // Check language code (must be 2 lowercase letters)\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        if (len == 2) {\n            return new Locale(str, \"\");\n        }\n\n        // Check if there's country and/or variant\n        if (len >= 5 && len <= 6) { // language_country or language_country_\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            char ch3 = str.charAt(3);\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else if (len == 6) { // could be language_country_ with empty variant\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), \"\");\n            }\n        }\n\n        // Handle cases with variant (len >=7) or other lengths\n        if (len >= 7) { // language_country_variant\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            // Check country code (positions 3-4)\n            if (str.length() >=5) { // needs to be long enough for country check\n                char ch3 = str.charAt(3);\n                char ch4 = str.charAt(4);\n                if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n            // Check the second underscore before variant\n            if (str.charAt(len >= 5 ? 2 : 0) == '_' && len >= 7) {\n                int secondUnderscorePos = str.indexOf('_', 3); // look for second underscore after 3\n                if (secondUnderscorePos != -1) {\n                    if (str.charAt(secondUnderscorePos) != '_') {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    String language = str.substring(0, 2);\n                    String country = \"\";\n                    String variant = \"\";\n                    if (len >=5) {\n                        country = str.substring(3, 5);\n                    }\n                    if (len > 5) {\n                        if (str.charAt(5) == '_') {\n                            variant = str.substring(6);\n                        } else {\n                            // This case handles \"fr__POSIX\" style variants\n                            // Look for the first underscore after position 2\n                            int firstUnderscore = str.indexOf('_', 2);\n                            if (firstUnderscore != -1) {\n                                int secondUnderscore = str.indexOf('_', firstUnderscore + 1);\n                                if (secondUnderscore == -1) {\n                                    // No second underscore means variant starts after country\n                                    // but this case is already handled in other if clauses\n                                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                                } else {\n                                    // Format is language country variant with double underscore\n                                    // e.g. \"fr__POSIX\"\n                                    country = \"\"; // no country specified in this format?\n                                    variant = str.substring(firstUnderscore + 1);\n                                    return new Locale(language, country, variant);\n                                }\n                            }\n                        }\n                    }\n                    return new Locale(language, country, variant);\n                }\n            }\n            // Fall through for other formats\n            if (str.length() >=5 && str.charAt(2) == '_') {\n                String language = str.substring(0, 2);\n                String country = str.length() >=5 ? str.substring(3,5) : \"\";\n                String variant = str.length() > 5 ? str.substring(6) : \"\";\n                if (str.length() > 5 && str.charAt(5) == '_') {\n                    variant = str.substring(6);\n                } else if (str.length() > 5) {\n                    // Handle cases like en__POSIX where country is empty\n                    if (str.charAt(3) == '_') { // pattern: en__POSIX\n                        variant = str.substring(4);\n                        country = \"\";\n                    } else {\n                        variant = str.substring(5); // but standard format would have variant after 2 underscores\n                    }\n                }\n                return new Locale(language, country, variant);\n            }\n        } else if (len != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        // Handle case where language is followed by double underscore (e.g., \"fr__POSIX\")\n        if (len >= 4 && str.charAt(2) == '_' && str.charAt(3) == '_') {\n            String variant = str.substring(4);\n            if (variant.indexOf('_') >= 0) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), \"\", variant);\n        }\n\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}