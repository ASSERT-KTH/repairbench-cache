{
    "generation": "@Override\npublic ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n    if (p.getCurrentToken() == JsonToken.START_OBJECT) {\n        p.nextToken();\n        // If the object is empty, the next token will be END_OBJECT.\n        if (p.getCurrentToken() == JsonToken.END_OBJECT) {\n            return ctxt.getNodeFactory().objectNode();\n        }\n        return deserializeObject(p, ctxt, ctxt.getNodeFactory());\n    }\n    if (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n        return deserializeObject(p, ctxt, ctxt.getNodeFactory());\n    }\n    if (p.getCurrentToken() == JsonToken.END_OBJECT) {\n        // Also handle case where we are directly given an END_OBJECT (empty object)\n        return ctxt.getNodeFactory().objectNode();\n    }\n    throw ctxt.mappingException(ObjectNode.class);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}