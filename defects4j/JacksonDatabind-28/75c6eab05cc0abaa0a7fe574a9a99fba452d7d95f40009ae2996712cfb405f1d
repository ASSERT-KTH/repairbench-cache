{
    "generation": "        @Override\n        public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException\n        {\n            JsonToken t = p.getCurrentToken();\n\n            if (t == JsonToken.START_OBJECT) {\n                p.nextToken(); // Consume START_OBJECT\n                return deserializeObject(p, ctxt, ctxt.getNodeFactory());\n            }\n            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),\n            //    if caller has advanced to the first token of Object, but for empty Object\n            if (t == JsonToken.FIELD_NAME) {\n                // Or, FIELD_NAME if START_OBJECT already consumed\n                return deserializeObject(p, ctxt, ctxt.getNodeFactory());\n            }\n            // Or, END_OBJECT for empty ObjectNode like {} if START_OBJECT was consumed by caller\n            if (t == JsonToken.END_OBJECT) {\n                return ctxt.getNodeFactory().objectNode();\n            }\n            // Any other token is invalid\n            // Use mappingException that takes token type for better error message\n            throw ctxt.mappingException(ObjectNode.class, t);\n         }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}