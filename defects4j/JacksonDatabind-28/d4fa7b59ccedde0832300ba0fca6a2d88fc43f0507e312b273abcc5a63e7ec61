{
    "generation": "        @Override\n        public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException\n        {\n            final JsonNodeFactory nodeFactory = ctxt.getNodeFactory();\n            if (p.isExpectedStartObjectToken()) { // Current token is START_OBJECT\n                p.nextToken(); // Consume the START_OBJECT\n                return deserializeObject(p, ctxt, nodeFactory);\n            }\n            // Handle cases where the caller might have already consumed START_OBJECT\n            // (like when used as a field value within another object)\n            JsonToken t = p.getCurrentToken();\n            if (t == JsonToken.FIELD_NAME) { // Or FIELD_NAME if not empty\n                return deserializeObject(p, ctxt, nodeFactory);\n            }\n            // Fix for #941: Deserializing an empty object results in END_OBJECT token\n            if (t == JsonToken.END_OBJECT) {\n                 return nodeFactory.objectNode();\n            }\n            // Otherwise, it's an error\n            throw ctxt.mappingException(ObjectNode.class);\n         }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}