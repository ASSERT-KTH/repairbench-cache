{
    "generation": "    private void findAliases(NodeTraversal t) {\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        if (v.isParam()) {\n          continue;\n        }\n        Node n = v.getNode();\n        Node initialValue = v.getInitialValue();\n        if (initialValue == null) {\n          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n          continue;\n        }\n        if (initialValue.isGetProp()) {\n          String name = n.getString();\n          Var aliasVar = scope.getVar(name);\n          aliases.put(name, aliasVar);\n          String qualifiedName = initialValue.getQualifiedName();\n          transformation.addAlias(name, qualifiedName);\n        } else {\n          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n      }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}