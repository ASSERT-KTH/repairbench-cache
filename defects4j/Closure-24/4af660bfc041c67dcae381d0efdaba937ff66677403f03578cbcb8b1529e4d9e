{
    "generation": "private void findAliases(NodeTraversal t) {\n  Scope scope = t.getScope();\n  for (Var v : scope.getVarIterable()) {\n    Node n = v.getNode();\n    // A valid alias must be declared in a var statement and be initialized\n    // with a qualified name.\n    if (n.getParent().isVar() && n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n      String name = n.getString();\n      Var aliasVar = scope.getVar(name);\n      aliases.put(name, aliasVar);\n      String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n      transformation.addAlias(name, qualifiedName);\n    } else {\n      report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}