{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n        return super.getLeastSupertype(that);\n    }\n    // If the records are not compatible, return their union\n    if (!this.isEquivalentTo(that)) {\n        return registry.createUnionType(this, that);\n    }\n    // Otherwise, build a new record with compatible properties\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    for (String property : properties.keySet()) {\n        if (that.toMaybeRecordType().hasProperty(property) &&\n            that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n                getPropertyType(property))) {\n            builder.addProperty(property, getPropertyType(property),\n                getPropertyNode(property));\n        }\n    }\n    return builder.build();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}