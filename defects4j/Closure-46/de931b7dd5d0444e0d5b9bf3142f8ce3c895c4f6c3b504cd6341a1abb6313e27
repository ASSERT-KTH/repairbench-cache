{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n        return super.getLeastSupertype(that);\n    }\n\n    // If neither type has all properties of the other, return a union type\n    boolean allFound = true;\n    for (String prop : properties.keySet()) {\n        if (!that.toMaybeRecordType().hasProperty(prop)) {\n            allFound = false;\n            break;\n        }\n    }\n    if (!allFound) {\n        boolean otherAllFound = true;\n        for (String prop : that.toMaybeRecordType().getProperties().keySet()) {\n            if (!hasProperty(prop)) {\n                otherAllFound = false;\n                break;\n            }\n        }\n        if (!otherAllFound) {\n            // Neither type is a subtype of the other - return union\n            return registry.createUnionType(this, that);\n        }\n    }\n\n    // Try to build acommon supertype\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    Set<String> allProperties = new HashSet<>(properties.keySet());\n    allProperties.addAll(that.toMaybeRecordType().getProperties().keySet());\n\n    for (String property : allProperties) {\n        JSType thisType = hasProperty(property) ? getPropertyType(property) : null;\n        JSType thatType = that.toMaybeRecordType().hasProperty(property)\n            ? that.toMaybeRecordType().getPropertyType(property) : null;\n\n        if (thisType != null && thatType != null) {\n            // Both have the property - find the least supertype of the types\n            JSType commonType = thisType.getLeastSupertype(thatType);\n            builder.addProperty(property, commonType, null);\n        } else if (thisType != null) {\n            // Only this has the property\n            builder.addProperty(property, thisType, null);\n        } else if (thatType != null) {\n            // Only that has the property\n            builder.addProperty(property, thatType, null);\n        }\n    }\n\n    return builder.build();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}