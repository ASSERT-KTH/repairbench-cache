{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n        return super.getLeastSupertype(that);\n    }\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    RecordType thisRecord = this;\n    RecordType thatRecord = that.toMaybeRecordType();\n    for (String property : thisRecord.getOwnPropertyNames()) {\n        if (thatRecord.hasProperty(property) &&\n            thatRecord.getPropertyType(property).isEquivalentTo(\n                thisRecord.getPropertyType(property))) {\n            builder.addProperty(property, thisRecord.getPropertyType(property),\n                thisRecord.getPropertyNode(property));\n        }\n    }\n    JSType merged = builder.build();\n    if (merged.isEquivalentTo(this)) {\n        return this;\n    } else if (merged.isEquivalentTo(that)) {\n        return that;\n    } else {\n        return registry.createUnionType(this, that);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}