{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n  if (!that.isRecordType()) {\n    return super.getLeastSupertype(that);\n  }\n  \n  RecordType thatRecord = that.toMaybeRecordType();\n  // Check if all properties match\n  boolean allPropertiesMatch = true;\n  \n  if (properties.size() != thatRecord.properties.size()) {\n    allPropertiesMatch = false;\n  } else {\n    for (String property : properties.keySet()) {\n      if (!thatRecord.hasProperty(property) ||\n          !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n        allPropertiesMatch = false;\n        break;\n      }\n    }\n  }\n  \n  if (allPropertiesMatch) {\n    return this;\n  } else {\n    // If not all properties match, return a union type\n    return registry.createUnionType(this, that);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}