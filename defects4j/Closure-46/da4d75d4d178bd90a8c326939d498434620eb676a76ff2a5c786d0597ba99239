{
    "generation": "  @Override\n  public JSType getLeastSupertype(JSType that) {\n    // Record types form a lattice structure based on properties.\n    // The least supertype of two record types is generally their union,\n    // unless one is a subtype of the other.\n    // The base JSType#getLeastSupertype correctly handles subtype checks\n    // and defaults to creating a union type. The previous logic attempted\n    // to find a structural supertype based on common properties, which\n    // was incorrect according to the test expectations (it calculated\n    // something closer to the greatest common subtype/intersection).\n    // Therefore, we delegate to the superclass implementation which handles\n    // unions correctly.\n    return super.getLeastSupertype(that);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}