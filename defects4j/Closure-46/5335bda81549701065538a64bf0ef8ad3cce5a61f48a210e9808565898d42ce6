{
    "generation": "  @Override\n  public JSType getLeastSupertype(JSType that) {\n    // The original implementation computed the intersection of properties\n    // with equivalent types, which is incorrect for the least common supertype (LUB).\n    // For example, LUB({a:number}, {b:string}) should be ({a:number}|{b:string}),\n    // not {}.\n    // The expected behavior, confirmed by tests, is typically the union type\n    // when neither record type is a subtype of the other.\n    // The superclass implementation (JSType/ObjectType) handles the general LUB logic,\n    // including subtyping checks and creating union types when necessary via JSType.join.\n    // Therefore, we delegate to the superclass implementation.\n    return super.getLeastSupertype(that);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}