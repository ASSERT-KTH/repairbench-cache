{
    "generation": "  @Override\n  public JSType getLeastSupertype(JSType that) {\n    // The default implementation of getLeastSupertype in JSType correctly handles\n    // the cases where 'this' is a subtype of 'that', 'that' is a subtype of 'this',\n    // or when neither is a subtype of the other (by returning a UnionType).\n    // The custom logic previously present in this method for RecordType, which attempted\n    // to find common properties with equivalent types, was effectively calculating\n    // an \"intersection\" or \"greatest common subtype\" rather than the \"least supertype\".\n    // The provided test cases demonstrate that the expected least supertype for\n    // non-subtyping record types is a UnionType, which is handled by the superclass.\n    return super.getLeastSupertype(that);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}