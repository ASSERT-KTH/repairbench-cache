{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n  if (!that.isRecordType()) {\n    return super.getLeastSupertype(that);\n  }\n  RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n  RecordType thatRecord = that.toMaybeRecordType();\n  for (String property : properties.keySet()) {\n    if (thatRecord.hasProperty(property)) {\n      JSType thisType = getPropertyType(property);\n      JSType thatType = thatRecord.getPropertyType(property);\n      if (thisType.isEquivalentTo(thatType)) {\n        builder.addProperty(property, thisType, getPropertyNode(property));\n      } else {\n        builder.addProperty(property, registry.createUnionType(thisType, thatType), getPropertyNode(property));\n      }\n    }\n  }\n  return builder.build();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}