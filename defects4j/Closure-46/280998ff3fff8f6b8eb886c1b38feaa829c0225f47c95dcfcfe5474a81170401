{
    "generation": "// buggy code\n//  @Override\n//  public JSType getLeastSupertype(JSType that) {\n//    if (!that.isRecordType()) {\n//      return super.getLeastSupertype(that);\n//    }\n//    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n//    for (String property : properties.keySet()) {\n//      if (that.toMaybeRecordType().hasProperty(property) &&\n//          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n//              getPropertyType(property))) {\n//        builder.addProperty(property, getPropertyType(property),\n//            getPropertyNode(property));\n//      }\n//    }\n//    return builder.build();\n//  }\n\n  @Override\n  public JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n      return super.getLeastSupertype(that);\n    }\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    for (String property : properties.keySet()) {\n      if (that.toRecordType().hasProperty(property) &&\n          that.toRecordType().getPropertyType(property).isEquivalentTo(\n              getPropertyType(property))) {\n        builder.addProperty(property, getPropertyType(property),\n            getPropertyNode(property));\n      }\n    }\n    return builder.build();\n  }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}