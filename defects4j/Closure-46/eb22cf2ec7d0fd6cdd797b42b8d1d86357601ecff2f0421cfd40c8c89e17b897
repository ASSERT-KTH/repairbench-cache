{
    "generation": "  @Override\n  public JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n      return super.getLeastSupertype(that);\n    }\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    Set<String> allProperties = new HashSet<>(properties.keySet());\n    allProperties.addAll(that.toMaybeRecordType().getPropertyNames());\n\n    for (String property : allProperties) {\n      JSType thisType = getPropertyType(property);\n      JSType thatType = that.toMaybeRecordType().getPropertyType(property);\n\n      if (thisType != null && thatType != null) {\n        JSType leastSupertype = thisType.getLeastSupertype(thatType);\n        if (leastSupertype != null) {\n          builder.addProperty(property, leastSupertype, null);\n        }\n      }\n    }\n    return builder.build();\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}