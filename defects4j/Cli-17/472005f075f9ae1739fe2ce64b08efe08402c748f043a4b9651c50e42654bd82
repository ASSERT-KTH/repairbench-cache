{
    "generation": "protected void burstToken(String token, boolean stopAtNonOption)\n{\n    int i = 1;\n    for (; i < token.length(); i++)\n    {\n        String ch = String.valueOf(token.charAt(i));\n\n        if (options.hasOption(ch))\n        {\n            tokens.add(\"-\" + ch);\n            currentOption = options.getOption(ch);\n\n            if (currentOption.hasArg() && (token.length() != (i + 1)))\n            {\n                tokens.add(token.substring(i + 1));\n                break;\n            }\n        }\n        else if (stopAtNonOption)\n        {\n            process(token.substring(i));\n            i = token.length(); // exit loop after processing non-option\n            break;\n        }\n        else\n        {\n            tokens.add(\"-\" + ch);\n        }\n    }\n\n    // If we stopped bursting and there are remaining characters, add them as an argument\n    if (i < token.length() && stopAtNonOption) {\n        tokens.add(token.substring(i));\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}