{
    "generation": "/**\n * Remove the leading and trailing quotes from <code>str</code>.\n * E.g. if str is '\"one two\"', then 'one two' is returned.\n * If there are multiple leading or trailing quotes, only the outermost are removed.\n * If there is a single quote at the start or end, it is removed only if it is the outermost.\n *\n * @param str The string from which the leading and trailing quotes should be removed.\n * @return The string without the leading and trailing quotes.\n */\nstatic String stripLeadingAndTrailingQuotes(String str) {\n    // Check if the string starts with a quote and is not empty\n    if (str.length() > 0 && str.charAt(0) == '\\\"') {\n        // Check if the string ends with a quote\n        if (str.length() > 1 && str.charAt(str.length() - 1) == '\\\"') {\n            // Remove both leading and trailing quotes\n            return str.substring(1, str.length() - 1);\n        } else {\n            // Remove only the leading quote\n            return str.substring(1);\n        }\n    } else if (str.length() > 0 && str.charAt(str.length() - 1) == '\\\"') {\n        // Remove only the trailing quote\n        return str.substring(0, str.length() - 1);\n    }\n    // If no quotes are found at the start or end, return the original string\n    return str;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}