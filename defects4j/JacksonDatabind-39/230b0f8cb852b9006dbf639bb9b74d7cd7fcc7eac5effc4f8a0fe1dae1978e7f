{
    "generation": "    @Override\n    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException\n    {\n        // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit\n        //    special unfortunately\n\n        // If the current token is a FIELD_NAME, we need to advance to its value token.\n        // This is typically handled by the caller of deserialize, but if this method\n        // is called directly from a context where FIELD_NAME is the current token,\n        // it must be handled here.\n        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n            p.nextToken();\n        }\n\n        // Now, the parser is at the actual value token (START_OBJECT, START_ARRAY, or scalar).\n        // We need to consume this value entirely.\n        JsonToken currentToken = p.getCurrentToken();\n        if (currentToken == JsonToken.START_OBJECT || currentToken == JsonToken.START_ARRAY) {\n            // For container types (objects or arrays), skipChildren() consumes the entire structure.\n            p.skipChildren();\n        } else {\n            // For scalar types (string, number, boolean, null), the current token *is* the value.\n            // We need to advance the parser past this token so the caller doesn't re-read it.\n            // Calling nextToken() here moves the parser to the token *after* the current value.\n            p.nextToken();\n        }\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}