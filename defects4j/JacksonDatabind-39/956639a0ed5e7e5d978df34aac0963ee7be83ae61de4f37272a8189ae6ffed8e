{
    "generation": "    @Override\n    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException\n    {\n        // For a NullifyingDeserializer (or similar context where the value should be skipped),\n        // we must ensure the entire JSON value corresponding to the current token is consumed.\n        // This prevents the parent deserializer from encountering unparsed tokens (like 'location' in the test case)\n        // that belong to the skipped value, leading to 'UnrecognizedPropertyException'.\n        // `readValueAsTree()` is a robust way to consume the entire value,\n        // whether it's an object, array, or a scalar, and advances the parser past it.\n        p.readValueAsTree();\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}