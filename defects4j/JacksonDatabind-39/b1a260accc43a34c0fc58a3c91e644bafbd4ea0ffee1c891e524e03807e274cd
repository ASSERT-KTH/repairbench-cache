{
    "generation": "    @Override\n    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException\n    {\n        // 15-Feb-2017, tatu: Need specialized handling for FIELD_NAME start, if\n        //    skipping as part of polymorphic handling from As.PROPERTY style type id\n        //    (or explicit property)\n        // Base impl handles START_OBJECT/START_ARRAY, FIELD_NAME needs explicit handling\n        \n        JsonToken t = p.currentToken();\n\n        // If START_OBJECT or START_ARRAY, skip the whole structure\n        if (t == JsonToken.START_OBJECT || t == JsonToken.START_ARRAY) {\n            p.skipChildren();\n        } \n        // If FIELD_NAME, we are likely inside an object due to As.PROPERTY.\n        // Skip fields until the end of this object.\n        else if (t == JsonToken.FIELD_NAME) {\n            // Loop consumes tokens until the END_OBJECT matching the START_OBJECT\n            // that the TypeDeserializer consumed is reached.\n            while (true) {\n                t = p.nextToken();\n                // 23-Feb-2017, tatu: Need to be careful with EOF... easiest handled with null check\n                if (t == null) { // should not happen but safety first\n                    break;\n                }\n                if (t == JsonToken.END_OBJECT) { // target reached\n                    break;\n                }\n                if (t.isStructStart()) { // START_OBJECT / START_ARRAY\n                    // Skip nested structures\n                    p.skipChildren(); \n                }\n                // Otherwise, loop continues consuming FIELD_NAMEs and scalar values\n                // via nextToken() call above\n            }\n        }\n        // For other tokens (like a scalar value unexpectedly encountered), \n        // we may not have anything specific to do. The original call to \n        // `p.skipChildren()` would have done nothing, so we retain that behavior.\n        \n        return null;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}