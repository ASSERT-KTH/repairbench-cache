{
    "generation": "    @Override\n    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException\n    {\n        // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit\n        //    special unfortunately\n\n        // Get current token. If it's a FIELD_NAME, we need to advance to its value\n        // before attempting to skip the value itself.\n        JsonToken t = p.getCurrentToken();\n        if (t == JsonToken.FIELD_NAME) {\n            t = p.nextToken();\n        }\n\n        // If the current token is null (end of stream) or a structure end token,\n        // it means there's nothing more to skip for the current value.\n        if (t == null || t == JsonToken.END_OBJECT || t == JsonToken.END_ARRAY) {\n            return null;\n        }\n\n        // If it's a structured token (object or array), skip all its children.\n        if (t.isStructStart()) { // START_OBJECT or START_ARRAY\n            int nesting = 1;\n            while (p.nextToken() != null) {\n                t = p.currentToken();\n                if (t.isStructStart()) {\n                    nesting++;\n                } else if (t.isStructEnd()) {\n                    nesting--;\n                }\n                // Break if we've found the matching end token for the initial structure\n                if (nesting == 0) {\n                    break;\n                }\n            }\n        } else {\n            // It's a scalar value (STRING, NUMBER, BOOLEAN, NULL).\n            // We've already moved past FIELD_NAME if it was there.\n            // The parser is currently on the scalar token; we need to advance past it.\n            p.nextToken();\n        }\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}