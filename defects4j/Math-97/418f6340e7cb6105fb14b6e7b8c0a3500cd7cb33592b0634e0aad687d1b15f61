{
    "generation": "public double solve(double min, double max) throws MaxIterationsExceededException, \n    FunctionEvaluationException {\n\n    clearResult();\n    verifyInterval(min, max);\n\n    double yMin = f.value(min);\n    double yMax = f.value(max);\n\n    // if either endpoint is effectively a root, return it immediately\n    if (Math.abs(yMin) <= functionValueAccuracy) {\n        return min;\n    }\n    if (Math.abs(yMax) <= functionValueAccuracy) {\n        return max;\n    }\n\n    // Verify that the endpoints bracket a root: the signs must be opposite.\n    if (yMin * yMax > 0) {\n        throw new IllegalArgumentException(\n            \"Function values at endpoints do not have different signs. \" +\n            \"Endpoints: [\" + min + \",\" + max + \"] \" +\n            \"Values: [\" + yMin + \",\" + yMax + \"]\");\n    }\n\n    // If here, one endpoint is below zero and the other above, so use Brent's method.\n    return solve(min, yMin, max, yMax, min, yMin);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}