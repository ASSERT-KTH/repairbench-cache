{
    "generation": "public double solve(double min, double max) throws MaxIterationsExceededException, FunctionEvaluationException {\n\n    clearResult();\n    verifyInterval(min, max);\n\n    double ret = Double.NaN;\n\n    double yMin = f.value(min);\n    double yMax = f.value(max);\n\n    // Check if the function value is zero at the endpoints\n    double tolerance = getAbsoluteAccuracy();\n\n    if (Math.abs(yMin) <= tolerance) {\n        ret = min;\n        return ret;\n    }\n    if (Math.abs(yMax) <= tolerance) {\n        ret = max;\n        return ret;\n    }\n\n    // Verify bracketing\n    double sign = yMin * yMax;\n    if (sign >= 0) {\n        throw new IllegalArgumentException(\"Function values at endpoints do not have different signs.\" +\n                \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n                \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n    } else {\n        // solve using Brent's method with initial guess as min\n        ret = solve(min, yMin, max, yMax, min, yMin);\n        // either min or max is a root\n    }\n\n    return ret;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}