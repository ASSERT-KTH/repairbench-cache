{
    "generation": "    public double solve(double min, double max) throws MaxIterationsExceededException, \n        FunctionEvaluationException {\n        \n        clearResult();\n        verifyInterval(min, max);\n        \n        double ret = Double.NaN;\n        \n        double yMin = f.value(min);\n        double yMax = f.value(max);\n        \n        // Check if either endpoint is a root\n        if (yMin == 0.0) {\n            ret = min;\n        } else if (yMax == 0.0) {\n            ret = max;\n        } else {\n            double sign = yMin * yMax;\n            if (sign > 0) {\n                // Check if either value is close to zero within function value accuracy\n                if (FastMath.abs(yMin) <= getFunctionValueAccuracy()) {\n                    ret = min;\n                } else if (FastMath.abs(yMax) <= getFunctionValueAccuracy()) {\n                    ret = max;\n                } else {\n                    throw new IllegalArgumentException\n                    (\"Function values at endpoints do not have different signs.\" +\n                            \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n                            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n                }\n            } else {\n                // Solve using the Brent algorithm\n                ret = solve(min, yMin, max, yMax, min, yMin);\n            }\n        }\n\n        return ret;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}