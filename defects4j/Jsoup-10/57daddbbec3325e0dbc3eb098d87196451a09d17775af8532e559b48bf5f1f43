{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\";\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // base is unsuitable, try relUrl as absolute\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n            // workaround: java resolves '/path/file + ?foo' to '/path/?foo', not '/path/file?foo'\n            if (relUrl.startsWith(\"?\")) {\n                // preserve original path, drop existing query\n                String protocol = base.getProtocol();\n                String authority = base.getAuthority();\n                String path = base.getPath();\n                return protocol + \"://\" + authority + path + relUrl;\n            }\n            URL abs = new URL(base, relUrl);\n            return abs.toExternalForm();\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}