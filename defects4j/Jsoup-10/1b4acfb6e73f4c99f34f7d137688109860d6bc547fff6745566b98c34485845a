{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey))\n        return \"\"; // nothing to make absolute with\n\n    try {\n        URL base;\n        try {\n            base = new URL(baseUri);\n        } catch (MalformedURLException e) {\n            // the base is unsuitable, but the attribute may be absolute on its own, so try that\n            return new URL(relUrl).toExternalForm();\n        }\n\n        // If the relative URL starts with a query, manually append it to the base path to preserve the filename.\n        if (relUrl.startsWith(\"?\")) {\n            String path = base.getPath();\n            if (path == null || path.isEmpty())\n                path = \"/\";\n            return base.getProtocol() + \"://\" + base.getAuthority() + path + relUrl;\n        } else {\n            URL abs = new URL(base, relUrl);\n            return abs.toExternalForm();\n        }\n    } catch (MalformedURLException e) {\n        return \"\";\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}