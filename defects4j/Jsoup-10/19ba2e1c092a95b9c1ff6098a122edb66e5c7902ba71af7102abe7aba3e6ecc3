{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // The base is unsuitable; try treating the attribute as an absolute URL\n                try {\n                    URL abs = new URL(relUrl);\n                    return abs.toExternalForm();\n                } catch (MalformedURLException e2) {\n                    return \"\";\n                }\n            }\n            // Resolve the relative URL using URI's resolve method\n            try {\n                URI baseUri = new URI(base.toString());\n                URI absUri = baseUri.resolve(relUrl);\n                URL abs = new URL(absUri.toString());\n                return abs.toExternalForm();\n            } catch (URISyntaxException e) {\n                return \"\";\n            }\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}