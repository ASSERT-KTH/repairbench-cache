{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    }\n    try {\n        URL base = null;\n        try {\n            base = new URL(baseUri);\n        } catch (MalformedURLException e) {\n            // the base is unsuitable, but the attribute may be abs on its own, so try that\n            URL abs = new URL(relUrl);\n            return abs.toExternalForm();\n        }\n        // Custom handling for paths with query only (java.net.URL bug workaround)\n        // If relUrl starts with '?', append it to the file of base\n        if (relUrl.startsWith(\"?\")) {\n            String basePath = base.getProtocol() + \"://\" + base.getAuthority() + base.getPath();\n            return basePath + relUrl;\n        }\n        URL abs = new URL(base, relUrl);\n        return abs.toExternalForm();\n    } catch (MalformedURLException e) {\n        return \"\";\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}