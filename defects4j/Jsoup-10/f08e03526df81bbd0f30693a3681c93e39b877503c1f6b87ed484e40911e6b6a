{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        try {\n            URL base;\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n            // Workaround: Manually resolve relative queries correctly\n            if (relUrl.startsWith(\"?\")) {\n                String baseStr = base.toExternalForm();\n                int idx = baseStr.indexOf('?');\n                String noQuery = (idx != -1) ? baseStr.substring(0, idx) : baseStr;\n                String absStr = noQuery + relUrl;\n                try {\n                    URL abs = new URL(absStr);\n                    return abs.toExternalForm();\n                } catch (MalformedURLException e) {\n                    return \"\";\n                }\n            } else {\n                URL abs = new URL(base, relUrl);\n                return abs.toExternalForm();\n            }\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}