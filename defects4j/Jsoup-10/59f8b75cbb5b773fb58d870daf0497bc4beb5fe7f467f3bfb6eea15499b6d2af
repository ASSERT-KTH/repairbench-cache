{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n            // Fix for Java URL resolution issue:\n            // if relUrl starts with \"?\" (i.e., it's a query string only), append to the base without truncating path\n            if (relUrl.startsWith(\"?\")) {\n                String baseUrlNoQuery = base.toExternalForm();\n                int q = baseUrlNoQuery.indexOf('?');\n                if (q != -1) {\n                    baseUrlNoQuery = baseUrlNoQuery.substring(0, q);\n                }\n                relUrl = baseUrlNoQuery + relUrl;\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            } else {\n                URL abs = new URL(base, relUrl);\n                return abs.toExternalForm();\n            }\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}