{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        // jsoup custom workaround for Java's URL behavior when resolving rel URLs like \"?foo\"\n        // see https://github.com/jhy/jsoup/issues/51\n        try {\n            URL base;\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n            // custom handling for relUrl starting with \"?\"\n            if (relUrl.startsWith(\"?\")) {\n                // Keep the filename from the path\n                String basePath = base.getPath();\n                int lastSlash = basePath.lastIndexOf('/');\n                String fileName = lastSlash == -1 ? basePath : basePath.substring(lastSlash + 1);\n\n                // If there is no filename, fallback to normal java.net.URL behavior\n                if (!fileName.isEmpty()) {\n                    StringBuilder absUrl = new StringBuilder();\n                    absUrl.append(base.getProtocol());\n                    absUrl.append(\"://\");\n                    absUrl.append(base.getHost());\n                    if (base.getPort() != -1) {\n                        absUrl.append(\":\").append(base.getPort());\n                    }\n                    if (lastSlash >= 0) {\n                        absUrl.append(basePath.substring(0, lastSlash + 1));\n                    } else {\n                        absUrl.append(\"/\");\n                    }\n                    absUrl.append(fileName);\n                    absUrl.append(relUrl);\n                    return absUrl.toString();\n                }\n            }\n            // otherwise default path\n            URL abs = new URL(base, relUrl);\n            return abs.toExternalForm();\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}