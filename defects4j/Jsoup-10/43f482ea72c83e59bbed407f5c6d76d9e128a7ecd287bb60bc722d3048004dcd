{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    }\n\n    try {\n        URL base;\n        try {\n            base = new URL(baseUri);\n        } catch (MalformedURLException e) {\n            // the base is unsuitable, but the attribute may be absolute on its own\n            URL abs = new URL(relUrl);\n            return abs.toExternalForm();\n        }\n\n        // workaround: java resolves \"http://host/path/file + ?foo\" to \"http://host/path/?foo\"\n        // but we want \"http://host/path/file?foo\"\n        if (relUrl.startsWith(\"?\")) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(base.getProtocol());\n            sb.append(\"://\");\n            sb.append(base.getAuthority());\n            sb.append(base.getPath());\n            sb.append(relUrl);\n            return sb.toString();\n        }\n\n        URL abs = new URL(base, relUrl);\n        return abs.toExternalForm();\n    } catch (MalformedURLException e) {\n        return \"\";\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}