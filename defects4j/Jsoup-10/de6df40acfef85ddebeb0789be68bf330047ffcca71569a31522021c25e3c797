{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    }\n    try {\n        URL base;\n        try {\n            base = new URL(baseUri);\n        } catch (MalformedURLException e) {\n            // The baseUri is not a valid URL, so attempt to treat relUrl as absolute.\n            URL abs = new URL(relUrl);\n            return abs.toExternalForm();\n        }\n        // Workaround for Java's URL resolution of query-only relative URLs (e.g. \"?foo\")\n        if (relUrl.startsWith(\"?\")) {\n            String baseStr = base.toExternalForm();\n            int questionMarkIndex = baseStr.indexOf('?');\n            if (questionMarkIndex != -1) {\n                baseStr = baseStr.substring(0, questionMarkIndex);\n            }\n            return baseStr + relUrl;\n        }\n        URL abs = new URL(base, relUrl);\n        return abs.toExternalForm();\n    } catch (MalformedURLException e) {\n        return \"\";\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}