{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n\n            // fix for java.net.URL behavior:\n            // If relUrl starts with \"?\", resolve relative to base's path\n            if (relUrl.startsWith(\"?\")) {\n                String baseUrlStr = base.toExternalForm();\n                int q = baseUrlStr.indexOf('?');\n                if (q != -1)\n                    baseUrlStr = baseUrlStr.substring(0, q); // strip existing query\n                if (!baseUrlStr.endsWith(\"/\")) {\n                    // check if URL ends with filename or directory\n                    int lastSlash = baseUrlStr.lastIndexOf('/');\n                    if (lastSlash > 0 && lastSlash < baseUrlStr.length() - 1) {\n                        String lastSegment = baseUrlStr.substring(lastSlash +1);\n                        if (!lastSegment.contains(\".\")) {\n                            // no dot in segment: seems path ends with directory, leave trailing slash\n                        } else {\n                            // has dot: likely filename, keep as is\n                        }\n                    }\n                }\n                relUrl = baseUrlStr + relUrl;\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n\n            URL abs = new URL(base, relUrl);\n            return abs.toExternalForm();\n\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}