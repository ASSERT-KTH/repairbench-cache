{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n\n            // Handle special case where relUrl is a query without a path component\n            if (relUrl.startsWith(\"?\")) {\n                // Extract the path from base URI (without query) and append the new query\n                String basePath = base.getPath();\n                String baseWithoutQuery = base.toExternalForm().split(\"\\\\?\")[0];\n                if (basePath.endsWith(\"/\")) {\n                    // If base path ends with /, keep it (for directory-like paths)\n                    return baseWithoutQuery + relUrl;\n                } else {\n                    // For file-like paths, find the last path component and replace just the query\n                    String lastSlashPath = baseWithoutQuery.substring(0, baseWithoutQuery.lastIndexOf('/') + 1);\n                    String filePart = baseWithoutQuery.substring(baseWithoutQuery.lastIndexOf('/') + 1);\n                    if (lastSlashPath.isEmpty()) {\n                        // For cases where there's no slash in path (e.g., http://host)\n                        return baseWithoutQuery + relUrl;\n                    }\n                    return lastSlashPath + filePart + relUrl;\n                }\n            }\n\n            // Normal case\n            URL abs = new URL(base, relUrl);\n            return abs.toExternalForm();\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}