{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey))\n        return \"\";\n\n    try {\n        URL base;\n        try {\n            base = new URL(baseUri);\n        } catch (MalformedURLException e) {\n            // The base is unsuitable; try interpreting relUrl as an absolute URL.\n            return new URL(relUrl).toExternalForm();\n        }\n        // Special-case: if the relative URL is just a query (e.g. \"?foo\"), then append it to the base's path.\n        if (relUrl.startsWith(\"?\"))\n            return new URL(base.getProtocol(), base.getHost(), base.getPort(), base.getPath() + relUrl)\n                    .toExternalForm();\n\n        URL abs = new URL(base, relUrl);\n        return abs.toExternalForm();\n    } catch (MalformedURLException e) {\n        return \"\";\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}