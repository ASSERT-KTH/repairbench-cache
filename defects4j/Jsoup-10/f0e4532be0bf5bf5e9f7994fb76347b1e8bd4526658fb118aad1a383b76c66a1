{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n            // workaround: java resolves '//path/file + ?foo' to '//path/?foo' as desired\n            // but we need to handle cases where relUrl starts with '?'\n            if (relUrl.startsWith(\"?\")) {\n                // Handle relative query by appending to base URL without path\n                String basePath = base.toString();\n                int queryPos = basePath.indexOf('?');\n                if (queryPos != -1) {\n                    basePath = basePath.substring(0, queryPos);\n                }\n                return basePath + relUrl;\n            } else {\n                URL abs = new URL(base, relUrl);\n                return abs.toExternalForm();\n            }\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}