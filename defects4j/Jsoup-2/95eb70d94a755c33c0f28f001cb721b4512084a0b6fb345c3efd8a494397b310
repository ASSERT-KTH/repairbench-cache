{
    "generation": "private void parseStartTag() {\n    tq.consume(\"<\");\n    String tagName = tq.consumeWord();\n\n    if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text\n        tq.addFirst(\"&lt;\");\n        parseTextNode();\n        return;\n    }\n\n    Attributes attributes = new Attributes();\n    while (!tq.matchesAny(\"<\", \"/>\", \">\") && !tq.isEmpty()) {\n        Attribute attribute = parseAttribute();\n        if (attribute != null)\n            attributes.put(attribute);\n    }\n\n    Tag tag = Tag.valueOf(tagName);\n    Element child = new Element(tag, baseUri, attributes);\n\n    // For data tags (e.g. script, style), the content is treated as raw text and the tag\n    // is immediately closed (so subsequent text won't be added inside it)\n    if (tag.isData()) {\n        tq.matchChomp(\">\"); // finish the start tag\n        // Grab everything up to the proper closing tag\n        String data = tq.chompTo(\"</\" + tagName + \">\");\n        tq.consume(\"</\" + tagName + \">\"); // fully consume the closing tag\n\n        Node dataNode;\n        if (tag.equals(titleTag) || tag.equals(textareaTag))\n            dataNode = TextNode.createFromEncoded(data, baseUri);\n        else\n            dataNode = new DataNode(data, baseUri);\n        child.appendChild(dataNode);\n        // Mark as empty so the element is not pushed onto (or left on) the stack.\n        addChildToParent(child, true);\n    } else {\n        boolean isEmptyElement = tag.isEmpty(); // empty if the tag is an empty tag (e.g. img) or self-closed\n        if (tq.matchChomp(\"/>\")) {\n            isEmptyElement = true;\n        } else {\n            tq.matchChomp(\">\");\n        }\n        addChildToParent(child, isEmptyElement);\n    }\n\n    // <base href>: update the base uri if found\n    if (child.tagName().equals(\"base\")) {\n        String href = child.absUrl(\"href\");\n        if (href.length() != 0) { // ignore other attributes like <base target>\n            baseUri = href;\n            doc.setBaseUri(href);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}