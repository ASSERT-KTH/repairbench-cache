{
    "generation": "// --- fixed parseStartTag() in HtmlTreeBuilder.java ---\nprivate void parseStartTag() {\n    tq.consume(\"<\");\n    String tagName = tq.consumeWord();\n\n    if (tagName.length() == 0) { // not a real tag, treat as text\n        tq.addFirst(\"&lt;\");\n        parseTextNode();\n        return;\n    }\n\n    // read attributes\n    Attributes attributes = new Attributes();\n    while (!tq.matchesAny(\"<\", \"/>\", \">\") && !tq.isEmpty()) {\n        Attribute attribute = parseAttribute();\n        if (attribute != null)\n            attributes.put(attribute);\n    }\n\n    Tag tag = Tag.valueOf(tagName);\n    Element child = new Element(tag, baseUri, attributes);\n\n    // determine if this is an empty element\n    boolean isEmptyElement = tag.isEmpty();\n    if (tq.matchChomp(\"/>\")) {\n        isEmptyElement = true;\n    } else {\n        tq.matchChomp(\">\");\n    }\n\n    // add to the tree (and push on stack if not empty)\n    addChildToParent(child, isEmptyElement);\n\n    // special handling for data\u2010only tags (script, textarea)\n    if (tag.isData()) {\n        // consume everything up to the end tag\n        String data = tq.chompTo(\"</\" + tagName);\n        // consume the closing '>'\n        tq.matchChomp(\">\");\n\n        // create the appropriate node\n        Node dataNode;\n        if (tag.equals(titleTag) || tag.equals(textareaTag)) {\n            dataNode = TextNode.createFromEncoded(data, baseUri);\n        } else {\n            dataNode = new DataNode(data, baseUri);\n        }\n        child.appendChild(dataNode);\n\n        // since we've consumed the end tag manually, pop this element\n        // off the stack so further text goes into its parent:\n        stack.remove(stack.size() - 1);\n    }\n\n    // handle <base href>\n    if (child.tagName().equals(\"base\")) {\n        String href = child.absUrl(\"href\");\n        if (href.length() != 0) {\n            baseUri = href;\n            doc.setBaseUri(href);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}