{
    "generation": "private void parseStartTag() {\n    tq.consume(\"<\");\n    String tagName = tq.consumeWord();\n\n    if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text\n        tq.addFirst(\"&lt;\");\n        parseTextNode();\n        return;\n    }\n\n    Attributes attributes = new Attributes();\n    while (!tq.matchesAny(\"<\", \"/>\", \">\") && !tq.isEmpty()) {\n        Attribute attribute = parseAttribute();\n        if (attribute != null)\n            attributes.put(attribute);\n    }\n\n    Tag tag = Tag.valueOf(tagName);\n    Element child = new Element(tag, baseUri, attributes);\n\n    boolean isEmptyElement = tag.isEmpty(); // normally, empty element if tag is defined as empty (eg: img)\n    if (tq.matchChomp(\"/>\")) { // self-closing tag syntax: <tag/>\n        isEmptyElement = true;\n    } else {\n        tq.matchChomp(\">\");\n    }\n    // For data tags (like script, textarea), we do not want to allow additional parsed content,\n    // so treat them as if they were self closed.\n    if (tag.isData())\n        isEmptyElement = true;\n\n    addChildToParent(child, isEmptyElement);\n\n    // For pcdata tags (textarea, script) we manually chomp to the closing tag and add the text as a child.\n    if (tag.isData()) {\n        String data = tq.chompTo(\"</\" + tagName + \">\");\n        // Consume the closing tag\n        tq.consume(\"</\" + tagName + \">\");\n        \n        Node dataNode;\n        if (tag.equals(titleTag) || tag.equals(textareaTag))\n            dataNode = TextNode.createFromEncoded(data, baseUri);\n        else\n            dataNode = new DataNode(data, baseUri);\n        child.appendChild(dataNode);\n    }\n\n    // <base href>: update the base uri\n    if (child.tagName().equals(\"base\")) {\n        String href = child.absUrl(\"href\");\n        if (href.length() != 0) { // ignore e.g. <base target> etc.\n            baseUri = href;\n            doc.setBaseUri(href); // update doc so that later element creation gets the proper base uri\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}