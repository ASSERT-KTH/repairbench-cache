{
    "generation": "private void parseStartTag() {\n    tq.consume(\"<\");\n    String tagName = tq.consumeWord();\n\n    if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text\n        tq.addFirst(\"&lt;\");\n        parseTextNode();\n        return;\n    }\n\n    Attributes attributes = new Attributes();\n    while (!tq.matchesAny(\"<\", \"/>\", \">\") && !tq.isEmpty()) {\n        Attribute attribute = parseAttribute();\n        if (attribute != null)\n            attributes.put(attribute);\n    }\n\n    Tag tag = Tag.valueOf(tagName);\n    Element child = new Element(tag, baseUri, attributes);\n\n    boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>\n    if (tq.matchChomp(\"/>\")) { // close empty element or tag\n        isEmptyElement = true;\n    } else {\n        tq.matchChomp(\">\");\n    }\n    addChildToParent(child, isEmptyElement);\n\n    // pc data only tags (textarea, script): chomp to end tag, add content as text node\n    if (tag.isData()) {\n        String data = tq.chompTo(\"</\" + tagName);\n        if (!tq.matchChomp(\"</\" + tagName)) {\n            // End tag not found, just append what we got\n            Node dataNode;\n            if (tag.equals(titleTag) || tag.equals(textareaTag))\n                dataNode = TextNode.createFromEncoded(data, baseUri);\n            else\n                dataNode = new DataNode(data, baseUri);\n            child.appendChild(dataNode);\n        } else {\n            // After chompTo, the tagName is at front, so now consume the end tag and '>'\n            tq.matchChomp(\">\");\n            Node dataNode;\n            if (tag.equals(titleTag) || tag.equals(textareaTag))\n                dataNode = TextNode.createFromEncoded(data, baseUri);\n            else\n                dataNode = new DataNode(data, baseUri);\n            child.appendChild(dataNode);\n            // Now, parse the end tag properly to keep parsing correctly after script/textarea tags\n            Element parent = currentElement();\n            if (parent != null && parent.tag().equals(tag)) {\n                popStackToClose(tagName);\n            }\n        }\n    }\n\n    // <base href>: update the base uri\n    if (child.tagName().equals(\"base\")) {\n        String href = child.absUrl(\"href\");\n        if (href.length() != 0) { // ignore <base target> etc\n            baseUri = href;\n            doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}