{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = serializers.getAnnotationIntrospector()\n                .findFormat((Annotated) property.getMember());\n        if (format != null) {\n            JsonFormat.Shape shape = format.getShape();\n            if (shape.isNumeric()) {\n                return withFormat(Boolean.TRUE, null);\n            }\n            // Force use of String format if either the shape is explicitly STRING\n            // OR if shape is ANY but one of the pattern/locale/timeZone properties has been set.\n            if (shape == JsonFormat.Shape.STRING\n                    || (shape == JsonFormat.Shape.ANY\n                        && (format.hasPattern() || format.hasLocale() || format.getTimeZone() != null))) {\n                TimeZone tz = format.getTimeZone();\n                final String pattern = format.hasPattern()\n                        ? format.getPattern()\n                        : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = format.hasLocale()\n                        ? format.getLocale()\n                        : serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                df.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, df);\n            }\n        }\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}