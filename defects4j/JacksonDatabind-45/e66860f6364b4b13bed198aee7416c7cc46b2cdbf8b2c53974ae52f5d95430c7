{
    "generation": "    @Override\n    public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException\n    {\n        if (property != null) {\n            JsonFormat.Value format = serializers.getAnnotationIntrospector()\n                    .findFormat((Annotated) property.getMember());\n            if (format != null) {\n                JsonFormat.Shape shape = format.getShape();\n                TimeZone tzAnn = format.getTimeZone();\n\n                // numeric timestamp?\n                if (shape.isNumeric()) {\n                    return withFormat(Boolean.TRUE, null);\n                }\n                // explicit STRING shape, or any pattern/locale/timezone => force string\n                if (shape == JsonFormat.Shape.STRING\n                        || format.hasPattern()\n                        || format.hasLocale()\n                        || tzAnn != null) {\n                    final String pattern = format.hasPattern()\n                            ? format.getPattern()\n                            : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                    final Locale loc = format.hasLocale()\n                            ? format.getLocale()\n                            : serializers.getLocale();\n                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                    TimeZone tz = (tzAnn != null) ? tzAnn : serializers.getTimeZone();\n                    df.setTimeZone(tz);\n                    return withFormat(Boolean.FALSE, df);\n                }\n            }\n        }\n        return this;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}