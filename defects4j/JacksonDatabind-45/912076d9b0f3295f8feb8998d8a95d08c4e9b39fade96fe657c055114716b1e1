{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException\n{\n    if (property != null) {\n        JsonFormat.Value format = serializers.getAnnotationIntrospector()\n                .findFormat((Annotated) property.getMember());\n        if (format != null) {\n            JsonFormat.Shape shape = format.getShape();\n            // explicit numeric?\n            if (shape.isNumeric()) {\n                return withFormat(Boolean.TRUE, null);\n            }\n            // explicit string OR pattern OR locale OR timezone -> string\n            boolean hasPattern = format.hasPattern();\n            boolean hasLocale = format.hasLocale();\n            TimeZone tzAnn = format.getTimeZone();\n            boolean hasTimezone = (tzAnn != null);\n            if (shape == JsonFormat.Shape.STRING\n                    || hasPattern\n                    || hasLocale\n                    || hasTimezone) {\n                final String pattern = hasPattern\n                        ? format.getPattern()\n                        : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = hasLocale\n                        ? format.getLocale()\n                        : serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                df.setTimeZone(hasTimezone\n                        ? tzAnn\n                        : serializers.getTimeZone());\n                return withFormat(Boolean.FALSE, df);\n            }\n        }\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}