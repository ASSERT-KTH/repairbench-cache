{
    "generation": "    @Override\n    public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException\n    {\n        if (property != null) {\n            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());\n            if (format != null) {\n\n                JsonFormat.Shape shape = format.getShape();\n                if (shape.isNumeric()) {\n                    return withFormat(Boolean.TRUE, null);\n                }\n\n                // Handle Shape.ANY by respecting the serialization feature\n                if (shape == JsonFormat.Shape.ANY || shape == JsonFormat.Shape.STRING) {\n                    TimeZone tz = format.getTimeZone();\n                    final String pattern = format.getPattern(); // null if not specified\n                    boolean useTimestamp = false;\n\n                    // If pattern is specified, we must use string format\n                    if (format.hasPattern()) {\n                        useTimestamp = false;\n                    }\n                    // If no pattern but we're configured to write timestamps\n                    else if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {\n                        useTimestamp = true;\n                    }\n\n                    if (!useTimestamp) {\n                        final String effectivePattern = (pattern != null)\n                                    ? pattern\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                        final Locale loc = format.hasLocale()\n                                    ? format.getLocale()\n                                    : serializers.getLocale();\n                        SimpleDateFormat df = new SimpleDateFormat(effectivePattern, loc);\n                        if (tz == null) {\n                            tz = serializers.getTimeZone();\n                        }\n                        df.setTimeZone(tz);\n                        return withFormat(Boolean.FALSE, df);\n                    } else {\n                        return withFormat(Boolean.TRUE, null);\n                    }\n                }\n            }\n        }\n        // Default case: respect serialization feature if no format annotation\n        if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {\n            return withFormat(Boolean.TRUE, null);\n        }\n        return this;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}