{
    "generation": "    @Override\n    public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException\n    {\n        if (property != null) {\n            JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n            if (format != null) {\n                JsonFormat.Shape shape = format.getShape();\n\n                // Simple case first: serialize as numeric timestamp?\n                if (shape.isNumeric()) {\n                    return withFormat(Boolean.TRUE, null);\n                }\n\n                // If shape is explicitly String, or Shape.ANY is used and pattern/locale/timezone is set,\n                // treat as String format.\n                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()\n                        || format.hasLocale() || format.hasTimeZone()) {\n                    TimeZone tz = format.getTimeZone();\n                    final String pattern = format.hasPattern()\n                                    ? format.getPattern()\n                                    // IMPORTANT: must default to ISO8601 here, for Shape.ANY cases that indicate String\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                    final Locale loc = format.hasLocale()\n                                    ? format.getLocale()\n                                    : serializers.getLocale();\n                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                    if (tz == null) {\n                        tz = serializers.getTimeZone();\n                    }\n                    df.setTimeZone(tz);\n                    return withFormat(Boolean.FALSE, df);\n                }\n                // Otherwise, shape is ANY and no overrides, or specific shape not handleable (OBJECT/ARRAY/etc);\n                // let base class deal with it (via defaults)\n            }\n        }\n        // If no annotation, or shape is Shape.ANY without overrides, return default instance\n        return this;\n    }\n\n    // Helper method needed by the corrected logic, assuming it exists in the base class\n    // or can be added. If not, replace its call with the original introspection code:\n    // serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());\n    // This is just to make the provided snippet self-contained conceptually.\n    // The original code used: serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());\n    // So, let's revert to that to match the original structure exactly.\n\n    @Override\n    public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException\n    {\n        if (property != null) {\n            // Find format settings via property annotations (if any)\n            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());\n            if (format != null) {\n\n                JsonFormat.Shape shape = format.getShape();\n\n                // Simple case first: serialize as numeric timestamp?\n                if (shape.isNumeric()) {\n                    return withFormat(Boolean.TRUE, null);\n                }\n\n                // If shape is explicitly String, or Shape.ANY is used and pattern/locale/timezone is set,\n                // treat as String format.\n                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()\n                        || format.hasLocale() || format.hasTimeZone()) {\n                    TimeZone tz = format.getTimeZone();\n                    final String pattern = format.hasPattern()\n                                    ? format.getPattern()\n                                    // IMPORTANT: must default to ISO8601 here, for Shape.ANY cases that indicate String\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                    final Locale loc = format.hasLocale()\n                                    ? format.getLocale()\n                                    : serializers.getLocale();\n                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                    if (tz == null) {\n                        tz = serializers.getTimeZone();\n                    }\n                    df.setTimeZone(tz);\n                    return withFormat(Boolean.FALSE, df);\n                }\n                // Otherwise, shape is ANY and no overrides, or specific shape not handleable (OBJECT/ARRAY/etc);\n                // let configuration deal with it (via defaults)\n            }\n        }\n        // If no annotation, or shape is Shape.ANY without overrides, return `this` unmodified\n        return this;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}