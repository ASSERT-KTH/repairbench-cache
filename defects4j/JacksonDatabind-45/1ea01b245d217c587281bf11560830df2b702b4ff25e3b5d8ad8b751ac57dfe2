{
    "generation": "    @Override\n    public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException {\n        if (property != null) {\n            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());\n            if (format != null) {\n                JsonFormat.Shape shape = format.getShape();\n\n                if (shape.isNumeric()) {\n                    return withFormat(Boolean.TRUE, null);\n                } else {\n                    // Determine if the format has any parameters that enforce string serialization\n                    boolean enforceString = shape == JsonFormat.Shape.ANY &&\n                                           (format.hasPattern() || format.getTimeZone() != null || format.getLocale() != null);\n                    if (shape == JsonFormat.Shape.STRING || enforceString) {\n                        TimeZone timeZone = format.getTimeZone();\n                        String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                        Locale locale = format.hasLocale() ? format.getLocale() : serializers.getLocale();\n                        SimpleDateFormat df = new SimpleDateFormat(pattern, locale);\n                        if (timeZone == null) {\n                            timeZone = serializers.getTimeZone();\n                        }\n                        df.setTimeZone(timeZone);\n                        return withFormat(Boolean.FALSE, df);\n                    } else {\n                        // No format parameters provided; default to the global setting\n                        boolean asTimestamps = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n                        return withFormat(asTimestamps, null);\n                    }\n                }\n            }\n        }\n        return this;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}