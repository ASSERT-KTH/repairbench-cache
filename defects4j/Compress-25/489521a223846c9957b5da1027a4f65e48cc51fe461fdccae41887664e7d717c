{
    "generation": "/**\n * @param encoding the encoding to use for file names, use null\n * for the platform's default encoding\n * @param useUnicodeExtraFields whether to use InfoZIP Unicode\n * Extra Fields (if present) to set the file names.\n * @param allowStoredEntriesWithDataDescriptor whether the stream\n * will try to read STORED entries that use a data descriptor\n * @since 1.1\n */\npublic ZipArchiveInputStream(InputStream inputStream,\n                             String encoding,\n                             boolean useUnicodeExtraFields,\n                             boolean allowStoredEntriesWithDataDescriptor) {\n    zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);\n    this.useUnicodeExtraFields = useUnicodeExtraFields;\n    // Fix: ensure the PushbackInputStream is initialized with at least MIN_BUF_SIZE bytes,\n    // or use a constant buffer size (like 512) instead of buf.capacity() which is likely 0.\n    // Assume MIN_BUF_SIZE = 512 as in the source code.\n    in = new PushbackInputStream(inputStream, MIN_BUF_SIZE);\n    this.allowStoredEntriesWithDataDescriptor =\n        allowStoredEntriesWithDataDescriptor;\n    // haven't read anything so far\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}