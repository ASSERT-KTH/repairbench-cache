{
    "generation": "/**\n * @param encoding the encoding to use for file names, use null\n *                 for the platform's default encoding\n * @param useUnicodeExtraFields whether to use InfoZIP Unicode\n *                              Extra Fields (if present) to set the file names.\n * @param allowStoredEntriesWithDataDescriptor whether the stream\n *                                             will try to read STORED entries that use a data descriptor\n * @since 1.1\n */\npublic ZipArchiveInputStream(InputStream inputStream,\n                             String encoding,\n                             boolean useUnicodeExtraFields,\n                             boolean allowStoredEntriesWithDataDescriptor) {\n    zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);\n    this.useUnicodeExtraFields = useUnicodeExtraFields;\n    // wrap in a PushbackInputStream large enough to handle any\n    // possible local\u2010file\u2010header/data\u2010descriptor overlap\n    in = new PushbackInputStream(inputStream, buf.capacity());\n    // COMPRESS-264: always enable STORED-with-data-descriptor support by default\n    this.allowStoredEntriesWithDataDescriptor = true;\n    // haven't read anything so far\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}