{
    "generation": "@Override\npublic XYDataItem addOrUpdate(Number x, Number y) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Null 'x' argument.\");\n    }\n\n    XYDataItem overwritten = null;\n    int index = indexOf(x);\n\n    // update existing item if duplicates are not allowed\n    if (index >= 0 && !this.allowDuplicateXValues) {\n        XYDataItem existing = this.data.get(index);\n        try {\n            overwritten = (XYDataItem) existing.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            throw new SeriesException(\"Couldn't clone XYDataItem!\");\n        }\n        existing.setY(y);\n    }\n    else {\n        // create a new data item\n        XYDataItem newItem = new XYDataItem(x, y);\n\n        // figure out where to insert it\n        if (this.autoSort) {\n            int insertionIndex;\n            if (this.allowDuplicateXValues) {\n                // use binary search to find the spot, then move past any equals\n                int pos = Collections.binarySearch(this.data, newItem);\n                if (pos < 0) {\n                    insertionIndex = -pos - 1;\n                }\n                else {\n                    insertionIndex = pos + 1;\n                    int max = this.data.size();\n                    while (insertionIndex < max\n                           && this.data.get(insertionIndex).getX().equals(x)) {\n                        insertionIndex++;\n                    }\n                }\n            }\n            else {\n                // index is negative (not found), so compute insertion point\n                insertionIndex = -index - 1;\n            }\n            this.data.add(insertionIndex, newItem);\n        }\n        else {\n            // unsorted: always append\n            this.data.add(newItem);\n        }\n\n        // enforce maximum item count\n        if (getItemCount() > this.maximumItemCount) {\n            this.data.remove(0);\n        }\n    }\n\n    fireSeriesChanged();\n    return overwritten;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}