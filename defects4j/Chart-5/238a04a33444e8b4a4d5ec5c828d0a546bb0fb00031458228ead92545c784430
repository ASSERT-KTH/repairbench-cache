{
    "generation": "public XYDataItem addOrUpdate(Number x, Number y) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Null 'x' argument.\");\n    }\n\n    XYDataItem overwritten = null;\n    int index = indexOf(x);\n\n    if (index >= 0 && !this.allowDuplicateXValues) {\n        XYDataItem existing = (XYDataItem) this.data.get(index);\n        try {\n            overwritten = (XYDataItem) existing.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            throw new SeriesException(\"Couldn't clone XYDataItem!\");\n        }\n        existing.setY(y);\n    } else {\n        // Handle allowDuplicateXValues case\n        int insertIndex;\n        if (this.autoSort) {\n            if (index < 0) {\n                insertIndex = -index - 1;\n            } else if (this.allowDuplicateXValues) {\n                // insert after the existing item with the same x-value\n                insertIndex = index + 1;\n                // scan forward to find the last identical x-value\n                int size = this.data.size();\n                while (insertIndex < size \n                        && x.compareTo(getX(insertIndex)) == 0) {\n                    insertIndex++;\n                }\n            } else {\n                insertIndex = -index -1; // fallback, should not happen\n            }\n            this.data.add(insertIndex, new XYDataItem(x, y));\n        } else {\n            this.data.add(new XYDataItem(x, y));\n        }\n        if (getItemCount() > this.maximumItemCount) {\n            this.data.remove(0);\n        }\n    }\n    fireSeriesChanged();\n    return overwritten;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}