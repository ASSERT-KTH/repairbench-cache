{
    "generation": "public XYDataItem addOrUpdate(Number x, Number y) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Null 'x' argument.\");\n    }\n    \n    XYDataItem overwritten = null;\n    int index = indexOf(x);\n    \n    // If a matching x-value exists and we do not allow duplicates, update the existing item.\n    if (index >= 0 && !this.allowDuplicateXValues) {\n        XYDataItem existing = (XYDataItem) this.data.get(index);\n        try {\n            overwritten = (XYDataItem) existing.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            throw new SeriesException(\"Couldn't clone XYDataItem!\");\n        }\n        existing.setY(y);\n    }\n    else {\n        XYDataItem newItem = new XYDataItem(x, y);\n        if (this.autoSort) {\n            int insertionPoint;\n            // If duplicates are allowed and a matching value was found,\n            // find the position after the last duplicate so that items with the same x stay in insertion order.\n            if (this.allowDuplicateXValues && index >= 0) {\n                insertionPoint = index;\n                while (insertionPoint < this.data.size()) {\n                    XYDataItem item = (XYDataItem) this.data.get(insertionPoint);\n                    if (!item.getX().equals(x)) {\n                        break;\n                    }\n                    insertionPoint++;\n                }\n            }\n            else if (index < 0) {\n                insertionPoint = -index - 1;\n            }\n            else {\n                insertionPoint = index;\n            }\n            this.data.add(insertionPoint, newItem);\n        }\n        else {\n            this.data.add(newItem);\n        }\n        // Ensure we do not exceed the maximum count of items.\n        if (getItemCount() > this.maximumItemCount) {\n            this.data.remove(0);\n        }\n    }\n    fireSeriesChanged();\n    return overwritten;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}