{
    "generation": "public XYDataItem addOrUpdate(Number x, Number y) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Null 'x' argument.\");\n    }\n\n    // if we get to here, we know that duplicate X values are not permitted\n    XYDataItem overwritten = null;\n    int index = indexOf(x);\n    if (index >= 0 && !this.allowDuplicateXValues) {\n        XYDataItem existing = (XYDataItem) this.data.get(index);\n        try {\n            overwritten = (XYDataItem) existing.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            throw new SeriesException(\"Couldn't clone XYDataItem!\");\n        }\n        existing.setY(y);\n    }\n    else {\n        if (index >= 0) {\n            // Remove existing item if it's not allowing duplicates but something went wrong...\n            this.data.remove(index);\n        }\n        if (this.autoSort) {\n            // Find the insert position\n            index = Collections.binarySearch(this.xValues, x);\n            if (index >= 0) {\n                // Shouldn't happen because allowDuplicateXValues is true when index >=0\n                this.data.add(index, new XYDataItem(x, y));\n            } else {\n                // Insert at the correct position\n                this.data.add(-index - 1, new XYDataItem(x, y));\n            }\n        } else {\n            this.data.add(new XYDataItem(x, y));\n        }\n        // check if this addition will exceed the maximum item count...\n        if (getItemCount() > this.maximumItemCount) {\n            this.data.remove(0);\n        }\n    }\n    fireSeriesChanged();\n    return overwritten;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}