{
    "generation": "public XYDataItem addOrUpdate(Number x, Number y) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Null 'x' argument.\");\n    }\n    XYDataItem overwritten = null;\n    int index = indexOf(x);\n    if (index >= 0 && !this.allowDuplicateXValues) {\n        XYDataItem existing = (XYDataItem) this.data.get(index);\n        try {\n            overwritten = (XYDataItem) existing.clone();\n        } catch (CloneNotSupportedException e) {\n            throw new SeriesException(\"Couldn't clone XYDataItem!\");\n        }\n        existing.setY(y);\n    } else {\n        XYDataItem newItem = new XYDataItem(x, y);\n        if (this.autoSort) {\n            int insertionIndex;\n            if (index >= 0) { \n                // Duplicates allowed and an item with the same x was found.\n                // Insert the new item after all existing items with the same x value.\n                insertionIndex = index + 1;\n                while (insertionIndex < this.data.size() &&\n                        x.equals(((XYDataItem) this.data.get(insertionIndex)).getX())) {\n                    insertionIndex++;\n                }\n            } else {\n                // No duplicate found - use the negative insertion point returned by binarySearch.\n                insertionIndex = -index - 1;\n            }\n            this.data.add(insertionIndex, newItem);\n        } else {\n            this.data.add(newItem);\n        }\n        if (getItemCount() > this.maximumItemCount) {\n            this.data.remove(0);\n        }\n    }\n    fireSeriesChanged();\n    return overwritten;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}