{
    "generation": "public XYDataItem addOrUpdate(Number x, Number y) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Null 'x' argument.\");\n    }\n\n    XYDataItem overwritten = null;\n    int index = indexOf(x);\n    if (index >= 0) {\n        // found existing item with same x\n        XYDataItem existing = (XYDataItem) this.data.get(index);\n        try {\n            overwritten = (XYDataItem) existing.clone();\n        } catch (CloneNotSupportedException e) {\n            throw new SeriesException(\"Couldn't clone XYDataItem!\");\n        }\n        if (!this.allowDuplicateXValues) {\n            existing.setY(y);\n        } else {\n            // if duplicates allowed, add a new item after last duplicate\n            int insertIndex = index + 1;\n            while (insertIndex < this.data.size()) {\n                XYDataItem nextItem = (XYDataItem) this.data.get(insertIndex);\n                if (!nextItem.getX().equals(x)) {\n                    break;\n                }\n                insertIndex++;\n            }\n            this.data.add(insertIndex, new XYDataItem(x, y));\n            // check if this addition will exceed the maximum item count...\n            if (getItemCount() > this.maximumItemCount) {\n                this.data.remove(0);\n            }\n        }\n    } else {\n        // new x-value, find insertion point if autoSort==true\n        if (this.autoSort) {\n            int insertIndex = -index - 1;\n            this.data.add(insertIndex, new XYDataItem(x, y));\n        } else {\n            this.data.add(new XYDataItem(x, y));\n        }\n        // check if this addition will exceed the maximum item count...\n        if (getItemCount() > this.maximumItemCount) {\n            this.data.remove(0);\n        }\n    }\n    fireSeriesChanged();\n    return overwritten;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}