{
    "generation": "    /**\n     * Specialized method for removing specified existing entry.\n     * NOTE: entry MUST exist, otherwise an exception is thrown.\n     */\n    public void remove(SettableBeanProperty propToRm)\n    {\n        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n        // The 'key' is typically the canonical (e.g., lower-cased) name of the property to remove,\n        // especially when case-insensitive properties are enabled.\n        String key = getPropertyName(propToRm);\n        boolean found = false;\n\n        for (int i = 1, end = _hashArea.length; i < end; i += 2) {\n            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];\n            if (prop == null) {\n                continue;\n            }\n            if (!found) {\n                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n                //   as only former is lower-case in case-insensitive case.\n                //\n                // The original code used `key.equals(prop.getName())`. However, in case-insensitive\n                // mode, `key` (from `getPropertyName`) is often lower-cased, but `prop.getName()`\n                // (from a stored property) might retain its original casing. This mismatch causes\n                // the `equals` check to fail, leading to `NoSuchElementException`.\n                //\n                // To correctly handle case-insensitive matching, the comparison itself must be\n                // case-insensitive.\n                found = key.equalsIgnoreCase(prop.getName());\n                if (found) {\n                    // need to leave a hole here\n                    _propsInOrder[_findFromOrdered(prop)] = null;\n                    continue;\n                }\n            }\n            props.add(prop);\n        }\n        if (!found) {\n            throw new NoSuchElementException(\"No entry '\"+propToRm.getName()+\"' found, can't remove\");\n        }\n        init(props);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}