{
    "generation": "    /**\n     * Specialized method for removing specified existing entry.\n     * NOTE: entry MUST exist, otherwise an exception is thrown.\n     */\n    public void remove(SettableBeanProperty propToRm)\n    {\n        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n        String key = getPropertyName(propToRm); // 'key' is already normalized (e.g., lowercased if _caseInsensitive)\n        boolean found = false;\n\n        for (int i = 1, end = _hashArea.length; i < end; i += 2) {\n            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];\n            if (prop == null) {\n                continue;\n            }\n            if (!found) {\n                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n                //   as only former is lower-case in case-insensitive case\n                //\n                // The problem is that 'key' is normalized (e.g., lowercased) if _caseInsensitive,\n                // but 'prop.getName()' returns the original name.\n                // So, the comparison itself must also be case-insensitive if _caseInsensitive is true.\n                if (_caseInsensitive) {\n                    found = key.equals(prop.getName().toLowerCase());\n                } else {\n                    found = key.equals(prop.getName());\n                }\n\n                if (found) {\n                    // need to leave a hole here\n                    _propsInOrder[_findFromOrdered(prop)] = null;\n                    // Important: continue the loop after finding to ensure all other properties are re-added\n                    // to the 'props' list for re-initialization.\n                    continue;\n                }\n            }\n            // Add all properties except the one found to the new list\n            props.add(prop);\n        }\n        if (!found) {\n            throw new NoSuchElementException(\"No entry '\"+propToRm.getName()+\"' found, can't remove\");\n        }\n        init(props);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}