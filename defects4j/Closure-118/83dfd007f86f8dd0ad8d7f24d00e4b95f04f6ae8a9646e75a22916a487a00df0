{
    "generation": "private void handleObjectLit(NodeTraversal t, Node n) {\n    for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {\n        if (child.isStringKey()) {\n            String name = child.getString();\n            T type = typeSystem.getType(getScope(), n, name);\n\n            Property prop = getProperty(name);\n            if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(\n                        t.getSourceName(), child, propertiesToErrorFor.get(name),\n                        Warnings.INVALIDATION, name,\n                        (type == null ? \"null\" : type.toString()), n.toString(), \"\"));\n                }\n            }\n        } else if (child.isComputedProp()) {\n            // Handle computed properties separately\n            // For now, we do not process computed properties as they are not directly\n            // associated with a fixed property name in the type system.\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}