{
    "generation": "/**\n * Processes an OBJECTLIT node.\n */\nprivate void handleObjectLit(NodeTraversal t, Node n) {\n  for (Node child = n.getFirstChild();\n       child != null;\n       child = child.getNext()) {\n    // Skip quoted property names like {'a': ...}\n    if (child.isQuotedString()) {\n      continue;\n    }\n\n    // We should never see a mix of numbers and strings.\n    String name = child.getString();\n    T type = typeSystem.getType(getScope(), n, name);\n\n    Property prop = getProperty(name);\n    boolean shouldRename = processProperty(t, prop, type, null);\n    if (!prop.scheduleRenaming(child, shouldRename)) {\n      if (propertiesToErrorFor.containsKey(name)) {\n        compiler.report(JSError.make(\n            t.getSourceName(),\n            child,\n            propertiesToErrorFor.get(name),\n            Warnings.INVALIDATION,\n            name,\n            (type == null ? \"null\" : type.toString()),\n            n.toString(),\n            \"\"));\n      }\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}