{
    "generation": "    /**\n     * Adjusts the offset to be the earlier or later one during an overlap.\n     *\n     * @param instant  the instant to adjust\n     * @param earlierOrLater  false for earlier, true for later\n     * @return the adjusted instant millis\n     */\n    public long adjustOffset(long instant, boolean earlierOrLater) {\n        // Find the transition that occurred at or before the instant.\n        // Note: previousTransition returns the instant of the transition.\n        long prevTrans = previousTransition(instant, true);\n\n        // Get the offsets around the transition. Note: getOffset returns offset in milliseconds.\n        int offsetBefore = getOffset(prevTrans - 1);\n        int offsetAfter = getOffset(prevTrans);\n\n        // Check if the transition created an overlap (offset decreased, e.g., -02:00 to -03:00).\n        // This happens when the offset *value* decreases (becomes more negative).\n        if (offsetAfter < offsetBefore) {\n            // Calculate the duration of the overlap (a positive value).\n            long delta = offsetBefore - offsetAfter;\n\n            // Check if the instant falls within the earlier interval of the overlap\n            // [prevTrans - delta, prevTrans). This interval has the 'offsetBefore'.\n            // Instants in this range have the earlier offset physically.\n            if (instant >= prevTrans - delta && instant < prevTrans) {\n                // Instant is in the earlier interval (offset 'offsetBefore').\n                // If we want the later offset (earlierOrLater=true), add the delta \n                // to move to the corresponding instant in the later interval.\n                if (earlierOrLater) {\n                    return instant + delta;\n                }\n                // Otherwise, we want the earlier offset, which is the current one.\n                // Return the original instant.\n                return instant;\n            }\n\n            // Check if the instant falls within the later interval of the overlap\n            // [prevTrans, prevTrans + delta). This interval has the 'offsetAfter'.\n            // Instants in this range have the later offset physically.\n            // Note: Joda-Time considers the transition time `prevTrans` itself\n            // to have the `offsetAfter`.\n            if (instant >= prevTrans && instant < prevTrans + delta) {\n                 // Instant is in the later interval (offset 'offsetAfter').\n                 // If we want the earlier offset (earlierOrLater=false), subtract the delta \n                 // to move to the corresponding instant in the earlier interval.\n                if (!earlierOrLater) {\n                    return instant - delta;\n                }\n                // Otherwise, we want the later offset, which is the current one.\n                // Return the original instant.\n                return instant;\n            }\n        }\n\n        // If it's not an overlap transition (offsetAfter >= offsetBefore), \n        // or the instant is outside the overlapping intervals \n        // [prevTrans - delta, prevTrans + delta), then the instant is not ambiguous,\n        // so return the original instant.\n        return instant;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}