{
    "generation": "    /**\n     * Adjusts the offset to be the earlier or later one during an overlap.\n     * \n     * @param instant  the instant to adjust\n     * @param earlierOrLater  false for earlier, true for later\n     * @return the adjusted instant millis\n     */\n    public long adjustOffset(long instant, boolean earlierOrLater) {\n        // evaluate 3 hours before and after to work out if anything is happening\n        long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;\n        long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;\n        int offsetBefore = getOffset(instantBefore);\n        int offsetAfter = getOffset(instantAfter);\n\n        if (offsetBefore == offsetAfter) {\n            return instant;  // not an overlap (no offset change)\n        }\n\n        int offsetInstant = getOffset(instant);\n\n        // Find local time for this instant\n        long local = instant + offsetInstant;\n\n        // Try both possible UTC instants for this local time\n        long earlierInstant = local - Math.min(offsetBefore, offsetAfter);\n        long laterInstant = local - Math.max(offsetBefore, offsetAfter);\n\n        // Select the one with the correct local time and offset (and valid)\n        if (earlierOrLater) {\n            // Later offset\n            if (getOffset(laterInstant) != Math.max(offsetBefore, offsetAfter) \n                    || convertUTCToLocal(laterInstant) != local) {\n                // Occasionally due to DST transitions, this can be reversed\n                // so fallback to existing instant if not found\n                return instant;\n            }\n            return laterInstant;\n        } else {\n            // Earlier offset\n            if (getOffset(earlierInstant) != Math.min(offsetBefore, offsetAfter)\n                    || convertUTCToLocal(earlierInstant) != local) {\n                return instant;\n            }\n            return earlierInstant;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}