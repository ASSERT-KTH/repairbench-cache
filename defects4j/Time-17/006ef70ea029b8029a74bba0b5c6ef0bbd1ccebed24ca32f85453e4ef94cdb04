{
    "generation": "/**\n * Adjusts the offset to be the earlier or later one during an overlap.\n * \n * @param instant  the instant to adjust\n * @param earlierOrLater  false for earlier, true for later\n * @return the adjusted instant millis\n */\npublic long adjustOffset(long instant, boolean earlierOrLater) {\n    // evaluate 3 hours before and after to work out if anything is happening\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // not an overlap (less than is a gap, equal is normal case)\n    }\n\n    // work out range of instants that have duplicate local times\n    long localInstant = convertUTCToLocal(instant);\n\n    // Find both possible UTC instants for this local time (one with earlier offset, one with later offset)\n    long earlierInstant = convertLocalToUTC(localInstant, false, instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long laterInstant = convertLocalToUTC(localInstant, false, instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n\n    // For overlaps, earlierInstant and laterInstant will not be equal.\n    // We need to pick which one matches the earlier/later flag most closely to the input instant\n    if (instant == earlierInstant || instant == laterInstant) {\n        // already at one of the possibilities\n        if (earlierOrLater) {\n            // want later offset\n            return laterInstant;\n        } else {\n            // want earlier offset\n            return earlierInstant;\n        }\n    } else {\n        // instant is not at either overlap instant, pick offset accordingly\n        if (earlierOrLater) {\n            // want later offset\n            return laterInstant;\n        } else {\n            // want earlier offset\n            return earlierInstant;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}