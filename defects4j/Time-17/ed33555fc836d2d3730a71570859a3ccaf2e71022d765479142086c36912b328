{
    "generation": "/**\n * Adjusts the offset to be the earlier or later one during an overlap.\n * \n * @param instant  the instant to adjust\n * @param earlierOrLater  false for earlier, true for later\n * @return the adjusted instant millis\n */\npublic long adjustOffset(long instant, boolean earlierOrLater) {\n    // Evaluate 3 hours before and after to detect overlap\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // No overlap\n    }\n\n    // Work out local time and possible instants for both offsets\n    long local = convertUTCToLocal(instant);\n    long adjustedEarlier = convertLocalToUTC(local, false, instantBefore);\n    long adjustedLater = convertLocalToUTC(local, false, instantAfter);\n\n    // Choose which instant to return depending on flag and current instant\n    if (earlierOrLater) {\n        // Later offset requested\n        if (instant < adjustedLater) {\n            return adjustedLater;\n        } else {\n            return instant;\n        }\n    } else {\n        // Earlier offset requested\n        if (instant >= adjustedLater) {\n            return adjustedEarlier;\n        } else {\n            return instant;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}