{
    "generation": "/**\n * Adjusts the offset to be the earlier or later one during an overlap.\n * \n * @param instant  the instant to adjust\n * @param earlierOrLater  false for earlier, true for later\n * @return the adjusted instant millis\n */\npublic long adjustOffset(long instant, boolean earlierOrLater) {\n    // evaluate 3 hours before and after to work out if anything is happening\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // not an overlap (less than is a gap, equal is normal case)\n    }\n\n    // Find the actual overlap local time instant\n    long local = convertUTCToLocal(instant);\n    long earlier = convertLocalToUTC(local, false, instantBefore);\n    long later = convertLocalToUTC(local, false, instantAfter);\n\n    // If the instant is already at the requested offset, return it\n    if (earlierOrLater) {\n        // later offset\n        if (instant == later) {\n            return instant;\n        }\n        return later;\n    } else {\n        // earlier offset\n        if (instant == earlier) {\n            return instant;\n        }\n        return earlier;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}