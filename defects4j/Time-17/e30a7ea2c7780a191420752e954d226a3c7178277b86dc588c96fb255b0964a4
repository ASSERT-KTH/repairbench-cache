{
    "generation": "public long adjustOffset(long instant, boolean earlierOrLater) {\n    // evaluate 3 hours before and after to work out if anything is happening\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // not an overlap (less than is a gap, equal is normal case)\n    }\n\n    // work out range of instants that have duplicate local times\n    long local = convertUTCToLocal(instant);\n\n    // Find both instants that represent this local time\n    long first = convertLocalToUTC(local, false, instantBefore);\n    long second = convertLocalToUTC(local, false, instantAfter);\n\n    // Return the requested one\n    if (earlierOrLater) {\n        // return the later instant\n        return second > first ? second : first;\n    } else {\n        // return the earlier instant\n        return second < first ? second : first;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}