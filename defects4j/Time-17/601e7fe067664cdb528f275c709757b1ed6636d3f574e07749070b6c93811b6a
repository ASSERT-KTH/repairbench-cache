{
    "generation": "public long adjustOffset(long instant, boolean earlierOrLater) {\n    // Check if there is an overlap by comparing the local time computed\n    // 3 hours before and after. In a non-overlap these are equal.\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // no overlap: gap or normal case\n    }\n\n    // Compute the ambiguous local time corresponding to the UTC instant.\n    long local = convertUTCToLocal(instant);\n    // Calculate the two possible instants corresponding to this local time.\n    long adjustedEarlier = convertLocalToUTC(local, false, instantBefore);\n    long adjustedLater = convertLocalToUTC(local, false, instantAfter);\n    if (adjustedEarlier == adjustedLater) {\n        return instant;  // not ambiguous\n    }\n\n    // If the instant is already one of the two possibilities,\n    // return it if it already has the desired offset.\n    if (instant == adjustedEarlier) {\n        return earlierOrLater ? adjustedLater : instant;\n    } else if (instant == adjustedLater) {\n        return earlierOrLater ? instant : adjustedEarlier;\n    }\n    // Otherwise, choose based solely on the flag.\n    return earlierOrLater ? adjustedLater : adjustedEarlier;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}