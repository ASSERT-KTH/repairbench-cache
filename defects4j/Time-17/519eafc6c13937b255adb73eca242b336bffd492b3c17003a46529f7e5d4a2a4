{
    "generation": "public long adjustOffset(long instant, boolean earlierOrLater) {\n    // a bit messy, but will work in all non-pathological cases\n\n    // evaluate 3 hours before and after to work out if anything is happening\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // not an overlap (less than is a gap, equal is normal case)\n    }\n    \n    // work out range of instants that have duplicate local times\n    long local = convertUTCToLocal(instant);\n    // Swap the candidate. When earlierOrLater is true (request later offset), use instantBefore;\n    // otherwise, use instantAfter.\n    return convertLocalToUTC(local, false, earlierOrLater ? instantBefore : instantAfter);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}