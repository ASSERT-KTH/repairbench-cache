{
    "generation": "/**\n * Adjusts the offset to be the earlier or later one during an overlap.\n * \n * @param instant  the instant to adjust\n * @param earlierOrLater  false for earlier, true for later\n * @return the adjusted instant millis\n */\npublic long adjustOffset(long instant, boolean earlierOrLater) {\n    // evaluate 3 hours before and after to work out if anything is happening\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter  = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // not an overlap (gap or normal case)\n    }\n    \n    // get the local time corresponding to the instant\n    long local = convertUTCToLocal(instant);\n    // In an overlap there are two valid UTC instants for the same local time.\n    // The convertLocalToUTC method uses the third parameter as a hint to choose between them.\n    // Bug 3476684 was fixed by swapping the hints: when a later offset is requested,\n    // use the candidate computed from the earlier (pre\u2010overlap) hint, and vice\u2010versa.\n    return convertLocalToUTC(local, false, earlierOrLater ? instantBefore : instantAfter);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}