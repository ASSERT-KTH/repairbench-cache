{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException\n{\n    // If we are not allowed to have more than one match and a token has already been\n    // returned, we \u201cfinish\u201d immediately.\n    if (!_allowMultipleMatches && _currToken != null) {\n        return null;\n    }\n    \n    // Anything buffered?\n    TokenFilterContext ctxt = _exposedContext;\n    if (ctxt != null) {\n        while (true) {\n            JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n            // all done with buffered content?\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                if (ctxt.inArray()) {\n                    t = delegate.getCurrentToken();\n                    if (!_allowMultipleMatches) {\n                        _exposedContext = null;\n                        _itemFilter = null;\n                    }\n                    _currToken = t;\n                    return t;\n                }\n                break;\n            }\n            ctxt = _headContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) { // should never occur\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n        }\n    }\n\n    // Need to read a new token.\n    JsonToken t = delegate.nextToken();\n    if (t == null) {\n        return (_currToken = t);\n    }\n    TokenFilter f;\n    switch (t.id()) {\n    case ID_START_ARRAY:\n        f = _itemFilter;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _headContext = _headContext.createChildArrayContext(f, true);\n            if (!_allowMultipleMatches) {\n                _itemFilter = null;\n                _exposedContext = null;\n            }\n            return (_currToken = t);\n        }\n        if (f == null) {\n            delegate.skipChildren();\n            break;\n        }\n        // Check value\n        f = _headContext.checkValue(f);\n        if (f == null) {\n            delegate.skipChildren();\n            break;\n        }\n        if (f != TokenFilter.INCLUDE_ALL) {\n            f = f.filterStartArray();\n        }\n        _itemFilter = f;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _headContext = _headContext.createChildArrayContext(f, true);\n            if (!_allowMultipleMatches) {\n                _itemFilter = null;\n                _exposedContext = null;\n            }\n            return (_currToken = t);\n        }\n        _headContext = _headContext.createChildArrayContext(f, false);\n        // Only buffer if we need to include the path:\n        if (_includePath) {\n            t = _nextTokenWithBuffering(_headContext);\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n        }\n        break;\n\n    case ID_START_OBJECT:\n        f = _itemFilter;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _headContext = _headContext.createChildObjectContext(f, true);\n            if (!_allowMultipleMatches) {\n                _itemFilter = null;\n                _exposedContext = null;\n            }\n            return (_currToken = t);\n        }\n        if (f == null) {\n            delegate.skipChildren();\n            break;\n        }\n        f = _headContext.checkValue(f);\n        if (f == null) {\n            delegate.skipChildren();\n            break;\n        }\n        if (f != TokenFilter.INCLUDE_ALL) {\n            f = f.filterStartObject();\n        }\n        _itemFilter = f;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _headContext = _headContext.createChildObjectContext(f, true);\n            if (!_allowMultipleMatches) {\n                _itemFilter = null;\n                _exposedContext = null;\n            }\n            return (_currToken = t);\n        }\n        _headContext = _headContext.createChildObjectContext(f, false);\n        if (_includePath) {\n            t = _nextTokenWithBuffering(_headContext);\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n        }\n        break;\n\n    case ID_END_ARRAY:\n    case ID_END_OBJECT:\n        {\n            boolean returnEnd = _headContext.isStartHandled();\n            f = _headContext.getFilter();\n            if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {\n                f.filterFinishArray();\n            }\n            _headContext = _headContext.getParent();\n            _itemFilter = _headContext.getFilter();\n            if (returnEnd) {\n                if (!_allowMultipleMatches) {\n                    _itemFilter = null;\n                    _exposedContext = null;\n                }\n                return (_currToken = t);\n            }\n        }\n        break;\n\n    case ID_FIELD_NAME:\n        {\n            final String name = delegate.getCurrentName();\n            f = _headContext.setFieldName(name);\n            if (f == TokenFilter.INCLUDE_ALL) {\n                _itemFilter = f;\n                if (!_includePath) {\n                    if (_includeImmediateParent && !_headContext.isStartHandled()) {\n                        t = _headContext.nextTokenToRead();\n                        _exposedContext = _headContext;\n                    }\n                }\n                if (!_allowMultipleMatches) {\n                    _itemFilter = null;\n                    _exposedContext = null;\n                }\n                return (_currToken = t);\n            }\n            if (f == null) {\n                delegate.nextToken();\n                delegate.skipChildren();\n                break;\n            }\n            f = f.includeProperty(name);\n            if (f == null) {\n                delegate.nextToken();\n                delegate.skipChildren();\n                break;\n            }\n            _itemFilter = f;\n            if (f == TokenFilter.INCLUDE_ALL) {\n                if (_includePath) {\n                    if (!_allowMultipleMatches) {\n                        _itemFilter = null;\n                        _exposedContext = null;\n                    }\n                    return (_currToken = t);\n                }\n            }\n            if (_includePath) {\n                t = _nextTokenWithBuffering(_headContext);\n                if (t != null) {\n                    _currToken = t;\n                    return t;\n                }\n            }\n            break;\n        }\n\n    default: // scalar value\n        f = _itemFilter;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            if (!_allowMultipleMatches) {\n                _itemFilter = null;\n                _exposedContext = null;\n            }\n            return (_currToken = t);\n        }\n        if (f != null) {\n            f = _headContext.checkValue(f);\n            if ((f == TokenFilter.INCLUDE_ALL)\n                || ((f != null) && f.includeValue(delegate)))\n            {\n                if (!_allowMultipleMatches) {\n                    _itemFilter = null;\n                    _exposedContext = null;\n                }\n                return (_currToken = t);\n            }\n        }\n        break;\n    }\n    return _nextToken2();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}