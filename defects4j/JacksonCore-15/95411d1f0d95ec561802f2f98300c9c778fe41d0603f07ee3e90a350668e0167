{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException {\n    TokenFilterContext ctxt = _exposedContext;\n\n    if (ctxt != null) {\n        while (true) {\n            JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                if (ctxt.inArray()) {\n                    _currToken = JsonToken.END_ARRAY;\n                    return _currToken;\n                }\n                break;\n            }\n            ctxt = _headContext.findChildOf(ctxt);\n            if (ctxt == null) {\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n            _exposedContext = ctxt;\n        }\n    }\n\n    JsonToken t = delegate.nextToken();\n    if (t == null) {\n        return _currToken = t;\n    }\n\n    switch (t.id()) {\n        case ID_START_ARRAY:\n            TokenFilter f = _itemFilter;\n            if (f != null) {\n                f = _headContext.checkValue(f);\n                if (f == null) {\n                    delegate.skipChildren();\n                    f = _itemFilter;\n                }\n            }\n            if (f == TokenFilter.INCLUDE_ALL) {\n                _headContext = _headContext.createChildArrayContext(f, true);\n            } else if (f != null && f.filterStartArray() != null) {\n                _headContext = _headContext.createChildArrayContext(f, false);\n            } else {\n                delegate.skipChildren();\n            }\n            _itemFilter = f;\n            break;\n\n        case ID_START_OBJECT:\n            f = _itemFilter;\n            if (f != null) {\n                f = _headContext.checkValue(f);\n                if (f == null) {\n                    delegate.skipChildren();\n                    f = _itemFilter;\n                }\n            }\n            if (f == TokenFilter.INCLUDE_ALL) {\n                _headContext = _headContext.createChildObjectContext(f, true);\n            } else if (f != null && f.filterStartObject() != null) {\n                _headContext = _headContext.createChildObjectContext(f, false);\n            } else {\n                delegate.skipChildren();\n            }\n            _itemFilter = f;\n            break;\n\n        case ID_END_ARRAY:\n        case ID_END_OBJECT:\n            _itemFilter = _headContext.getParent().getFilter();\n            _headContext = _headContext.getParent();\n            if (_headContext.isStartHandled()) {\n                return _currToken = t;\n            }\n            break;\n\n        case ID_FIELD_NAME:\n            String name = delegate.getCurrentName();\n            f = _headContext.setFieldName(name);\n            if (f == null) {\n                delegate.nextToken();\n                delegate.skipChildren();\n                break;\n            }\n            if (f == TokenFilter.INCLUDE_ALL) {\n                _itemFilter = f;\n                return _currToken = t;\n            }\n            if (f.includeProperty(name)) {\n                _itemFilter = f;\n                return _currToken = t;\n            } else {\n                delegate.nextToken();\n                delegate.skipChildren();\n            }\n            break;\n\n        default:\n            boolean includeScalar = false;\n            f = _itemFilter;\n            if (f != null && (f == TokenFilter.INCLUDE_ALL || (f.includeValue(delegate) && !_allowMultipleMatches))) {\n                includeScalar = true;\n            }\n            if (includeScalar) {\n                return _currToken = t;\n            }\n            delegate.nextToken();\n            break;\n    }\n    return _nextToken2();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}