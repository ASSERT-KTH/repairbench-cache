{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                      hourOfDay, minuteOfHour,\n                                      secondOfMinute, millisOfSecond);\n    }\n\n    // Try Gregorian first\n    long instant;\n    try {\n        instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear,\n                                                         dayOfMonth,\n                                                         hourOfDay, minuteOfHour,\n                                                         secondOfMinute, millisOfSecond);\n    } catch (IllegalArgumentException ex) {\n        // If invalid in Gregorian, try Julian (only if before cutover)\n        long instantJulian = iJulianChronology.getDateTimeMillis(year, monthOfYear,\n                                                                 dayOfMonth,\n                                                                 hourOfDay, minuteOfHour,\n                                                                 secondOfMinute, millisOfSecond);\n        if (instantJulian >= iCutoverMillis) {\n            // It's in the cutover gap or after cutover, so illegal\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n        return instantJulian;\n    }\n\n    // If the Gregorian instant is before cutover, switch to Julian\n    if (instant < iCutoverMillis) {\n        long instantJulian = iJulianChronology.getDateTimeMillis(year, monthOfYear,\n                                                                 dayOfMonth,\n                                                                 hourOfDay, minuteOfHour,\n                                                                 secondOfMinute, millisOfSecond);\n        if (instantJulian >= iCutoverMillis) {\n            // Date falls into the illegal cutover gap\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n        instant = instantJulian;\n    }\n    return instant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}