{
    "generation": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        // Determine which chronology to use based on input date, not computed millis.\n        // If the date is before the cutover year/month/day, use Julian.\n        // Otherwise, use Gregorian.\n\n        // Calculate millis in both chronologies to determine which is correct\n        long instantJulian = iJulianChronology.getDateTimeMillis(\n                year, monthOfYear, dayOfMonth,\n                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n\n        if (instantJulian < iCutoverMillis) {\n            return instantJulian;\n        }\n\n        long instantGregorian = iGregorianChronology.getDateTimeMillis(\n                year, monthOfYear, dayOfMonth,\n                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n\n        if (instantGregorian >= iCutoverMillis) {\n            return instantGregorian;\n        }\n\n        // Date falls into the cutover gap.\n        throw new IllegalArgumentException(\"Specified date does not exist\");\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}