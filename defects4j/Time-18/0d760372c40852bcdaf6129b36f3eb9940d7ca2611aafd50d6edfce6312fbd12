{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base = getBase();\n    if (base != null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // Determine the cutover date components from the Gregorian chronology.\n    int cutoverYear = iGregorianChronology.getYear(iCutoverMillis);\n    int cutoverMonth = iGregorianChronology.getMonthOfYear(iCutoverMillis);\n    int cutoverDay = iGregorianChronology.getDayOfMonth(iCutoverMillis);\n\n    long instant;\n    boolean useJulian;\n    // If the requested date is before the cutover date (in Gregorian terms), use Julian.\n    if (year < cutoverYear) {\n        useJulian = true;\n    } else if (year > cutoverYear) {\n        useJulian = false;\n    } else { // year == cutoverYear\n        if (monthOfYear < cutoverMonth) {\n            useJulian = true;\n        } else if (monthOfYear > cutoverMonth) {\n            useJulian = false;\n        } else { // same month, decide by day\n            useJulian = dayOfMonth < cutoverDay;\n        }\n    }\n\n    if (useJulian) {\n        instant = iJulianChronology.getDateTimeMillis(\n            year, monthOfYear, dayOfMonth,\n            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant >= iCutoverMillis) {\n            // This should never happen if the fields represent a valid Julian date.\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n    } else {\n        instant = iGregorianChronology.getDateTimeMillis(\n            year, monthOfYear, dayOfMonth,\n            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant < iCutoverMillis) {\n            // The date falls into the gap so recalculate using Julian rules.\n            instant = iJulianChronology.getDateTimeMillis(\n                year, monthOfYear, dayOfMonth,\n                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (instant >= iCutoverMillis) {\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n        }\n    }\n    return instant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}