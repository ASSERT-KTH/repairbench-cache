{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // Check both Gregorian and Julian calendars to handle cases like 1500-2-29\n    try {\n        long instant;\n        instant = iGregorianChronology.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant >= iCutoverMillis) {\n            return instant;\n        }\n\n        // If we get here with an invalid date (like Feb 29 in Gregorian non-leap year)\n        // we need to try the Julian calendar\n        instant = iJulianChronology.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n\n        if (instant >= iCutoverMillis) {\n            // This date exists in Julian but not Gregorian and is after cutover - invalid\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n        return instant;\n    } catch (IllegalArgumentException ex) {\n        // If Gregorian fails, try Julian (for dates like 1500-2-29)\n        try {\n            long instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (instant >= iCutoverMillis) {\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n            return instant;\n        } catch (IllegalArgumentException ex2) {\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}