{
    "generation": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        long instant;\n        try {\n            // First, try Julian chronology\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (instant < iCutoverMillis) {\n                return instant;\n            } else {\n                // Julian date is after cutover, check Gregorian\n                long gregInstant = iGregorianChronology.getDateTimeMillis\n                    (year, monthOfYear, dayOfMonth,\n                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                if (gregInstant < iCutoverMillis) {\n                    // Gregorian date is before cutover, which is invalid\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                } else {\n                    return gregInstant;\n                }\n            }\n        } catch (IllegalArgumentException e) {\n            // Julian date is invalid, try Gregorian\n            long gregInstant = iGregorianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (gregInstant < iCutoverMillis) {\n                // Gregorian date is before cutover, but Julian was invalid, so invalid\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n            return gregInstant;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}