{
    "generation": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        // Assume date is Gregorian.\n        long instant = 0;\n        try {\n            instant = iGregorianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } catch (IllegalFieldValueException ex) {\n            // Gregorian date might not exist in Julian (or vice versa)\n            // Let's try Julian if Gregorian failed\n        }\n\n        if (instant == 0 || instant < iCutoverMillis) {\n            // Maybe it's Julian or we need to check both\n            try {\n                long julianInstant = iJulianChronology.getDateTimeMillis\n                    (year, monthOfYear, dayOfMonth,\n                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                // Check if the Julian date is after cutover (invalid gap)\n                if (julianInstant >= iCutoverMillis) {\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                }\n                // If we got a valid Julian instant, return it if it's before cutover\n                if (julianInstant < iCutoverMillis) {\n                    return julianInstant;\n                }\n            } catch (IllegalFieldValueException ex) {\n                // Date doesn't exist in either calendar\n                throw new IllegalFieldValueException(ex.getMessage());\n            }\n        }\n\n        // If Gregorian date is valid and not in the gap\n        if (instant > 0) {\n            return instant;\n        }\n\n        throw new IllegalFieldValueException(\"Specified date does not exist\");\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}