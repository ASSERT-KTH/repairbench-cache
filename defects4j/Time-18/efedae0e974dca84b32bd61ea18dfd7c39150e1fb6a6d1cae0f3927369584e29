{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // First, try Julian chronology if the instant would be before the cutover\n    // according to year/month/day/hmsms, not millis.\n    // This is because \"the day\" as Gregorian may not exist but may as Julian.\n    long instant;\n    boolean julianLeap = false;\n    if (year < iCutoverYear || (year == iCutoverYear && (monthOfYear < iCutoverMonth || (monthOfYear == iCutoverMonth && dayOfMonth < iCutoverDay)))) {\n        // The date is before (or possibly on the cutover day itself)\n        try {\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } catch (IllegalArgumentException ex) {\n            // Fallback to Gregorian to throw the original exception if not valid in Julian\n            instant = iGregorianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n        if (instant >= iCutoverMillis) {\n            // The date exists in Julian but is after the cutover instant,\n            // so it's in the cutover gap. This is an illegal date.\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n        return instant;\n    } else {\n        // The date is after the cutover date: Use Gregorian\n        instant = iGregorianChronology.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant < iCutoverMillis) {\n            // The date does not exist as Gregorian but is before cutover: try Julian\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (instant >= iCutoverMillis) {\n                // The date is in the cutover gap\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n        }\n        return instant;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}