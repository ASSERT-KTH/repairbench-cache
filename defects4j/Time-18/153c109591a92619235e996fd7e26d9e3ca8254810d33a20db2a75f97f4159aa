{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base = getBase();\n    if (base != null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    long instant;\n    try {\n        // Try constructing with Gregorian Chronology first.\n        instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                           hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    } catch (IllegalFieldValueException ex) {\n        // If Gregorian validation fails (eg. 1500-02-29, since 1500 is not a Gregorian leap year),\n        // try using the Julian Chronology.\n        instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant >= iCutoverMillis) {\n            // The resulting instant falls in the illegal cutover gap.\n            throw new IllegalArgumentException(\"Specified date does not exist\", ex);\n        }\n        return instant;\n    }\n    if (instant < iCutoverMillis) {\n        // Even if Gregorian succeeded, dates before the cutover should use the Julian system.\n        long julianInstant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (julianInstant >= iCutoverMillis) {\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n        return julianInstant;\n    }\n    return instant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}