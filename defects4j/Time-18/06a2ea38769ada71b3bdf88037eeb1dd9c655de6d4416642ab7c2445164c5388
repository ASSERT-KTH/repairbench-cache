{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // Dates before the cutover are always Julian (even if Gregorian date is valid).\n    if (year < 0 || (year == 0 && monthOfYear < 0)) { // unlikely, but safe guard\n        return iJulianChronology.getDateTimeMillis(\n            year, monthOfYear, dayOfMonth,\n            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // First try Julian if date is before the cutover instant\n    long instant;\n    if (year <= 1582) { // typical cutover is 1582, but iCutoverMillis is authoritative\n        // Get millis for the Julian date\n        instant = iJulianChronology.getDateTimeMillis(\n            year, monthOfYear, dayOfMonth,\n            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant < iCutoverMillis) {\n            return instant;\n        }\n    }\n\n    // Otherwise, try Gregorian\n    instant = iGregorianChronology.getDateTimeMillis(\n        year, monthOfYear, dayOfMonth,\n        hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    if (instant >= iCutoverMillis) {\n        return instant;\n    }\n\n    // Check if the Julian version leads to a date after the cutover -- invalid\n    long julianInstant = iJulianChronology.getDateTimeMillis(\n        year, monthOfYear, dayOfMonth,\n        hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    if (julianInstant >= iCutoverMillis) {\n        throw new IllegalArgumentException(\"Specified date does not exist\");\n    }\n    return julianInstant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}