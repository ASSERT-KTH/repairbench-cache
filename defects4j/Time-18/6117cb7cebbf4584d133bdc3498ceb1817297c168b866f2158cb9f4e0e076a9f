{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis(\n            year, monthOfYear, dayOfMonth,\n            hourOfDay, minuteOfHour,\n            secondOfMinute, millisOfSecond);\n    }\n    // Try Julian first\n    long julianInstant = iJulianChronology.getDateTimeMillis(\n        year, monthOfYear, dayOfMonth,\n        hourOfDay, minuteOfHour,\n        secondOfMinute, millisOfSecond);\n    if (julianInstant < iCutoverMillis) {\n        return julianInstant;\n    }\n    // Julian is on/after cutover, try Gregorian\n    long gregorianInstant = iGregorianChronology.getDateTimeMillis(\n        year, monthOfYear, dayOfMonth,\n        hourOfDay, minuteOfHour,\n        secondOfMinute, millisOfSecond);\n    if (gregorianInstant >= iCutoverMillis) {\n        return gregorianInstant;\n    }\n    // It's in the cutover gap\n    throw new IllegalArgumentException(\"Specified date does not exist\");\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}