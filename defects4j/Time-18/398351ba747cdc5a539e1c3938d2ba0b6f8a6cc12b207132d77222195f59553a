{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base = getBase();\n    if (base != null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    /*\n     * Try to compute the instant using the Gregorian chronology.\n     * If the provided fields do not represent a valid Gregorian date (such as 1500-02-29),\n     * then catch the exception and, if the date is before the cutover, recalculate using Julian.\n     */\n    try {\n        long instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant < iCutoverMillis) {\n            // If the Gregorian instant is before the cutover, recalculate using the Julian chronology.\n            long julianInstant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (julianInstant >= iCutoverMillis) {\n                // The fields fall into the illegal gap.\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n            instant = julianInstant;\n        }\n        return instant;\n    } \n    catch (IllegalFieldValueException ex) {\n        // Determine the cutover date (in the Gregorian chronology)\n        int cutoverYear = iGregorianChronology.year().get(iCutoverMillis);\n        int cutoverMonth = iGregorianChronology.monthOfYear().get(iCutoverMillis);\n        int cutoverDay = iGregorianChronology.dayOfMonth().get(iCutoverMillis);\n\n        // If the provided date is strictly before the cutover date, use the Julian chronology.\n        if (year < cutoverYear ||\n            (year == cutoverYear && (monthOfYear < cutoverMonth ||\n             (monthOfYear == cutoverMonth && dayOfMonth < cutoverDay)))) {\n            long julianInstant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (julianInstant >= iCutoverMillis) {\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n            return julianInstant;\n        }\n        // Otherwise, rethrow the original exception.\n        throw ex;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}