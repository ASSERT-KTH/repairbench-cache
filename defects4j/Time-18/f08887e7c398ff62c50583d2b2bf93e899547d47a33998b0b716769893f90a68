{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException {\n    Chronology base = getBase();\n    if (base != null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    try {\n        // Try computing using Gregorian chronology first.\n        long gregorianMillis = iGregorianChronology.getDateTimeMillis(\n                year, monthOfYear, dayOfMonth,\n                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (gregorianMillis >= iCutoverMillis) {\n            return gregorianMillis;\n        }\n        // Date is before the cutover according to Gregorian,\n        // so recalculate using the Julian chronology.\n        long julianMillis = iJulianChronology.getDateTimeMillis(\n                year, monthOfYear, dayOfMonth,\n                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (julianMillis >= iCutoverMillis) {\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n        return julianMillis;\n    } catch (IllegalFieldValueException ex) {\n        // If the Gregorian calculation fails (for example, 1500-02-29 is invalid in Gregorian),\n        // try using the Julian chronology.\n        long julianMillis = iJulianChronology.getDateTimeMillis(\n                year, monthOfYear, dayOfMonth,\n                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (julianMillis >= iCutoverMillis) {\n            throw new IllegalArgumentException(\"Specified date does not exist\", ex);\n        }\n        return julianMillis;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}