{
    "generation": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        long instant;\n        // If year is in the cutover range, check Julian and Gregorian.\n        // If it's the cutover year, it could be either.\n        // Otherwise, if year is before cutover, it's Julian.\n        // Otherwise, it's Gregorian.\n\n        if (year < iCutoverYear) {\n            // Definitely Julian.\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } else if (year > iCutoverYear) {\n            // Definitely Gregorian.\n            instant = iGregorianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } else { // year == iCutoverYear\n            // Potentially in the cutover.\n            // Check if date is before or after cutover date.\n            // Check Julian date first.\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (instant >= iCutoverMillis) {\n                // If we got here, Julian date is on or after cutover.\n                // The only way this is not a gap is if the date is also valid\n                // and maps to the same instant in Gregorian.\n                // This effectively means the Julian date is after cutover day.\n                // Example: Julian 1582-10-15 maps to Gregorian 1582-10-15.\n                // So, try Gregorian.\n                long gregorianInstant = iGregorianChronology.getDateTimeMillis\n                    (year, monthOfYear, dayOfMonth,\n                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                if (gregorianInstant < iCutoverMillis) {\n                    // This means the Julian date is after cutover, but Gregorian is before cutover.\n                    // This is the cutover gap.\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                }\n                instant = gregorianInstant; // Use Gregorian for dates after cutover\n            }\n        }\n        return instant;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}