{
    "generation": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        long julianInstant;\n        try {\n            julianInstant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        } catch (IllegalArgumentException e) {\n            julianInstant = Long.MIN_VALUE;\n        }\n\n        if (julianInstant != Long.MIN_VALUE) {\n            if (julianInstant < iCutoverMillis) {\n                return julianInstant;\n            } else {\n                long gregorianInstant;\n                try {\n                    gregorianInstant = iGregorianChronology.getDateTimeMillis\n                        (year, monthOfYear, dayOfMonth,\n                         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                } catch (IllegalArgumentException e) {\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                }\n                if (gregorianInstant >= iCutoverMillis) {\n                    return gregorianInstant;\n                } else {\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                }\n            }\n        } else {\n            long gregorianInstant;\n            try {\n                gregorianInstant = iGregorianChronology.getDateTimeMillis\n                    (year, monthOfYear, dayOfMonth,\n                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            } catch (IllegalArgumentException e) {\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n            if (gregorianInstant >= iCutoverMillis) {\n                return gregorianInstant;\n            } else {\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}