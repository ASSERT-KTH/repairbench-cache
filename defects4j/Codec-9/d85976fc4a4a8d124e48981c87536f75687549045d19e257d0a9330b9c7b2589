{
    "generation": "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {\n    if (binaryData == null || binaryData.length == 0) {\n        return binaryData;\n    }\n\n    // correct chunking size and separator to match parameters\n    final int chunkSize = isChunked ? MIME_CHUNK_SIZE : 0;\n    final byte[] chunkSeparator = isChunked ? CHUNK_SEPARATOR : EMPTY_BYTE_ARRAY;\n\n    long len = getEncodeLength(binaryData, chunkSize, chunkSeparator);\n    if (len > maxResultSize) {\n        throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +\n            len +\n            \") than the specified maxium size of \" +\n            maxResultSize);\n    }\n            \n    Base64 b64 = new Base64(chunkSize, chunkSeparator, urlSafe);\n    return b64.encode(binaryData);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}