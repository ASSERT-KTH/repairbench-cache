{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[]) iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n\n    if (count > 0) {\n        // existing hack: if first field is month or day, inject default year\n        DurationField months = DurationFieldType.months().getField(iChrono);\n        DurationField days   = DurationFieldType.days().getField(iChrono);\n        DurationField first  = savedFields[0].iField.getDurationField();\n        if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n            saveField(DateTimeFieldType.year(), iDefaultYear);\n            return computeMillis(resetFields, text);\n        }\n\n        // new hack: if we have week\u2010of\u2010weekyear but no explicit weekyear, inject it\n        boolean haveWw = false, haveWy = false;\n        int wyVal = iDefaultYear;\n        for (int i = 0; i < count; i++) {\n            DateTimeFieldType t = savedFields[i].iField.getType();\n            if (DateTimeFieldType.weekOfWeekyear().equals(t)) {\n                haveWw = true;\n            } else if (DateTimeFieldType.weekyear().equals(t)) {\n                haveWy = true;\n            } else if (DateTimeFieldType.year().equals(t)) {\n                // capture a parsed yyyy if present\n                wyVal = savedFields[i].iValue;\n            }\n        }\n        if (haveWw && !haveWy) {\n            saveField(DateTimeFieldType.weekyear(), wyVal);\n            return computeMillis(resetFields, text);\n        }\n    }\n\n    long millis = iMillis;\n    try {\n        for (int i = 0; i < count; i++) {\n            millis = savedFields[i].set(millis, resetFields);\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }\n\n    if (iZone == null) {\n        millis -= iOffset;\n    } else {\n        int offset = iZone.getOffsetFromLocal(millis);\n        millis -= offset;\n        if (offset != iZone.getOffset(millis)) {\n            String msg = \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n            if (text != null) {\n                msg = \"Cannot parse \\\"\" + text + \"\\\": \" + msg;\n            }\n            throw new IllegalArgumentException(msg);\n        }\n    }\n    return millis;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}