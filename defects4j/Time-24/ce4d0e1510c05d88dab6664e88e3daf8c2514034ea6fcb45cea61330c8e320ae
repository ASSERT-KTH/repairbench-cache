{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[]) iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n\n    // If no year or weekyear has been provided, add a default.\n    if (count > 0) {\n        boolean hasYear = false;\n        boolean hasWeekyear = false;\n        boolean hasWeekOfWeekyear = false;\n        for (int i = 0; i < count; i++) {\n            DateTimeField field = savedFields[i].iField;\n            DateTimeFieldType type = field.getType();\n            if (DateTimeFieldType.year().equals(type)) {\n                hasYear = true;\n            } else if (DateTimeFieldType.weekyear().equals(type)) {\n                hasWeekyear = true;\n            } else if (DateTimeFieldType.weekOfWeekyear().equals(type)) {\n                hasWeekOfWeekyear = true;\n            }\n        }\n        if (!hasYear && !hasWeekyear) {\n            // When the week-of-weekyear field is present we want to use weekyear.\n            if (hasWeekOfWeekyear) {\n                int defaultWeekyear = iChrono.weekyear().get(iMillis);\n                saveField(DateTimeFieldType.weekyear(), defaultWeekyear);\n            } else {\n                saveField(DateTimeFieldType.year(), iDefaultYear);\n            }\n            return computeMillis(resetFields, text);\n        }\n    }\n\n    long millis = iMillis;\n    try {\n        for (int i = 0; i < count; i++) {\n            millis = savedFields[i].set(millis, resetFields);\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }\n\n    if (iZone == null) {\n        millis -= iOffset;\n    } else {\n        int offset = iZone.getOffsetFromLocal(millis);\n        millis -= offset;\n        if (offset != iZone.getOffset(millis)) {\n            String message = \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n            if (text != null) {\n                message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n            }\n            throw new IllegalArgumentException(message);\n        }\n    }\n\n    return millis;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}