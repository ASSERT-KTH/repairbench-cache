{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[]) iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n\n    // If we have a week\u2010of\u2010weekyear but no day\u2010of\u2010week, default to Monday\n    if (count > 0) {\n        DateTimeField weekField = DateTimeFieldType.weekOfWeekyear().getField(iChrono);\n        DateTimeField dayField = DateTimeFieldType.dayOfWeek().getField(iChrono);\n        boolean haveWeek = false;\n        boolean haveDay = false;\n        for (int i = 0; i < count; i++) {\n            DateTimeField f = savedFields[i].iField;\n            if (f == weekField) {\n                haveWeek = true;\n            } else if (f == dayField) {\n                haveDay = true;\n            }\n        }\n        if (haveWeek && !haveDay) {\n            saveField(DateTimeFieldType.dayOfWeek(), DateTimeConstants.MONDAY);\n            return computeMillis(resetFields, text);\n        }\n    }\n\n    // If the first field is exactly month or day, inject the default year\n    if (count > 0) {\n        DurationField months = DurationFieldType.months().getField(iChrono);\n        DurationField days   = DurationFieldType.days().getField(iChrono);\n        DurationField first  = savedFields[0].iField.getDurationField();\n        if (first == months || first == days) {\n            saveField(DateTimeFieldType.year(), iDefaultYear);\n            return computeMillis(resetFields, text);\n        }\n    }\n\n    long millis = iMillis;\n    try {\n        for (int i = 0; i < count; i++) {\n            millis = savedFields[i].set(millis, resetFields);\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }\n\n    if (iZone == null) {\n        millis -= iOffset;\n    } else {\n        int offset = iZone.getOffsetFromLocal(millis);\n        millis -= offset;\n        if (offset != iZone.getOffset(millis)) {\n            String message =\n                \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n            if (text != null) {\n                message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n            }\n            throw new IllegalArgumentException(message);\n        }\n    }\n    return millis;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}