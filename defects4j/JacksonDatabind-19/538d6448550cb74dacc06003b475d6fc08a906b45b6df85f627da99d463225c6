{
    "generation": "private JavaType _mapType(Class<?> rawClass)\n{\n    // 28-May-2015, tatu: Properties are special, as per [databind#810]\n    if (java.util.Properties.class.isAssignableFrom(rawClass)) {\n        // Force Properties to be treated as Map<String,String>\n        JavaType strType = _fromClass(String.class);\n        return MapType.construct(rawClass, strType, strType);\n    }\n    JavaType[] typeParams = findTypeParameters(rawClass, Map.class);\n    // ok to have no types (\"raw\")\n    if (typeParams == null) {\n        return MapType.construct(rawClass, _unknownType(), _unknownType());\n    }\n    // but exactly 2 types if any found\n    if (typeParams.length != 2) {\n        throw new IllegalArgumentException(\"Strange Map type \"+rawClass.getName()\n                +\": can not determine type parameters\");\n    }\n    return MapType.construct(rawClass, typeParams[0], typeParams[1]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}