{
    "generation": "    private InputStream getCurrentStream() throws IOException {\n// buggy code\n        if (deferredBlockStreams == null) {\n            deferredBlockStreams = new ArrayList<InputStream>(1);\n        }\n\n        if (deferredBlockStreams.isEmpty()) {\n            throw new IllegalStateException(\"No current 7z entry (call getNextEntry() first).\");\n        }\n        while (deferredBlockStreams.size() > 1) {\n            // In solid compression mode we need to decompress all leading folder'\n            // streams to get access to an entry. We defer this until really needed\n            // so that entire blocks can be skipped without wasting time for decompression.\n            final InputStream stream = deferredBlockStreams.remove(0);\n            IOUtils.skip(stream, Long.MAX_VALUE);\n            stream.close();\n        }\n        return deferredBlockStreams.get(0);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}