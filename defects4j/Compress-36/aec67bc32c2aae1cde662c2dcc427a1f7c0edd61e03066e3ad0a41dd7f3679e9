{
    "generation": "private InputStream getCurrentStream() throws IOException {\n    if (deferredBlockStreams.isEmpty()) {\n        throw new IllegalStateException(\"No current 7z entry (call getNextEntry() first).\");\n    }\n\n    while (deferredBlockStreams.size() > 1) {\n        final InputStream stream = deferredBlockStreams.remove(0);\n        IOUtils.skip(stream, Long.MAX_VALUE);\n        stream.close();\n    }\n\n    InputStream current = deferredBlockStreams.get(0);\n    if (current != null) {\n        // check if we've exhausted this stream already\n        current.mark(1);\n        int b = current.read();\n        if (b == -1) {\n            // exhausted current stream, remove it and return an empty ByteArrayInputStream\n            deferredBlockStreams.remove(0);\n            return new ByteArrayInputStream(new byte[0]);\n        } else {\n            current.reset();\n        }\n    }\n    return current;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}