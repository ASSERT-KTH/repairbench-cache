{
    "generation": "private InputStream getCurrentStream() throws IOException {\n    while (!deferredBlockStreams.isEmpty()) {\n        if (deferredBlockStreams.size() == 1) {\n            return deferredBlockStreams.get(0);\n        }\n        final InputStream stream = deferredBlockStreams.remove(0);\n        IOUtils.skip(stream, Long.MAX_VALUE);\n        stream.close();\n    }\n    // if all streams have been consumed, return an empty InputStream\n    return new ByteArrayInputStream(new byte[0]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}