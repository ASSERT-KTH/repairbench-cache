{
    "generation": "private InputStream getCurrentStream() throws IOException {\n    if (deferredBlockStreams.isEmpty()) {\n        // Return an empty stream that returns -1 on read to handle zero-length entries\n        return new InputStream() {\n            @Override\n            public int read() throws IOException {\n                return -1;\n            }\n        };\n    }\n\n    while (deferredBlockStreams.size() > 1) {\n        final InputStream stream = deferredBlockStreams.remove(0);\n        IOUtils.skip(stream, Long.MAX_VALUE);\n        stream.close();\n    }\n\n    return deferredBlockStreams.get(0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}