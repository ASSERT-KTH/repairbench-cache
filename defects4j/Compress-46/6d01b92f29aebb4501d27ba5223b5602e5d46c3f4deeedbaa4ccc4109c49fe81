{
    "generation": "    private static ZipLong unixTimeToZipLong(long l) {\n        final long TWO_TO_31 = 0x7FFFFFFFL; // Maximum positive value for a signed 32-bit integer\n        final long MIN_SIGNED_32 = -0x80000000L; // Minimum value for a signed 32-bit integer\n        final long MAX_UNSIGNED_32 = 0xFFFFFFFFL; // Maximum value for an unsigned 32-bit integer\n\n        if (l < MIN_SIGNED_32 || l > MAX_UNSIGNED_32) {\n            throw new IllegalArgumentException(\"X5455 timestamps must fit in a signed 32 bit integer: \" + l);\n        }\n        // If the input is negative, add 2^32 to convert it to unsigned representation\n        if (l < 0) {\n            l += MAX_UNSIGNED_32 + 1;\n        }\n        return new ZipLong(l);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}