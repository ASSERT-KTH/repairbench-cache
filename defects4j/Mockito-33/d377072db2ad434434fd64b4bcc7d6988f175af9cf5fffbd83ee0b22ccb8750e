{
    "generation": "public boolean hasSameMethod(Invocation candidate) {        \n    //not using method.equals() for 1 good reason:\n    //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest\n    Method m1 = invocation.getMethod();\n    Method m2 = candidate.getMethod();\n\n    // Consider methods the same if they have same name and parameter types, even if not .equals()\n    if (m1.getName().equals(m2.getName())) {\n        Class<?>[] p1 = m1.getParameterTypes();\n        Class<?>[] p2 = m2.getParameterTypes();\n        if (p1.length == p2.length) {\n            for (int i = 0; i < p1.length; i++) {\n                if (!p1[i].equals(p2[i])) return false;\n            }\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}