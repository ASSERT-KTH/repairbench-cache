{
    "generation": "    public boolean hasSameMethod(Invocation candidate) {        \n        //not using method.equals() for 1 good reason:\n        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest\n        Method m1 = invocation.getMethod();\n        Method m2 = candidate.getMethod();\n        \n        /* Check name and parameter compatibility instead of direct equality */\n        if (!m1.getName().equals(m2.getName())) {\n            return false;\n        }\n        if (m1.getParameterTypes().length != m2.getParameterTypes().length) {\n            return false;\n        }\n        for (int i = 0; i < m1.getParameterTypes().length; i++) {\n            if (!m1.getParameterTypes()[i].isAssignableFrom(m2.getParameterTypes()[i]) &&\n                !m2.getParameterTypes()[i].isAssignableFrom(m1.getParameterTypes()[i])) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}