{
    "generation": "public boolean hasSameMethod(Invocation candidate) {        \n    //not using method.equals() for 1 good reason:\n    //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest\n    Method m1 = invocation.getMethod();\n    Method m2 = candidate.getMethod();\n    \n    // We have to compare the methods this way, because sometimes JVM creates\n    // a new method instance for the same method invoked on different instances\n    // of the same class. See org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest\n    return m1.getName().equals(m2.getName())\n        && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())\n        && m1.getReturnType().isAssignableFrom(m2.getReturnType());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}