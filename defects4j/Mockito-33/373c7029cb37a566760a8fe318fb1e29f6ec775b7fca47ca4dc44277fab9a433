{
    "generation": "    public boolean hasSameMethod(Invocation candidate) {        \n        Method m1 = getBridgedMethod(invocation.getMethod());\n        Method m2 = getBridgedMethod(candidate.getMethod());\n        \n        if (m1.equals(m2)) {\n            return true;\n        }\n        \n        return m1.getName().equals(m2.getName())\n            && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())\n            && (m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass())\n                || m2.getDeclaringClass().isAssignableFrom(m1.getDeclaringClass()));\n    }\n\n    private Method getBridgedMethod(Method method) {\n        if (!method.isBridge()) {\n            return method;\n        }\n        Class<?> declaringClass = method.getDeclaringClass();\n        Method[] methods = declaringClass.getDeclaredMethods();\n        for (Method m : methods) {\n            if (!m.isBridge() \n                && m.getName().equals(method.getName())\n                && Arrays.equals(m.getParameterTypes(), method.getParameterTypes())) {\n                return m;\n            }\n        }\n        return method;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}