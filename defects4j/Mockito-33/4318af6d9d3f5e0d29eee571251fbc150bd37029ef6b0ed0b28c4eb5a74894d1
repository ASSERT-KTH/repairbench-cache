{
    "generation": "public boolean hasSameMethod(Invocation candidate) {        \n    //not using method.equals() for 1 good reason:\n    //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest\n    Method m1 = invocation.getMethod();\n    Method m2 = candidate.getMethod();\n    \n    // Fix: check if the methods are bridge methods and compare their signatures\n    if (m1.isBridge() && !m2.isBridge()) {\n        return m1.getName().equals(m2.getName()) \n            && m1.getReturnType().equals(m2.getReturnType())\n            && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());\n    } else if (!m1.isBridge() && m2.isBridge()) {\n        return m2.getName().equals(m1.getName()) \n            && m2.getReturnType().equals(m1.getReturnType())\n            && Arrays.equals(m2.getParameterTypes(), m1.getParameterTypes());\n    }\n    \n    /* Avoid unnecessary cloning */\n    return m1.equals(m2);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}