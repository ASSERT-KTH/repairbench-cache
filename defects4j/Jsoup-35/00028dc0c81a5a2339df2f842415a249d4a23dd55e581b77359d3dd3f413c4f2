{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        // \u2026 all other cases unchanged \u2026\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n\n            if (name.equals(\"html\")) {\n                // \u2026 unchanged \u2026\n            }\n            // \u2026\n            else if (StringUtil.in(name,\n                    \"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\",\n                    \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\",\n                    \"ol\", \"p\", \"section\", \"summary\", \"ul\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.process(new Token.EndTag(\"p\"));\n                }\n\n                // BUGFIX: when a <p> (or other block) is seen inside an open <a>,\n                // implicitly close that <a> so the block isn't nested under it.\n                if (\"p\".equals(name)) {\n                    Element a = tb.getFromStack(\"a\");\n                    if (a != null) {\n                        // pop the <a> off the stack but leave its formatting record\n                        tb.popStackToClose(\"a\");\n                    }\n                }\n\n                tb.insert(startTag);\n            }\n            // \u2026 the rest of the StartTag branches unchanged \u2026\n            break;\n\n        // \u2026 all other cases unchanged \u2026\n\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}