{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        // \u2026 all the unchanged cases above \u2026\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n\n            // \u2026 previous branches \u2026\n\n            // block\u2010level tags including <p>\n            else if (StringUtil.in(name,\n                    \"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\",\n                    \"dir\", \"div\", \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\",\n                    \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\", \"p\", \"section\", \"summary\", \"ul\")) {\n\n                // --- begin patch for unclosed <a> ---\n                Element activeA = tb.getActiveFormattingElement(\"a\");\n                if (activeA != null) {\n                    tb.error(this);\n                    // 1) close the existing <a>\n                    tb.process(new Token.EndTag(\"a\"));\n\n                    // 2) remember its attributes so we can reopen it\n                    Attributes aAttrs = new Attributes();\n                    for (Attribute attr : activeA.attributes())\n                        aAttrs.put(attr);\n\n                    // 3) if there's an open <p>, close it\n                    if (tb.inButtonScope(\"p\")) {\n                        tb.process(new Token.EndTag(\"p\"));\n                    }\n                    // 4) insert our block\u2010level tag (e.g. <p>)\n                    tb.insert(startTag);\n\n                    // 5) reopen the <a> inside the new block\n                    tb.process(new Token.StartTag(\"a\", aAttrs));\n                    return true;\n                }\n                // --- end patch ---\n\n                // normal <p>\u2010handling when no open <a>\n                if (tb.inButtonScope(\"p\")) {\n                    tb.process(new Token.EndTag(\"p\"));\n                }\n                tb.insert(startTag);\n            }\n\n            // \u2026 all the remaining branches and the rest of the method unchanged \u2026\n            break;\n\n        // \u2026 other cases (Comment, Doctype, EndTag, EOF) \u2026\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}