{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        // ... unchanged cases before StartTag ...\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n            if (name.equals(\"html\")) {\n                tb.error(this);\n                // merge attributes onto real html\n                Element html = tb.getStack().getFirst();\n                for (Attribute attribute : startTag.getAttributes()) {\n                    if (!html.hasAttr(attribute.getKey()))\n                        html.attributes().put(attribute);\n                }\n\n            } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\",\n                                     \"meta\", \"noframes\", \"script\", \"style\", \"title\")) {\n                return tb.process(t, InHead);\n\n            } else if (name.equals(\"body\")) {\n                // ... body handling unchanged ...\n\n            } else if (name.equals(\"frameset\")) {\n                // ... frameset handling unchanged ...\n\n            } else if (StringUtil.in(name,\n                    \"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\",\n                    \"dir\", \"div\", \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\",\n                    \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\", \"p\", \"section\", \"summary\", \"ul\")) {\n                /*\n                 * This block handles <p> and other block-level starts.\n                 * We add a special check so that if we insert a <p> inside an open <a>,\n                 * we immediately close that <a> (so that <a>s don't wrap <p>).\n                 */\n                if (tb.inButtonScope(\"p\")) {\n                    tb.process(new Token.EndTag(\"p\"));\n                }\n                tb.insert(startTag);\n                if (name.equals(\"p\") && tb.getActiveFormattingElement(\"a\") != null) {\n                    // implicitly close the open <a> before the <p>  \n                    tb.process(new Token.EndTag(\"a\"));\n                }\n\n            } else if (StringUtil.in(name, \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\")) {\n                // ... h1\u2013h6 handling unchanged ...\n\n            } else if (StringUtil.in(name, \"pre\", \"listing\")) {\n                // ... pre/listing handling unchanged ...\n\n            } else if (name.equals(\"form\")) {\n                // ... form handling unchanged ...\n\n            } else if (name.equals(\"li\")) {\n                // ... li handling unchanged ...\n\n            } else if (StringUtil.in(name, \"dd\", \"dt\")) {\n                // ... dd/dt handling unchanged ...\n\n            } else if (name.equals(\"plaintext\")) {\n                // ... plaintext handling unchanged ...\n\n            } else if (name.equals(\"button\")) {\n                // ... button handling unchanged ...\n\n            } else if (name.equals(\"a\")) {\n                // ... <a> start handling unchanged ...\n\n            } else if (StringUtil.in(name,\n                    \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\",\n                    \"small\", \"strike\", \"strong\", \"tt\", \"u\")) {\n                // ... inline formatting handling unchanged ...\n\n            } else if (name.equals(\"nobr\")) {\n                // ... nobr handling unchanged ...\n\n            } else if (StringUtil.in(name, \"applet\", \"marquee\", \"object\")) {\n                // ... applet/marquee/object unchanged ...\n\n            } else if (name.equals(\"table\")) {\n                // ... table handling unchanged ...\n\n            } else if (StringUtil.in(name, \"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\")) {\n                // ... void elements handling unchanged ...\n\n            } else if (name.equals(\"input\")) {\n                // ... input handling unchanged ...\n\n            } else if (StringUtil.in(name, \"param\", \"source\", \"track\")) {\n                // ... param/source/track unchanged ...\n\n            } else if (name.equals(\"hr\")) {\n                // ... hr handling unchanged ...\n\n            } else if (name.equals(\"image\")) {\n                // ... image\u2192img alias unchanged ...\n\n            } else if (name.equals(\"isindex\")) {\n                // ... isindex legacy handling unchanged ...\n\n            } else if (name.equals(\"textarea\")) {\n                // ... textarea handling unchanged ...\n\n            } else if (name.equals(\"xmp\")) {\n                // ... xmp handling unchanged ...\n\n            } else if (name.equals(\"iframe\")) {\n                // ... iframe handling unchanged ...\n\n            } else if (name.equals(\"noembed\")) {\n                // ... noembed handling unchanged ...\n\n            } else if (name.equals(\"select\")) {\n                // ... select handling unchanged ...\n\n            } else if (StringUtil.in(\"optgroup\", \"option\")) {\n                // ... optgroup/option unchanged ...\n\n            } else if (StringUtil.in(\"rp\", \"rt\")) {\n                // ... rp/rt unchanged ...\n\n            } else if (name.equals(\"math\")) {\n                // ... mathml unchanged ...\n\n            } else if (name.equals(\"svg\")) {\n                // ... svg unchanged ...\n\n            } else if (StringUtil.in(name,\n                    \"caption\", \"col\", \"colgroup\", \"frame\", \"head\",\n                    \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\")) {\n                tb.error(this);\n                return false;\n\n            } else {\n                // fallback for anything else\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            }\n            break;\n\n        // ... EndTag and EOF cases unchanged ...\n\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}