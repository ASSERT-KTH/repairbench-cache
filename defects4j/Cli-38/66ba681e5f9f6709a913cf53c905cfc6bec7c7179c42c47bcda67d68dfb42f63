{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * \n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (!token.startsWith(\"-\") || token.length() == 1)\n        {\n            return false;\n        }\n\n        // For a token to be considered a short option, the first character after the leading hyphen\n        // must correspond to a defined short option.\n        // Subsequent characters (e.g., 'V' in -SV, '=V' in -S=V, or 'S2' in -S1S2)\n        // are handled by the parsing logic, not by this method's check for a valid option name.\n        String optName = token.substring(1, 2);\n        return options.hasShortOption(optName);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}