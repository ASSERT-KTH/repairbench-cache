{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * \n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (!token.startsWith(\"-\") || token.length() == 1)\n        {\n            return false;\n        }\n\n        // remove leading \"-\"\n        String optName = token.substring(1);\n        \n        // check for =value part\n        int pos = optName.indexOf(\"=\");\n        if (pos != -1) {\n            optName = optName.substring(0, pos);\n        }\n        \n        // check each character if it's a valid short option\n        for (int i = 0; i < optName.length(); i++) {\n            if (!options.hasShortOption(String.valueOf(optName.charAt(i)))) {\n                return false;\n            }\n        }\n        \n        return optName.length() > 0;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}