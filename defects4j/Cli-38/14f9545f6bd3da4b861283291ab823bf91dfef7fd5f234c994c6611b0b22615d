{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token)\n{\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    if (!token.startsWith(\"-\") || token.length() == 1)\n    {\n        return false;\n    }\n\n    // remove leading \"-\"\n    String optName = token.substring(1);\n    \n    // check for several concatenated short options\n    for (int i = 0; i < optName.length(); i++) {\n        String shortOpt = String.valueOf(optName.charAt(i));\n        if (!options.hasShortOption(shortOpt)) {\n            return false;\n        }\n    }\n    \n    // check if the token contains an assignment\n    int pos = token.indexOf(\"=\");\n    if (pos != -1) {\n        // if it does, check if the option before the assignment exists\n        String shortOpt = String.valueOf(token.charAt(1));\n        return options.hasShortOption(shortOpt);\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}