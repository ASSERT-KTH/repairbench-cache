{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token) {\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    if (!token.startsWith(\"-\") || token.length() == 1) {\n        return false;\n    }\n\n    // Handle concatenated short options\n    if (token.length() > 2 && token.charAt(1) != '-') {\n        // Check if the second character is a valid short option\n        String optName = String.valueOf(token.charAt(1));\n        if (options.hasShortOption(optName)) {\n            return true;\n        }\n    }\n\n    // Remove leading \"-\" and \"=value\"\n    int pos = token.indexOf(\"=\");\n    String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);\n    return options.hasShortOption(optName);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}