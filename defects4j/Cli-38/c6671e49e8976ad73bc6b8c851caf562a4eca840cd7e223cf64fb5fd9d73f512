{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token)\n{\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    if (!token.startsWith(\"-\") || token.length() == 1)\n    {\n        return false;\n    }\n    \n    // Check for a potential single character option\n    char firstChar = token.charAt(1);\n    if (options.hasShortOption(String.valueOf(firstChar)))\n    {\n        return true;\n    }\n    \n    // remove leading \"-\" and \"=value\"\n    int pos = token.indexOf(\"=\");\n    String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);\n    \n    return options.hasShortOption(optName);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}