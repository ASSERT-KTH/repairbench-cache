{
    "generation": "private boolean isShortOption(String token) {\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    if (!token.startsWith(\"-\") || token.length() == 1) {\n        return false;\n    }\n\n    // strip leading \"-\" and anything after \"=\"\n    int pos = token.indexOf(\"=\");\n    String optName = (pos == -1)\n        ? token.substring(1)\n        : token.substring(1, pos);\n\n    // a single short option (possibly multi\u2010character) wins\n    if (options.hasShortOption(optName)) {\n        return true;\n    }\n\n    // if there is an \"=\", we don't attempt grouping\n    if (pos != -1) {\n        return false;\n    }\n\n    // check for concatenated single\u2010char short options, none may take an arg\n    String chars = token.substring(1);\n    for (int i = 0; i < chars.length(); i++) {\n        String name = String.valueOf(chars.charAt(i));\n        if (!options.hasShortOption(name)\n            || options.getOption(name).hasArg()) {\n            return false;\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}