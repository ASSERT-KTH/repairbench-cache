{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token) {\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2 or concatenated like -ab)\n    if (!token.startsWith(\"-\") || token.length() == 1) {\n        return false;\n    }\n\n    // strip leading \"-\" and any \"=value\"\n    int eq = token.indexOf('=');\n    String optName = (eq == -1) ? token.substring(1) : token.substring(1, eq);\n\n    // direct match of a (possibly multi\u2010char) short option\n    if (options.hasShortOption(optName)) {\n        return true;\n    }\n\n    // check for several concatenated single\u2010char short options\n    for (int i = 0; i < optName.length(); i++) {\n        String single = String.valueOf(optName.charAt(i));\n        if (!options.hasShortOption(single)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}