{
    "generation": "public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n    if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n        throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n    }\n    Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n            settings.getTypeToMock(),\n            settings.getExtraInterfaces()\n    );\n    T mockInstance;\n    try {\n        // If the user requested constructor invocation (for spies, inner classes, etc.)\n        if (settings.isUsingConstructor()) {\n            if (settings.getOuterInstance() != null) {\n                // For non-static inner classes, provide the outer instance and any constructor args.\n                mockInstance = classInstantiator.instantiateInnerClass(\n                        mockedProxyType,\n                        settings.getOuterInstance(),\n                        settings.getConstructorArgs()\n                );\n            } else {\n                // Regular instantiation via constructor with the given constructor arguments.\n                mockInstance = classInstantiator.instantiateWithConstructor(\n                        mockedProxyType,\n                        settings.getConstructorArgs()\n                );\n            }\n        } else {\n            // Default instantiation without calling the constructor (e.g. via Objenesis).\n            mockInstance = classInstantiator.instantiate(mockedProxyType);\n        }\n        // Install the mock interceptor on the newly created instance.\n        MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n        mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n\n        return ensureMockIsAssignableToMockedType(settings, mockInstance);\n    } catch (ClassCastException cce) {\n        throw new MockitoException(join(\n                \"ClassCastException occurred while creating the mockito mock :\",\n                \"  class to mock : \" + describeClass(mockedProxyType),\n                \"  created class : \" + describeClass(settings.getTypeToMock()),\n                \"  proxy instance class : \" + describeClass(mockInstance),\n                \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                \"\",\n                \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                \"\"\n        ), cce);\n    } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n        throw new MockitoException(\n                \"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\",\n                e\n        );\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}