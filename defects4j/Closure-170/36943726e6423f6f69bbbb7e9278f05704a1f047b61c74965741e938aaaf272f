{
    "generation": "private void getNumUseInUseCfgNode(final Node cfgNode) {\n  numUsesWithinCfgNode = 0;\n  AbstractCfgNodeTraversalCallback gatherCb =\n      new AbstractCfgNodeTraversalCallback() {\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (n.isName() && n.getString().equals(varName)) {\n        boolean isAssignmentTarget = false;\n        for (Node p = n.getParent(); p != null; p = p.getParent()) {\n          if (p.isAssign() && p.getFirstChild() == n) {\n            isAssignmentTarget = true;\n            break;\n          }\n        }\n        if (!isAssignmentTarget) {\n          numUsesWithinCfgNode++;\n        }\n      }\n    }\n\n  };\n\n  NodeTraversal.traverse(compiler, cfgNode, gatherCb);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}