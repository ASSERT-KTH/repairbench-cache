{
    "generation": "private Map<String, Integer> initializeHeader() throws IOException {\n    if (!this.format.getWithHeader()) {\n        return null;\n    }\n\n    Map<String, Integer> hdrMap = new LinkedHashMap<>();\n    String[] headerRecord = null;\n\n    final String[] formatHeader = this.format.getHeader();\n    if (formatHeader != null && formatHeader.length > 0) {\n        if (this.format.getSkipHeaderRecord()) {\n            this.nextRecord();\n        }\n        headerRecord = formatHeader;\n    } else {\n        final CSVRecord nextRecord = this.nextRecord();\n        if (nextRecord != null) {\n            headerRecord = nextRecord.values();\n        }\n    }\n\n    if (headerRecord != null) {\n        for (int i = 0; i < headerRecord.length; i++) {\n            final String header = headerRecord[i];\n            final boolean containsHeader = hdrMap.containsKey(header);\n            final boolean emptyHeader = header.trim().isEmpty();\n            if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {\n                throw new IllegalArgumentException(\n                        \"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n            }\n            hdrMap.put(header.trim(), Integer.valueOf(i));\n        }\n    }\n\n    return hdrMap;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}