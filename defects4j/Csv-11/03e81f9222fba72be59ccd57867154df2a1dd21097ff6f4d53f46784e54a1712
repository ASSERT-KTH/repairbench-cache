{
    "generation": "private Map<String, Integer> initializeHeader() throws IOException {\n    Map<String, Integer> hdrMap = null;\n    final String[] formatHeader = this.format.getHeader();\n    if (formatHeader != null) {\n        hdrMap = new LinkedHashMap<>();\n\n        String[] headerRecord = null;\n        if (formatHeader.length == 0) {\n            // read the header from the first line of the file\n            final CSVRecord nextRecord = this.nextRecord();\n            if (nextRecord != null) {\n                headerRecord = nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord = formatHeader;\n        }\n\n        // build the name to index mappings\n        if (headerRecord != null) {\n            for (int i = 0; i < headerRecord.length; i++) {\n                String header = headerRecord[i];\n                if (header == null) {\n                    if (this.format.getIgnoreEmptyHeaders()) {\n                        // skip null header values when ignoring empty headers\n                        continue;\n                    } else {\n                        header = \"\";\n                    }\n                }\n                boolean emptyHeader = header.trim().isEmpty();\n                // if the header already exists and either it's not empty or empty headers aren't ignored, it's an error\n                if (hdrMap.containsKey(header) && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header +\n                            \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                if (emptyHeader && this.format.getIgnoreEmptyHeaders()) {\n                    // do not add header mapping for empty headers when ignoring them\n                    continue;\n                }\n                hdrMap.put(header, i);\n            }\n        }\n    }\n    return hdrMap;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}