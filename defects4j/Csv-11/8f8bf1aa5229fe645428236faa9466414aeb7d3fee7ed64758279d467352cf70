{
    "generation": "private Map<String, Integer> initializeHeader() throws IOException {\n    Map<String, Integer> hdrMap = null;\n    final String[] formatHeader = this.format.getHeader();\n    if (formatHeader != null) {\n        hdrMap = new LinkedHashMap<String, Integer>();\n\n        String[] headerRecord = null;\n        if (formatHeader.length == 0) {\n            final CSVRecord nextRecord = this.nextRecord();\n            if (nextRecord != null) {\n                headerRecord = nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord = formatHeader;\n        }\n\n        if (headerRecord != null) {\n            for (int i = 0; i < headerRecord.length; i++) {\n                final String header = headerRecord[i];\n                final String headerName = (header == null) ? \"\" : header;\n                final boolean emptyHeader = headerName.trim().isEmpty();\n                final boolean containsHeader = hdrMap.containsKey(headerName);\n\n                if (containsHeader &&\n                    (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" +\n                            headerName + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                // only map non\u2010empty headers, or map empty ones if we're not ignoring them\n                if (!emptyHeader || !this.format.getIgnoreEmptyHeaders()) {\n                    hdrMap.put(headerName, Integer.valueOf(i));\n                }\n            }\n        }\n    }\n    return hdrMap;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}