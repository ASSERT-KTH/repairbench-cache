{
    "generation": "    /**\n     * Initializes the name to index mapping if the format defines a header.\n     *\n     * @return null if the format has no header.\n     * @throws IOException if there is a problem reading the header or skipping the first record\n     */\n    private Map<String, Integer> initializeHeader() throws IOException {\n        Map<String, Integer> hdrMap = null;\n        final String[] formatHeader = this.format.getHeader();\n        if (formatHeader != null) {\n            hdrMap = new LinkedHashMap<String, Integer>();\n\n            String[] headerRecord = null;\n            if (formatHeader.length == 0) {\n                // read the header from the first line of the file\n                final CSVRecord nextRecord = this.nextRecord();\n                if (nextRecord != null) {\n                    headerRecord = nextRecord.values();\n                }\n            } else {\n                if (this.format.getSkipHeaderRecord()) {\n                    this.nextRecord();\n                }\n                headerRecord = formatHeader;\n            }\n\n            // build the name to index mappings\n            if (headerRecord != null) {\n                for (int i = 0; i < headerRecord.length; i++) {\n                    final String header = headerRecord[i];\n                    // Check if the header is null or effectively empty (e.g., \" \")\n                    // This handles cases where withNullString() makes an empty field null.\n                    final boolean isHeaderNullOrEmpty = header == null || header.trim().isEmpty();\n\n                    // If empty headers are configured to be ignored, and this header is empty/null,\n                    // then skip it entirely from the header map and duplicate checks.\n                    if (isHeaderNullOrEmpty && this.format.getIgnoreEmptyHeaders()) {\n                        continue;\n                    }\n\n                    // Now, for headers that are not ignored, check for duplicates.\n                    // If a header is found that is already in the map, it's a duplicate.\n                    // The previous check handled cases where an empty header was not ignored\n                    // and was a duplicate (e.g., \"\", \"\" when ignoreEmptyHeaders is false).\n                    // This new structure implicitly handles that: if isHeaderNullOrEmpty is true\n                    // but getIgnoreEmptyHeaders is false, it proceeds to check for duplicates.\n                    final boolean containsHeader = hdrMap.containsKey(header);\n                    if (containsHeader) {\n                        throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header +\n                                \"\\\" in \" + Arrays.toString(headerRecord));\n                    }\n                    hdrMap.put(header, Integer.valueOf(i));\n                }\n            }\n        }\n        return hdrMap;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}