{
    "generation": "/**\n * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\n * will kick in.)\n * @param contentType e.g. \"text/html; charset=EUC-JP\"\n * @return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased or lowercased for \"utf-8\".\n */\nstatic String getCharsetFromContentType(String contentType) {\n    if (contentType == null) return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        // Remove possible quotes surrounding the charset name\n        if ((charset.startsWith(\"\\\"\") && charset.endsWith(\"\\\"\")) || (charset.startsWith(\"'\") && charset.endsWith(\"'\"))) {\n            charset = charset.substring(1, charset.length() - 1);\n        }\n        String upper = charset.toUpperCase(Locale.ENGLISH);\n        if (upper.equals(\"UTF-8\")) {\n            return \"utf-8\";\n        }\n        // Check whether the charset is supported; if not, return null\n        try {\n            if (!Charset.isSupported(charset)) return null;\n        } catch (Exception e) {\n            return null;\n        }\n        return upper;\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}