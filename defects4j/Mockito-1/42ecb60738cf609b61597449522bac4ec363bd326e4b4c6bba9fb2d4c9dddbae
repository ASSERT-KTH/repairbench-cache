{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    Object[] rawArgs = invocation.getRawArguments();\n    for (int position = 0; position < matchers.size(); position++) {\n        Matcher m = matchers.get(position);\n        if (m instanceof CapturesArguments && rawArgs.length > position) {\n            // If the invoked method is varargs and we are at the varargs parameter\u2026\n            if (invocation.getMethod().isVarArgs() &&\n                isVariableArgument(invocation, position) &&\n                isVarargMatcher(m)) {\n                Object array = rawArgs[position];\n                if (array == null) {\n                    // If a null vararg array was passed, capture null\n                    ((CapturesArguments) m).captureFrom(null);\n                } else {\n                    // Otherwise, capture each element of the varargs array\n                    int length = Array.getLength(array);\n                    for (int i = 0; i < length; i++) {\n                        ((CapturesArguments) m).captureFrom(Array.get(array, i));\n                    }\n                }\n                // Since we\u2019ve captured the varargs, no need to process further matchers.\n                return;\n            } else {\n                ((CapturesArguments) m).captureFrom(rawArgs[position]);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}