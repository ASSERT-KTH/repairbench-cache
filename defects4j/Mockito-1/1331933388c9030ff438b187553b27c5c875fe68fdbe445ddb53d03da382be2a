{
    "generation": "    public void captureArgumentsFrom(Invocation invocation) {\n        if (invocation.getMethod().isVarArgs()) {\n            int indexOfVararg = invocation.getRawArguments().length - 1;\n\n            for (int position = 0; position < matchers.size(); position++) {\n                Matcher m = matchers.get(position);\n                if (m instanceof CapturesArguments) {\n                    if (position == indexOfVararg) {\n                        Object array = invocation.getRawArguments()[position];\n                        if (array != null) {\n                            for (int i = 0; i < java.lang.reflect.Array.getLength(array); i++) {\n                                ((CapturesArguments) m).captureFrom(java.lang.reflect.Array.get(array, i));\n                            }\n                        }\n                    } else if (position < invocation.getRawArguments().length) {\n                        ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);\n                    }\n                }\n            }\n\n        } else {\n            for (int position = 0; position < matchers.size(); position++) {\n                Matcher m = matchers.get(position);\n                if (m instanceof CapturesArguments) {\n                    if (position < invocation.getArguments().length) {\n                        ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n                    }\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}