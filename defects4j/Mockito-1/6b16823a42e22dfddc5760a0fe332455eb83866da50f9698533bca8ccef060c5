{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    Object[] rawArgs = invocation.getRawArguments();\n    boolean isVarargs = invocation.getMethod().isVarArgs();\n    for (int position = 0; position < matchers.size(); position++) {\n        Matcher m = matchers.get(position);\n        if (!(m instanceof CapturesArguments)) {\n            continue;\n        }\n        CapturesArguments captor = (CapturesArguments) m;\n        // handle varargs grouping: last matcher against the varargs array\n        if (isVarargs && position == rawArgs.length - 1) {\n            Object varargArray = rawArgs[position];\n            if (varargArray != null && varargArray.getClass().isArray()) {\n                int len = Array.getLength(varargArray);\n                for (int i = 0; i < len; i++) {\n                    captor.captureFrom(Array.get(varargArray, i));\n                }\n            }\n            // we've consumed the varargs; no further capturing is required\n            return;\n        }\n        // non\u2010varargs or ordinary arguments\n        if (position < rawArgs.length) {\n            captor.captureFrom(invocation.getArgumentAt(position, Object.class));\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}