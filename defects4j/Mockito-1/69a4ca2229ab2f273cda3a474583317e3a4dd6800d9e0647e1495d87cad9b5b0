{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    if (invocation.getMethod().isVarArgs()) {\n        // Get the vararg index (last argument position)\n        int indexOfVararg = invocation.getRawArguments().length - 1;\n\n        // Find matchers that are vararg captors\n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                // For non-vararg positions, capture as usual\n                if (position < indexOfVararg) {\n                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n                }\n                // For vararg position, handle array elements\n                else if (position == indexOfVararg) {\n                    Object varargArray = invocation.getArgumentAt(position, Object.class);\n                    if (varargArray != null && varargArray.getClass().isArray()) {\n                        int length = Array.getLength(varargArray);\n                        for (int i = 0; i < length; i++) {\n                            ((CapturesArguments) m).captureFrom(Array.get(varargArray, i));\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}