{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    for (int position = 0; position < matchers.size(); position++) {\n        Matcher m = matchers.get(position);\n        if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {\n            Object argument = invocation.getRawArguments()[position];\n            if (isVariableArgument(invocation, position) && isVarargMatcher(m)) {\n                if (argument != null && argument.getClass().isArray()) {\n                    int length = Array.getLength(argument);\n                    for (int i = 0; i < length; i++) {\n                        ((CapturesArguments) m).captureFrom(Array.get(argument, i));\n                    }\n                } else {\n                    ((CapturesArguments) m).captureFrom(argument);\n                }\n            } else {\n                ((CapturesArguments) m).captureFrom(argument);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}