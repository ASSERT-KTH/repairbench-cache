{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    Object[] rawArguments = invocation.getRawArguments();\n\n    for (int position = 0; position < matchers.size(); position++) {\n        Matcher m = matchers.get(position);\n        if (m instanceof CapturesArguments && rawArguments.length > position) {\n            // handle varargs case\n            if (invocation.getMethod().isVarArgs() && isVariableArgument(invocation, position) && isVarargMatcher(m)) {\n                Object array = rawArguments[position];\n                if (array == null) {\n                    ((CapturesArguments) m).captureFrom(null);\n                } else {\n                    int len = Array.getLength(array);\n                    for (int i = 0; i < len; i++) {\n                        ((CapturesArguments) m).captureFrom(Array.get(array, i));\n                    }\n                }\n                // Since we've captured all varargs elements, no need to process further matchers for varargs\n                return;\n            } else {\n                ((CapturesArguments) m).captureFrom(rawArguments[position]);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}