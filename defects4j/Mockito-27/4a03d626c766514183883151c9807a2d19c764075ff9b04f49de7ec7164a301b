{
    "generation": "    public <T> void resetMock(T mock) {\n        MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n        // The original settings of the mock, including listeners, default answers, etc.,\n        // are stored within the old mock handler. We need to retrieve them to preserve\n        // the mock's configuration during reset.\n        MockSettingsImpl originalSettings = (MockSettingsImpl) oldMockHandler.getMockSettings();\n\n        // Create a new mock handler. This constructor typically handles clearing\n        // invocations and stubbings from the old handler, while retaining\n        // the original mock settings (passed or implicitly copied).\n        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n\n        // Create a new MethodInterceptorFilter. The crucial change here is to pass\n        // the `originalSettings` instead of creating new default settings.\n        // This ensures that all custom settings, like invocation listeners, are preserved.\n        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, originalSettings);\n        ((Factory) mock).setCallback(0, newFilter);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}