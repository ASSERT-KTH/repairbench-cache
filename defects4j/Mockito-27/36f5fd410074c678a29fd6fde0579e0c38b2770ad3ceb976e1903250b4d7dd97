{
    "generation": "public <T> void resetMock(T mock) {\n    // Retrieve the original mock handler and its settings so that all custom settings\n    // (like invocation listeners) are preserved.\n    MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);\n    MockSettingsImpl settings = ((MockHandler<T>) oldMockHandler).getMockSettings();\n    \n    // Create a new mock handler using the old one \u2013 this copies over the internal state.\n    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);\n    \n    // Use the original settings (instead of new defaults) when creating the interceptor.\n    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);\n    ((Factory) mock).setCallback(0, newFilter);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}