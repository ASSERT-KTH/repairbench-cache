{
    "generation": "    /**\n     * @param Umin smallest Mann-Whitney U value\n     * @param n1 number of subjects in first sample\n     * @param n2 number of subjects in second sample\n     * @return two-sided asymptotic p-value\n     * @throws ConvergenceException if the p-value can not be computed\n     * due to a convergence error\n     * @throws MaxCountExceededException if the maximum number of\n     * iterations is exceeded\n     */\n    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        // Use long to avoid intermediate overflow during variance calculation\n        final long n1l = n1;\n        final long n2l = n2;\n        final long n1n2prod = n1l * n2l;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n        // Compute VarU using long intermediate results to prevent overflow\n        final double VarU = n1n2prod * (n1l + n2l + 1L) / 12.0;\n\n        // Compute z-score without continuity correction\n        final double z = (Umin - EU) / FastMath.sqrt(VarU);\n\n        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        // Calculate the two-sided p-value.\n        // Since Umin is used (Umin <= EU), z will be <= 0.\n        // The p-value is 2 * P(Z <= z).\n        return 2 * standardNormal.cumulativeProbability(z);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}