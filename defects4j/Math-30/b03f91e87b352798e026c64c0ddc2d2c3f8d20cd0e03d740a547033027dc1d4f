{
    "generation": "    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        final int n1n2prod = n1 * n2;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n\n        final double z = (Umin - EU) / FastMath.sqrt(VarU);\n\n        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        // Two-sided p-value: 2 * min(P(Z <= z), P(Z >= z)) = 2 * min(CDF(z), 1 - CDF(z))\n        double pOneSided = standardNormal.cumulativeProbability(z);\n        double pTwoSided = 2 * Math.min(pOneSided, 1 - pOneSided);\n        // In practice, ensure the value is in [0,1] (due to round-off)\n        pTwoSided = Math.max(0.0, Math.min(1.0, pTwoSided));\n        return pTwoSided;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}