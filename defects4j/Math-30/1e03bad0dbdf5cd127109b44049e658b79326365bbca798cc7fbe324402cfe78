{
    "generation": "/**\n * @param Umin smallest Mann-Whitney U value\n * @param n1 number of subjects in first sample\n * @param n2 number of subjects in second sample\n * @return two-sided asymptotic p-value\n * @throws ConvergenceException if the p-value cannot be computed\n *         due to a convergence error\n * @throws MaxCountExceededException if the maximum number of\n *         iterations is exceeded\n */\nprivate double calculateAsymptoticPValue(final double Umin,\n                                         final int n1,\n                                         final int n2)\n    throws ConvergenceException, MaxCountExceededException {\n\n    // avoid integer overflow by doing the core arithmetic in double\n    final double n1n2 = (double) n1 * n2;\n    // expected value of U\n    final double EU = n1n2 / 2.0;\n    // variance of U\n    final double VarU = n1n2 * (n1 + n2 + 1) / 12.0;\n\n    final double z = (Umin - EU) / FastMath.sqrt(VarU);\n\n    final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n    // two\u2010sided p\u2010value\n    return 2 * standardNormal.cumulativeProbability(z);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}