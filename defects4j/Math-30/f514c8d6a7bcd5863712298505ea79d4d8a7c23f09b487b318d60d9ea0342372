{
    "generation": "/**\n * @param Umin smallest Mann-Whitney U value\n * @param n1 number of subjects in first sample\n * @param n2 number of subjects in second sample\n * @return two-sided asymptotic p-value\n * @throws ConvergenceException if the p-value can not be computed\n * due to a convergence error\n * @throws MaxCountExceededException if the maximum number of\n * iterations is exceeded\n */\nprivate double calculateAsymptoticPValue(final double Umin,\n                                         final int n1,\n                                         final int n2)\n    throws ConvergenceException, MaxCountExceededException {\n\n    // promote to double immediately to avoid integer overflow\n    final double n1d = n1;\n    final double n2d = n2;\n\n    // expected value and variance under H0 (no ties)\n    final double EU   = n1d * n2d / 2.0;\n    final double VarU = n1d * n2d * (n1d + n2d + 1.0) / 12.0;\n\n    // standardize\n    final double z = (Umin - EU) / FastMath.sqrt(VarU);\n\n    // two\u2010sided p\u2010value = 2 * P(Z \u2264 -|z|)\n    final NormalDistribution standardNormal = new NormalDistribution(0.0, 1.0);\n    return 2.0 * standardNormal.cumulativeProbability(-FastMath.abs(z));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}