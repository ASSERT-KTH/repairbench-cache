{
    "generation": "    /**\n     * @param Umin smallest Mann-Whitney U value\n     * @param n1 number of subjects in first sample\n     * @param n2 number of subjects in second sample\n     * @return two-sided asymptotic p-value\n     * @throws ConvergenceException if the p-value can not be computed\n     * due to a convergence error\n     * @throws MaxCountExceededException if the maximum number of\n     * iterations is exceeded\n     */\n    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        final int n1n2prod = n1 * n2;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n\n        // Apply continuity correction to the U statistic\n        // The correction reduces the magnitude of the difference (Umin - EU) by 0.5\n        final double Udiff = Umin - EU;\n        final double z = (Udiff - FastMath.signum(Udiff) * 0.5) / FastMath.sqrt(VarU);\n\n        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        // For a two-sided test, the p-value is 2 * P(Z <= -|z|)\n        // This handles both positive and negative z values correctly.\n        return 2 * standardNormal.cumulativeProbability(-FastMath.abs(z));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}