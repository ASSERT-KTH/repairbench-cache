{
    "generation": "import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n  /**\n   * Check to see if the given block comment looks like it should be JSDoc.\n   */\n  // Pattern to find JSDoc-like '@' tags in a non-JSDoc block comment.\n  // This pattern matches:\n  // - The start of the comment content (^) or a newline character (\\n)\n  // - Followed by zero or more whitespace characters (\\s*)\n  // - Followed by an optional asterisk (\\*?) (escaped)\n  // - Followed by zero or more whitespace characters (\\s*)\n  // - Followed by an at-sign (@)\n  private static final Pattern SUSPICIOUS_COMMENT_PATTERN =\n      Pattern.compile(\"(^|\\\\n)\\\\s*\\\\*?\\\\s*@\");\n\n  private void handleBlockComment(Comment comment) {\n    String commentContent = comment.getValue();\n\n    // Check if the comment content matches the suspicious JSDoc-like pattern.\n    if (SUSPICIOUS_COMMENT_PATTERN.matcher(commentContent).find()) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}