{
    "generation": "/**\n * Check to see if the given block comment looks like it should be JSDoc.\n */\nprivate void handleBlockComment(Comment comment) {\n  String value = comment.getValue();\n  // Remove the initial '/*' and final '*/' of the comment (if any)\n  value = value.trim();\n  if (value.startsWith(\"/*\")) {\n    value = value.substring(2);\n  }\n  if (value.endsWith(\"*/\")) {\n    value = value.substring(0, value.length() - 2);\n  }\n  // Now look for lines that start with optional whitespace, then '*', then optional whitespace, then '@'\n  java.util.regex.Pattern suspiciousPattern = java.util.regex.Pattern.compile(\"(?m)^\\\\s*\\\\*\\\\s*@\");\n  if (suspiciousPattern.matcher(value).find()) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}