{
    "generation": "/**\n * Check to see if the given block comment looks like it should be JSDoc.\n */\nprivate void handleBlockComment(Comment comment) {\n  String value = comment.getValue();\n  // Split the comment into lines to detect @type or similar after \"*\" possibly preceeded by whitespace\n  String[] lines = value.split(\"\\n\");\n  for (String line : lines) {\n    // Remove leading whitespace and leading \"*\"s and whitespace after that\n    String trimmed = line.trim();\n    if (trimmed.startsWith(\"*\")) {\n      trimmed = trimmed.substring(1).trim();\n    }\n    // Check for @-annotation\n    if (trimmed.startsWith(\"@\")) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n      return;\n    }\n  }\n  // Also catch inline block comments like \"/* @type {number} */\"\n  if (value.indexOf(\"@\") != -1 && value.replaceAll(\"[ \\n\\r\\t*]\", \"\").matches(\".*@\\\\w+.*\")) {\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}