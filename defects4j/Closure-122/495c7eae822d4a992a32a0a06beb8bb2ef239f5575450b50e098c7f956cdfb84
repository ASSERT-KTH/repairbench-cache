{
    "generation": "/**\n * Check to see if the given block comment looks like it should be JSDoc.\n */\nprivate void handleBlockComment(Comment comment) {\n  String value = comment.getValue();\n  String[] lines = value.split(\"\\n\");\n  for (String line : lines) {\n    String trimmed = line.trim();\n    // Check for lines starting with \"*\" (possibly preceded by spaces), then \"@\".\n    if (trimmed.startsWith(\"*\") && trimmed.replaceFirst(\"^\\\\*\\\\s*\", \"\").startsWith(\"@\")) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n      return;\n    }\n    // Also check for \"@\", possibly preceded by spaces, at the line start (for single-line block comments)\n    if (trimmed.startsWith(\"@\")) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n      return;\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}