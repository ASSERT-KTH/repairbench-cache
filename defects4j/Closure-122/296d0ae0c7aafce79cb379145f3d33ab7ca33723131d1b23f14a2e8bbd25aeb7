{
    "generation": "/**\n * Check to see if the given block comment looks like it should be JSDoc.\n */\nprivate void handleBlockComment(Comment comment) {\n  String value = comment.getValue();\n  if (value.contains(\"/**\") || // Explicit JSDoc\n      // Check for @ symbols on lines that start with * after the first line\n      (value.startsWith(\"/*\") && containsAtOnStarLines(value))) {\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n\nprivate boolean containsAtOnStarLines(String comment) {\n  String[] lines = comment.split(\"\\n\");\n  // Skip first line (/*)\n  for (int i = 1; i < lines.length; i++) {\n    String line = lines[i].trim();\n    if (line.startsWith(\"*\") && line.contains(\"@\")) {\n      return true;\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}