{
    "generation": "/**\n * Check to see if the given block comment looks like it should be JSDoc.\n */\nprivate void handleBlockComment(Comment comment) {\n  String value = comment.getValue();\n  // Split the comment into lines for multi-line checks\n  String[] lines = value.split(\"\\n\");\n  boolean looksLikeJSDoc = false;\n  for (String line : lines) {\n    String trimmed = line.trim();\n    // ignore the comment start/end separators\n    if (trimmed.startsWith(\"/*\") || trimmed.startsWith(\"*/\")) {\n      continue;\n    }\n    // check if line starts with '*' followed by optional spaces and then '@'\n    if (trimmed.startsWith(\"*\")) {\n      int idx = trimmed.indexOf('@');\n      if (idx != -1) {\n        looksLikeJSDoc = true;\n        break;\n      }\n    } else {\n      // Also check for '@' on non-asterisk lines\n      int idx = trimmed.indexOf('@');\n      if (idx != -1) {\n        looksLikeJSDoc = true;\n        break;\n      }\n    }\n  }\n\n  if (looksLikeJSDoc) {\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}