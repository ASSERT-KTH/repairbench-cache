{
    "generation": "  /**\n   * Check to see if the given block comment looks like it should be JSDoc.\n   */\n  private void handleBlockComment(Comment comment) {\n    String value = comment.getValue();\n    // Remove the leading \"/*\" and trailing \"*/\"\n    value = value.replaceFirst(\"^/\\\\*\", \"\").replaceFirst(\"\\\\*/$\", \"\");\n    String[] lines = value.split(\"\\\\r?\\\\n\");\n    for (String line : lines) {\n      String trimmed = line.trim();\n      // Check if the line starts with \"*\" (optionally after spaces), then contains \"@\"\n      if (trimmed.startsWith(\"*\")) {\n        // Remove the leading \"*\" and trim again to handle lines like \" * @type\"\n        String afterStar = trimmed.substring(1).trim();\n        if (afterStar.startsWith(\"@\")) {\n          errorReporter.warning(\n              SUSPICIOUS_COMMENT_WARNING,\n              sourceName,\n              comment.getLineno(), \"\", 0);\n          return;\n        }\n      } else if (trimmed.startsWith(\"@\")) {\n        errorReporter.warning(\n            SUSPICIOUS_COMMENT_WARNING,\n            sourceName,\n            comment.getLineno(), \"\", 0);\n        return;\n      }\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}