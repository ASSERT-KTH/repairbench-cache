{
    "generation": "    protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)\n    {\n        int pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(rtrim(text));\n\n            return sb;\n        }\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n        // Check if there's at least 1 character available after indent\n        if (width - nextLineTabStop < 1)\n        {\n            // Prevents infinite loop by ensuring room for text after padding\n            throw new IllegalStateException(\"Total width is less than the width of the argument and indent \" +\n                                            \"- no room for the description\");\n        }\n\n        // Create padding for subsequent lines\n        final String padding = createPadding(nextLineTabStop);\n\n        while (true)\n        {\n            text = padding + text.substring(pos).trim();\n            pos = findWrapPos(text, width, 0);\n\n            if (pos == -1)\n            {\n                sb.append(text);\n                return sb;\n            }\n            \n            // Adjust pos if needed to avoid underflow\n            if (text.length() > width && pos == nextLineTabStop - 1)\n            {\n                pos = width;\n            }\n\n            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}