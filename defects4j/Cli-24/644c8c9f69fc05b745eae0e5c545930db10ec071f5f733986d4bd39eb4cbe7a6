{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text) {\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1) {\n        sb.append(rtrim(text));\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // Instead of throwing an exception when the indent is too wide,\n    // we adjust nextLineTabStop to allow at least one character per line.\n    if (nextLineTabStop >= width) {\n        nextLineTabStop = width - 1;\n    }\n\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true) {\n        text = padding + text.substring(pos).trim();\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1) {\n            sb.append(text);\n            return sb;\n        }\n        \n        if ((text.length() > width) && (pos == nextLineTabStop - 1)) {\n            pos = width;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": true,
    "compile": true,
    "test": true
}