{
    "generation": "/**\n * Render the specified text and return the rendered Options\n * in a StringBuffer.\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // Remove the check that throws IllegalStateException for narrow width.\n    // Instead, allow wrapping even when nextLineTabStop >= width.\n\n    // all following lines must be padded with nextLineTabStop space \n    // characters\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        text = padding + text.substring(pos).trim();\n        // When indent >= width, we still wrap the text according to width, to avoid infinite loops.\n        // In such cases, we allow wrapping even if there is no space for padding.\n\n        // Ensure that, if indent is wider than width, we just print one character per line\n        int effectiveWidth = width;\n        if (nextLineTabStop >= width) {\n            effectiveWidth = Math.max(1, width);\n        }\n\n        pos = findWrapPos(text, effectiveWidth, 0);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n            return sb;\n        }\n\n        // Defensive: handle pathological case where pos is invalid\n        if ( (text.length() > effectiveWidth) && (pos == nextLineTabStop - 1) ) \n        {\n            pos = effectiveWidth;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}