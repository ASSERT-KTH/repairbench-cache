{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n        return sb;\n    }\n    \n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    final String padding = nextLineTabStop <= 0 ? \"\" : createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        String remainingText = text.substring(pos).trim();\n\n        if (nextLineTabStop > width)\n        {\n            throw new IllegalStateException(\"Total width is less than the width of the argument and indent - no room for the description\");\n        }\n\n        if (padding.length() + remainingText.length() <= width)\n        {\n            sb.append(padding).append(remainingText);\n            return sb;\n        }\n\n        text = padding + remainingText;\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n            return sb;\n        }\n\n        if ( (text.length() > width) && (pos == nextLineTabStop - 1) )\n        {\n            pos = width;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}