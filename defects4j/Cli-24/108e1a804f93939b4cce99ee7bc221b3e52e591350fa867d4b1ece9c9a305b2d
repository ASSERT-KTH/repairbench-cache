{
    "generation": "/**\n * Render the specified text and return the rendered Options\n * in a StringBuffer.\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width,\n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // Modified condition: check if there's actually room for text after padding\n    if (nextLineTabStop >= width && width > 0)  // added width > 0 check\n    {\n        // stops infinite loop happening\n        throw new IllegalStateException(\"Total width is less than the width of the argument and indent \" +\n                                        \"- no room for the description\");\n    }\n\n    // all following lines must be padded with nextLineTabStop space\n    // characters\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        String remainingText = text.substring(pos).trim();\n        text = padding + remainingText;\n\n        // If the remaining text is empty, break out of the loop\n        if (remainingText.isEmpty()) {\n            break;\n        }\n\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n            return sb;\n        }\n\n        // Ensure we don't get stuck when width <= nextLineTabStop\n        if (nextLineTabStop < width && pos == nextLineTabStop && text.length() > width) {\n            pos = width;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n        // If we've consumed all the text but still in loop, break\n        if (pos >= text.length()) {\n            break;\n        }\n    }\n\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}