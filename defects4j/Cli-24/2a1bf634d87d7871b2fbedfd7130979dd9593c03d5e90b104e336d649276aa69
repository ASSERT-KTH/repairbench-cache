{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width,\n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // remove this restriction which causes IllegalStateException\n    // if (nextLineTabStop >= width) ...\n    // instead accept nextLineTabStop >= width, but treat indent accordingly\n\n    // all following lines must be padded with nextLineTabStop space \n    // characters\n    final String padding;\n    if (nextLineTabStop > 0)\n    {\n        padding = createPadding(nextLineTabStop);\n    }\n    else\n    {\n        padding = \"\";\n    }\n\n    while (true)\n    {\n        text = padding + text.substring(pos).trim();\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n\n            return sb;\n        }\n\n        // If word is longer than line width, break forcibly at width\n        if ((text.length() > width) && (pos <= nextLineTabStop))\n        {\n            pos = width;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}