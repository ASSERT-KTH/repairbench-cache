{
    "generation": "private Node tryFoldSimpleFunctionCall(Node n) {\n  Preconditions.checkState(n.isCall());\n  Node callTarget = n.getFirstChild();\n\n  // Only handle calls to global String function with exactly one argument\n  if (callTarget != null && callTarget.isName() &&\n        callTarget.getString().equals(\"String\") &&\n        n.getSecondChild() != null &&\n        n.getSecondChild().getNext() == null) {\n    Node value = callTarget.getNext();\n\n    // Only fold if argument is a literal: STRING, NUMBER, TRUE, FALSE, NULL\n    if (value != null && (value.isString() || value.isNumber() ||\n                          value.isTrue() || value.isFalse() ||\n                          value.isNull())) {\n      Node addition = IR.add(\n          IR.string(\"\").srcref(callTarget),\n          value.detachFromParent());\n      n.getParent().replaceChild(n, addition);\n      reportCodeChange();\n      return addition;\n    }\n  }\n  return n;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}