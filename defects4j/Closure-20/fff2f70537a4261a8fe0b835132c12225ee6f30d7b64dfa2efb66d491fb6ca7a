{
    "generation": "private Node tryFoldSimpleFunctionCall(Node n) {\n  Preconditions.checkState(n.isCall());\n  Node callTarget = n.getFirstChild();\n  // Only consider String() calls with exactly one argument.\n  if (callTarget != null && callTarget.isName()\n      && callTarget.getString().equals(\"String\")\n      && n.getSecondChild() != null\n      && n.getSecondChild().getNext() == null) {\n    Node value = n.getSecondChild();\n    // Only fold if the argument is a literal (number or string or boolean or null).\n    if (value.isNumber() || value.isString() || value.isTrue() || value.isFalse() || value.isNull()) {\n      Node addition = IR.add(\n          IR.string(\"\").srcref(callTarget),\n          value.detachFromParent());\n      n.getParent().replaceChild(n, addition);\n      reportCodeChange();\n      return addition;\n    }\n  }\n  return n;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}