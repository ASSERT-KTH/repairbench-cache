{
    "generation": "private Node tryFoldSimpleFunctionCall(Node n) {\n  Preconditions.checkState(n.isCall());\n  Node callTarget = n.getFirstChild();\n  if (callTarget != null && callTarget.isName() &&\n      \"String\".equals(callTarget.getString())) {\n    // Only fold if there is exactly one argument\n    Node arg = callTarget.getNext();\n    if (arg != null && arg.getNext() == null &&\n        NodeUtil.isImmutableValue(arg)) {\n      // Fold String(a) to '' + a for immutable literals.\n      Node addition = IR.add(\n          IR.string(\"\").srcref(callTarget),\n          arg.detachFromParent());\n      n.getParent().replaceChild(n, addition);\n      reportCodeChange();\n      return addition;\n    }\n  }\n  return n;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}