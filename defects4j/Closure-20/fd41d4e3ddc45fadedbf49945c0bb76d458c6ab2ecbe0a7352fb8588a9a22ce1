{
    "generation": "private Node tryFoldSimpleFunctionCall(Node n) {\n    Preconditions.checkState(n.isCall());\n    Node callTarget = n.getFirstChild();\n    if (callTarget != null && callTarget.isName() &&\n          callTarget.getString().equals(\"String\")) {\n        Node value = callTarget.getNext();\n        // Check for exactly one argument and that it's an immutable literal\n        if (value != null && value.getNext() == null && value.isLiteral()) {\n            Node addition = IR.add(\n                IR.string(\"\").srcref(callTarget),\n                value.detachFromParent());\n            n.getParent().replaceChild(n, addition);\n            reportCodeChange();\n            return addition;\n        }\n    }\n    return n;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}