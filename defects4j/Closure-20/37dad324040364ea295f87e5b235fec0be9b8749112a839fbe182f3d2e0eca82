{
    "generation": "private Node tryFoldSimpleFunctionCall(Node n) {\n  Preconditions.checkState(n.isCall());\n  Node callTarget = n.getFirstChild();\n  if (callTarget != null && callTarget.isName() &&\n      callTarget.getString().equals(\"String\")) {\n    // Fold String(a) to '' + (a) only when there's exactly one argument\n    Node value = callTarget.getNext();\n    if (value != null && value.isArgumentList() && value.getChildrenCount() == 1) {\n      Node argument = value.getFirstChild();\n      if (argument != null) {\n        Node addition = IR.add(\n            IR.string(\"\").srcref(callTarget),\n            argument.detachFromParent());\n        n.getParent().replaceChild(n, addition);\n        reportCodeChange();\n        return addition;\n      }\n    }\n  }\n  return n;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}