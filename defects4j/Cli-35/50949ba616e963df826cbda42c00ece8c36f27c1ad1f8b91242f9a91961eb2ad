{
    "generation": "    /**\n     * Returns the options with a long name starting with the name specified.\n     *\n     * @param opt the partial name of the option\n     * @return the options matching the partial name specified, or an empty list if none matches\n     * @since 1.3\n     */\n    public List<String> getMatchingOptions(String opt) {\n        opt = Util.stripLeadingHyphens(opt);\n\n        List<String> matchingOpts = new ArrayList<String>();\n\n        // for a perfect match return the single option only\n        boolean exactMatchFound = false;\n\n        for (String longOpt : longOpts.keySet()) {\n            if (longOpt.startsWith(opt)) {\n                if (longOpt.equals(opt)) {\n                    // Found an exact match, clear previous matches and only add this one\n                    matchingOpts.clear();\n                    matchingOpts.add(longOpt);\n                    exactMatchFound = true;\n                    break;\n                }\n                matchingOpts.add(longOpt);\n            }\n        }\n\n        // If we found an exact match, return only that\n        if (exactMatchFound) {\n            return matchingOpts;\n        }\n\n        // If we have multiple partial matches but no exact match, return them all\n        return matchingOpts;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}