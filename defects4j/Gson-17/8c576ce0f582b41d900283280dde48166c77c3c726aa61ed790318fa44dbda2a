{
    "generation": "@Override\npublic Date read(JsonReader in) throws IOException {\n  if (in.peek() == JsonToken.NULL) {\n    in.nextNull();\n    return null;\n  }\n  // Allow the JsonReader to throw an IllegalStateException\n  // if the token is not a string (e.g. for \"{}\" this will happen).\n  String dateStr = in.nextString();\n  Date date = deserializeToDate(dateStr);\n  if (dateType == Date.class) {\n    return date;\n  } else if (dateType == Timestamp.class) {\n    return new Timestamp(date.getTime());\n  } else if (dateType == java.sql.Date.class) {\n    return new java.sql.Date(date.getTime());\n  } else {\n    throw new AssertionError();\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}