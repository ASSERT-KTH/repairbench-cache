{
    "generation": "void read(Tokeniser t, CharacterReader r) {\n    char c = r.consume();\n    switch (c) {\n        case '>':\n            t.tagPending.selfClosing = true;\n            t.emitTagPending();\n            t.transition(Data);\n            break;\n        case eof:\n            t.eofError(this);\n            t.transition(Data);\n            break;\n        case '/':\n            // spec: \"A / character, which is not followed by a > character...is a parse error\"\n            // However, in real world, there's a / char before attr name, so we should be\n            // lenient and just ignore that character. So just go to BeforeAttributeName.\n            t.transition(BeforeAttributeName);\n            break;\n        default:\n            t.error(this);\n            t.transition(BeforeAttributeName);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}