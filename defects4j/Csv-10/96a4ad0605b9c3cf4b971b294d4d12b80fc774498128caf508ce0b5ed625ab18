{
    "generation": "    /**\n     * Creates a printer that will print values to the given stream following the CSVFormat.\n     * <p>\n     * Currently, only a pure encapsulation format or a pure escaping format is supported. Hybrid formats (encapsulation\n     * and escaping with a different character) are not supported.\n     * </p>\n     * \n     * @param out\n     *        stream to which to print. Must not be null.\n     * @param format\n     *        the CSV format. Must not be null.\n     * @throws IOException\n     *         thrown if the optional header cannot be printed.\n     * @throws IllegalArgumentException\n     *         thrown if the parameters of the format are inconsistent or if either out or format are null.\n     */\n    public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {\n        Assertions.notNull(out, \"out\");\n        Assertions.notNull(format, \"format\");\n\n        this.out = out;\n        this.format = format;\n        this.format.validate();\n\n        // Check if a header is present and print it\n        final String header = format.getHeader();\n        if (header != null) {\n            printHeader(header);\n        }\n    }\n\n    private void printHeader(final String header) throws IOException {\n        final String[] values = header.split(format.getDelimiter());\n        boolean first = true;\n        for (final String value : values) {\n            if (!first) {\n                out.append(format.getDelimiter());\n            } else {\n                first = false;\n            }\n            printValue(value);\n        }\n        out.append(format.getRecordSeparator());\n    }\n\n    private void printValue(final String value) throws IOException {\n        if (format.getQuoteChar() != null) {\n            out.append(format.getQuoteChar());\n            out.append(value.replace(String.valueOf(format.getQuoteChar()), String.valueOf(format.getEscapeChar()) + format.getQuoteChar()));\n            out.append(format.getQuoteChar());\n        } else {\n            out.append(value);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}