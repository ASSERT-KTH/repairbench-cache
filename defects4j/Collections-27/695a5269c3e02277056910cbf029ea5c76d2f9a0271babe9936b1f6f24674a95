{
    "generation": "    /**\n     * Deserializes the map in using a custom routine.\n     *\n     * @param in the input stream\n     * @throws IOException            if an error occurs while reading from the stream\n     * @throws ClassNotFoundException if an object read from the stream can not be loaded\n     * @throws UnsupportedOperationException if the collection class is not supported\n     */\n    @SuppressWarnings(\"unchecked\") // (1) should only fail if input stream is incorrect\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject(); // Reads collectionClass factory\n\n        // validation for security\n        if (collectionClass == null) {\n            throw new UnsupportedOperationException(\"Collection class must not be null.\");\n        }\n        if (!Collection.class.isAssignableFrom(collectionClass)) {\n            throw new UnsupportedOperationException(\"Unsupported Collection class: \" + collectionClass);\n        }\n\n        // read the map\n        map = (Map<K, Object>) in.readObject();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}