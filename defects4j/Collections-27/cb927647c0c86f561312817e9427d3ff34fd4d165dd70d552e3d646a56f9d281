{
    "generation": "import java.util.Collection;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.MultiValuedMap;\n\npublic class MultiValueMap<K, V> extends AbstractMultiValuedMap<K, V> {\n\n    /**\n     * Creates a new MultiValueMap that uses an ArrayList to store the\n     * multiple values for each key.\n     */\n    public MultiValueMap() {\n        super();\n    }\n\n    /**\n     * Creates a new MultiValueMap that uses an ArrayList to store the\n     * multiple values for each key.\n     *\n     * @param map the Map whose values are to be added\n     */\n    public MultiValueMap(final Map<? extends K, ? extends V> map) {\n        super(map);\n    }\n\n    /**\n     * Creates a new MultiValueMap which copies the given map.\n     *\n     * @param map  the Map whose values are to be added\n     * @param collectionClass  the collection class to use for each value\n     * @throws IllegalArgumentException if collectionClass is null\n     * @throws IllegalArgumentException if collectionClass is not a Collection\n     * @throws IllegalArgumentException if collectionClass cannot be instantiated\n     */\n    public MultiValueMap(final Map<? extends K, ? extends V> map, final Class<? extends Collection<V>> collectionClass) {\n        super(map, collectionClass);\n    }\n\n    /**\n     * Creates a new MultiValueMap that uses an ArrayList to store the\n     * multiple values for each key.\n     * <p>\n     * NOTE: From v4.1 this constructor will be removed as the class\n     * cannot implement {@link MultiValuedMap} due to the interface using generics.\n     * Please use one of the other constructors.\n     *\n     * @param collectionClass  the collection class to use for each value\n     * @deprecated since 4.0, to be removed in 4.1\n     */\n    @Deprecated\n    public MultiValueMap(final Class<? extends Collection<V>> collectionClass) {\n        super(collectionClass);\n    }\n\n    /**\n     * Creates a new MultiValueMap using the supplied Map to store the keys and values.\n     * <p>\n     * NOTE: From v4.1 this method will be removed as the class\n     * cannot implement {@link MultiValuedMap} due to the interface using generics.\n     * Please use one of the other constructors.\n     *\n     * @param map  the Map whose values are to be added\n     * @param collectionClass  the collection class to use for each value\n     * @return a new MultiValueMap using the supplied Map\n     * @deprecated since 4.0, to be removed in 4.1\n     */\n    @Deprecated\n    public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<? extends K, ? extends V> map, final Class<? extends Collection<V>> collectionClass) {\n        final MultiValueMap<K, V> mvp = new MultiValueMap<>(collectionClass);\n        mvp.putAll(map);\n        return mvp;\n    }\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}