{
    "generation": "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n    final Object map = in.readObject();\n    final Object collectionClass = in.readObject();\n\n    if (map instanceof Map && collectionClass instanceof Class) {\n        @SuppressWarnings(\"unchecked\")\n        Class<?> clazz = (Class<?>) collectionClass;\n        if (!Collection.class.isAssignableFrom(clazz)) {\n            throw new UnsupportedOperationException(\"Class must implement Collection: \" + clazz);\n        }\n        @SuppressWarnings(\"unchecked\")\n        final Map<K, Collection<V>> newMap = (Map<K, Collection<V>>) map;\n        this.map = newMap;\n        this.collectionClass = clazz;\n    } else {\n        throw new InvalidObjectException(\"Invalid object in stream\");\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}