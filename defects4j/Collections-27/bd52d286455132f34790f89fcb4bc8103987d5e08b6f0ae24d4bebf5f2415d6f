{
    "generation": "    /**\n     * Deserializes the map in using a custom routine.\n     * <p>\n     * The {@code collectionClass} field is read and validated.\n     *\n     * @param in the input stream\n     * @throws IOException if an error occurs while reading from the stream\n     * @throws ClassNotFoundException if an object read from the stream can not be loaded\n     * @throws UnsupportedOperationException if the deserialized {@code collectionClass} is not a Collection type.\n     * @since 4.1\n     */\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject(); // Reads collectionClass\n\n        // Validate the collectionClass\n        if (collectionClass == null) {\n            // This should not happen with default serialization, but be defensive\n            throw new UnsupportedOperationException(\"Collection class is null during deserialization\");\n        }\n        // Check if the deserialized class is actually a Collection implementation.\n        if (!Collection.class.isAssignableFrom(collectionClass)) {\n            throw new UnsupportedOperationException(\"Deserialized collection class \" + collectionClass.getName()\n                    + \" is not assignable to Collection\");\n        }\n\n        // Now that collectionClass is validated, proceed with setting up the map.\n        // Set the transient factory field in the superclass\n        super.setCollectionFactory(new ReflectionFactory<>(collectionClass));\n        // Set the transient map field in the superclass\n        // Note: The specific map implementation (e.g., HashMap) used here might differ\n        // from the original map, but this is typical for serialization proxies.\n        // The AbstractMultiValuedMap's doReadObject should populate this map.\n        super.setMap(new HashMap<K, Collection<V>>());\n        doReadObject(in); // Reads map contents using the logic in AbstractMultiValuedMap\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}