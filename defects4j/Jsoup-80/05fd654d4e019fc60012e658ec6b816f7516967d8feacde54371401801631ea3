{
    "generation": "void insert(Token.Comment commentToken) {\n    Comment comment = new Comment(commentToken.getData());\n    Node insert = comment;\n    if (commentToken.bogus) { // xml declarations are emitted as bogus comments\n        String data = comment.getData();\n        // must start with ! or ? to be a declaration, and be more than just that\n        if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n            // strip the leading marker\n            String content = data.substring(1);\n            // if the content ends with the same marker (e.g. a trailing '?' on a <?\u2026?>), strip it\n            char marker = data.charAt(0);\n            if (content.length() > 0 && content.charAt(content.length() - 1) == marker) {\n                content = content.substring(0, content.length() - 1);\n            }\n            // parse a dummy element to pull out the tag name and attributes\n            Document doc = Jsoup.parse(\"<\" + content + \">\", baseUri, Parser.xmlParser());\n            // if parsing yielded at least one element, build an XmlDeclaration\n            if (!doc.children().isEmpty()) {\n                Element el = doc.children().get(0);\n                XmlDeclaration decl = new XmlDeclaration(\n                    settings.normalizeTag(el.tagName()), \n                    data.startsWith(\"!\")\n                );\n                decl.attributes().addAll(el.attributes());\n                insert = decl;\n            }\n        }\n    }\n    insertNode(insert);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}