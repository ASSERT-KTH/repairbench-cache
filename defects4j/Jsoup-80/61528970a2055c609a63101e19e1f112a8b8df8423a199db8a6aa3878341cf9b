{
    "generation": "void insert(Token.Comment commentToken) {\n    Comment comment = new Comment(commentToken.getData());\n    Node insert = comment;\n    if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n        // so we do a bit of a hack and parse the data as an element to pull the attributes out\n        String data = comment.getData();\n        if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n            // Remove optional '?' or '!' at the end if present, as XML declarations often have \"?>\" or \"!>\"\n            int end = data.length();\n            if ((data.endsWith(\"?\") && data.startsWith(\"?\")) || (data.endsWith(\"!\") && data.startsWith(\"!\"))) {\n                end = end - 1;\n            }\n            String inner = data.substring(1, end);\n            Document doc = Jsoup.parse(\"<\" + inner + \">\", baseUri, Parser.xmlParser());\n            if (doc.children().size() > 0) {\n                Element el = doc.child(0);\n                insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n                insert.attributes().addAll(el.attributes());\n            } else {\n                // fallback: leave as regular comment\n                insert = comment;\n            }\n        }\n    }\n    insertNode(insert);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}