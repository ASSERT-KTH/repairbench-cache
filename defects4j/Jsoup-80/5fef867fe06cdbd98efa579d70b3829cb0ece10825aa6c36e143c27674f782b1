{
    "generation": "void insert(Token.Comment commentToken) {\n    Comment comment = new Comment(commentToken.getData());\n    Node insert = comment;\n    if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n        // so we do a bit of a hack and parse the data as an element to pull the attributes out\n        String data = comment.getData();\n        if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n            // Remove potential trailing '>' from the bogus comment for parsing, if present\n            String parseData = data.substring(1);\n            if (parseData.endsWith(\">\"))\n                parseData = parseData.substring(0, parseData.length() - 1);\n            Document doc = Jsoup.parse(\"<\" + parseData + \">\", baseUri, Parser.xmlParser());\n            Element el = (doc.children().size() > 0) ? doc.child(0) : null;\n            insert = new XmlDeclaration(settings.normalizeTag(\n                el != null ? el.tagName() : parseData.split(\"\\\\s+\")[0]\n            ), data.startsWith(\"!\"));\n            if (el != null)\n                insert.attributes().addAll(el.attributes());\n        }\n    }\n    insertNode(insert);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}