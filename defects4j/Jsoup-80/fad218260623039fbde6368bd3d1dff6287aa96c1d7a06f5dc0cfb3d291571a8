{
    "generation": "void insert(Token.Comment commentToken) {\n    Comment comment = new Comment(commentToken.getData());\n    Node insert = comment;\n    if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n        // attempt to hack-parse the data as an element to pull out attributes\n        String data = comment.getData();\n        if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n            // If the data is wrapped by the same marker at the beginning and end, remove both.\n            String content;\n            if (data.charAt(data.length() - 1) == data.charAt(0))\n                content = data.substring(1, data.length() - 1);\n            else\n                content = data.substring(1);\n            // Append a slash so that the constructed tag is self-closing and well-formed.\n            Document doc = Jsoup.parse(\"<\" + content + \"/>\", baseUri, Parser.xmlParser());\n            // Only perform the hack if parsing yielded an element.\n            if (!doc.children().isEmpty()) {\n                Element el = doc.child(0);\n                insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n                insert.attributes().addAll(el.attributes());\n            }\n        }\n    }\n    insertNode(insert);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}