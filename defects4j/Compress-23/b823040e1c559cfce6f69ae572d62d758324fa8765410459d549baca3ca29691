{
    "generation": "@Override\nInputStream decode(final InputStream in, final Coder coder,\n        byte[] password) throws IOException {\n    byte propsByte = coder.properties[0];\n    long dictSize = (long)(coder.properties[1] & 0xFF)\n            | ((long)(coder.properties[2] & 0xFF) << 8)\n            | ((long)(coder.properties[3] & 0xFF) << 16)\n            | ((long)(coder.properties[4] & 0xFF) << 24);\n    if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n        throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n    }\n    // Avoid int overflow, use at least (int)DICT_SIZE_MAX if dictSize exceeds Integer.MAX_VALUE\n    int lzmaDictSize = dictSize > Integer.MAX_VALUE ? LZMAInputStream.DICT_SIZE_MAX : (int) dictSize;\n    return new LZMAInputStream(in, -1, propsByte, lzmaDictSize);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}