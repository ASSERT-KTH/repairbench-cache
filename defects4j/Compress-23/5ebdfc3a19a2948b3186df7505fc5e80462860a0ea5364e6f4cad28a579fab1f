{
    "generation": "@Override\nInputStream decode(final InputStream in, final Coder coder,\n        byte[] password) throws IOException {\n    byte propsByte = coder.properties[0];\n    long dictSize = coder.properties[1] & 0xFFL;\n    for (int i = 1; i < 4; i++) {\n        dictSize |= ( (coder.properties[i + 1] & 0xFFL) << (8 * i));\n    }\n    if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n        throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n    }\n    int dictionarySize;\n    if (dictSize > Integer.MAX_VALUE) {\n        // cap to max int to avoid overflow and avoid xz's too big error\n        dictionarySize = Integer.MAX_VALUE;\n    } else {\n        dictionarySize = (int) dictSize;\n    }\n    return new LZMAInputStream(in, -1, propsByte, dictionarySize);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}