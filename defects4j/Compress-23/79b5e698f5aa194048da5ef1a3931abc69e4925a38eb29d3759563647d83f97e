{
    "generation": "        @Override\n        InputStream decode(final InputStream in, final Coder coder,\n                byte[] password) throws IOException {\n            byte propsByte = coder.properties[0];\n            long dictSize = 0;\n            for (int i = 0; i < 4; i++) { // Start from index 1 instead of 0 and adjust accordingly\n                dictSize |= (coder.properties[i + 1] & 0xFFL) << (8 * i);\n            }\n            if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n                throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n            }\n            try {\n                return new LZMAInputStream(in, -1, propsByte, (int) dictSize);\n            } catch (org.tukaani.xz.UnsupportedOptionsException e) {\n                throw new IOException(\"LZMA dictionary is too big for this implementation\", e);\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}