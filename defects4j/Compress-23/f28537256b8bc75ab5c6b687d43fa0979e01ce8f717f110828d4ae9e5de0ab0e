{
    "generation": "@Override\nInputStream decode(final InputStream in, final Coder coder, byte[] password) throws IOException {\n    byte propsByte = coder.properties[0];\n    long dictSize = (coder.properties[1] & 0xFF);\n    for (int i = 1; i < 4; i++) {\n        dictSize |= ((long)(coder.properties[i + 1] & 0xFF)) << (8 * i);\n    }\n    if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n        throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n    }\n    int usedDictSize;\n    // Limit dict size to LZMAInputStream's supported max dictionary size\n    if (dictSize > Integer.MAX_VALUE) {\n        usedDictSize = Integer.MAX_VALUE;\n    } else {\n        usedDictSize = (int) dictSize;\n    }\n    return new LZMAInputStream(in, -1, propsByte, usedDictSize);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}