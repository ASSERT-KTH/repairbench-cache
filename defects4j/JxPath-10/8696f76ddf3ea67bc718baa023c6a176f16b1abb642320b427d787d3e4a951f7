{
    "generation": "    public final Object computeValue(EvalContext context) {\n        Object value1 = args[0].computeValue(context);\n        Object value2 = args[1].computeValue(context);\n\n        // JXPath 1.3 had a known issue where an empty node-set (e.g., from \"/idonotexist\")\n        // could be incorrectly coerced into Boolean.FALSE during expression evaluation.\n        // According to XPath 1.0, comparisons involving an empty node-set should always be false.\n        // However, InfoSetUtil.number(Boolean.FALSE) yields 0.0, leading to `0.0 >= 0.0` being true,\n        // which violates the XPath spec for empty node-sets.\n        //\n        // This fix addresses this by normalizing `Boolean.FALSE` operands to `null`\n        // specifically for relational operations. `InfoSetUtil.number(null)` correctly\n        // converts `null` to `Double.NaN`, ensuring that `NaN >= 0.0` (or similar comparisons)\n        // evaluates to `false` as required by XPath.\n        if (this instanceof org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression) {\n            if (value1 == Boolean.FALSE) {\n                value1 = null; // Normalize to null, which InfoSetUtil.number converts to NaN\n            }\n            if (value2 == Boolean.FALSE) {\n                value2 = null; // Symmetrically apply to the second operand if applicable\n            }\n        }\n\n        return compute(value1, value2)\n                ? Boolean.TRUE : Boolean.FALSE;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}