{
    "generation": "protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                           RectangleConstraint constraint) {\n\n    double width = constraint.getWidth();\n    LengthConstraintType ht = constraint.getHeightConstraintType();\n\n    // 1. arrange top\n    double topH = 0.0;\n    if (this.topBlock != null) {\n        RectangleConstraint c1 = (ht == LengthConstraintType.FIXED\n            ? new RectangleConstraint(\n                  width, null, LengthConstraintType.FIXED,\n                  0.0,\n                  new Range(0.0, constraint.getHeight()),\n                  LengthConstraintType.RANGE)\n            : new RectangleConstraint(\n                  width, null, LengthConstraintType.FIXED,\n                  0.0, null, LengthConstraintType.NONE));\n        topH = this.topBlock.arrange(g2, c1).height;\n    }\n\n    // 2. arrange bottom\n    double bottomH = 0.0;\n    if (this.bottomBlock != null) {\n        RectangleConstraint c2 = (ht == LengthConstraintType.FIXED\n            ? new RectangleConstraint(\n                  width, null, LengthConstraintType.FIXED,\n                  0.0,\n                  new Range(0.0, Math.max(0.0, constraint.getHeight() - topH)),\n                  LengthConstraintType.RANGE)\n            : new RectangleConstraint(\n                  width, null, LengthConstraintType.FIXED,\n                  0.0, null, LengthConstraintType.NONE));\n        bottomH = this.bottomBlock.arrange(g2, c2).height;\n    }\n\n    // 3. mid\u2010row height (only valid immediately if fixed)\n    double midH = (ht == LengthConstraintType.FIXED\n                   ? constraint.getHeight() - topH - bottomH\n                   : 0.0);\n\n    // 4. arrange left\n    double leftW = 0.0, leftH = 0.0;\n    if (this.leftBlock != null) {\n        RectangleConstraint c3 = (ht == LengthConstraintType.FIXED\n            ? new RectangleConstraint(\n                  0.0,\n                  new Range(0.0, width),\n                  LengthConstraintType.RANGE,\n                  midH, null,\n                  LengthConstraintType.FIXED)\n            : new RectangleConstraint(\n                  0.0,\n                  new Range(0.0, width),\n                  LengthConstraintType.RANGE,\n                  0.0, null,\n                  LengthConstraintType.NONE));\n        Size2D s = this.leftBlock.arrange(g2, c3);\n        leftW = s.width;\n        leftH = s.height;\n    }\n\n    // 5. arrange right\n    double rightW = 0.0, rightH = 0.0;\n    if (this.rightBlock != null) {\n        RectangleConstraint c4 = (ht == LengthConstraintType.FIXED\n            ? new RectangleConstraint(\n                  0.0,\n                  new Range(0.0, Math.max(0.0, width - leftW)),\n                  LengthConstraintType.RANGE,\n                  midH, null,\n                  LengthConstraintType.FIXED)\n            : new RectangleConstraint(\n                  0.0,\n                  new Range(0.0, width),\n                  LengthConstraintType.RANGE,\n                  0.0, null,\n                  LengthConstraintType.NONE));\n        Size2D s = this.rightBlock.arrange(g2, c4);\n        rightW = s.width;\n        rightH = s.height;\n    }\n\n    // 6. arrange center\n    double centerW = width - leftW - rightW;\n    double centerH = 0.0;\n    if (this.centerBlock != null) {\n        RectangleConstraint c5 = (ht == LengthConstraintType.FIXED\n            ? new RectangleConstraint(centerW, midH)\n            : new RectangleConstraint(\n                  centerW, null,\n                  LengthConstraintType.FIXED,\n                  0.0, null,\n                  LengthConstraintType.NONE));\n        centerH = this.centerBlock.arrange(g2, c5).height;\n    }\n\n    // 7. if height is not fixed, the mid\u2010row height is driven by the tallest\n    if (ht != LengthConstraintType.FIXED) {\n        midH = Math.max(centerH, Math.max(leftH, rightH));\n    }\n\n    // 8. assign the block bounds\n    double y = 0.0;\n    if (this.topBlock != null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(\n            0.0, 0.0, width, topH\n        ));\n        y = topH;\n    }\n    if (this.leftBlock != null) {\n        this.leftBlock.setBounds(new Rectangle2D.Double(\n            0.0, y, leftW, midH\n        ));\n    }\n    if (this.centerBlock != null) {\n        this.centerBlock.setBounds(new Rectangle2D.Double(\n            leftW, y, centerW, midH\n        ));\n    }\n    if (this.rightBlock != null) {\n        this.rightBlock.setBounds(new Rectangle2D.Double(\n            leftW + centerW, y, rightW, midH\n        ));\n    }\n    if (this.bottomBlock != null) {\n        this.bottomBlock.setBounds(new Rectangle2D.Double(\n            0.0, y + midH, width, bottomH\n        ));\n    }\n\n    // 9. return the total size\n    double totalH = (ht == LengthConstraintType.FIXED\n                     ? constraint.getHeight()\n                     : topH + midH + bottomH);\n    return new Size2D(width, totalH);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}