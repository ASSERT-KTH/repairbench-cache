{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns != null) {\n    if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n      // Patch for assignments that appear in the init,\n      // condition or iteration part of a FOR loop.\n      if (parent.getFirstChild().getNext() != n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n    } else if (NodeUtil.isCallNode(parent) && parent.getFirstChild() == n) {\n      // Special case: assignment appears in the callee position of a call.\n      // Treat this as if just the rhs (recordNode) is used,\n      // not the variable on the lhs.\n      recordDepScope(recordNode, ns);\n    } else {\n      recordDepScope(nameNode, ns);\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}