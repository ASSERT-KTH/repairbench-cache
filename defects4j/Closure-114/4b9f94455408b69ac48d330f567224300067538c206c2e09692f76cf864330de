{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns != null) {\n    if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n      // If the assignment is in one of the parts of a FOR loop, use\n      // the contained name for the initializer.\n      if (parent.getFirstChild().getNext() != n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n    } else if (recordNode.isCall() && recordNode.getFirstChild() == n) {\n      // When an assignment is immediately invoked (e.g. (fun = function() { ... })()),\n      // the RHS (the function literal) is the caller. Don't use the LHS (fun).\n      recordDepScope(n.getLastChild(), ns);\n    } else {\n      recordDepScope(recordNode, ns);\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}