{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns != null) {\n    // If the assignment appears in a FOR, special handling is needed.\n    if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext() != n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n    }\n    // If the assignment is used as the callee of a call expression,\n    // then the right\u2010hand side is actually being invoked. In this case,\n    // we should record the dependency on the RHS (e.g. the function literal)\n    // rather than on the left\u2010hand side.\n    else if (parent.isCall() && parent.getFirstChild() == n) {\n      recordDepScope(n.getLastChild(), ns);\n    }\n    else {\n      recordDepScope(recordNode, ns);\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}