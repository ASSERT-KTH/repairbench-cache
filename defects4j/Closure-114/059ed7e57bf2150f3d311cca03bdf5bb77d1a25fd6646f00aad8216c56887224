{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns != null) {\n    if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext() != n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n    } else {\n      // Handle assignments that are part of function calls or expressions\n      // by ensuring both sides of the assignment are recorded\n      if (parent.isAssign()) {\n        Node rhs = parent.getLastChild();\n        // Create NameInformation for the RHS if applicable\n        NameInformation rhsNs = createNameInformation(t, rhs);\n        if (rhsNs != null) {\n          recordDepScope(rhs, rhsNs);\n        }\n      }\n      recordDepScope(recordNode, ns);\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}