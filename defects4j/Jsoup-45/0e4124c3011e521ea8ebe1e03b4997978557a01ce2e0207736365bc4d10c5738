{
    "generation": "    void resetInsertionMode() {\n        boolean last = false;\n        for (int pos = stack.size() -1; pos >= 0; pos--) {\n            Element node = stack.get(pos);\n            if (pos == 0) {\n                last = true;\n                // If stack is empty, use contextElement. If stack not empty,\n                // the loop bottom is element 0, but contextElement should only be used\n                // in fragment parsing case where stack might not logically start with <html>.\n                // Assuming contextElement is set correctly for fragment parsing.\n                // Original code used contextElement unconditionally at pos 0.\n                node = contextElement;\n            }\n\n            // node could be null if contextElement is null and pos is 0.\n            if (node == null) {\n                continue; // Or break, but continuing iteration seems less likely to cause issues.\n            }\n\n            String name = node.nodeName();\n            if (\"select\".equals(name)) {\n                transition(HtmlTreeBuilderState.InSelect);\n                break; // frag\n            } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) { // FIXED: corrected logic to check for \"td\" or \"th\" and respect !last flag per HTML5 spec.\n                transition(HtmlTreeBuilderState.InCell);\n                break;\n            } else if (\"tr\".equals(name)) {\n                transition(HtmlTreeBuilderState.InRow);\n                break;\n            } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n                transition(HtmlTreeBuilderState.InTableBody);\n                break;\n            } else if (\"caption\".equals(name)) {\n                transition(HtmlTreeBuilderState.InCaption);\n                break;\n            } else if (\"colgroup\".equals(name)) {\n                transition(HtmlTreeBuilderState.InColumnGroup);\n                break; // frag\n            } else if (\"table\".equals(name)) {\n                transition(HtmlTreeBuilderState.InTable);\n                break;\n            } else if (\"head\".equals(name)) {\n                // According to spec, should be InHead unless !last is false.\n                // However, Jsoup historically transitions to InBody here, possibly related to foster parenting.\n                // Keep InBody transition as it might be intentional for Jsoup's behavior.\n                transition(HtmlTreeBuilderState.InBody);\n                break; // frag\n            } else if (\"body\".equals(name)) {\n                transition(HtmlTreeBuilderState.InBody);\n                break;\n            } else if (\"frameset\".equals(name)) {\n                transition(HtmlTreeBuilderState.InFrameset);\n                break; // frag\n            } else if (\"html\".equals(name)) {\n                // Spec says BeforeHead or AfterHead depending on head element pointer. Jsoup uses BeforeHead.\n                transition(HtmlTreeBuilderState.BeforeHead);\n                break; // frag\n            } else if (last) {\n                // Reached end of stack or context node in fragment case.\n                transition(HtmlTreeBuilderState.InBody);\n                break; // frag\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}