{
    "generation": "static String unescape(String string) {\n    if (!string.contains(\"&\")) \n        return string;\n\n    Matcher m = unescapePattern.matcher(string); \n    StringBuffer accum = new StringBuffer(string.length());\n\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.valueOf(num, base);\n            } catch (NumberFormatException e) {\n                // skip invalid entities\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name)) {\n                charval = full.get(name);\n            }\n        }\n\n        if (charval != -1 && charval >= 0 && charval <= 0x10FFFF) {\n            String c = Character.toString(charval);\n            m.appendReplacement(accum, c);\n        } else {\n            m.appendReplacement(accum, m.group(0));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}