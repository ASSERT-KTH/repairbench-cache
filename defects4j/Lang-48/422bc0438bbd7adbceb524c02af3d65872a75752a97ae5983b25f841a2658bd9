{
    "generation": "    /**\n     * <p>Test if two <code>Object</code>s are equal using their\n     * <code>equals</code> method.</p>\n     *\n     * @param lhs  the left hand object\n     * @param rhs  the right hand object\n     * @return EqualsBuilder - used to chain calls.\n     */\n    public EqualsBuilder append(Object lhs, Object rhs) {\n        if (isEquals == false) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        Class lhsClass = lhs.getClass();\n        if (!lhsClass.isArray()) {\n            // Handle BigDecimal comparison by value\n            if (lhs instanceof BigDecimal && rhs instanceof BigDecimal) {\n                BigDecimal lhsBigDecimal = (BigDecimal) lhs;\n                BigDecimal rhsBigDecimal = (BigDecimal) rhs;\n                this.isEquals = lhsBigDecimal.compareTo(rhsBigDecimal) == 0;\n            } else {\n                this.isEquals = lhs.equals(rhs);\n            }\n        } else if (lhs.getClass() != rhs.getClass()) {\n            // Different array types, not equal\n            this.setEquals(false);\n        } else {\n            // Dispatch to correct handler for array type\n            if (lhs instanceof long[]) {\n                append((long[]) lhs, (long[]) rhs);\n            } else if (lhs instanceof int[]) {\n                append((int[]) lhs, (int[]) rhs);\n            } else if (lhs instanceof short[]) {\n                append((short[]) lhs, (short[]) rhs);\n            } else if (lhs instanceof char[]) {\n                append((char[]) lhs, (char[]) rhs);\n            } else if (lhs instanceof byte[]) {\n                append((byte[]) lhs, (byte[]) rhs);\n            } else if (lhs instanceof double[]) {\n                append((double[]) lhs, (double[]) rhs);\n            } else if (lhs instanceof float[]) {\n                append((float[]) lhs, (float[]) rhs);\n            } else if (lhs instanceof boolean[]) {\n                append((boolean[]) lhs, (boolean[]) rhs);\n            } else {\n                // Handle Object arrays\n                append((Object[]) lhs, (Object[]) rhs);\n            }\n        }\n        return this;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}