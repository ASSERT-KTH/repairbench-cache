{
    "generation": "public static double[] bracket(UnivariateRealFunction function,\n        double initial, double lowerBound, double upperBound, \n        int maximumIterations) throws ConvergenceException, \n        FunctionEvaluationException {\n    \n    if (function == null) {\n        throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n    }\n    if (maximumIterations <= 0)  {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"bad value for maximum iterations number: {0}\", maximumIterations);\n    }\n    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n              lowerBound, initial, upperBound);\n    }\n    double a = initial;\n    double b = initial;\n    double fa;\n    double fb;\n    int numIterations = 0 ;\n\n    // Move a and b to initial - 1 and initial + 1, clipped by bounds\n    a = Math.max(initial - 1.0, lowerBound);\n    b = Math.min(initial + 1.0, upperBound);\n\n    fa = function.value(a);\n    fb = function.value(b);\n\n    numIterations++;\n\n    // Accept a or b at endpoint if f(endpoint)==0, but only accept as bracket if f(a)*f(b)<=0 and a<b\n    while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n            ((a > lowerBound) || (b < upperBound))) {\n        // Expand interval\n        boolean canExpandA = (a > lowerBound);\n        boolean canExpandB = (b < upperBound);\n\n        if (canExpandA) {\n            double newA = Math.max(a - 1.0, lowerBound);\n            a = newA;\n            fa = function.value(a);\n        }\n        if (canExpandB) {\n            double newB = Math.min(b + 1.0, upperBound);\n            b = newB;\n            fb = function.value(b);\n        }\n        numIterations++;\n    }\n\n    // Accept if f(a)==0 or f(b)==0 or root bracketed\n    if (fa * fb <= 0.0 && a < b) {\n        return new double[]{a, b};\n    }\n\n    throw new ConvergenceException(\n              \"number of iterations={0}, maximum iterations={1}, \" +\n              \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n              \"final b value={6}, f(a)={7}, f(b)={8}\",\n              numIterations, maximumIterations, initial,\n              lowerBound, upperBound, a, b, fa, fb);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}