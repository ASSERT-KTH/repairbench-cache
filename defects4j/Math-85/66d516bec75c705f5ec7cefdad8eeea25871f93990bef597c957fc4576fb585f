{
    "generation": "public static double[] bracket(UnivariateRealFunction function,\n        double initial, double lowerBound, double upperBound,\n        int maximumIterations) throws ConvergenceException,\n        FunctionEvaluationException {\n\n    if (function == null) {\n        throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n    }\n    if (maximumIterations <= 0)  {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"bad value for maximum iterations number: {0}\", maximumIterations);\n    }\n    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n              lowerBound, initial, upperBound);\n    }\n    double a = initial;\n    double b = initial;\n    double fa;\n    double fb;\n    int numIterations = 0 ;\n\n    // Start with initial a/b at distance at least 1 apart, within bounds, if possible\n    a = Math.max(initial - 1.0, lowerBound);\n    b = Math.min(initial + 1.0, upperBound);\n    fa = function.value(a);\n    fb = function.value(b);\n\n    // If already brackets, done!\n    if (fa * fb <= 0.0) {\n        return new double[] { a, b };\n    }\n\n    // Continue expanding as needed\n    while (numIterations < maximumIterations && (a > lowerBound || b < upperBound)) {\n        numIterations++;\n        // Try further expanding a and b by 1.0 (prevent stepping over bounds)\n        boolean aCanMove = a > lowerBound;\n        boolean bCanMove = b < upperBound;\n        double newA = a;\n        double newB = b;\n        if (aCanMove) {\n            newA = Math.max(a - 1.0, lowerBound);\n        }\n        if (bCanMove) {\n            newB = Math.min(b + 1.0, upperBound);\n        }\n        // Stop if both stuck at bounds\n        if (newA == a && newB == b) {\n            break;\n        }\n        a = newA;\n        b = newB;\n        fa = function.value(a);\n        fb = function.value(b);\n        if (fa * fb <= 0.0) {\n            return new double[] { a, b };\n        }\n    }\n\n    // If f(a) or f(b) is exactly zero, consider bracketed\n    if (fa == 0.0 || fb == 0.0) {\n        return new double[] { a, b };\n    }\n\n    throw new ConvergenceException(\n              \"number of iterations={0}, maximum iterations={1}, \" +\n              \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n              \"final b value={6}, f(a)={7}, f(b)={8}\",\n              numIterations, maximumIterations, initial,\n              lowerBound, upperBound, a, b, fa, fb);\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}