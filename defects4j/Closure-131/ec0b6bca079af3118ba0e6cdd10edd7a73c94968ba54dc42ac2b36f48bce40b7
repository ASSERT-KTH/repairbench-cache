{
    "generation": "import com.google.javascript.rhino.TokenStream;\n\n    /**\n     * Returns whether the given string is a valid identifier name according\n     * to the EcmaScript standard BUT limited to ASCII characters and '$', '_'\n     * for compatibility reasons observed in tests, and excluding reserved words.\n     *\n     * <p>This check is potentially stricter than the ECMA standard which allows\n     * a wider range of Unicode characters. This implementation aims to satisfy\n     * the behavior implied by tests like ConvertToDottedPropertiesTest.\n     */\n    public static boolean isJSIdentifier(String s) {\n      int length = s.length();\n\n      if (length == 0) {\n        return false;\n      }\n\n      char firstChar = s.charAt(0);\n      // Check first character (must be a letter, _, or $)\n      // Using strict ASCII checks based on test failures/comments.\n      if (!((firstChar >= 'a' && firstChar <= 'z') ||\n            (firstChar >= 'A' && firstChar <= 'Z') ||\n            firstChar == '_' ||\n            firstChar == '$')) {\n        return false;\n      }\n\n      // Check subsequent characters (must be a letter, number, _, or $)\n      // Using strict ASCII checks.\n      for (int i = 1; i < length; i++) {\n        char c = s.charAt(i);\n        if (!((c >= 'a' && c <= 'z') ||\n              (c >= 'A' && c <= 'Z') ||\n              (c >= '0' && c <= '9') ||\n              c == '_' ||\n              c == '$')) {\n          return false;\n        }\n      }\n\n      // Check against JavaScript reserved words.\n      if (TokenStream.isKeyword(s)) {\n          return false;\n      }\n\n      return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}