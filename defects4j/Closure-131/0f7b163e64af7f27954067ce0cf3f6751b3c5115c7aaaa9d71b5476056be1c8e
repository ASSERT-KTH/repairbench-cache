{
    "generation": "    public static boolean isJSIdentifier(String s) {\n      int length = s.length();\n      if (length == 0) {\n        return false;\n      }\n\n      if (!isJSIdentifierStart(s.charAt(0))) {\n        return false;\n      }\n\n      for (int i = 1; i < length; i++) {\n        if (!isJSIdentifierPart(s.charAt(i))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    private static boolean isJSIdentifierStart(int c) {\n      return c == '_' || c == '$' ||\n          Character.isLetter(c) || isIdentifierStartUnicode(c);\n    }\n\n    private static boolean isJSIdentifierPart(int c) {\n      return c == '_' || c == '$' || Character.isLetterOrDigit(c) || isIdentifierPartUnicode(c);\n    }\n\n    private static boolean isIdentifierStartUnicode(int c) {\n      // Check for Unicode characters that can start an identifier\n      if (c < 0x10000) {\n        return false; // Handled by Character.isLetter()\n      }\n      // Using data from Unicode Standard Annex #31\n      return isIdentifierStartUnicodeAux(c);\n    }\n\n    private static boolean isIdentifierPartUnicode(int c) {\n      // Check for Unicode characters that can be part of an identifier\n      if (c < 0x10000) {\n        return false; // Handled by Character.isLetterOrDigit()\n      }\n      // Using data from Unicode Standard Annex #31\n      return isIdentifierPartUnicodeAux(c);\n    }\n\n    private static boolean isIdentifierStartUnicodeAux(int c) {\n      if (c >= 0x10000 && c <= 0x10FFFF) {\n        return Character.isIdentifierStart(c);\n      }\n      return false;\n    }\n\n    private static boolean isIdentifierPartUnicodeAux(int c) {\n      if (c >= 0x10000 && c <= 0x10FFFF) {\n        return Character.isIdentifierPart(c);\n      }\n      return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}