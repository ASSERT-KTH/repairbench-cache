{
    "generation": "public static boolean isJSIdentifier(String s) {\n  int length = s.length();\n\n  // must be non-empty and start with ASCII letter, _ or $\n  if (length == 0) {\n    return false;\n  }\n  char first = s.charAt(0);\n  if (!(first == '$'\n        || first == '_'\n        || (first >= 'A' && first <= 'Z')\n        || (first >= 'a' && first <= 'z'))) {\n    return false;\n  }\n\n  // subsequent chars may be ASCII letter, digit, _ or $\n  for (int i = 1; i < length; i++) {\n    char c = s.charAt(i);\n    if (!(c == '$'\n          || c == '_'\n          || (c >= 'A' && c <= 'Z')\n          || (c >= 'a' && c <= 'z')\n          || (c >= '0' && c <= '9'))) {\n      return false;\n    }\n  }\n\n  // disallow JavaScript keywords, future reserved words and literal tokens\n  String[] reserved = {\n    \"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"delete\", \"do\",\n    \"else\", \"finally\", \"for\", \"function\", \"if\", \"in\", \"instanceof\", \"new\",\n    \"return\", \"switch\", \"this\", \"throw\", \"try\", \"typeof\", \"var\", \"void\",\n    \"while\", \"with\",\n    // ES5+ future reserved\n    \"class\", \"const\", \"enum\", \"export\", \"extends\", \"import\", \"super\",\n    // strict mode reserved\n    \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\",\n    \"public\", \"static\", \"yield\",\n    // literals\n    \"null\", \"true\", \"false\"\n  };\n  for (String r : reserved) {\n    if (r.equals(s)) {\n      return false;\n    }\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}