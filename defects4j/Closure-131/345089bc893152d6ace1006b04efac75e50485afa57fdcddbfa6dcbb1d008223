{
    "generation": "public static boolean isJSIdentifier(String s) {\n  if (s == null || s.isEmpty()) {\n    return false;\n  }\n  // Only allow simple ASCII identifiers.\n  // The first character must be a letter (A-Z or a-z), a dollar sign, or an underscore.\n  char first = s.charAt(0);\n  if (!((first >= 'a' && first <= 'z') || (first >= 'A' && first <= 'Z') || first == '$' || first == '_')) {\n    return false;\n  }\n  // The remaining characters can be letters, digits, dollar signs, or underscores.\n  for (int i = 1; i < s.length(); i++) {\n    char c = s.charAt(i);\n    if (!((c >= 'a' && c <= 'z') ||\n          (c >= 'A' && c <= 'Z') ||\n          (c >= '0' && c <= '9') ||\n          c == '$' ||\n          c == '_')) {\n      return false;\n    }\n  }\n  // Do not convert reserved words (or literal values) even if they consist of allowed characters.\n  if (\"break\".equals(s) || \"case\".equals(s) || \"catch\".equals(s) ||\n      \"continue\".equals(s) || \"debugger\".equals(s) || \"default\".equals(s) ||\n      \"delete\".equals(s) || \"do\".equals(s) || \"else\".equals(s) ||\n      \"finally\".equals(s) || \"for\".equals(s) || \"function\".equals(s) ||\n      \"if\".equals(s) || \"in\".equals(s) || \"instanceof\".equals(s) ||\n      \"new\".equals(s) || \"return\".equals(s) || \"switch\".equals(s) ||\n      \"this\".equals(s) || \"throw\".equals(s) || \"try\".equals(s) ||\n      \"typeof\".equals(s) || \"var\".equals(s) || \"void\".equals(s) ||\n      \"while\".equals(s) || \"with\".equals(s) ||\n      \"class\".equals(s) || \"const\".equals(s) || \"enum\".equals(s) ||\n      \"export\".equals(s) || \"extends\".equals(s) || \"import\".equals(s) ||\n      \"super\".equals(s) ||\n      \"null\".equals(s) || \"true\".equals(s) || \"false\".equals(s)) {\n    return false;\n  }\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}