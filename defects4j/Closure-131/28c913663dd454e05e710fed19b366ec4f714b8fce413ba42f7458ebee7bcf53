{
    "generation": "public static boolean isJSIdentifier(String s) {\n  int length = s.length();\n\n  if (length == 0 ||\n      !Character.isUnicodeIdentifierStart(s.charAt(0))) {\n    return false;\n  }\n\n  for (int i = 1; i < length; i++) {\n    if (!Character.isUnicodeIdentifierPart(s.charAt(i))) {\n      return false;\n    }\n  }\n\n  // Check if the identifier is a JS reserved word\n  if (isJSReservedWord(s)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Helper function to check if a string is a JS reserved word\nprivate static boolean isJSReservedWord(String s) {\n  // List of JS reserved words\n  String[] reservedWords = {\"break\", \"case\", \"catch\", \"class\", \"const\", \"continue\", \"debugger\", \"default\", \"delete\", \"do\", \"else\", \"enum\", \"export\", \"extends\", \"false\", \"finally\", \"for\", \"function\", \"if\", \"import\", \"in\", \"instanceof\", \"new\", \"null\", \"return\", \"super\", \"switch\", \"this\", \"throw\", \"true\", \"try\", \"typeof\", \"var\", \"void\", \"while\", \"with\"};\n  for (String word : reservedWords) {\n    if (s.equals(word)) {\n      return true;\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}