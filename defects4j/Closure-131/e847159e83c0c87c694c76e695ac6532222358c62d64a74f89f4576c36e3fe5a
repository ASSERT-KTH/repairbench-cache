{
    "generation": "public static boolean isJSIdentifier(String s) {\n  int length = s.length();\n\n  if (length == 0 ||\n      !Character.isJavaIdentifierStart(s.charAt(0))) {\n    return false;\n  }\n\n  for (int i = 1; i < length; i++) {\n    if (!Character.isJavaIdentifierPart(s.charAt(i))) {\n      return false;\n    }\n  }\n\n  // Check if the identifier is a valid JavaScript identifier\n  // JavaScript identifiers must not be a reserved word\n  // and must be within the Unicode ranges specified in the ECMAScript standard\n  if (s.equals(\"abstract\") || s.equals(\"arguments\") || s.equals(\"await\") || s.equals(\"boolean\") ||\n      s.equals(\"break\") || s.equals(\"byte\") || s.equals(\"case\") || s.equals(\"catch\") ||\n      s.equals(\"char\") || s.equals(\"class\") || s.equals(\"const\") || s.equals(\"continue\") ||\n      s.equals(\"debugger\") || s.equals(\"default\") || s.equals(\"delete\") || s.equals(\"do\") ||\n      s.equals(\"double\") || s.equals(\"else\") || s.equals(\"enum\") || s.equals(\"eval\") ||\n      s.equals(\"export\") || s.equals(\"extends\") || s.equals(\"false\") || s.equals(\"finally\") ||\n      s.equals(\"float\") || s.equals(\"for\") || s.equals(\"function\") || s.equals(\"get\") ||\n      s.equals(\"goto\") || s.equals(\"if\") || s.equals(\"implements\") || s.equals(\"import\") ||\n      s.equals(\"in\") || s.equals(\"instanceof\") || s.equals(\"int\") || s.equals(\"interface\") ||\n      s.equals(\"let\") || s.equals(\"long\") || s.equals(\"native\") || s.equals(\"new\") ||\n      s.equals(\"null\") || s.equals(\"of\") || s.equals(\"package\") || s.equals(\"private\") ||\n      s.equals(\"protected\") || s.equals(\"public\") || s.equals(\"return\") || s.equals(\"short\") ||\n      s.equals(\"static\") || s.equals(\"super\") || s.equals(\"switch\") || s.equals(\"synchronized\") ||\n      s.equals(\"this\") || s.equals(\"throw\") || s.equals(\"throws\") || s.equals(\"transient\") ||\n      s.equals(\"true\") || s.equals(\"try\") || s.equals(\"typeof\") || s.equals(\"var\") ||\n      s.equals(\"void\") || s.equals(\"volatile\") || s.equals(\"while\") || s.equals(\"with\") ||\n      s.equals(\"yield\")) {\n    return false;\n  }\n\n  // Check for Unicode characters outside the allowed ranges\n  for (int i = 0; i < length; i++) {\n    char c = s.charAt(i);\n    if ((c >= 0x0080 && c <= 0x009F) || // Disallowed Unicode range\n        (c >= 0x200C && c <= 0x200D) || // Disallowed Unicode range (ZWNJ and ZWJ are allowed in JS, but not in this check)\n        (c == 0x200B || c == 0x200E || c == 0x200F || c == 0x2028 || c == 0x2029 || // Disallowed Unicode characters\n         c == 0xFEFF)) { // Disallowed Unicode character (zero-width no-break space)\n      return false;\n    }\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}