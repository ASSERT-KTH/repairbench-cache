{
    "generation": "    /**\n     * Closes the CPIO output stream as well as the stream being filtered.\n     * \n     * @throws IOException\n     *             if an I/O error has occurred or if a CPIO file error has\n     *             occurred\n     */\n    public void close() throws IOException {\n        if (this.closed) {\n            return; // Already closed, do nothing.\n        }\n        try {\n            // Delegate to super.close(), which in ArchiveOutputStream\n            // ensures finish() is called and then closes the underlying stream.\n            super.close();\n        } finally {\n            // Always mark this stream as closed, even if an exception occurred during super.close().\n            this.closed = true;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}