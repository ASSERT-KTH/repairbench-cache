{
    "generation": "    /**\n     * Closes the CPIO output stream as well as the stream being filtered.\n     * \n     * @throws IOException\n     *             if an I/O error has occurred or if a CPIO file error has\n     *             occurred\n     */\n    public void close() throws IOException {\n        if (!this.closed) {\n            // Ensure the trailer entry is written before closing\n            CpioArchiveEntry trailer = new CpioArchiveEntry(CpioConstants.CPIO_TRAILER, \"TRAILER!!!\");\n            putArchiveEntry(trailer);\n            closeArchiveEntry();\n            super.close();\n            this.closed = true;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}