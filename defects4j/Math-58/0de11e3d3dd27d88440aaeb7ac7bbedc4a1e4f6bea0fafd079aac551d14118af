{
    "generation": "    /**\n     * Fits a Gaussian function to the observed points.\n     *\n     * @return the parameters of the Gaussian function that best fits the\n     * observed points (in the same order as above).\n     */\n    public double[] fit() {\n        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n        return fit(new Gaussian.Parametric() {\n            @Override\n            public double[] initialGuess() {\n                // Ensure the guess values are positive\n                double[] initialGuess = super.initialGuess();\n                for (int i = 0; i < initialGuess.length; i++) {\n                    if (initialGuess[i] <= 0) {\n                        initialGuess[i] = Math.abs(initialGuess[i]) + 1;\n                    }\n                }\n                return initialGuess;\n            }\n        }, guess);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}