{
    "generation": "public double[] fit() {\n    final double[] guess = (new ParameterGuesser(getObservations())).guess();\n    // Retry optimization with different initial guesses if we get negative sigma\n    for (int attempt = 0; attempt < 5; attempt++) {\n        double[] result = fit(new Gaussian.Parametric(), guess);\n        if (result[2] > 0) { // sigma (third parameter) should be positive\n            return result;\n        }\n        // If sigma is negative, perturb the initial guess and try again\n        guess[1] += (Math.random() - 0.5) * 2;  // perturb norm\n        guess[2] = Math.max(guess[2], 0.01);   // ensure positive sigma\n    }\n    // If all attempts fail, return the NaN result from the last attempt\n    return fit(new Gaussian.Parametric(), guess);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}