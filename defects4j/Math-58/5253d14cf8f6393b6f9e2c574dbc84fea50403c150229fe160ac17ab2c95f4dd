{
    "generation": "/**\n * Fits a Gaussian function to the observed points.\n *\n * @return the parameters of the Gaussian function that best fits the\n * observed points (in the same order as above).\n */\npublic double[] fit() {\n    final double[] guess = (new ParameterGuesser(getObservations())).guess();\n    \n    // Create a Gaussian.Parametric with parameter constraints\n    Gaussian.Parametric parametric = new Gaussian.Parametric() {\n        @Override\n        public double value(double x, double[] parameters) {\n            // Ensure the width parameter (standard deviation) is positive\n            if (parameters[2] <= 0) {\n                return Double.NaN;\n            }\n            return super.value(x, parameters);\n        }\n    };\n    \n    return fit(parametric, guess);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}