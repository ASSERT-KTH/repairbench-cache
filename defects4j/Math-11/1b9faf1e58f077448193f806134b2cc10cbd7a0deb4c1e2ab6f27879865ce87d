{
    "generation": "    /** {@inheritDoc} */\n    public double density(final double[] vals) throws DimensionMismatchException {\n        final int dim = getDimension();\n        if (vals.length != dim) {\n            throw new DimensionMismatchException(vals.length, dim);\n        }\n\n        // Correction: For univariate case, directly use the formula without matrix operations\n        if (dim == 1) {\n            final double mean = getMean()[0];\n            final double std = FastMath.sqrt(getCovarianceMatrix()[0][0]);\n            return FastMath.exp(-0.5 * FastMath.pow(vals[0] - mean, 2) / FastMath.pow(std, 2)) / (std * FastMath.sqrt(2 * FastMath.PI));\n        }\n\n        return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n               FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n               getExponentTerm(vals);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}