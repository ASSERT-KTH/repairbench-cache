{
    "generation": "    /** {@inheritDoc} */\n    public double density(final double[] vals) throws DimensionMismatchException {\n        final int dim = getDimension();\n        if (vals.length != dim) {\n            throw new DimensionMismatchException(vals.length, dim);\n        }\n\n        double exponentTerm = getExponentTerm(vals);\n        if (dim == 1) {\n            // Special case for univariate distribution to match NormalDistribution density calculation\n            return FastMath.exp(-0.5 * ((vals[0] - getMean()[0]) / FastMath.sqrt(getCovarianceMatrix()[0][0])) * ((vals[0] - getMean()[0]) / FastMath.sqrt(getCovarianceMatrix()[0][0]))) / (FastMath.sqrt(2 * FastMath.PI) * FastMath.sqrt(getCovarianceMatrix()[0][0]));\n        } else {\n            return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n                   FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n                   exponentTerm;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}