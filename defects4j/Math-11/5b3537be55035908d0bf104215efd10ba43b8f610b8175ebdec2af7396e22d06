{
    "generation": "    /** {@inheritDoc} */\n    public double density(final double[] vals) throws DimensionMismatchException {\n        final int dim = getDimension();\n        if (vals.length != dim) {\n            throw new DimensionMismatchException(vals.length, dim);\n        }\n\n        final double[] mean = getMean();\n        final double[][] cov = getCovarianceMatrix();\n\n        // Calculate the Mahalanobis distance squared\n        final double[] diff = new double[dim];\n        for (int i = 0; i < dim; i++) {\n            diff[i] = vals[i] - mean[i];\n        }\n\n        final double[] temp = new double[dim];\n        for (int i = 0; i < dim; i++) {\n            for (int j = 0; j < dim; j++) {\n                temp[i] += cov[i][j] * diff[j];\n            }\n        }\n\n        final double exponentTerm = -0.5 * ArrayUtils.dotProduct(diff, temp);\n\n        return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n            FastMath.exp(exponentTerm);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}