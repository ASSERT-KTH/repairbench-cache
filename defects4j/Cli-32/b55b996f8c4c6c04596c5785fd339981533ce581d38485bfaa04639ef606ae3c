{
    "generation": "protected int findWrapPos(String text, int width, int startPos) {\n    int pos;\n\n    // the line ends before the max wrap pos or a new line char found\n    if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= startPos + width)\n            || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= startPos + width)) {\n        return pos + 1;\n    } else if (startPos + width >= text.length()) {\n        return -1;\n    }\n\n    // look for the last whitespace character before startPos+width\n    pos = startPos + width;\n\n    if (pos > text.length()) {\n        pos = text.length();\n    }\n\n    char c;\n\n    while ((pos > startPos) && ((c = text.charAt(pos - 1)) != ' ')\n            && (c != '\\n') && (c != '\\r')) {\n        --pos;\n    }\n\n    // if we found it - just return\n    if (pos > startPos) {\n        return pos;\n    }\n\n    // if we didn't find one, simply chop at startPos+width\n    pos = startPos + width;\n\n    if (pos > text.length()) {\n        pos = text.length();\n    }\n\n    while ((pos < text.length()) && ((c = text.charAt(pos)) != ' ')\n            && (c != '\\n') && (c != '\\r')) {\n        ++pos;\n    }\n\n    return pos == text.length() ? -1 : pos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}