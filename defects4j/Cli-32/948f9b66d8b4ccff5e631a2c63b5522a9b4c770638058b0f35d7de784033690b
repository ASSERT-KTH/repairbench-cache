{
    "generation": "    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int pos;\n\n        // the line ends before the max wrap pos or a new line char found\n        if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= startPos + width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= startPos + width))\n        {\n            return pos + 1;\n        }\n        else if (startPos + width >= text.length())\n        {\n            return -1;\n        }\n\n        // look for the last whitespace character before startPos+width\n        pos = startPos + width - 1; // changed from startPos + width to startPos + width - 1\n\n        char c;\n\n        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))\n        {\n            --pos;\n        }\n\n        // if we found it - just return\n        if (pos > startPos)\n        {\n            return pos;\n        }\n\n        // if we didn't find one, simply chop at startPos+width\n        pos = startPos + width;\n        if (pos >= text.length())\n        {\n            return -1;\n        }\n        // Check if the character at pos is already a whitespace\n        c = text.charAt(pos);\n        if (c == ' ' || c == '\\n' || c == '\\r')\n        {\n            return pos;\n        }\n        // Otherwise, return pos (which may be in the middle of a word)\n        return pos;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}