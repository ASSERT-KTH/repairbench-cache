{
    "generation": "protected int findWrapPos(String text, int width, int startPos) {\n    int pos;\n\n    // Check if the line ends before the max wrap pos or a new line char is found\n    if (((pos = text.indexOf('\\n', startPos)) != -1 && pos < startPos + width)\n        || ((pos = text.indexOf('\\t', startPos)) != -1 && pos < startPos + width)) {\n        return pos + 1;\n    } else if (startPos + width >= text.length()) {\n        return -1;\n    }\n\n    // Calculate the end position for the wrap\n    int endPos = startPos + width;\n\n    // Search backwards from endPos for the last whitespace character\n    pos = endPos - 1;\n    char c;\n    while (pos >= startPos && ((c = text.charAt(pos)) != ' ')\n           && (c != '\\n') && (c != '\\r')) {\n        --pos;\n    }\n\n    // If a whitespace character is found, return its position\n    if (pos > startPos) {\n        return pos;\n    }\n\n    // If no whitespace character is found, search forward from endPos for the next whitespace character\n    pos = endPos;\n    while (pos < text.length() && ((c = text.charAt(pos)) != ' ')\n           && (c != '\\n') && (c != '\\r')) {\n        ++pos;\n    }\n\n    // Return the position of the next whitespace character or -1 if none is found\n    return pos == text.length() ? -1 : pos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}