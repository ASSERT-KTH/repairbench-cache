{
    "generation": "/**\n * Finds the next text wrap position after <code>startPos</code> for the\n * text in <code>text</code> with the column width <code>width</code>.\n * The wrap point is the last position before startPos+width having a \n * whitespace character (space, \\n, \\r). If there is no whitespace character\n * before startPos+width, it will return startPos+width.\n *\n * @param text The text being searched for the wrap position\n * @param width width of the wrapped text\n * @param startPos position from which to start the lookup whitespace\n * character\n * @return position on which the text must be wrapped or -1 if the wrap\n * position is at the end of the text\n */\nprotected int findWrapPos(String text, int width, int startPos) {\n    int pos;\n\n    // check for a newline or tab before the wrap limit\n    if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= startPos + width)\n        || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= startPos + width)) {\n        return pos + 1;\n    }\n    // if the remaining text is shorter than the width, no more wraps\n    if (startPos + width >= text.length()) {\n        return -1;\n    }\n\n    // look for the last whitespace character before startPos+width\n    pos = startPos + width;\n    char c;\n    while (pos >= startPos\n           && ( (c = text.charAt(pos)) != ' '\n             && c != '\\n' && c != '\\r' )) {\n        pos--;\n    }\n    // if we found a whitespace before startPos+width, wrap there\n    if (pos > startPos) {\n        return pos;\n    }\n\n    // no whitespace found in the window, cut exactly at width\n    return startPos + width;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}