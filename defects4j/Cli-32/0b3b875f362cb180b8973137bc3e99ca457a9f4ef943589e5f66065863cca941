{
    "generation": "    /**\n     * Finds the next text wrap position after <code>startPos</code> for the\n     * text in <code>text</code> with the column width <code>width</code>.\n     * The wrap point is the last position before startPos+width having a \n     * whitespace character (space, \\n, \\r). If there is no whitespace character\n     * before startPos+width, it will return startPos+width.\n     *\n     * @param text The text being searched for the wrap position\n     * @param width width of the wrapped text\n     * @param startPos position from which to start the lookup whitespace\n     * character\n     * @return postion on which the text must be wrapped or -1 if the wrap\n     * position is at the end of the text\n     */\n    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int wrapLimit = startPos + width;\n\n        // If the wrapLimit is at or beyond the end of the text,\n        // there's no more wrapping needed for this segment.\n        if (wrapLimit >= text.length())\n        {\n            return -1;\n        }\n\n        // Check for hard new line or tab characters within the wrap limit.\n        // If found, return the position right after it, as these usually\n        // imply a break at that exact point.\n        int foundPreferredPos;\n        if ((foundPreferredPos = text.indexOf('\\n', startPos)) != -1 && foundPreferredPos < wrapLimit)\n        {\n            return foundPreferredPos + 1;\n        }\n        if ((foundPreferredPos = text.indexOf('\\t', startPos)) != -1 && foundPreferredPos < wrapLimit)\n        {\n            return foundPreferredPos + 1;\n        }\n\n        // Look for the last whitespace character before 'wrapLimit'.\n        // This loop searches backwards from `wrapLimit - 1` down to `startPos`.\n        int pos = wrapLimit - 1; \n        while (pos >= startPos)\n        {\n            char c = text.charAt(pos);\n            if (c == ' ' || c == '\\n' || c == '\\r')\n            {\n                // Found a whitespace character. This is the desired wrap point.\n                // Return its index.\n                return pos;\n            }\n            --pos;\n        }\n\n        // If no whitespace character was found in the range [startPos, wrapLimit - 1],\n        // return 'wrapLimit' itself. This means the text is cut at this exact position.\n        return wrapLimit;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}