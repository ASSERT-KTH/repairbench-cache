{
    "generation": "/**\n * <p>Stop the stopwatch.</p>\n * \n * <p>This method ends a new timing session, allowing the time to be retrieved.</p>\n *\n * @throws IllegalStateException if the StopWatch is not running.\n */\npublic void stop() {\n    if (this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n        throw new IllegalStateException(\"Stopwatch is not running.\");\n    }\n    if (this.runningState == STATE_SUSPENDED) {\n        // If suspended, add the suspended time to the total time\n        this.totalTime += System.currentTimeMillis() - this.suspendTime;\n    } else {\n        // If running, add the current time to the total time\n        this.totalTime += System.currentTimeMillis() - this.startTime;\n    }\n    this.stopTime = System.currentTimeMillis();\n    this.runningState = STATE_STOPPED;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}