{
    "generation": "private void visitCall(NodeTraversal t, Node n) {\n  Node child = n.getFirstChild();\n  JSType childType = getJSType(child).restrictByNotNullOrUndefined();\n\n  if (!childType.canBeCalled()) {\n    report(t, n, NOT_CALLABLE, childType.toString());\n    ensureTyped(t, n);\n    return;\n  }\n\n  if (childType instanceof FunctionType) {\n    FunctionType functionType = (FunctionType) childType;\n\n    // If the function has an explicit 'this' type, then it must be called\n    // via a property access (GETPROP or GETELEM). Unwrap any casts first.\n    JSType explicitThisType = functionType.getTypeOfThis();\n    if (explicitThisType != null && !explicitThisType.isUnknownType()) {\n      Node callee = child;\n      while (callee != null && callee.getType() == Token.CAST) {\n        callee = callee.getFirstChild();\n      }\n      if (callee == null ||\n          (callee.getType() != Token.GETPROP && callee.getType() != Token.GETELEM)) {\n        report(t, n, MISSING_THIS, functionType.toString());\n        ensureTyped(t, n, functionType.getReturnType());\n        return;\n      }\n    }\n\n    boolean isExtern = false;\n    JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n    if (functionJSDocInfo != null) {\n      String sourceName = functionJSDocInfo.getSourceName();\n      CompilerInput functionSource = compiler.getInput(sourceName);\n      isExtern = functionSource.isExtern();\n    }\n\n    // Non-native constructors should not be called directly unless they specify a\n    // return type and are defined in an extern.\n    if (functionType.isConstructor() &&\n        !functionType.isNativeObjectType() &&\n        (functionType.getReturnType().isUnknownType() ||\n         functionType.getReturnType().isVoidType() ||\n         !isExtern)) {\n      report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());\n    }\n\n    visitParameterList(t, n, functionType);\n    ensureTyped(t, n, functionType.getReturnType());\n  } else {\n    ensureTyped(t, n);\n  }\n\n  // TODO: Add something to check for calls of RegExp objects, which is not\n  // supported by IE.\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}