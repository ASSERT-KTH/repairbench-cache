{
    "generation": "/**\n * Visits a CALL node.\n *\n * @param t The node traversal object that supplies context, such as the\n * scope chain to use in name lookups as well as error reporting.\n * @param n The node being visited.\n */\nprivate void visitCall(NodeTraversal t, Node n) {\n  Node child = n.getFirstChild();\n  JSType childType = getJSType(child).restrictByNotNullOrUndefined();\n\n  if (!childType.canBeCalled()) {\n    report(t, n, NOT_CALLABLE, childType.toString());\n    ensureTyped(t, n);\n    return;\n  }\n\n  if (childType instanceof FunctionType) {\n    FunctionType functionType = (FunctionType) childType;\n\n    // If the function has an explicit \"this\" type,\n    // then it must be called as a property access (GETPROP or GETELEM).\n    JSType thisType = functionType.getTypeOfThis();\n    if (thisType != null && !thisType.isUnknownType() &&\n        !child.isGetProp() && !child.isGetElem()) {\n      report(t, n, INVALID_THIS_TYPE, childType.toString());\n      ensureTyped(t, n, functionType.getReturnType());\n      return;\n    }\n\n    boolean isExtern = false;\n    JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n    if (functionJSDocInfo != null) {\n      String sourceName = functionJSDocInfo.getSourceName();\n      CompilerInput functionSource = compiler.getInput(sourceName);\n      isExtern = functionSource.isExtern();\n    }\n\n    // Non-native constructors should not be called directly\n    // unless they specify a return type and are defined in an extern.\n    if (functionType.isConstructor() &&\n        !functionType.isNativeObjectType() &&\n        (functionType.getReturnType().isUnknownType() ||\n         functionType.getReturnType().isVoidType() ||\n         !isExtern)) {\n      report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());\n    }\n\n    visitParameterList(t, n, functionType);\n    ensureTyped(t, n, functionType.getReturnType());\n  } else {\n    ensureTyped(t, n);\n  }\n\n  // TODO: Add something to check for calls of RegExp objects, which is not\n  // supported by IE. Either say something about the return type or warn\n  // about the non-portability of the call or both.\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}