{
    "generation": "  /**\n   * Encodes {@code value}.\n   *\n   * @param value a finite value. May not be {@link Double#isNaN() NaNs} or\n   *     {@link Double#isInfinite() infinities} unless lenient mode is enabled.\n   * @return this writer.\n   */\n  public JsonWriter value(double value) throws IOException {\n    writeDeferredName();\n    if (lenient || !Double.isNaN(value) && !Double.isInfinite(value)) {\n      beforeValue();\n      out.append(Double.toString(value));\n    } else {\n      beforeValue();\n      if (Double.isNaN(value)) {\n        out.append(\"NaN\");\n      } else if (value == Double.NEGATIVE_INFINITY) {\n        out.append(\"-Infinity\");\n      } else if (value == Double.POSITIVE_INFINITY) {\n        out.append(\"Infinity\");\n      }\n    }\n    return this;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}