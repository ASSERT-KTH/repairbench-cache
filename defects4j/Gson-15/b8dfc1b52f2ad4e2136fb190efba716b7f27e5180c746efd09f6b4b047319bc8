{
    "generation": "  /**\n   * Encodes {@code value}.\n   *\n   * @param value a finite value. May not be {@link Double#isNaN() NaNs} or\n   *     {@link Double#isInfinite() infinities}.\n   * @return this writer.\n   */\n  public JsonWriter value(double value) throws IOException {\n    writeDeferredName();\n    if (!lenient && (Double.isNaN(value) || Double.isInfinite(value))) {\n      throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n    }\n    beforeValue();\n    if (Double.isNaN(value)) {\n      out.append(\"NaN\");\n    } else if (Double.isInfinite(value)) {\n      out.append(value > 0 ? \"Infinity\" : \"-Infinity\");\n    } else {\n      out.append(Double.toString(value));\n    }\n    return this;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}