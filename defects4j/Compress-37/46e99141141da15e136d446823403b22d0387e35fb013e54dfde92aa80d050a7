{
    "generation": "// https://www.gnu.org/software/tar/manual/html_section/tar_92.html#SEC188\nMap<String, String> parsePaxHeaders(final InputStream i)\n    throws IOException {\n    final Map<String, String> headers = new HashMap<String, String>(globalPaxHeaders);\n    // Format is \"length keyword=value\\n\";\n    while (true) { // get length\n        int ch;\n        int len = 0;\n        int read = 0;\n        boolean foundLen = false;\n        while ((ch = i.read()) != -1) {\n            read++;\n            if (ch == ' ') {\n                foundLen = true;\n                break;\n            }\n            if (ch == '\\n' || ch == '\\r') {\n                // skip blank line or stray newline\n                foundLen = false;\n                break;\n            }\n            if (ch < '0' || ch > '9') {\n                throw new IOException(\"Invalid length character '\" + (char) ch + \"' in PAX header\");\n            }\n            len = len * 10 + (ch - '0');\n        }\n\n        if (ch == -1) { // EOF\n            break;\n        }\n\n        if (!foundLen) {\n            // skip this line and continue\n            continue;\n        }\n\n        if (len <= 0) {\n            // invalid length, skip this line\n            // read until newline\n            while ((ch = i.read()) != -1) {\n                if (ch == '\\n') {\n                    break;\n                }\n            }\n            continue;\n        }\n\n        int bytesReadForThisRecord = read; // the 'len' characters include the length and the rest including \\n\n        int remaining = len - bytesReadForThisRecord;\n        if (remaining <= 0) {\n            // Something went wrong, skip this entry\n            for (int skip = 0; skip < remaining * -1; skip++) {\n                // Defensive skip\n                if (i.read() == -1) {\n                    break;\n                }\n            }\n            continue;\n        }\n\n        final byte[] record = new byte[remaining];\n        int got = IOUtils.readFully(i, record);\n        if (got != remaining) {\n            throw new IOException(\"Failed to read Paxheader record. Expected \" + remaining + \" bytes, read \" + got);\n        }\n\n        final String recordStr = new String(record, CharsetNames.UTF_8);\n        // Drop trailing newline if any\n        final String trimmedRecord = recordStr.endsWith(\"\\n\") ? recordStr.substring(0, recordStr.length() -1) : recordStr;\n\n        int equalsPos = trimmedRecord.indexOf('=');\n        if (equalsPos == -1) {\n            // Invalid record, skip\n            continue;\n        }\n        final String keyword = trimmedRecord.substring(0, equalsPos);\n        final String value = trimmedRecord.substring(equalsPos +1);\n        if (value.length() == 0) {\n            headers.remove(keyword);\n        } else {\n            headers.put(keyword, value);\n        }\n    }\n    return headers;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}