{
    "generation": "// https://www.gnu.org/software/tar/manual/html_section/tar_92.html#SEC188\nMap<String, String> parsePaxHeaders(final InputStream i)\n    throws IOException {\n    final Map<String, String> headers = new HashMap<String, String>(globalPaxHeaders);\n    while (true) {\n        // Read the first character of the length field\n        int ch = i.read();\n        if (ch == -1) {\n            break;\n        }\n        if (ch == '\\n') {\n            // skip blank lines in PAX header\n            continue;\n        }\n        if (ch < '0' || ch > '9') {\n            // skip any invalid line until the next newline\n            do {\n                ch = i.read();\n            } while (ch != -1 && ch != '\\n');\n            continue;\n        }\n        // Parse the length value\n        int len = ch - '0';\n        int read = 1;\n        while ((ch = i.read()) != -1) {\n            read++;\n            if (ch == ' ') {\n                break;\n            }\n            if (ch < '0' || ch > '9') {\n                throw new IOException(\"Invalid PAX header length\");\n            }\n            len = len * 10 + (ch - '0');\n        }\n        if (ch == -1) {\n            break;\n        }\n        // Read the keyword up to '='\n        final ByteArrayOutputStream coll = new ByteArrayOutputStream();\n        while ((ch = i.read()) != -1) {\n            read++;\n            if (ch == '=') {\n                break;\n            }\n            coll.write((byte) ch);\n        }\n        if (ch == -1) {\n            break;\n        }\n        final String keyword = coll.toString(CharsetNames.UTF_8);\n        // Calculate how many bytes remain in this record\n        final int restLen = len - read;\n        if (restLen < 0) {\n            throw new IOException(\"Invalid PAX header length for keyword: \" + keyword);\n        }\n        if (restLen > 0) {\n            final byte[] rest = new byte[restLen];\n            final int got = IOUtils.readFully(i, rest);\n            if (got != restLen) {\n                throw new IOException(\"Failed to read PAX header. Expected \"\n                                      + restLen + \" bytes, read \" + got);\n            }\n            if (restLen == 1) {\n                // only a trailing newline => remove the key\n                headers.remove(keyword);\n            } else {\n                // drop the trailing newline from the value\n                final String value = new String(rest, 0, restLen - 1, CharsetNames.UTF_8);\n                headers.put(keyword, value);\n            }\n        }\n    }\n    return headers;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}