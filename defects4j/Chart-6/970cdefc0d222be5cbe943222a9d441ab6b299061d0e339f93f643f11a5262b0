{
    "generation": "/**\n * Tests the list for equality with another object (typically also a list).\n *\n * @param obj  the other object (<code>null</code> permitted).\n *\n * @return A boolean.\n */\npublic boolean equals(Object obj) {\n\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof ShapeList)) {\n        return false;\n    }\n    ShapeList that = (ShapeList) obj;\n    int size = this.size();\n    if (size != that.size()) {\n        return false;\n    }\n    for (int i = 0; i < size; i++) {\n        Shape s1 = this.getShape(i);\n        Shape s2 = that.getShape(i);\n        if (s1 == null && s2 == null) {\n            continue;\n        }\n        if (s1 == null || s2 == null) {\n            return false;\n        }\n        // Since Shape doesn't reliably implement equals, we convert both to strings\n        // using their toString() methods for comparison\n        if (!s1.toString().equals(s2.toString())) {\n            return false;\n        }\n    }\n    return true;\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}