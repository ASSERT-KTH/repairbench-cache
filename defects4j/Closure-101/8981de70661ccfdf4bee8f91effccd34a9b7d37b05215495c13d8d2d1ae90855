{
    "generation": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options = new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level = flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n\n    WarningLevel wLevel = flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    \n    // Set the default process_closure_primitives to true\n    if (flags.process_closure_primitives) {\n        options.closurePass = true;\n    } else {\n        flags.process_closure_primitives = true; // Set default to true\n        options.closurePass = flags.process_closure_primitives;\n    }\n\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    if (flags.process_closure_primitives) {\n        options.closurePass = true;\n    }\n\n    initOptionsFromFlags(options);\n    return options;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}