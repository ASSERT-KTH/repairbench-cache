{
    "generation": "private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n    Node property = n.getLastChild();\n    Node objNode = n.getFirstChild();\n    JSType childType = getJSType(objNode);\n\n    if (childType.isDict()) {\n        report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, \"'.'\", \"dict\");\n    } else {\n        if (validator.expectNotNullOrUndefined(t, n, childType,\n                \"No properties on this expression\", getNativeType(OBJECT_TYPE))) {\n            // Error already reported; do not proceed to check property access.\n            return;\n        }\n        checkPropertyAccess(childType, property.getString(), t, n);\n    }\n    ensureTyped(t, n);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}