{
    "generation": "        private void copyAttributes(org.jsoup.nodes.Node source, Element el) {\n            for (Attribute attribute : source.attributes()) {\n                // First check if the key is a valid XML attribute name\n                String key = attribute.getKey();\n                if (!isValidXmlName(key)) {\n                    // If not valid, we need to transform it to a valid name\n                    // We'll prefix with \"invalid-\" and replace invalid characters\n                    StringBuilder validKey = new StringBuilder();\n                    validKey.append(\"invalid-\");\n                    for (int i = 0; i < key.length(); i++) {\n                        char c = key.charAt(i);\n                        if (i == 0) {\n                            // First character must be a letter, underscore, or colon\n                            if (Character.isLetter(c) || c == '_' || c == ':') {\n                                validKey.append(c);\n                            } else {\n                                validKey.append(\"_\");\n                            }\n                        } else {\n                            // Subsequent characters can be letter, digit, hyphen, underscore, dot, or colon\n                            if (Character.isLetterOrDigit(c) || c == '-' || c == '_' || c == '.' || c == ':') {\n                                validKey.append(c);\n                            } else {\n                                validKey.append(\"_\");\n                            }\n                        }\n                    }\n                    key = validKey.toString();\n                }\n                el.setAttribute(key, attribute.getValue());\n            }\n        }\n\n        private boolean isValidXmlName(String name) {\n            if (name == null || name.isEmpty()) return false;\n\n            // First character must be a letter, underscore, or colon\n            char first = name.charAt(0);\n            if (!(Character.isLetter(first) || first == '_' || first == ':')) {\n                return false;\n            }\n\n            // Subsequent characters can be letter, digit, hyphen, underscore, dot, or colon\n            for (int i = 1; i < name.length(); i++) {\n                char c = name.charAt(i);\n                if (!(Character.isLetterOrDigit(c) || c == '-' || c == '_' || c == '.' || c == ':')) {\n                    return false;\n                }\n            }\n            return true;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}