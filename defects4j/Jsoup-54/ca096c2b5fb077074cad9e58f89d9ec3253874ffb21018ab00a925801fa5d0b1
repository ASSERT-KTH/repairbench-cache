{
    "generation": "        private void copyAttributes(org.jsoup.nodes.Node source, Element el) {\n            for (Attribute attribute : source.attributes()) {\n                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]\n                String key = attribute.getKey();\n\n                // 1. Remove characters not allowed anywhere in an XML name.\n                // The regex `[^-a-zA-Z0-9_:.]` correctly filters out characters that are not\n                // letters, digits, colon, underscore, period, or hyphen.\n                String sanitizedKey = key.replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");\n\n                // 2. Handle cases where the sanitized key is empty or starts with an invalid character.\n                if (sanitizedKey.isEmpty()) {\n                    // If the key becomes empty after sanitization (e.g., original was just '\"'),\n                    // we must provide a valid default to avoid DOMException.\n                    sanitizedKey = \"_js_empty_attr\"; // A valid XML name\n                } else {\n                    // Check if the first character is valid for an XML name start.\n                    // Valid XML name start characters are letters, '_', or ':'.\n                    char firstChar = sanitizedKey.charAt(0);\n                    if (!Character.isLetter(firstChar) && firstChar != '_' && firstChar != ':') {\n                        // If it starts with a digit or hyphen (which are valid NameChar but not NameStartChar),\n                        // or any other filtered character that was allowed to pass due to initial regex,\n                        // prefix it to make it a valid XML name.\n                        sanitizedKey = \"_\" + sanitizedKey;\n                    }\n                }\n\n                // Attempt to set the attribute with the sanitized key.\n                // This ensures that the key passed to setAttribute always conforms to XML naming rules.\n                el.setAttribute(sanitizedKey, attribute.getValue());\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}