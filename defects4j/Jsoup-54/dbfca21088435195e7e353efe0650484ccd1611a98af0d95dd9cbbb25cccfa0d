{
    "generation": "        private void copyAttributes(org.jsoup.nodes.Node source, Element el) {\n            for (Attribute attribute : source.attributes()) {\n                String key = attribute.getKey();\n                \n                // XML attribute names must follow specific rules:\n                // 1. The first character must be a letter (a-z, A-Z), an underscore (_), or a colon (:).\n                // 2. Subsequent characters can be letters, digits (0-9), underscores (_), hyphens (-), colons (:), or periods (.).\n                // 3. The name cannot be empty.\n\n                // First, remove any characters that are not allowed anywhere in an XML name.\n                // The regex `[^-a-zA-Z0-9_:.]` matches characters that are NOT: hyphen, letter, digit, underscore, colon, or period.\n                String cleanedKey = key.replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");\n\n                // If, after cleaning, the key is empty, it cannot form a valid XML name. Skip this attribute.\n                if (cleanedKey.isEmpty()) {\n                    continue;\n                }\n\n                // Check the first character rule. If it's not a letter, underscore, or colon, prepend an underscore.\n                char firstChar = cleanedKey.charAt(0);\n                if (!Character.isLetter(firstChar) && firstChar != '_' && firstChar != ':') {\n                    cleanedKey = \"_\" + cleanedKey;\n                }\n\n                // If the key is still empty after prepending (which should not happen if cleanedKey wasn't empty)\n                // or if it somehow becomes invalid, an exception could still occur.\n                // However, with the above logic, cleanedKey will always start with an underscore if it was invalid,\n                // or with a valid NameStartChar if it was already valid or made so.\n                // An empty cleanedKey is already handled above.\n\n                el.setAttribute(cleanedKey, attribute.getValue());\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}