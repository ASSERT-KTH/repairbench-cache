{
    "generation": "        private void copyAttributes(org.jsoup.nodes.Node source, Element el) {\n            for (Attribute attribute : source.attributes()) {\n                // 1. Sanitize the key: remove characters not allowed in XML Names.\n                //    Allowed characters: letters, digits, '-', '.', '_', ':'\n                //    This regex removes any character that is NOT one of those.\n                String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");\n\n                // 2. Skip if the sanitized key is empty, as empty attribute names are illegal.\n                if (key.isEmpty()) {\n                    continue;\n                }\n\n                // 3. Check if the sanitized key starts with a valid XML NameStartChar.\n                //    Valid start chars are letters, '_', or ':'.\n                //    XML Names cannot start with '-', '.', or digits.\n                //    If it doesn't start with a valid char, prepend \"_\" to make it valid.\n                if (!key.matches(\"^[a-zA-Z_:].*\")) {\n                     key = \"_\" + key;\n                }\n\n                // 4. Set the attribute. Catch potential DOMExceptions, e.g., if the key\n                //    is still invalid for reasons not covered by the checks (like namespace issues),\n                //    or if the value contains invalid characters.\n                try {\n                    // Note: The attribute value is not sanitized. Setting invalid characters\n                    // in the value can also cause DOMExceptions. This code assumes values are OK\n                    // or that the calling context handles value sanitization if needed.\n                    el.setAttribute(key, attribute.getValue());\n                } catch (org.w3c.dom.DOMException e) {\n                    // Ignore exceptions during attribute setting for robustness.\n                    // This might happen with invalid keys (e.g., starting with \"xml\") or values.\n                }\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}