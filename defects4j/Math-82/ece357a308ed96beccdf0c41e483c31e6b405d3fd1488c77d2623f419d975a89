{
    "generation": "/**\n * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n * @param tableau simple tableau for the problem\n * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n * @return row with the minimum ratio, or null if no valid pivot (unbounded)\n */\nprivate Integer getPivotRow(final int col, final SimplexTableau tableau) {\n    // Only rows with a strictly positive entry in 'col' are eligible.\n    double minRatio = Double.POSITIVE_INFINITY;\n    Integer minRatioPos = null;\n    final int rows  = tableau.getHeight();\n    final int cols  = tableau.getWidth();\n    final int start = tableau.getNumObjectiveFunctions();\n    for (int i = start; i < rows; i++) {\n        final double entry = tableau.getEntry(i, col);\n        // require entry > 0 (not >= 0) to avoid zero/near\u2010zero pivots\n        if (MathUtils.compareTo(entry, 0.0, epsilon) > 0) {\n            final double rhs   = tableau.getEntry(i, cols - 1);\n            final double ratio = rhs / entry;\n            // pick the smallest non-negative ratio (with epsilon tolerance)\n            if (MathUtils.compareTo(ratio, minRatio, epsilon) < 0) {\n                minRatio    = ratio;\n                minRatioPos = i;\n            }\n        }\n    }\n    return minRatioPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}