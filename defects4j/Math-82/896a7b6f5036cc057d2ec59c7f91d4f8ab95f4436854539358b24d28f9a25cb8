{
    "generation": "    /**\n     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n     * @param tableau simple tableau for the problem\n     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n     * @return row with the minimum ratio\n     */\n    private Integer getPivotRow(final int col, final SimplexTableau tableau) {\n        double minRatio = Double.MAX_VALUE;\n        Integer minRatioPos = null;\n        for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n            // The minimum ratio test requires the pivot column entry to be strictly positive.\n            // Using MathUtils.compareTo(entry, 0, epsilon) > 0 ensures that 'entry' is\n            // greater than zero within the given epsilon tolerance.\n            // This prevents division by zero or by numbers effectively zero, and correctly\n            // applies the simplex rule where only positive entries in the pivot column\n            // for constraint rows are considered for the ratio test.\n            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final double ratio = rhs / entry;\n                // For the standard Simplex algorithm, we are looking for the minimum non-negative ratio.\n                // The current implementation correctly handles this by initializing minRatio to MAX_VALUE\n                // and only updating if a smaller ratio is found.\n                if (ratio < minRatio) {\n                    minRatio = ratio;\n                    minRatioPos = i;\n                }\n            }\n        }\n        return minRatioPos;\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}