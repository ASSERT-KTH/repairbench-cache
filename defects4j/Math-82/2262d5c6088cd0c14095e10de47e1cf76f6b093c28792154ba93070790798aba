{
    "generation": "    /**\n     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n     * @param tableau simple tableau for the problem\n     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n     * @return row with the minimum ratio\n     */\n    private Integer getPivotRow(final int col, final SimplexTableau tableau) {\n        double minRatio = Double.MAX_VALUE;\n        Integer minRatioPos = null;\n        for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n\n            // The Minimum Ratio Test requires the pivot column entry to be strictly positive.\n            // Use compareTo(..., 0, epsilon) > 0 to check if entry > epsilon.\n            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final double ratio = rhs / entry;\n                // Use \"<\" comparison: if ratios are tied, the first encountered row is chosen.\n                // (This is consistent with many Simplex implementations, although Bland's rule provides stronger cycling prevention guarantees).\n                // Using compareTo for ratios might add robustness but complicates tie-breaking logic.\n                if (ratio < minRatio) {\n                    minRatio = ratio;\n                    minRatioPos = i;\n                }\n            }\n        }\n        return minRatioPos;\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}