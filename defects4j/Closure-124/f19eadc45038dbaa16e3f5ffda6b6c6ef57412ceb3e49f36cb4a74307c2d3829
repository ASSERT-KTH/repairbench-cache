{
    "generation": "/**\n * Checks name referenced in node to determine if it might have\n * changed.\n * @return Whether the replacement can be made.\n */\nprivate boolean isSafeReplacement(Node node, Node replacement) {\n  // No checks are needed for simple names.\n  if (node.isName()) {\n    return true;\n  }\n  Preconditions.checkArgument(node.isGetProp());\n\n  Node base = node.getFirstChild();\n  Node prop = node.getSecondChild();\n\n  if (base.isName()\n      && isNameAssignedTo(base.getString(), replacement)) {\n    return false;\n  }\n\n  // Also ensure the property is not assigned to, e.g. x.y = ...;\n  if (prop != null && prop.isName() \n      && isNameAssignedTo(node.getQualifiedName(), replacement)) {\n    return false;\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}