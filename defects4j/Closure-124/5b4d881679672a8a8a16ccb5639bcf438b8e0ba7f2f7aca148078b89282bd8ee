{
    "generation": "  /**\n   * Checks name referenced in node to determine if it might have\n   * changed.\n   * @return Whether the replacement can be made.\n   */\n  private boolean isSafeReplacement(Node node, Node replacement) {\n    // No checks are needed for simple names.\n    if (node.isName()) {\n      return true;\n    }\n    Preconditions.checkArgument(node.isGetProp());\n\n    Node target = node.getFirstChild();\n\n    // When replacing a property access that contains a qualified name, we\n    // can not be sure that a property of the qualified name is not being\n    // assigned to a value.\n    if (target.isQualifiedName()\n        && isNameAssignedTo(target.getQualifiedName(), replacement)) {\n      return false;\n    }\n\n    return true;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}