{
    "generation": "private boolean isSafeReplacement(Node node, Node replacement) {\n  // No checks are needed for simple names.\n  if (node.isName()) {\n    return true;\n  }\n  Preconditions.checkArgument(node.isGetProp());\n\n  // Walk down the chain until we hit a node that is not a GETPROP.\n  Node base = node;\n  while (base.isGetProp()) {\n    base = base.getFirstChild();\n  }\n\n  // Now, if the base is a name that has an assignment in the replacement,\n  // then the replacement is not safe.\n  if (base.isName() && isNameAssignedTo(base.getString(), replacement)) {\n    return false;\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}