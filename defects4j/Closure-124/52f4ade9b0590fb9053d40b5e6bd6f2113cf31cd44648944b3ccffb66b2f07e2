{
    "generation": "/**\n * Checks name referenced in node to determine if it might have\n * changed.\n * @return Whether the replacement can be made.\n */\nprivate boolean isSafeReplacement(Node node, Node replacement) {\n  // No checks are needed for simple names.\n  if (node.isName()) {\n    return true;\n  }\n  Preconditions.checkArgument(node.isGetProp());\n\n  String name = null;\n  Node cur = node;\n  // Traverse the property chain to find the base name\n  while (cur != null && cur.isGetProp()) {\n    cur = cur.getFirstChild();\n  }\n  if (cur != null && cur.isName()) {\n    name = cur.getString();\n  }\n\n  if (name != null && isNameAssignedTo(name, replacement)) {\n    return false;\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}