{
    "generation": "/**\n * Checks name referenced in node to determine if it might have\n * changed.\n * @return Whether the replacement can be made.\n */\nprivate boolean isSafeReplacement(Node node, Node replacement) {\n  // No checks are needed for simple names.\n  if (node.isName()) {\n    return true;\n  }\n  Preconditions.checkArgument(node.isGetProp());\n\n  // Check all nodes in the chain to ensure none is assigned to\n  Node currentNode = node;\n  while (currentNode != null) {\n    if (currentNode.isName() \n        && isNameAssignedTo(currentNode.getString(), replacement)) {\n      return false;\n    }\n    \n    if (currentNode.isGetProp()) {\n      currentNode = currentNode.getFirstChild();\n    } else {\n      // Not a name or property, stop checking\n      break;\n    }\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}