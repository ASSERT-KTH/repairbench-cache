{
    "generation": "  private boolean isSafeReplacement(Node node, Node replacement) {\n    // No checks are needed for simple names.\n    if (node.isName()) {\n      return true;\n    }\n    Preconditions.checkArgument(node.isGetProp());\n\n    node = node.getFirstChild();\n    if (node.isName() && isNameAssignedTo(node.getString(), replacement)) {\n      return false;\n    }\n\n    // Check for nested assignments in the replacement node\n    if (replacement.isAssign()) {\n      Node left = replacement.getFirstChild();\n      if (left.isName() && isNameAssignedTo(left.getString(), node)) {\n        return false;\n      }\n    }\n\n    return true;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}