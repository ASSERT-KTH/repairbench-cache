{
    "generation": "/**\n * Checks name referenced in node to determine if it might have\n * changed.\n * @return Whether the replacement can be made.\n */\nprivate boolean isSafeReplacement(Node node, Node replacement) {\n  // No checks are needed for simple names.\n  if (node.isName()) {\n    return true;\n  }\n  Preconditions.checkArgument(node.isGetProp());\n\n  // Traverse down the property chain to find its root object.\n  Node root = node.getFirstChild();\n  while (root.isGetProp()) {\n    root = root.getFirstChild();\n  }\n  // If the root is a name that occurs in 'replacement', don't replace.\n  if (root.isName() && isNameAssignedTo(root.getString(), replacement)) {\n    return false;\n  }\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}