{
    "generation": "    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n        String originalValue = attr.getValue();\n        String originalValueLower = originalValue.toLowerCase();\n\n        // First, check if the original value already has a valid protocol.\n        // This is crucial for custom protocols (like 'cid:' or 'data:')\n        // which are absolute in their own right and should not be resolved relative to the base URI\n        // by Element.absUrl, as that might prepend the base URI and change the protocol.\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (originalValueLower.startsWith(prot)) {\n                // If the original value starts with an allowed protocol, it's valid.\n                // Ensure the attribute value for output is the original absolute form\n                // if relative links are not preserved. For 'cid:' or 'data:', the original value\n                // is the correct absolute form. For 'http:', the original is also correct.\n                if (!preserveRelativeLinks) {\n                    attr.setValue(originalValue);\n                }\n                return true;\n            }\n        }\n\n        // If no direct protocol match on the original value, it might be a relative URL\n        // (e.g., 'foo.html') or an implicitly absolute URL that Jsoup's absUrl can resolve\n        // (e.g., '//example.com/foo.html').\n        // Resolve the value to an absolute URL using the element's base URI.\n        String resolvedValue = el.absUrl(attr.getKey());\n        String resolvedValueLower = resolvedValue.toLowerCase();\n\n        // Now, check if this resolved value matches any allowed protocol.\n        // This handles relative URLs that resolve to standard protocols (http, https, etc.).\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (resolvedValueLower.startsWith(prot)) {\n                // If a valid protocol is found in the resolved value.\n                // Update the attribute value to the resolved absolute form if not preserving relative links.\n                if (!preserveRelativeLinks) {\n                    attr.setValue(resolvedValue);\n                }\n                return true;\n            }\n        }\n\n        // No valid protocol found in original or resolved form.\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}