{
    "generation": "    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n        // rels without a baseuri get removed\n\n        // Get original value and resolved value (if possible)\n        // attr.getValue() is potentially trimmed - use orig value from attributes\n        String origValue = el.attributes().getIgnoreCase(attr.getKey()); // Use original value from element's attributes\n        String resolvedValue = el.absUrl(attr.getKey());\n\n        // Determine the value to check against protocols:\n        // Use the resolved value if it's not empty (handles relative URLs),\n        // otherwise use the original value (handles protocols like cid:, data:, mailto: that don't resolve).\n        String valueToCheck;\n        if (!resolvedValue.isEmpty())\n            valueToCheck = resolvedValue;\n        else\n            valueToCheck = origValue;\n\n        // Check if the value starts with an allowed protocol\n        boolean foundMatch = false;\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            // Ensure value has character after protocol\n            if (valueToCheck.length() > prot.length() && valueToCheck.toLowerCase().startsWith(prot)) {\n                foundMatch = true;\n                break;\n            }\n        }\n\n        if (foundMatch) {\n            // Protocol is valid. Now, update attribute if needed (and possible)\n            if (!preserveRelativeLinks) {\n                // Update to the resolved value *only* if resolution was successful (non-empty)\n                // Otherwise, the original value (which passed the protocol check) remains.\n                if (!resolvedValue.isEmpty()) {\n                    // If the resolved value is the same as the original, no need to update\n                    if (!origValue.equals(resolvedValue)) {\n                        attr.setValue(resolvedValue);\n                    }\n                }\n                // If resolvedValue is empty, do nothing; keep the original value.\n            }\n            return true; // Valid protocol found\n        }\n\n        return false; // No valid protocol found\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}