{
    "generation": "    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n        String originalValue = attr.getValue();\n        // Get the absolute URL. For standard schemes (http, https, etc.) and relative URLs, this will\n        // resolve correctly. For custom schemes (cid:, data:) that Jsoup's internal URL parser\n        // does not understand, this might return an empty string if there's no base URI,\n        // or attempt to resolve it relative to the base URI if one exists.\n        String absValue = el.absUrl(attr.getKey());\n\n        // Determine which value to use for protocol validation.\n        // If absValue is blank but originalValue is not, it implies that absUrl failed to\n        // process a non-empty original value (e.g., a custom protocol like \"cid:\").\n        // In such cases, we should validate against the original value.\n        // Otherwise (for relative URLs resolved to abs, or standard absolute URLs), use absValue.\n        String valueForValidation;\n        if (org.jsoup.internal.StringUtil.isBlank(absValue) && !org.jsoup.internal.StringUtil.isBlank(originalValue)) {\n            valueForValidation = originalValue;\n        } else {\n            valueForValidation = absValue;\n        }\n\n        boolean valid = false;\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (valueForValidation.toLowerCase().startsWith(prot)) {\n                valid = true;\n                break;\n            }\n        }\n\n        if (valid) {\n            // If the protocol is valid, and preserveRelativeLinks is false,\n            // we should update the attribute value to its absolute form.\n            // Again, if absValue was blank but originalValue was valid (a custom protocol),\n            // use originalValue for the final attribute value to avoid stripping it.\n            // Otherwise, use the absValue (for relative URLs resolved to abs, or standard absolute URLs).\n            if (!preserveRelativeLinks) {\n                if (org.jsoup.internal.StringUtil.isBlank(absValue) && !org.jsoup.internal.StringUtil.isBlank(originalValue)) {\n                    attr.setValue(originalValue);\n                } else {\n                    attr.setValue(absValue);\n                }\n            }\n            // If preserveRelativeLinks is true, the attribute value remains its original form,\n            // which is already set initially, so no explicit action is needed here.\n            return true;\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}