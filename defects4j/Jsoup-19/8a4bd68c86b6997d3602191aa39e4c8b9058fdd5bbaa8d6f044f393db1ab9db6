{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String attrKey = attr.getKey();\n    String value = attr.getValue();\n\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString().toLowerCase() + \":\";\n        if (value.trim().toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n\n    // If not a protocol, try resolving abs url for http, https, ftp etc\n    value = el.absUrl(attrKey);\n    if (!preserveRelativeLinks)\n        attr.setValue(value);\n\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString().toLowerCase() + \":\";\n        if (value.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}