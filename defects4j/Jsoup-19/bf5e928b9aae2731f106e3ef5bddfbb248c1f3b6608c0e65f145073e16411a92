{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, but don't update the attribute as it may be misleading\n    String value = el.absUrl(attr.getKey());\n    \n    if (protocols.isEmpty()) {\n        // no protocols allowed, so drop the attribute\n        return false;\n    }\n    \n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString().toLowerCase() + \":\";\n        if (value.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n    \n    // if no protocols matched, check if the original attribute value matches any protocol\n    String originalValue = attr.getValue();\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString().toLowerCase() + \":\";\n        if (originalValue.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n    \n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}