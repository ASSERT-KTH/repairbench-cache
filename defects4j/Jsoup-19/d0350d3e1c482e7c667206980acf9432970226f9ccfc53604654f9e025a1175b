{
    "generation": "    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n        // rels without a baseuri get removed\n        String value = el.absUrl(attr.getKey());\n        if (!preserveRelativeLinks)\n            attr.setValue(value);\n        \n        // Handle the case where the attribute value is already in the form of a protocol\n        String originalValue = attr.getValue();\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (originalValue.toLowerCase().startsWith(prot)) {\n                return true;\n            }\n        }\n        \n        // If no custom protocol matches, check against the resolved absolute URL\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (value.toLowerCase().startsWith(prot)) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}