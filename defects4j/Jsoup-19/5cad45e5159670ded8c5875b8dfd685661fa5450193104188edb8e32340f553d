{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String origValue = attr.getValue();\n    String value = el.absUrl(attr.getKey());\n    boolean isAbs = !value.isEmpty();\n    String testValue = isAbs ? value : origValue; // if we don't have absUrl, use original value (could be custom scheme)\n    if (!preserveRelativeLinks && isAbs)\n        attr.setValue(value);\n\n    String lowerCaseValue = testValue.toLowerCase().trim();\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString().toLowerCase() + \":\";\n        if (lowerCaseValue.startsWith(prot)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}