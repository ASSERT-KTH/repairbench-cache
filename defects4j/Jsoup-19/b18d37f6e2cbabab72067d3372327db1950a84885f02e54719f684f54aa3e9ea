{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String value = attr.getValue(); // get the raw (possibly relative) attribute value\n    String absValue = el.absUrl(attr.getKey());\n    if (!preserveRelativeLinks && absValue.length() > 0)\n        attr.setValue(absValue);\n\n    String checkValue = value.trim().toLowerCase();\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString().toLowerCase() + \":\";\n        if (checkValue.startsWith(prot)) {\n            return true;\n        }\n    }\n    // Also check for abs url if we changed it above\n    if (!preserveRelativeLinks && absValue.length() > 0) {\n        checkValue = absValue.trim().toLowerCase();\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString().toLowerCase() + \":\";\n            if (checkValue.startsWith(prot)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}