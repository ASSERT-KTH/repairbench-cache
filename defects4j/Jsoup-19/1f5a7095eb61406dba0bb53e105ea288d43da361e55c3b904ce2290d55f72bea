{
    "generation": "    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n        // rels without a baseuri get removed\n        String value = el.absUrl(attr.getKey());\n        if (!preserveRelativeLinks)\n            attr.setValue(value);\n\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (value.toLowerCase().startsWith(prot)) {\n                return true;\n            }\n        }\n        // Check if the value is empty or null after processing\n        if (value == null || value.trim().isEmpty()) {\n            return false;\n        }\n        // Check for protocol-less URLs (starting with //)\n        if (value.startsWith(\"//\")) {\n            return true; // or false, depending on your policy for protocol-less URLs\n        }\n        // Check for relative URLs (starting without protocol)\n        if (!value.contains(\":\")) {\n            return true; // or false, depending on your policy for relative URLs\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}