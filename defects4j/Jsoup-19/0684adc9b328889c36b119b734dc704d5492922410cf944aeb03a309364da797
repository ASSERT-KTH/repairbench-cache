{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String value = attr.getValue();\n    if (!preserveRelativeLinks) {\n        String absUrl = el.absUrl(attr.getKey());\n        if (!absUrl.isEmpty())\n            attr.setValue(absUrl);\n        value = absUrl; // if it couldn't resolve, use the value for checking the protocol\n    }\n    \n    if (value.isEmpty())\n        return false;\n    \n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString() + \":\";\n        if (value.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}