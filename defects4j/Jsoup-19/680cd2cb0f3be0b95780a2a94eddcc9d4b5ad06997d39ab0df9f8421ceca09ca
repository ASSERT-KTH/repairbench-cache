{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // Try to resolve to an absolute URL if possible\n    String key = attr.getKey();\n    String origVal = attr.getValue();\n    String absVal = el.absUrl(key);\n\n    // Decide which value to check and whether to update the attribute\n    String value;\n    if (absVal != null && absVal.length() > 0) {\n        value = absVal;\n        if (!preserveRelativeLinks) {\n            attr.setValue(value);\n        }\n    } else {\n        // No absolute resolution (or unknown protocol), fall back to the raw value\n        value = origVal;\n    }\n\n    // Check against the allowed protocols\n    String lower = value.toLowerCase();\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString() + \":\";\n        if (lower.startsWith(prot)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}