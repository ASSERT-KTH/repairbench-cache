{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String absValue = el.absUrl(attr.getKey());\n    String realValue = attr.getValue();\n\n    String testValue;\n    // Use absValue if it's different and non-empty; otherwise, use realValue (for custom protocols, absUrl returns \"\")\n    if (!absValue.isEmpty() && !absValue.equals(realValue)) {\n        testValue = absValue;\n        if (!preserveRelativeLinks)\n            attr.setValue(absValue);\n    } else {\n        testValue = realValue;\n    }\n\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString() + \":\";\n        if (testValue.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}