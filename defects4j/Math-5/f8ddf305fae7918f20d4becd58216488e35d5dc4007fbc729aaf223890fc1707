{
    "generation": "/** {@inheritDoc} */\npublic Complex reciprocal() {\n    if (isNaN) {\n        return NaN;\n    }\n\n    if (real == 0.0 && imaginary == 0.0) {\n        return INF; // Return infinity for zero complex number\n    }\n\n    if (isInfinite) {\n        return ZERO;\n    }\n\n    if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n        double q = real / imaginary;\n        double scale = 1. / (real * q + imaginary);\n        return createComplex(scale * q, -scale); // corrected to scale * q\n    } else {\n        double q = imaginary / real; // corrected to imaginary / real\n        double scale = 1. / (imaginary * q + real);\n        return createComplex(scale, -scale * q);\n    }\n}",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}