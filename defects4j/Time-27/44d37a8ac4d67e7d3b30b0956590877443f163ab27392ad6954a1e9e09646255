{
    "generation": "//-----------------------------------------------------------------------\nprivate static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n    if (notPrinter && notParser) {\n        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n    }\n    int size = elementPairs.size();\n    if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n        Separator sep = (Separator) elementPairs.get(0);\n        PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n        sep = sep.finish(f.getPrinter(), f.getParser());\n        // Compose the new PeriodPrinter/PeriodParser with the separator together with the first element\n        PeriodPrinter newPrinter;\n        PeriodParser newParser;\n        if (notPrinter) {\n            newPrinter = null;\n        } else {\n            Object first = elementPairs.get(1);\n            PeriodPrinter firstPrinter = (first instanceof PeriodFormatter)\n                ? ((PeriodFormatter) first).getPrinter()\n                : (PeriodPrinter) first;\n            newPrinter = new Composite(new PeriodPrinter[] { firstPrinter, sep });\n        }\n        if (notParser) {\n            newParser = null;\n        } else {\n            Object first = elementPairs.get(1);\n            PeriodParser firstParser = (first instanceof PeriodFormatter)\n                ? ((PeriodFormatter) first).getParser()\n                : (PeriodParser) first;\n            newParser = new Composite(new PeriodParser[] { firstParser, sep });\n        }\n        return new PeriodFormatter(newPrinter, newParser);\n    }\n    Object[] comp = createComposite(elementPairs);\n    if (notPrinter) {\n        return new PeriodFormatter(null, (PeriodParser) comp[1]);\n    } else if (notParser) {\n        return new PeriodFormatter((PeriodPrinter) comp[0], null);\n    } else {\n        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}