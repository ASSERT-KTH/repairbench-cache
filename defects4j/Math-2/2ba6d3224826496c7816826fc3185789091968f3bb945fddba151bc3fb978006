{
    "generation": "    /**\n     * {@inheritDoc}\n     *\n     * For population size {@code N}, number of successes {@code m}, and sample\n     * size {@code n}, the mean is {@code n * m / N}.\n     */\n    public double getNumericalMean() {\n        // The current implementation could suffer from integer overflow if getSampleSize() * getNumberOfSuccesses()\n        // exceeds the maximum value of an int before being cast to double.\n        // This could lead to incorrect (potentially negative) mean values, which in turn can\n        // cause issues in other methods like sample() that rely on this mean or other derived statistics.\n        // To prevent this, cast one of the operands to double before performing the multiplication.\n        // This ensures the multiplication is performed using double-precision floating-point arithmetic,\n        // avoiding intermediate integer overflow.\n        return ((double) getSampleSize() * getNumberOfSuccesses()) / getPopulationSize();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}