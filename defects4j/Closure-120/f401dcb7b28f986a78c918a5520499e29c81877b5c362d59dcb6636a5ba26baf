{
    "generation": "    /**\n     * @return Whether the variable is only assigned a value once for its\n     *     lifetime.\n     */\n    boolean isAssignedOnceInLifetime() {\n      Reference ref = getOneAndOnlyAssignment();\n      if (ref == null) {\n        return false;\n      }\n\n      // Make sure this assignment is not in a loop.\n      for (BasicBlock block = ref.getBasicBlock();\n           block != null; block = block.getParent()) {\n        if (block.isFunction) {\n          break;\n        } else if (block.isLoop) {\n          return false;\n        }\n      }\n\n      // Also check if the variable is referenced in a function that might be called\n      // after the assignment, which could potentially modify its value.\n      for (Reference refToCheck : getReferences()) {\n        for (BasicBlock block = refToCheck.getBasicBlock();\n             block != null; block = block.getParent()) {\n          if (block.isFunction && !block.getParent().equals(ref.getBasicBlock().getParent())) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}