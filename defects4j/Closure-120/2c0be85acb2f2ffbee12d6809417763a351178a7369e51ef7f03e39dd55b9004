{
    "generation": "/**\n * @return Whether the variable is only assigned a value once for its\n *     lifetime, considering reassignments outside of loops.\n */\nboolean isAssignedOnceInLifetime() {\n  Reference ref = getOneAndOnlyAssignment();\n  if (ref == null) {\n    return false;\n  }\n\n  // Check for reassignments outside of loops\n  for (Reference otherRef : getVariable().getReferences()) {\n    if (otherRef != ref && otherRef.isAssignment() && !isInsideLoop(otherRef)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nprivate boolean isInsideLoop(Reference ref) {\n  for (BasicBlock block = ref.getBasicBlock();\n       block != null; block = block.getParent()) {\n    if (block.isLoop) {\n      return true;\n    }\n    if (block.isFunction) {\n      break;\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}