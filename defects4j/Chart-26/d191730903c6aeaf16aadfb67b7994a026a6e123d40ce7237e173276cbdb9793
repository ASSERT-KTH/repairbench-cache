{
    "generation": "protected AxisState drawLabel(String label, Graphics2D g2, Rectangle2D plotArea,\n        Rectangle2D dataArea, RectangleEdge edge, AxisState state,\n        PlotRenderingInfo plotState) {\n\n    if (state == null) {\n        throw new IllegalArgumentException(\"Null 'state' argument.\");\n    }\n    if (label == null || label.equals(\"\")) {\n        return state;\n    }\n\n    Font font = getLabelFont();\n    RectangleInsets insets = getLabelInsets();\n    g2.setFont(font);\n    g2.setPaint(getLabelPaint());\n    FontMetrics fm = g2.getFontMetrics();\n    // Get the unrotated text bounds.\n    Rectangle2D textBounds = TextUtilities.getTextBounds(label, g2, fm);\n    double w0 = textBounds.getWidth();\n    double h0 = textBounds.getHeight();\n\n    Shape hotspot = null;\n    double rotatedW, rotatedH;\n    double angle = 0.0;\n    double labelX = 0.0;\n    double labelY = 0.0;\n\n    // For a text drawn with anchor CENTER, if no rotation is applied, its\n    // drawn bounds would be a rectangle of width w0 and height h0 centered at\n    // the given (labelX, labelY). When rotated about that center by an angle,\n    // the new bounding box dimensions become:\n    //   rotatedW = |w0 * cos(angle)| + |h0 * sin(angle)|\n    //   rotatedH = |w0 * sin(angle)| + |h0 * cos(angle)|\n    if (edge == RectangleEdge.TOP) {\n        angle = getLabelAngle();\n        rotatedW = Math.abs(w0 * Math.cos(angle)) + Math.abs(h0 * Math.sin(angle));\n        rotatedH = Math.abs(w0 * Math.sin(angle)) + Math.abs(h0 * Math.cos(angle));\n        labelX = dataArea.getCenterX();\n        labelY = state.getCursor() - insets.getBottom() - rotatedH / 2.0;\n        TextUtilities.drawRotatedString(label, g2, (float) labelX, (float) labelY,\n                TextAnchor.CENTER, angle, TextAnchor.CENTER);\n        hotspot = new Rectangle2D.Double(labelX - rotatedW / 2.0,\n                labelY - rotatedH / 2.0, rotatedW, rotatedH);\n        state.cursorUp(insets.getTop() + rotatedH + insets.getBottom());\n    } else if (edge == RectangleEdge.BOTTOM) {\n        angle = getLabelAngle();\n        rotatedW = Math.abs(w0 * Math.cos(angle)) + Math.abs(h0 * Math.sin(angle));\n        rotatedH = Math.abs(w0 * Math.sin(angle)) + Math.abs(h0 * Math.cos(angle));\n        labelX = dataArea.getCenterX();\n        labelY = state.getCursor() + insets.getTop() + rotatedH / 2.0;\n        TextUtilities.drawRotatedString(label, g2, (float) labelX, (float) labelY,\n                TextAnchor.CENTER, angle, TextAnchor.CENTER);\n        hotspot = new Rectangle2D.Double(labelX - rotatedW / 2.0,\n                labelY - rotatedH / 2.0, rotatedW, rotatedH);\n        state.cursorDown(insets.getTop() + rotatedH + insets.getBottom());\n    } else if (edge == RectangleEdge.LEFT) {\n        angle = getLabelAngle() - Math.PI / 2.0;\n        rotatedW = Math.abs(w0 * Math.cos(angle)) + Math.abs(h0 * Math.sin(angle));\n        rotatedH = Math.abs(w0 * Math.sin(angle)) + Math.abs(h0 * Math.cos(angle));\n        labelX = state.getCursor() - insets.getRight() - rotatedW / 2.0;\n        labelY = dataArea.getCenterY();\n        TextUtilities.drawRotatedString(label, g2, (float) labelX, (float) labelY,\n                TextAnchor.CENTER, angle, TextAnchor.CENTER);\n        hotspot = new Rectangle2D.Double(labelX - rotatedW / 2.0,\n                labelY - rotatedH / 2.0, rotatedW, rotatedH);\n        state.cursorLeft(insets.getLeft() + rotatedW + insets.getRight());\n    } else if (edge == RectangleEdge.RIGHT) {\n        angle = getLabelAngle() + Math.PI / 2.0;\n        rotatedW = Math.abs(w0 * Math.cos(angle)) + Math.abs(h0 * Math.sin(angle));\n        rotatedH = Math.abs(w0 * Math.sin(angle)) + Math.abs(h0 * Math.cos(angle));\n        labelX = state.getCursor() + insets.getLeft() + rotatedW / 2.0;\n        labelY = dataArea.getCenterY();\n        TextUtilities.drawRotatedString(label, g2, (float) labelX, (float) labelY,\n                TextAnchor.CENTER, angle, TextAnchor.CENTER);\n        hotspot = new Rectangle2D.Double(labelX - rotatedW / 2.0,\n                labelY - rotatedH / 2.0, rotatedW, rotatedH);\n        state.cursorRight(insets.getLeft() + rotatedW + insets.getRight());\n    }\n\n    // Only add an axis label entity if there is a non-null owner.\n    if (plotState != null && hotspot != null) {\n        ChartRenderingInfo owner = plotState.getOwner();\n        if (owner != null) {\n            EntityCollection entities = owner.getEntityCollection();\n            if (entities != null) {\n                entities.add(new AxisLabelEntity(this, hotspot, this.labelToolTip, this.labelURL));\n            }\n        }\n    }\n    return state;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}