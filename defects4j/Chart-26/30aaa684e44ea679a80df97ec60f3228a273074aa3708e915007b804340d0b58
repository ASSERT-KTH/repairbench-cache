{
    "generation": "/**\n * Draws the axis label.\n *\n * @param label       the label text.\n * @param g2          the graphics device.\n * @param plotArea    the plot area.\n * @param dataArea    the area inside the axes.\n * @param edge        the location of the axis.\n * @param state       the axis state (<code>null</code> not permitted).\n * @param plotState   the plot state (<code>null</code> permitted).\n *\n * @return Information about the axis.\n */\nprotected AxisState drawLabel(String label, Graphics2D g2,\n                              Rectangle2D plotArea, Rectangle2D dataArea,\n                              RectangleEdge edge, AxisState state,\n                              PlotRenderingInfo plotState) {\n\n    if (state == null) {\n        throw new IllegalArgumentException(\"Null 'state' argument.\");\n    }\n    if (label == null || label.isEmpty()) {\n        return state;\n    }\n\n    Font font = getLabelFont();\n    RectangleInsets insets = getLabelInsets();\n    g2.setFont(font);\n    g2.setPaint(getLabelPaint());\n    FontMetrics fm = g2.getFontMetrics();\n    Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);\n    Shape hotspot = null;\n\n    if (edge == RectangleEdge.TOP) {\n        AffineTransform t = AffineTransform.getRotateInstance(\n                getLabelAngle(),\n                labelBounds.getCenterX(),\n                labelBounds.getCenterY()\n        );\n        Shape rotated = t.createTransformedShape(labelBounds);\n        labelBounds = rotated.getBounds2D();\n        float w = (float) labelBounds.getWidth();\n        float h = (float) labelBounds.getHeight();\n        float x = (float) dataArea.getCenterX();\n        float y = (float) (state.getCursor() - insets.getBottom() - h / 2f);\n        TextUtilities.drawRotatedString(\n                label, g2, x, y,\n                TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER\n        );\n        hotspot = new Rectangle2D.Float(x - w / 2f, y - h / 2f, w, h);\n        state.cursorUp(insets.getTop() + (float) labelBounds.getHeight() + insets.getBottom());\n    }\n    else if (edge == RectangleEdge.BOTTOM) {\n        AffineTransform t = AffineTransform.getRotateInstance(\n                getLabelAngle(),\n                labelBounds.getCenterX(),\n                labelBounds.getCenterY()\n        );\n        Shape rotated = t.createTransformedShape(labelBounds);\n        labelBounds = rotated.getBounds2D();\n        float w = (float) labelBounds.getWidth();\n        float h = (float) labelBounds.getHeight();\n        float x = (float) dataArea.getCenterX();\n        float y = (float) (state.getCursor() + insets.getTop() + h / 2f);\n        TextUtilities.drawRotatedString(\n                label, g2, x, y,\n                TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER\n        );\n        hotspot = new Rectangle2D.Float(x - w / 2f, y - h / 2f, w, h);\n        state.cursorDown(insets.getTop() + (float) labelBounds.getHeight() + insets.getBottom());\n    }\n    else if (edge == RectangleEdge.LEFT) {\n        AffineTransform t = AffineTransform.getRotateInstance(\n                getLabelAngle() - Math.PI / 2.0,\n                labelBounds.getCenterX(),\n                labelBounds.getCenterY()\n        );\n        Shape rotated = t.createTransformedShape(labelBounds);\n        labelBounds = rotated.getBounds2D();\n        float w = (float) labelBounds.getWidth();\n        float h = (float) labelBounds.getHeight();\n        float x = (float) (state.getCursor() - insets.getRight() - w / 2f);\n        float y = (float) dataArea.getCenterY();\n        TextUtilities.drawRotatedString(\n                label, g2, x, y,\n                TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, TextAnchor.CENTER\n        );\n        hotspot = new Rectangle2D.Float(x - w / 2f, y - h / 2f, w, h);\n        state.cursorLeft(insets.getLeft() + (float) labelBounds.getWidth() + insets.getRight());\n    }\n    else if (edge == RectangleEdge.RIGHT) {\n        AffineTransform t = AffineTransform.getRotateInstance(\n                getLabelAngle() + Math.PI / 2.0,\n                labelBounds.getCenterX(),\n                labelBounds.getCenterY()\n        );\n        Shape rotated = t.createTransformedShape(labelBounds);\n        labelBounds = rotated.getBounds2D();\n        float w = (float) labelBounds.getWidth();\n        float h = (float) labelBounds.getHeight();\n        float x = (float) (state.getCursor() + insets.getLeft() + w / 2f);\n        float y = (float) (dataArea.getY() + dataArea.getHeight() / 2.0);\n        TextUtilities.drawRotatedString(\n                label, g2, x, y,\n                TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0, TextAnchor.CENTER\n        );\n        hotspot = new Rectangle2D.Float(x - w / 2f, y - h / 2f, w, h);\n        state.cursorRight(insets.getLeft() + (float) labelBounds.getWidth() + insets.getRight());\n    }\n\n    // only add an entity if we have a non-null owner and entity collection\n    if (plotState != null) {\n        ChartRenderingInfo owner = plotState.getOwner();\n        if (owner != null) {\n            EntityCollection entities = owner.getEntityCollection();\n            if (entities != null && hotspot != null) {\n                entities.add(new AxisLabelEntity(this, hotspot, this.labelToolTip, this.labelURL));\n            }\n        }\n    }\n\n    return state;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}