{
    "generation": "/**\n * Flip qd array if warranted.\n * @param n number of rows in the block\n * @param step within the array (1 for flipping all elements, 2 for flipping\n * only every other element)\n * @return true if qd array was flipped\n */\nprivate boolean flipIfWarranted(final int n, final int step) {\n    // compute the first and last index in the active ping\u2010pong slice\n    final int first = pingPong;\n    final int last  = 4 * (n - 1) + pingPong;\n    // test whether we should flip\n    if (1.5 * work[first] < work[last]) {\n        int i = first;\n        int j = last;\n        // swap blocks of size 4, stepping by \"step\" inside each block\n        while (i < j) {\n            for (int k = 0; k < 4; k += step) {\n                double tmp       = work[i + k];\n                work[i + k]      = work[j - k];\n                work[j - k]      = tmp;\n            }\n            i += 4;\n            j -= 4;\n        }\n        return true;\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}