{
    "generation": "    /**\n     * Flip qd array if warranted.\n     * @param n number of rows in the block\n     * @param step within the array (1 for flipping all elements, 2 for flipping\n     * only every other element)\n     * @return true if qd array was flipped\n     */\n    private boolean flipIfWarranted(final int n, final int step) {\n        final int end = 4 * n - 1;\n        final double[] workArray = work;\n        final int idx1 = 4 * (n - 1) + pingPong;\n        final double threshold = 1.5 * workArray[pingPong];\n        double last = workArray[idx1];\n        if (last < threshold) {\n            // flip array\n            int j = end;\n            for (int i = 0; i < j; i += 4) {\n                for (int k = 0; k < 4; k += step) {\n                    final double tmp = workArray[i + k];\n                    workArray[i + k] = workArray[j - k];\n                    workArray[j - k] = tmp;\n                }\n                j -= 4;\n            }\n            return true;\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}