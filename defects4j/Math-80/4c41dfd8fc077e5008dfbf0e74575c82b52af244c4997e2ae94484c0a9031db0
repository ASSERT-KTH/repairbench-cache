{
    "generation": "private boolean flipIfWarranted(final int n, final int step) {\n    if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {\n        // We must reverse the order of the 4-element blocks without\n        // reversing the order within each block.\n        // That is, swap block m and block n-1-m for m=0,...,floor((n-1)/2).\n        // A simple way to do that is to have a pointer to the start of the last block.\n        int j = 4 * (n - 1);  // starting index of the last block\n        for (int i = 0; i < j; i += 4) {\n            for (int k = 0; k < 4; k += step) {\n                final double tmp = work[i + k];\n                work[i + k] = work[j + k];\n                work[j + k] = tmp;\n            }\n            j -= 4;\n        }\n        return true;\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}