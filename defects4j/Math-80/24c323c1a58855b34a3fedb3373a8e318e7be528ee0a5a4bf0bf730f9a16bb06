{
    "generation": "private boolean flipIfWarranted(final int n, final int step) {\n    if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {\n        // Reverse the entire array (stored as n blocks of 4 elements)\n        // by swapping each block with its mirror. When n is odd the middle block is\n        // reversed in place.\n        final int numPairs = n / 2;\n        for (int i = 0; i < numPairs; i++) {\n            int j = n - 1 - i;\n            int iOffset = 4 * i;\n            int jOffset = 4 * j;\n            // Swap the i-th block with the j-th block reversing the order in each block.\n            for (int k = 0; k < 4; k += step) {\n                double tmp = work[iOffset + k];\n                work[iOffset + k] = work[jOffset + (3 - k)];\n                work[jOffset + (3 - k)] = tmp;\n            }\n        }\n        // If n is odd, reverse the middle block in place.\n        if ((n & 1) == 1) {\n            int mid = n / 2;\n            int offset = 4 * mid;\n            for (int k = 0; k < 2; k += step) {\n                double tmp = work[offset + k];\n                work[offset + k] = work[offset + (3 - k)];\n                work[offset + (3 - k)] = tmp;\n            }\n        }\n        return true;\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}