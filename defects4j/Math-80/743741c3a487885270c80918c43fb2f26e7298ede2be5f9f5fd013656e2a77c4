{
    "generation": "    /**\n     * Flip qd array if warranted.\n     * @param n number of rows in the block\n     * @param step within the array (1 for flipping all elements, 2 for flipping\n     * only every other element)\n     * @return true if qd array was flipped\n     */\n    private boolean flipIfWarranted(final int n, final int step) {\n        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {\n            // flip array\n            for (int iBlock = 0; iBlock < n / 2; iBlock++) {\n                int startCurrent = 4 * iBlock;\n                int startMirror = 4 * (n - 1 - iBlock);\n                for (int k = 0; k < 4; k += step) {\n                    final double tmp = work[startCurrent + k];\n                    work[startCurrent + k] = work[startMirror + k];\n                    work[startMirror + k] = tmp;\n                }\n            }\n            return true;\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}