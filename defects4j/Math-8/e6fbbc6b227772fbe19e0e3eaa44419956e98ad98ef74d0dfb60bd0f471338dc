{
    "generation": "    /**\n     * Generate a random sample from the distribution.\n     *\n     * @param sampleSize the number of random values to generate.\n     * @return an array representing the random sample.\n     * @throws NotStrictlyPositiveException if {@code sampleSize} is not\n     * positive.\n     */\n    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {\n        if (sampleSize <= 0) {\n            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,\n                    sampleSize);\n        }\n\n        // Use an ArrayList to store the sample values\n        List<T> sampleList = new ArrayList<>(sampleSize);\n\n        for (int i = 0; i < sampleSize; i++) {\n            sampleList.add(sample());\n        }\n\n        // Convert the list to an array\n        return sampleList.toArray((T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}