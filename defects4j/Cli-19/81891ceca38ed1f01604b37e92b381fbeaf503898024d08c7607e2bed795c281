{
    "generation": "    /**\n     * <p>If an {@link Option} exists for <code>token</code> then\n     * set the current option and add the token to the processed \n     * list.</p>\n     *\n     * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>\n     * is set then ignore the current token and add the remaining tokens\n     * to the processed tokens list directly.</p>\n     *\n     * @param token The current option token\n     * @param stopAtNonOption Specifies whether flattening should halt\n     * at the first non option.\n     */\n    private void processOptionToken(String token, boolean stopAtNonOption)\n    {\n        // If an Option exists for 'token', process it as a recognized option\n        if (options.hasOption(token))\n        {\n            currentOption = options.getOption(token);\n            tokens.add(token);\n        }\n        // If an Option does NOT exist for 'token'\n        else\n        {\n            // If 'stopAtNonOption' is true, treat this unrecognized option-like token\n            // as a non-option, effectively stopping further option processing.\n            if (stopAtNonOption)\n            {\n                eatTheRest = true;\n                tokens.add(token);\n            }\n            // If 'stopAtNonOption' is false, and the token is an unrecognized option,\n            // then an UnrecognizedOptionException should be thrown.\n            // In the original code, this 'else' branch (where Option does not exist and stopAtNonOption is false)\n            // implicitly did nothing, which allowed unrecognized options to be silently ignored or\n            // lead to incorrect parsing behavior, such as infinite recursion in PosixParser.processShortOption\n            // when it recursively calls flatten with stopAtNonOption=true for an unrecognized token.\n            else\n            {\n                throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}