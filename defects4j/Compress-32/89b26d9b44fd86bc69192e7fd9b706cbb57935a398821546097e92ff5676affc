{
    "generation": "private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {\n    /*\n     * The following headers are defined for Pax.\n     * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields\n     * mtime\n     * comment\n     * gid, gname\n     * linkpath\n     * size\n     * uid,uname\n     * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those\n     */\n    for (Entry<String, String> ent : headers.entrySet()){\n        String key = ent.getKey();\n        String val = ent.getValue();\n        if (\"path\".equals(key)){\n            currEntry.setName(val);\n        } else if (\"linkpath\".equals(key)){\n            currEntry.setLinkName(val);\n        } else if (\"gid\".equals(key)){\n            currEntry.setGroupId(parsePaxNumber(val, currEntry.getGroupId()));\n        } else if (\"gname\".equals(key)){\n            currEntry.setGroupName(val);\n        } else if (\"uid\".equals(key)){\n            currEntry.setUserId(parsePaxNumber(val, currEntry.getUserId()));\n        } else if (\"uname\".equals(key)){\n            currEntry.setUserName(val);\n        } else if (\"size\".equals(key)){\n            currEntry.setSize(Long.parseLong(val));\n        } else if (\"mtime\".equals(key)){\n            currEntry.setModTime((long) (Double.parseDouble(val) * 1000));\n        } else if (\"SCHILY.devminor\".equals(key)){\n            currEntry.setDevMinor(parsePaxNumber(val, currEntry.getDevMinor()));\n        } else if (\"SCHILY.devmajor\".equals(key)){\n            currEntry.setDevMajor(parsePaxNumber(val, currEntry.getDevMajor()));\n        }\n    }\n}\n\nprivate int parsePaxNumber(String val, int oldVal) {\n    if (val.startsWith(\"L\")) {\n        return (int) Long.parseLong(val.substring(1));\n    }\n    return Integer.parseInt(val);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}