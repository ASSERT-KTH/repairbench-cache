{
    "generation": "    protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)\n    {\n        int pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(rtrim(text));\n\n            return sb;\n        }\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n        // all following lines must be padded with nextLineTabStop space \n        // characters\n        final String padding = createPadding(nextLineTabStop);\n\n        while (true)\n        {\n            text = text.substring(pos).trim();\n            if (text.length() == 0) {\n                break;\n            }\n            pos = findWrapPos(padding + text, width, 0);\n\n            if (pos == -1)\n            {\n                sb.append(padding).append(text);\n\n                return sb;\n            }\n            if (pos <= nextLineTabStop) {\n                pos = findWrapPos(text, width, 0);\n                if (pos == -1) {\n                    sb.append(padding).append(text);\n                    return sb;\n                }\n                if (pos == 0) {\n                    throw new RuntimeException(\"Text too long for line - throwing exception to avoid infinite loop [CLI-162]: \" + text);\n                }\n            }\n\n            sb.append(padding).append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n            if (pos >= text.length()) {\n                break;\n            }\n        }\n        return sb;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}