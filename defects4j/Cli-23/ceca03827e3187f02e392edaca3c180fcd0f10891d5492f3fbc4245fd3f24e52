{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    final String padding = createPadding(nextLineTabStop);\n\n    boolean firstIteration = true;\n    while (true)\n    {\n        int lastPos = pos;\n        text = padding + text.substring(pos).trim();\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n            return sb;\n        } else\n        if (pos == lastPos)\n        {\n            if (firstIteration) {\n                // If no progress on the first iteration after padding, break\n                sb.append(text);\n                return sb;\n            } else {\n                // If still no progress, throw exception to avoid infinite loop\n                throw new RuntimeException(\"Text too long for line - throwing exception to avoid infinite loop [CLI-162]: \" + text);\n            }\n        }\n\n        if (!firstIteration) {\n            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n        } else {\n            firstIteration = false;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}