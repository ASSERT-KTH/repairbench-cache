{
    "generation": "/**\n * Render the specified text and return the rendered Options\n * in a StringBuffer.\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // all following lines must be padded with nextLineTabStop space \n    // characters\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        int lastPos = pos;\n        // Extract remainder (avoid adding infinite padding)\n        text = text.substring(lastPos).trim();\n        // If no text left, break out\n        if (text.length() == 0) {\n            break;\n        }\n        // Add padding unconditionally\n        text = padding + text;\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n            return sb;\n        }\n        // Protection: if no real progress in breaking lines, break to avoid infinite loop.\n        if (pos <= padding.length())\n        {\n            // forcibly break the line at the allowed width after padding\n            int breakPos = Math.min(text.length(), width);\n            sb.append(rtrim(text.substring(0, breakPos))).append(defaultNewLine);\n            // If all consumed, stop; else continue with the remainder\n            if (breakPos >= text.length()) {\n                break;\n            }\n            text = text.substring(breakPos).trim();\n            if (text.length() == 0) {\n                break;\n            }\n            text = padding + text;\n            pos = findWrapPos(text, width, 0);\n            if (pos == -1) {\n                sb.append(text);\n                return sb;\n            }\n            // else continue\n        } else {\n            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n        }\n    }\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}