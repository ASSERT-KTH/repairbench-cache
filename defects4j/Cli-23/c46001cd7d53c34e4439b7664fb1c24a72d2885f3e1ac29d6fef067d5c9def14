{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // all following lines must be padded with nextLineTabStop space \n    // characters\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        int lastPos = pos;\n        // padding + left-trim only (preserve right spaces for further wrapping)\n        String sub = text.substring(pos);\n        String trimmedLeft = sub.replaceFirst(\"^\\\\s+\", \"\");\n        text = padding + trimmedLeft;\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(rtrim(text));\n\n            return sb;\n        } \n        // If our wrap position has not advanced, or hasn't advanced at all,\n        // and text is unchanged, write the rest and break (do not loop infinitely)\n        // (handles CLI-162)\n        if (pos <= padding.length())\n        {\n            sb.append(rtrim(text));\n            return sb;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}