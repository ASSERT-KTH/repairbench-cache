{
    "generation": "/**\n * Render the specified text and return the rendered Options\n * in a StringBuffer.\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // all following lines must be padded with nextLineTabStop space \n    // characters\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        int lastPos = pos;\n        // Strip leading whitespace after wrap, then pad\n        text = text.substring(lastPos).trim();\n        if (text.length() == 0)\n        {\n            break;\n        }\n        text = padding + text;\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(text);\n            return sb;\n        } \n        // Fix for CLI-162: check for no forward progress after padding, skip to next possible wrap\n        if (pos <= padding.length())\n        {\n            // If the first non-padding character is too long for the line, forcibly break\n            // just after the padding\n            pos = Math.max(pos, width);\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n        // Avoid infinite loop: if we've made no progress, break the line at max width forcibly\n        if (lastPos == pos)\n        {\n            // Instead of throw, forcibly move forward after padding\n            sb.append(rtrim(text.substring(0, width))).append(defaultNewLine);\n            text = text.substring(width);\n            if (text.length() == 0) {\n                break;\n            }\n            text = padding + text.trim();\n            pos = findWrapPos(text, width, 0);\n            if (pos == -1) {\n                sb.append(text);\n                return sb;\n            }\n        }\n    }\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}