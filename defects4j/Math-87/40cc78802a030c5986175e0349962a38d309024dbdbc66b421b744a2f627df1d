{
    "generation": "    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRow(final int col) {\n        Integer row = null;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            double entry = getEntry(i, col);\n            if (MathUtils.equals(entry, 1.0, epsilon)) {\n                if (row == null) {\n                    // Check all other rows in this column must be 0\n                    boolean isBasic = true;\n                    for (int j = getNumObjectiveFunctions(); j < getHeight(); j++) {\n                        if (j != i && !MathUtils.equals(getEntry(j, col), 0.0, epsilon)) {\n                            isBasic = false;\n                            break;\n                        }\n                    }\n                    if (isBasic) {\n                        row = i;\n                    } else {\n                        return null;\n                    }\n                } else {\n                    // More than one row with 1.0 in this column\n                    return null;\n                }\n            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {\n                // Entry is not 1 or 0, cannot be basic column\n                return null;\n            }\n        }\n        return row;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}