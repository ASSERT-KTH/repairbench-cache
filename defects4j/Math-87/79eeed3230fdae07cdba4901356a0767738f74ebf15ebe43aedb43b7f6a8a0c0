{
    "generation": "    /**\n     * Checks whether the given column is basic.\n     * A column is basic if it contains exactly one non-zero entry in the constraint rows (below objective functions),\n     * and that non-zero entry is 1.0 (within epsilon), and all other entries in the column (in constraint rows) are 0.0.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRow(final int col) {\n        Integer row = null;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            final double entry = getEntry(i, col);\n            if (MathUtils.equals(entry, 1.0, epsilon)) {\n                // Found an entry that is 1.0. This is a candidate for the basic row.\n                if (row == null) {\n                    // This is the first 1.0 found in this column. Store its row.\n                    row = i;\n                } else {\n                    // Found a second 1.0 (or another non-zero entry that was 1.0) in this column.\n                    // A basic column must have exactly one 1.0 and all other entries 0.0.\n                    // Therefore, this column is not basic.\n                    return null;\n                }\n            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {\n                // Found a non-zero entry that is not 1.0.\n                // A basic column must have 0.0 in all non-basic rows, and 1.0 in its basic row.\n                // Since this entry is non-zero but not 1.0, this column is not basic.\n                return null;\n            }\n            // If entry is 0.0, continue to the next row (this is expected for a basic column in other constraint rows).\n        }\n        // If the loop completes, 'row' will contain the index of the row where the single 1.0 was found,\n        // or it will be null if no 1.0 was found (or if the column was determined not to be basic earlier).\n        return row;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}