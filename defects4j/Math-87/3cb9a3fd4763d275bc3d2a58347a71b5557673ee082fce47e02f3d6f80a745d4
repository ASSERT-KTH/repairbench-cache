{
    "generation": "/**\n * Checks whether the given column is basic.\n * @param col index of the column to check\n * @return the row that the variable is basic in.  null if the column is not basic\n */\nprivate Integer getBasicRow(final int col) {\n    Integer row = null;\n    int nonZeroCount = 0;\n    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n        if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon)) {\n                if (row == null) {\n                    row = i;\n                } else {\n                    return null; // More than one 1.0 entry found => not basic\n                }\n            } else {\n                return null; // Not a unit column\n            }\n            nonZeroCount++;\n        }\n    }\n    if (row == null) {\n        return null;\n    }\n    // Check if all other entries in this column are zero\n    for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n        if (i != row && !MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            return null;\n        }\n    }\n    return row;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}