{
    "generation": "    public Period normalizedStandard(PeriodType type) {\n        type = DateTimeUtils.getPeriodType(type);\n        // Check if the type supports years and months if present in the period\n        if ((getYears() != 0 || getMonths() != 0) &&\n            (!type.isSupported(DurationFieldType.years()) || !type.isSupported(DurationFieldType.months()))) {\n            throw new UnsupportedOperationException(\"Field is not supported\");\n        }\n\n        // Calculate total millis for time fields\n        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n\n        // Create period from millis (handles days, weeks, etc.)\n        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());\n\n        // Handle years and months if they exist and are supported\n        int years = getYears();\n        int months = getMonths();\n        if (years != 0 || months != 0) {\n            if (!type.isSupported(DurationFieldType.years()) && years != 0) {\n                throw new UnsupportedOperationException(\"Field is not supported\");\n            }\n            if (!type.isSupported(DurationFieldType.months()) && months != 0) {\n                throw new UnsupportedOperationException(\"Field is not supported\");\n            }\n\n            years = FieldUtils.safeAdd(years, months / 12);\n            months = months % 12;\n            if (years != 0) {\n                if (!type.isSupported(DurationFieldType.years())) {\n                    throw new UnsupportedOperationException(\"Field is not supported\");\n                }\n                result = result.withYears(years);\n            }\n            if (months != 0) {\n                if (!type.isSupported(DurationFieldType.months())) {\n                    throw new UnsupportedOperationException(\"Field is not supported\");\n                }\n                result = result.withMonths(months);\n            }\n        }\n\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}