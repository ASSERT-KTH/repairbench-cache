{
    "generation": "    /**\n     * <p>Create a number from a String. If a . is present, it creates a \n     *    Double, otherwise a Long. </p>\n     *\n     * @param str the value\n     * @return the number represented by <code>str</code>, if <code>str</code>\n     * is not a number, null is returned.\n     */\n    public static Number createNumber(String str)\n    {\n        if (str == null) {\n            return null;\n        }\n        try\n        {\n            // check if a decimal point exists. This determines if it's a Double or Long.\n            // This behavior is specified in the Javadoc.\n            if (str.indexOf('.') != -1)\n            {\n                return Double.valueOf(str);\n            }\n            else\n            {\n                // no decimal point => create a Long\n                return Long.valueOf(str);\n            }\n        }\n        catch (NumberFormatException nfe)\n        {\n            // Print the error message like the original code, although returning null\n            // might be sufficient based on the Javadoc contract (\"null is returned\").\n            System.err.println(nfe.getMessage());\n            // Return null if the string is not a valid number according to the defined logic.\n            return null;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}