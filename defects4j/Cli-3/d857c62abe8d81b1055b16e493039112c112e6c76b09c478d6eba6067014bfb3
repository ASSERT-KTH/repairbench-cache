{
    "generation": "    /**\n     * <p>Create a number from a String. If a . is present, it creates a\n     *    Double, otherwise a Long. </p>\n     *\n     * @param str the value\n     * @return the number represented by <code>str</code>, if <code>str</code>\n     * is not a number, null is returned.\n     */\n    public static Number createNumber(String str)\n    {\n        if (str == null)\n        {\n            return null;\n        }\n        if (str.indexOf('.') >= 0 || str.indexOf('e') >= 0 || str.indexOf('E') >= 0)\n        {\n            try\n            {\n                return new Double(str);\n            }\n            catch (NumberFormatException nfe)\n            {\n                // ignore and try next format\n            }\n        }\n        try\n        {\n            Long l = Long.valueOf(str);\n            if (str.startsWith(\"0x\") || str.startsWith(\"-0x\"))\n            {\n                return l;\n            }\n            return l.longValue();\n        }\n        catch (NumberFormatException nfe)\n        {\n            try\n            {\n                return Double.valueOf(str);\n            }\n            catch (NumberFormatException nfe2)\n            {\n                return null;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}