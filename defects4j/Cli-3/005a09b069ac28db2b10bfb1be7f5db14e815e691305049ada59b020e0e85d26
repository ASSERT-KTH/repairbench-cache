{
    "generation": "    /**\n     * <p>Create a number from a String. If a . is present, it creates a\n     *    Double, otherwise a Long. </p>\n     *\n     * @param str the value\n     * @return the number represented by <code>str</code>, if <code>str</code>\n     * is not a number, null is returned.\n     */\n    public static Number createNumber(String str)\n    {\n        if (str == null) {\n            return null;\n        }\n\n        if (str.indexOf('.') >= 0) {\n            try {\n                return Double.valueOf(str);\n            } catch (NumberFormatException nfe) {\n                // Fall through to try other formats\n            }\n        }\n\n        try {\n            return Long.valueOf(str);\n        } catch (NumberFormatException nfe) {\n            // Fall through to try other formats\n        }\n\n        try {\n            return org.apache.commons.lang.math.NumberUtils.createNumber(str);\n        } catch (NumberFormatException nfe) {\n            System.err.println(nfe.getMessage());\n        }\n\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}