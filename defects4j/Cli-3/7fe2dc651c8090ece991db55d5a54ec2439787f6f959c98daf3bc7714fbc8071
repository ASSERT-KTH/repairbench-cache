{
    "generation": "    /**\n     * <p>Create a number from a String. If a . is present, it creates a \n     *    Double, otherwise a Long. </p>\n     *\n     * @param str the value\n     * @return the number represented by <code>str</code>, if <code>str</code>\n     * is not a number, null is returned.\n     */\n    public static Number createNumber(String str)\n    {\n        if (str == null)\n        {\n            return null;\n        }\n\n        try\n        {\n            // According to the Javadoc, if a '.' is present, it creates a Double, otherwise a Long.\n            if (str.indexOf('.') != -1)\n            {\n                return Double.valueOf(str);\n            }\n            else\n            {\n                return Long.valueOf(str);\n            }\n        }\n        catch (NumberFormatException nfe)\n        {\n            // Log the exception message, as per original code's behavior\n            System.err.println(nfe.getMessage());\n        }\n\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}