{
    "generation": "/**\n * <p>Create a number from a String. If a . is present, it creates a \n *    Double, otherwise a Long. </p>\n *\n * @param str the value\n * @return the number represented by <code>str</code>, if <code>str</code>\n * is not a number, null is returned.\n */\npublic static Number createNumber(String str)\n{\n    if (str == null) {\n        return null;\n    }\n    try {\n        // If it contains a decimal point, use Double\n        if (str.indexOf('.') != -1) {\n            return Double.valueOf(str);\n        } else {\n            // Otherwise, use Long\n            return Long.valueOf(str);\n        }\n    }\n    catch (NumberFormatException nfe) {\n        try {\n            // Try Double as a fallback for cases like scientific notation\n            return Double.valueOf(str);\n        } catch (NumberFormatException e) {\n            // Silent handling of error\n        }\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}