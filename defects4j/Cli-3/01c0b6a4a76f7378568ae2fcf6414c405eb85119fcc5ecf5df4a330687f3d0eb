{
    "generation": "    /**\n     * <p>Create a number from a String. If a . is present, it creates a \n     *    Double, otherwise a Long. </p>\n     *\n     * @param str the value\n     * @return the number represented by <code>str</code>, if <code>str</code>\n     * is not a number, null is returned.\n     */\n    public static Number createNumber(String str)\n    {\n        if (str == null)\n            return null;\n        \n        if (str.contains(\".\"))\n        {\n            try\n            {\n                return Double.parseDouble(str);\n            }\n            catch (NumberFormatException nfe)\n            {\n                // Trying as Double failed, maybe it's an integer with a dot, e.g., \"4.\"\n                if (str.indexOf('.') == str.length() - 1)\n                {\n                    try\n                    {\n                        return Long.parseLong(str.replace(\".\", \"\"));\n                    }\n                    catch (NumberFormatException ex)\n                    {\n                        return null;\n                    }\n                }\n                else\n                {\n                    return null;\n                }\n            }\n        }\n        else\n        {\n            try\n            {\n                return Long.parseLong(str);\n            }\n            catch (NumberFormatException nfe)\n            {\n                return null;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}