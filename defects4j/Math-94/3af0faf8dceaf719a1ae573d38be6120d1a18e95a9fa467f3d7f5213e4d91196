{
    "generation": "public static int gcd(int u, int v) {\n    // Special cases: if either argument is zero return the absolute value of the other\n    if (u == 0) {\n        return Math.abs(v);\n    }\n    if (v == 0) {\n        return Math.abs(u);\n    }\n\n    // Make u and v positive\n    u = Math.abs(u);\n    v = Math.abs(v);\n\n    // Find greatest power of 2 dividing both u and v\n    int k = 0;\n    while (((u | v) & 1) == 0) {\n        u >>= 1;\n        v >>= 1;\n        k++;\n    }\n\n    // Divide u by 2 until u becomes odd\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n\n    do {\n        // Divide v by 2 until v becomes odd\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n\n        // Now u and v are both odd. Swap if necessary so u <= v,\n        // then set v = v - u (which is even)\n        if (u > v) {\n            int temp = u;\n            u = v;\n            v = temp;\n        }\n        v = v - u;\n    } while (v != 0);\n\n    return u << k;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}