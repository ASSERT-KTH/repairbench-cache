{
    "generation": "/**\n * <p>\n * Gets the greatest common divisor of the absolute value of two numbers,\n * using the \"binary gcd\" method which avoids division and modulo\n * operations. See Knuth 4.5.2 algorithm B. This algorithm is due to Josef\n * Stein (1961).\n * </p>\n * \n * @param u a non-zero number\n * @param v a non-zero number\n * @return the greatest common divisor, never zero\n * @since 1.1\n */\npublic static int gcd(int u, int v) {\n    if (u == 0 || v == 0) {\n        return Math.abs(u) + Math.abs(v);\n    }\n    // keep u and v negative, as negative integers range down to\n    // -2^31, while positive numbers can only be as large as 2^31-1\n    // (i.e. we can't necessarily negate a negative number without\n    // overflow)\n    /* assert u!=0 && v!=0; */\n    u = Math.abs(u);\n    v = Math.abs(v);\n    // B1. [Find power of 2]\n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are both even...\n        u /= 2;\n        v /= 2;\n        k++; // cast out twos.\n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    // B2. Initialize: u and v have been divided by 2^k and at least\n    // one is odd.\n    int t = (u < v) ? v : u; // ensure u >= v\n    // B3. [Exchange] Swap u and v if necessary so u <= v.\n    if (u < v) {\n        int temp = u;\n        u = v;\n        v = temp;\n    }\n    // B4. [Reduction] If u and v are both odd, set u = (u-v)/2.\n    do {\n        while ((v & 1) == 0) { // while v is even...\n            v /= 2; // cast out twos\n        }\n        // B5 [reset max(u,v)]\n        if (u < v) {\n            int temp = u;\n            u = v;\n            v = temp;\n        }\n        // B6/B4. at this point both u and v should be odd.\n        u = (u - v) / 2;\n        // |u| larger: t positive (replace u)\n        // |v| larger: t negative (replace v)\n    } while (u != 0);\n    return v * (1 << k); // gcd is v*2^k\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}