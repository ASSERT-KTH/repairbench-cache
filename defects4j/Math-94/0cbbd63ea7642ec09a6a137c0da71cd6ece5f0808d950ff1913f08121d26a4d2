{
    "generation": "public static int gcd(int u, int v) {\n    if (u == 0) {\n        return Math.abs(v);\n    }\n    if (v == 0) {\n        return Math.abs(u);\n    }\n    u = Math.abs(u);\n    v = Math.abs(v);\n\n    int k = 0;\n    // Remove common factors of 2\n    while (((u | v) & 1) == 0) {\n        u >>= 1;\n        v >>= 1;\n        k++;\n    }\n    // Make u odd if not already\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n    do {\n        // Make v odd if not already\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n        // Now both u and v are odd. Swap if necessary so u <= v, then set v = v-u\n        if (u > v) {\n            int temp = u;\n            u = v;\n            v = temp;\n        }\n        v = v - u;\n    } while (v != 0);\n    return u << k;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}