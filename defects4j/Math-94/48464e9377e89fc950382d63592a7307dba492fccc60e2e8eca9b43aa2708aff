{
    "generation": "public static int gcd(int u, int v) {\n    if (u == 0) {\n        return Math.abs(v);\n    }\n    if (v == 0) {\n        return Math.abs(u);\n    }\n    // make u and v positive\n    u = Math.abs(u);\n    v = Math.abs(v);\n    // B1. [Find power of 2]\n    int k = 0;\n    while (((u | v) & 1) == 0 && k < 31) { // while u and v are both even...\n        u >>= 1;\n        v >>= 1;\n        k++; // cast out twos.\n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    // Now u and v are not both even\n    // Remove factors of 2 from u\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n    do {\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n        if (u > v) {\n            int t = u;\n            u = v;\n            v = t;\n        }\n        v = v - u;\n    } while (v != 0);\n\n    return u << k;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}