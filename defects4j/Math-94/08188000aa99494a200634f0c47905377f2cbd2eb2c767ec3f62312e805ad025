{
    "generation": "    public static int gcd(int u, int v) {\n        if (u == 0) {\n            if (v == 0) {\n                throw new ArithmeticException(\"GCD of zero and zero is undefined.\");\n            }\n            return Math.abs(v);\n        }\n        if (v == 0) {\n            return Math.abs(u);\n        }\n\n        if (u > 0) {\n            u = -u;\n        }\n        if (v > 0) {\n            v = -v;\n        }\n\n        int k = 0;\n        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) {\n            u /= 2;\n            v /= 2;\n            k++;\n        }\n        if ((u & 1) == 0 || (v & 1) == 0) {\n            throw new ArithmeticException(\"overflow: gcd is 2^31 or higher.\");\n        }\n\n        int t = (u & 1) != 0 ? v : -(u / 2);\n        do {\n            while ((t & 1) == 0) {\n                t /= 2;\n            }\n            if (t > 0) {\n                u = -t;\n            } else {\n                v = t;\n            }\n            t = (v - u) / 2;\n        } while (t != 0);\n\n        return -u * (1 << k);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}