{
    "generation": "/**\n * Helper method used by standard deserializer.\n * \n * @since 2.3\n */\npublic TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException\n{\n    JsonToken t = jp.getCurrentToken();\n    // As per [databind#592], if we're starting at a FIELD_NAME,\n    // assume a missing START_OBJECT around the sequence of fields:\n    if (t == JsonToken.FIELD_NAME) {\n        // inject a synthetic START_OBJECT\n        writeStartObject();\n        // copy all consecutive fields\n        while (jp.getCurrentToken() == JsonToken.FIELD_NAME) {\n            copyCurrentStructure(jp);\n            jp.nextToken();\n        }\n        // close the synthetic object\n        writeEndObject();\n    } else {\n        // normal case: just copy the whole structure (object, array, scalar)\n        copyCurrentStructure(jp);\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}