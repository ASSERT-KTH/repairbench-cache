{
    "generation": "    public int parseInto(ReadWritableInstant instant, String text, int position) {\n        DateTimeParser parser = requireParser();\n        if (instant == null) {\n            throw new IllegalArgumentException(\"Instant must not be null\");\n        }\n\n        long instantMillis = instant.getMillis();\n        Chronology chrono = instant.getChronology();\n        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n        chrono = selectChronology(chrono);\n        int defaultYear = chrono.year().get(instantLocal);\n\n        DateTimeParserBucket bucket = new DateTimeParserBucket(\n            instantLocal, chrono, iLocale, iPivotYear, defaultYear);\n        int newPos = parser.parseInto(bucket, text, position);\n\n        // Check if the parsed month and day are February 29\n        if (bucket.getMonthOfYear() != null && bucket.getMonthOfYear() == 2 &&\n            bucket.getDayOfMonth() != null && bucket.getDayOfMonth() == 29) {\n            // Ensure the year is a leap year\n            int parsedYear = bucket.getYear();\n            if (parsedYear == null) {\n                parsedYear = defaultYear;\n            }\n            if (!chrono.isLeapYear(parsedYear)) {\n                // Adjust the year to the nearest leap year\n                parsedYear = chrono.year().add(parsedYear, 4);\n                while (!chrono.isLeapYear(parsedYear)) {\n                    parsedYear += 4;\n                }\n                bucket.setYear(parsedYear);\n            }\n        }\n\n        instant.setMillis(bucket.computeMillis(false, text));\n        if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n            int parsedOffset = bucket.getOffsetInteger();\n            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n            chrono = chrono.withZone(parsedZone);\n        } else if (bucket.getZone() != null) {\n            chrono = chrono.withZone(bucket.getZone());\n        }\n        instant.setChronology(chrono);\n        if (iZone != null) {\n            instant.setZone(iZone);\n        }\n        return newPos;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}