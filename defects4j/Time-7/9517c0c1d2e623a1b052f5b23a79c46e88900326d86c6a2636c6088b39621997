{
    "generation": "public int parseInto(ReadWritableInstant instant, String text, int position) {\n    DateTimeParser parser = requireParser();\n    if (instant == null) {\n        throw new IllegalArgumentException(\"Instant must not be null\");\n    }\n\n    long instantMillis = instant.getMillis();\n    Chronology chrono = instant.getChronology();\n    long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n    chrono = selectChronology(chrono);\n\n    int defaultYear;\n    // Use the year from the instant as defaultYear normally\n    if (chrono.year().isLeap(instantLocal)) {\n        defaultYear = chrono.year().get(instantLocal);\n    } else {\n        // Ensure the defaultYear is a leap year so that leap-day partial parses succeed\n        int yearEstimate = chrono.year().get(instantLocal);\n        if (chrono.year().isLeap(yearEstimate)) {\n            defaultYear = yearEstimate;\n        } else {\n            // Adjust defaultYear to a nearby leap year (e.g., previous or next)\n            int before = yearEstimate - 1;\n            int after = yearEstimate + 1;\n            if (chrono.year().isLeap(after)) {\n                defaultYear = after;\n            } else if (chrono.year().isLeap(before)) {\n                defaultYear = before;\n            } else {\n                // Fallback: choose 2004 as a known leap year\n                defaultYear = 2004;\n            }\n        }\n    }\n\n    DateTimeParserBucket bucket = new DateTimeParserBucket(\n        instantLocal, chrono, iLocale, iPivotYear, defaultYear);\n    int newPos = parser.parseInto(bucket, text, position);\n    instant.setMillis(bucket.computeMillis(false, text));\n    if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n        int parsedOffset = bucket.getOffsetInteger();\n        DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n        chrono = chrono.withZone(parsedZone);\n    } else if (bucket.getZone() != null) {\n        chrono = chrono.withZone(bucket.getZone());\n    }\n    instant.setChronology(chrono);\n    if (iZone != null) {\n        instant.setZone(iZone);\n    }\n    return newPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}