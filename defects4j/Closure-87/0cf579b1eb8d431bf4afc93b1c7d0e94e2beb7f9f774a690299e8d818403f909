{
    "generation": "  /**\n   * @return Whether the node is a block with a single statement that is\n   *     an expression.\n   */\n  private boolean isFoldableExpressBlock(Node n) {\n    if (n.getType() == Token.BLOCK) {\n      if (n.hasOneChild()) {\n        Node maybeExpr = n.getFirstChild();\n        // IE has a bug where event handlers behave differently when\n        // their return value is used vs. when their return value is in\n        // an EXPR_RESULT. It's pretty freaking weird. See:\n        // http://code.google.com/p/closure-compiler/issues/detail?id=291\n        // Detect the suspicious case: a call to a property named 'onchange'.\n        if (maybeExpr.isExprResult()) {\n          Node call = maybeExpr.getFirstChild();\n          if (call != null && call.isCall()) {\n            Node callee = call.getFirstChild();\n            if (callee != null && callee.isGetProp()) {\n              Node prop = callee.getLastChild();\n              if (prop != null && prop.isString() && \"onchange\".equals(prop.getString())) {\n                return false;\n              }\n            }\n          }\n        }\n        return NodeUtil.isExpressionNode(maybeExpr);\n      }\n    }\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}