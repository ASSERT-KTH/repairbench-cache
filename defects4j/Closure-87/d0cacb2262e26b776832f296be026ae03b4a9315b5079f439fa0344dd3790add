{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression, and the expression is not an EXPR_RESULT that could\n *     trigger the IE bug related to event handlers.\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n    if (n.getType() == Token.BLOCK && n.hasOneChild()) {\n        Node maybeExpr = n.getFirstChild();\n        if (NodeUtil.isExpressionNode(maybeExpr)) {\n            // Check if the expression is an EXPR_RESULT that could trigger the IE bug\n            if (maybeExpr.getType() == Token.EXPR_RESULT) {\n                Node expr = maybeExpr.getFirstChild();\n                // The IE bug is triggered when the expression is a CALL node\n                // with a GETPROP or GETELEM parent that has a special property name\n                // like 'onchange'.\n                if (expr.getType() == Token.CALL) {\n                    Node callee = expr.getFirstChild();\n                    if (callee.getType() == Token.GETPROP || callee.getType() == Token.GETELEM) {\n                        String propName = callee.getLastChild().getString();\n                        if (isEventHandlerProperty(propName)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate boolean isEventHandlerProperty(String propName) {\n    // List of common event handler properties that could trigger the IE bug\n    String[] eventHandlerProps = {\n        \"onchange\", \"onclick\", \"onkeydown\", \"onkeyup\", \"onkeypress\",\n        \"onload\", \"onmousedown\", \"onmousemove\", \"onmouseout\", \"onmouseover\",\n        \"onmouseup\", \"onreset\", \"onselect\", \"onsubmit\", \"onunload\"\n    };\n    for (String prop : eventHandlerProps) {\n        if (prop.equals(propName)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}