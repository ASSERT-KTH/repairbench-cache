{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression.\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK) {\n    if (n.hasOneChild()) {\n      Node maybeExpr = n.getFirstChild();\n\n      // We only fold EXPR_RESULT statements.\n      if (maybeExpr.getType() == Token.EXPR_RESULT) {\n        Node expr = maybeExpr.getFirstChild();\n\n        // IE has a bug where event handlers behave differently when\n        // their return value is used vs. when their return value is in\n        // an EXPR_RESULT. It's pretty freaking weird. See:\n        // http://code.google.com/p/closure-compiler/issues/detail?id=291\n        // We try to detect this case, and not fold EXPR_RESULTs\n        // into other expressions.\n\n        // We only have to worry about methods with an implicit 'this'\n        // param, or this doesn't happen.\n        // So do not fold calls to properties named 'onchange', 'oninput', etc.\n        if (expr.isCall()) {\n          Node fn = expr.getFirstChild();\n          if (fn != null && fn.isGetProp()) {\n            String prop = fn.getLastChild().getString();\n            // Add more event handler property names here if necessary.\n            if (\"onchange\".equals(prop) || \"oninput\".equals(prop) || \"onblur\".equals(prop) ||\n                \"onfocus\".equals(prop) || \"onclick\".equals(prop) || \"ondblclick\".equals(prop) ||\n                \"onkeydown\".equals(prop) || \"onkeypress\".equals(prop) || \"onkeyup\".equals(prop) ||\n                \"onmousedown\".equals(prop) || \"onmouseup\".equals(prop) || \"onmouseover\".equals(prop) ||\n                \"onmouseout\".equals(prop) || \"onmouseenter\".equals(prop) || \"onmouseleave\".equals(prop) ||\n                \"onselect\".equals(prop) || \"onchange\".equals(prop)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}