{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression.\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK) {\n    if (n.hasOneChild()) {\n      Node maybeExpr = n.getFirstChild();\n\n      if (NodeUtil.isExprCall(maybeExpr)) {\n        Node callTarget = maybeExpr.getFirstChild();\n\n        // Only worry about property accesses (methods)\n        if (callTarget.isGetProp()) {\n          String methodName = callTarget.getLastChild().getString();\n\n          // \"onXXX\" method names may behave weirdly in IE\n          if (methodName.startsWith(\"on\")) {\n            return false;\n          }\n        }\n      }\n\n      return NodeUtil.isExpressionNode(maybeExpr);\n    }\n  }\n\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}