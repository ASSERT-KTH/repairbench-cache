{
    "generation": "  /**\n   * @return Whether the node is a block with a single statement that is\n   *     an expression.\n   */\n  private boolean isFoldableExpressBlock(Node n) {\n    if (n.getType() == Token.BLOCK) {\n      if (n.hasOneChild()) {\n        Node maybeExpr = n.getFirstChild();\n        // IE has a bug where event handlers behave differently when\n        // their return value is used vs. when their return value is in\n        // an EXPR_RESULT. It's pretty freaking weird. See:\n        // http://code.google.com/p/closure-compiler/issues/detail?id=291\n        // We try to detect this case, and not fold EXPR_RESULTs\n        // into other expressions.\n\n        // Only fold EXPR_RESULT into a single expression statement if the invoked\n        // method/property is not named like one of the known event handlers (like onchange)\n        // when called as a property (e.g., f.onchange();), which are known to have\n        // side effects on IE regarding their value context.\n\n        if (NodeUtil.isExpressionNode(maybeExpr)) {\n          Node expr = maybeExpr.getFirstChild();\n          if (expr != null && expr.isCall()) {\n            Node callee = expr.getFirstChild();\n            if (callee != null && (callee.isGetProp() || callee.isGetElem())) {\n              // Only get the property name if it's a direct property access (not computed).\n              if (callee.isGetProp()) {\n                String propName = callee.getLastChild().getString();\n                // Don't fold if it's a property with a known problematic event name.\n                if (\"onchange\".equals(propName) || \"onfocus\".equals(propName) ||\n                    \"onblur\".equals(propName) || \"oninput\".equals(propName) ||\n                    \"onreset\".equals(propName) || \"onsubmit\".equals(propName) ||\n                    \"onselect\".equals(propName) || \"onmousedown\".equals(propName) ||\n                    \"onmouseup\".equals(propName) || \"onkeydown\".equals(propName) ||\n                    \"onkeypress\".equals(propName) || \"onkeyup\".equals(propName)) {\n                  return false;\n                }\n              } else if (callee.isGetElem()) {\n                // If the property is accessed by element (e.g. f['onchange']),\n                // don't fold, since we can't be certain.\n                return false;\n              }\n            }\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}