{
    "generation": "  /**\n   * @return Whether the node is a block with a single statement that is\n   *     an expression.\n   */\n  private boolean isFoldableExpressBlock(Node n) {\n    if (n.getType() == Token.BLOCK) { // Check if the node is a BLOCK\n      if (n.hasOneChild()) { // Check if the block has exactly one child\n        Node maybeExpr = n.getFirstChild(); // Get the single child\n        // Check if the child is an EXPR_RESULT node.\n        if (maybeExpr.getType() == Token.EXPR_RESULT) {\n          Node expr = maybeExpr.getFirstChild(); // Get the expression inside EXPR_RESULT\n\n          // IE has a bug where event handlers behave differently when\n          // their return value is used vs. when their return value is in\n          // an EXPR_RESULT. It's pretty freaking weird. See:\n          // http://code.google.com/p/closure-compiler/issues/detail?id=291\n          // We try to detect this case, and not fold EXPR_RESULTs\n          // containing calls to likely event handlers (obj.on...).\n\n          // Check if the expression is a call to a property starting with \"on\"\n          if (expr.getType() == Token.CALL) {\n            Node callee = expr.getFirstChild();\n            // Check specifically for GETPROP (e.g., f.onchange())\n            if (callee.getType() == Token.GETPROP) {\n              Node propNode = callee.getLastChild();\n              // Make sure the property name is a string literal\n              if (propNode.getType() == Token.STRING) {\n                  String propName = propNode.getString();\n                  // If the property name starts with \"on\", assume it's an event handler\n                  // and don't fold it due to the IE bug.\n                  if (propName.startsWith(\"on\")) {\n                    return false; // Don't fold likely event handlers\n                  }\n              }\n            }\n            // We don't apply this restriction to GETELEM (f['onchange']()) or\n            // other call types based on the specific behavior shown in Issue 291 tests.\n          }\n\n          // If the expression is not a call to a GETPROP starting with \"on\",\n          // then the block is considered foldable.\n          return true;\n        }\n      }\n    }\n\n    // If the node is not a BLOCK, or doesn't have one child,\n    // or the single child is not an EXPR_RESULT, it's not foldable.\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}