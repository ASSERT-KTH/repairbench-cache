{
    "generation": "public static long safeMultiply(long val1, int val2) {\n    switch (val2) {\n        case -1:\n            return -val1;\n        case 0:\n            return 0L;\n        case 1:\n            return val1;\n    }\n    \n    int absVal2 = Math.abs(val2);\n    long total = val1 * val2;\n    \n    if (val2 > 0) {\n        if (val1 > (Long.MAX_VALUE / absVal2)) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n    } else {\n        if (val1 < (Long.MIN_VALUE / absVal2)) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n    }\n    \n    return total;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}