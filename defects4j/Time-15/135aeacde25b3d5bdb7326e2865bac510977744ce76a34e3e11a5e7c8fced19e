{
    "generation": "public static long safeMultiply(long val1, int val2) {\n    switch (val2) {\n        case -1:\n            if (val1 == Long.MIN_VALUE) {\n                throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n            }\n            return -val1;\n        case 0:\n            return 0L;\n        case 1:\n            return val1;\n    }\n    // special case for Long.MIN_VALUE * -1 (already handled above)\n    long total = val1 * val2;\n    // Check for overflow\n    if (((val2 != 0) && (total / val2 != val1)) ||\n        (val1 == Long.MIN_VALUE && val2 == -1)) {\n        throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n    }\n    return total;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}