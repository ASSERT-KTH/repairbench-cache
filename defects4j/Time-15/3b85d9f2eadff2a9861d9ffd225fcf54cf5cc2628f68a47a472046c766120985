{
    "generation": "public static long safeMultiply(long val1, int val2) {\n    switch (val2) {\n        case -1:\n            if (val1 == Long.MIN_VALUE) {\n                throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n            }\n            return -val1;\n        case 0:\n            return 0L;\n        case 1:\n            return val1;\n    }\n    long total = val1 * val2;\n    // Check for overflow\n    if (((val1 == 0) || (total / val2 == val1)) && !(val2 == -1 && val1 == Long.MIN_VALUE)) {\n        return total;\n    }\n    throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}