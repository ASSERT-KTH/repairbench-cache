{
    "generation": "    public static long safeMultiply(long val1, int val2) {\n        switch (val2) {\n            case -1:\n                if (val1 == Long.MIN_VALUE) {\n                    throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n                }\n                return -val1;\n            case 0:\n                return 0L;\n            case 1:\n                return val1;\n        }\n        if (val2 == Integer.MIN_VALUE) {\n            if (val1 != 0L && val1 != 1L && val1 != -1L) {\n                throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n            }\n        }\n        long total = val1 * (long)val2;\n        if ((val2 != 0) && (total / (long)val2 != val1)) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        return total;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}