{
    "generation": "public static long safeMultiply(long val1, int val2) {\n    if (val2 == 0) {\n        return 0L;\n    }\n    if (val2 == 1) {\n        return val1;\n    }\n    if (val2 == -1) {\n        return -val1;\n    }\n\n    // Handle the case where val2 is Integer.MIN_VALUE\n    if (val2 == Integer.MIN_VALUE) {\n        if (val1 != 0) {\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n        }\n        return 0L;\n    }\n\n    long total = val1 * (long) val2;\n    if (total / val2 != val1) {\n        throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n    }\n    return total;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}