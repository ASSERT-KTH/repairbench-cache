{
    "generation": "/**\n * Get the current solution.\n *\n * @return current solution\n */\nprotected RealPointValuePair getSolution() {\n    int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n    Integer negativeVarBasicRow =\n        negativeVarColumn > 0 ? getBasicRow(negativeVarColumn) : null;\n    double mostNegative =\n        negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n\n    Set<Integer> basicRows = new HashSet<Integer>();\n    double[] coefficients = new double[getOriginalNumDecisionVariables()];\n    for (int i = 0; i < coefficients.length; i++) {\n        int colIndex = columnLabels.indexOf(\"x\" + i);\n        if (colIndex < 0) {\n            coefficients[i] = 0;\n            continue;\n        }\n        Integer basicRow = getBasicRow(colIndex);\n        // if the variable is not basic or if the row is already used by another variable\n        // (e.g. multiple unconstrained vars landing in the objective\u2010function row),\n        // we set it to zero (or shift by mostNegative if negatives are allowed)\n        if (basicRow == null || basicRows.contains(basicRow)) {\n            coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] =\n                getEntry(basicRow, getRhsOffset()) -\n                (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}