{
    "generation": "/**\n * Get the current solution.\n *\n * @return current solution\n */\n@Override\nprotected RealPointValuePair getSolution() {\n    // find the (global) negative\u2010variable column, if any\n    int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n    Integer negativeVarBasicRow = (negativeVarColumn >= 0)\n        ? getBasicRow(negativeVarColumn)\n        : null;\n    double mostNegative = (negativeVarBasicRow == null)\n        ? 0\n        : getEntry(negativeVarBasicRow, getRhsOffset());\n\n    // we will record which constraint\u2010rows have already been used\n    // and we must also immediately ignore the objective\u2010function row (row 0)\n    Set<Integer> basicRows = new HashSet<Integer>();\n    basicRows.add(0);\n\n    double[] coefficients = new double[getOriginalNumDecisionVariables()];\n    for (int i = 0; i < coefficients.length; i++) {\n        // look up the tableau column for x_i\n        int colIndex = columnLabels.indexOf(\"x\" + i);\n        if (colIndex < 0) {\n            // no such column -> variable is nonbasic -> value = 0 (up to offset)\n            coefficients[i] = 0;\n            continue;\n        }\n        Integer basicRow = getBasicRow(colIndex);\n\n        // if this row is null (nonbasic), is the objective row, or was already used,\n        // we treat it as nonbasic and assign zero (minus any global offset)\n        if (basicRow == null || basicRows.contains(basicRow)) {\n            coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);\n        } else {\n            // first time seeing this basic\u2010row -> record it and read off the RHS\n            basicRows.add(basicRow);\n            coefficients[i] = getEntry(basicRow, getRhsOffset())\n                              - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n\n    return new RealPointValuePair(coefficients,\n                                  f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}