{
    "generation": "@SuppressWarnings(\"resource\")\nprivate final Object _deserialize(JsonParser p, DeserializationContext ctxt) throws IOException\n{\n    // 02-Aug-2013, tatu: May need to use native type ids\n    if (p.canReadTypeId()) {\n        Object typeId = p.getTypeId();\n        if (typeId != null) {\n            return _deserializeWithNativeTypeId(p, ctxt, typeId);\n        }\n    }\n    // handle both cases: parser at START_OBJECT or already at FIELD_NAME\n    JsonToken curr = p.getCurrentToken();\n    final String typeId;\n    JsonDeserializer<Object> deser;\n    if (curr == JsonToken.START_OBJECT) {\n        // normal wrapper start\n        if (p.nextToken() != JsonToken.FIELD_NAME) {\n            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,\n                    \"need JSON String that contains type id (for subtype of \"+baseTypeName()+\")\");\n        }\n        typeId = p.getText();\n        deser = _findDeserializer(ctxt, typeId);\n        p.nextToken();\n    } else if (curr == JsonToken.FIELD_NAME) {\n        // wrapper START_OBJECT was already consumed\n        typeId = p.getText();\n        deser = _findDeserializer(ctxt, typeId);\n        p.nextToken();\n    } else {\n        throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,\n                \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());\n    }\n\n    // Minor complication: we may need to merge type id in?\n    if (_typeIdVisible && p.getCurrentToken() == JsonToken.START_OBJECT) {\n        TokenBuffer tb = new TokenBuffer(null, false);\n        tb.writeStartObject(); // recreate START_OBJECT\n        tb.writeFieldName(_typePropertyName);\n        tb.writeString(typeId);\n        p = JsonParserSequence.createFlattened(tb.asParser(p), p);\n        p.nextToken();\n    }\n\n    Object value = deser.deserialize(p, ctxt);\n    // And then need the closing END_OBJECT\n    if (p.nextToken() != JsonToken.END_OBJECT) {\n        throw ctxt.wrongTokenException(p, JsonToken.END_OBJECT,\n                \"expected closing END_OBJECT after type information and deserialized value\");\n    }\n    return value;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}