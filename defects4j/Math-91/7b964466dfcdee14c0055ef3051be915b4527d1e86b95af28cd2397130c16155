{
    "generation": "    /**\n     * Compares this object to another based on size.\n     * @param object the object to compare to\n     * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n     *         than <tt>object</tt>, 0 if they are equal.\n     */\n    public int compareTo(Fraction object) {\n        // Retrieve numerator and denominator as long to prevent overflow during multiplication.\n        // Assuming Fraction has getNumerator() and getDenominator() methods,\n        // which return int and denominator is always positive.\n        long n1 = getNumerator();\n        long d1 = getDenominator();\n        long n2 = object.getNumerator();\n        long d2 = object.getDenominator();\n\n        // Compare n1/d1 to n2/d2 using cross-multiplication: n1*d2 vs n2*d1.\n        // Since denominators (d1, d2) are always positive, the sign of the difference\n        // (n1/d1 - n2/d2) is the same as the sign of (n1*d2 - n2*d1).\n        long product1 = n1 * d2;\n        long product2 = n2 * d1;\n\n        if (product1 < product2) {\n            return -1;\n        } else if (product1 > product2) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}