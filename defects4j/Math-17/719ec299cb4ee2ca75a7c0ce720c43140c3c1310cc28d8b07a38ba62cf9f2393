{
    "generation": "/** Multiply this by a single digit x.\n * @param x multiplicand\n * @return product of this and x\n */\npublic Dfp multiply(final int x) {\n    // Check for special cases\n    if (x == 0) {\n        if (isNaN()) {\n            return this;\n        }\n        if (isInfinite()) {\n            return newInstance(DfpField.FLAG_INVALID, (byte) 0); // NaN\n        }\n        byte sign = (byte) ((this.sign == 0) ? 0 : 1);\n        return newInstance(DfpField.FLAG_NOOP, sign);\n    }\n    \n    // Use the full Dfp multiply for other cases\n    return multiply(newInstance(x));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}