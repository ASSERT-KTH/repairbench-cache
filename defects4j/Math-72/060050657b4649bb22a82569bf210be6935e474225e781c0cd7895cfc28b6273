{
    "generation": "    public double solve(final UnivariateRealFunction f,\n                        final double min, final double max, final double initial)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifySequence(min, initial, max);\n\n        // Check if initial is root\n        double yInitial = f.value(initial);\n        if (Math.abs(yInitial) <= functionValueAccuracy) {\n            setResult(initial, 0);\n            return result;\n        }\n\n        // Check if min is root\n        double yMin = f.value(min);\n        if (Math.abs(yMin) <= functionValueAccuracy) {\n            setResult(min, 0);\n            return result;\n        }\n\n        // Check if max is root\n        double yMax = f.value(max);\n        if (Math.abs(yMax) <= functionValueAccuracy) {\n            setResult(max, 0);\n            return result;\n        }\n\n        // Check bracketing for min and initial\n        if (yMin * yInitial < 0) {\n            return solve(f, min, yMin, initial, yInitial);\n        }\n\n        // Check bracketing for initial and max\n        if (yInitial * yMax < 0) {\n            return solve(f, initial, yInitial, max, yMax);\n        }\n\n        // Check bracketing for min and max\n        if (yMin * yMax < 0) {\n            return solve(f, min, yMin, max, yMax);\n        }\n\n        // If no bracketing, throw exception\n        throw MathRuntimeException.createIllegalArgumentException(\n              NON_BRACKETING_MESSAGE, min, max, yMin, yMax);\n\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}