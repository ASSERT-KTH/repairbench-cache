{
    "generation": "    /**\n     * Compares two values\n     */\n    protected boolean equal(\n        EvalContext context,\n        Expression left,\n        Expression right) \n    {\n        Object l = left.compute(context);\n        Object r = right.compute(context);\n\n        if (l instanceof InitialContext || l instanceof SelfContext) {\n            l = ((EvalContext) l).getSingleNodePointer();\n        }\n\n        if (r instanceof InitialContext || r instanceof SelfContext) {\n            r = ((EvalContext) r).getSingleNodePointer();\n        }\n\n        if (l instanceof Collection) {\n            Collection col = (Collection) l;\n            List<Object> values = new ArrayList<>();\n            for (Object obj : col) {\n                if (obj instanceof NodePointer) {\n                    values.add(((NodePointer) obj).getValue());\n                } else {\n                    values.add(obj);\n                }\n            }\n            l = values.iterator();\n        }\n\n        if (r instanceof Collection) {\n            Collection col = (Collection) r;\n            List<Object> values = new ArrayList<>();\n            for (Object obj : col) {\n                if (obj instanceof NodePointer) {\n                    values.add(((NodePointer) obj).getValue());\n                } else {\n                    values.add(obj);\n                }\n            }\n            r = values.iterator();\n        }\n\n        if ((l instanceof Iterator) && !(r instanceof Iterator)) {\n            return contains((Iterator) l, r);\n        }\n        if (!(l instanceof Iterator) && (r instanceof Iterator)) {\n            return contains((Iterator) r, l);\n        }\n        if (l instanceof Iterator && r instanceof Iterator) {\n            return findMatch((Iterator) l, (Iterator) r);\n        }\n        return equal(l, r);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}