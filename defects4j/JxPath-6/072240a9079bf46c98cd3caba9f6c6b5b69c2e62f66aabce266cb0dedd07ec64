{
    "generation": "    /**\n     * Compares two values\n     */\n    protected boolean equal(\n        EvalContext context,\n        Expression left,\n        Expression right)\n    {\n        Object l = left.compute(context);\n        Object r = right.compute(context);\n\n        if (l instanceof InitialContext || l instanceof SelfContext) {\n            l = ((EvalContext) l).getSingleNodePointer();\n        }\n\n        if (r instanceof InitialContext || r instanceof SelfContext) {\n            r = ((EvalContext) r).getSingleNodePointer();\n        }\n\n        if (l instanceof Collection) {\n            l = ((Collection) l).iterator();\n        }\n\n        if (r instanceof Collection) {\n            r = ((Collection) r).iterator();\n        }\n\n        if (l instanceof Iterator && r instanceof Iterator) {\n            return equalIterators((Iterator) l, (Iterator) r);\n        }\n\n        return equal(l, r);\n    }\n\n    private boolean equalIterators(Iterator<?> it1, Iterator<?> it2) {\n        while (it1.hasNext() && it2.hasNext()) {\n            Object o1 = it1.next();\n            Object o2 = it2.next();\n            if (!equal(o1, o2)) {\n                return false;\n            }\n        }\n        return !it1.hasNext() && !it2.hasNext();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}