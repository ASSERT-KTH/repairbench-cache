{
    "generation": "    /**\n     * Compares two values\n     */\n    protected boolean equal(\n        EvalContext context,\n        Expression left,\n        Expression right) \n    {\n        Object l = left.compute(context);\n        Object r = right.compute(context);\n//        System.err.println(\"COMPARING: \" +\n//            (l == null ? \"null\" : l.getClass().getName()) + \" \" +\n//            (r == null ? \"null\" : r.getClass().getName()));\n        if (l == null && r == null) {\n            return true;\n        }\n        if (l == null && r != null) {\n            return false;\n        }\n        if (l != null && r == null) {\n            return false;\n        }\n        if (l instanceof Comparable) {\n            return ((Comparable) l).compareTo(r) == 0;\n        }\n        if (r instanceof Comparable) {\n            return ((Comparable) r).compareTo(l) == 0;\n        }\n        if (l instanceof Number && r instanceof Number) {\n            return ((Number) l).doubleValue() == ((Number) r).doubleValue();\n        }\n        if (l instanceof String && r instanceof String) {\n            return ((String) l).equals((String) r);\n        }\n        if (l instanceof Boolean && r instanceof Boolean) {\n            return ((Boolean) l).booleanValue() == ((Boolean) r).booleanValue();\n        }\n        if (l instanceof Date && r instanceof Date) {\n            return ((Date) l).equals((Date) r);\n        }\n        if (l instanceof Calendar && r instanceof Calendar) {\n            return ((Calendar) l).equals((Calendar) r);\n        }\n        if (l instanceof Map && r instanceof Map) {\n            return ((Map) l).equals((Map) r);\n        }\n        if (l instanceof Set && r instanceof Set) {\n            return ((Set) l).equals((Set) r);\n        }\n        if (l instanceof Collection && r instanceof Collection) {\n            return ((Collection) l).equals((Collection) r);\n        }\n        if (l instanceof Iterable && r instanceof Iterable) {\n            return ((Iterable) l).equals((Iterable) r);\n        }\n        if (l instanceof Iterator && r instanceof Iterator) {\n            return ((Iterator) l).equals((Iterator) r);\n        }\n        if (l instanceof Object[] && r instanceof Object[]) {\n            return Arrays.equals((Object[]) l, (Object[]) r);\n        }\n        if (l instanceof String[] && r instanceof String[]) {\n            return Arrays.equals((String[]) l, (String[]) r);\n        }\n        if (l instanceof Number[] && r instanceof Number[]) {\n            return Arrays.equals((Number[]) l, (Number[]) r);\n        }\n        if (l instanceof Boolean[] && r instanceof Boolean[]) {\n            return Arrays.equals((Boolean[]) l, (Boolean[]) r);\n        }\n        if (l instanceof Date[] && r instanceof Date[]) {\n            return Arrays.equals((Date[]) l, (Date[]) r);\n        }\n        if (l instanceof Calendar[] && r instanceof Calendar[]) {\n            return Arrays.equals((Calendar[]) l, (Calendar[]) r);\n        }\n        if (l instanceof Map[] && r instanceof Map[]) {\n            return Arrays.equals((Map[]) l, (Map[]) r);\n        }\n        if (l instanceof Set[] && r instanceof Set[]) {\n            return Arrays.equals((Set[]) l, (Set[]) r);\n        }\n        if (l instanceof Collection[] && r instanceof Collection[]) {\n            return Arrays.equals((Collection[]) l, (Collection[]) r);\n        }\n        if (l instanceof Iterable[] && r instanceof Iterable[]) {\n            return Arrays.equals((Iterable[]) l, (Iterable[]) r);\n        }\n        if (l instanceof Iterator[] && r instanceof Iterator[]) {\n            return Arrays.equals((Iterator[]) l, (Iterator[]) r);\n        }\n        if (l instanceof Object[][] && r instanceof Object[][]) {\n            return Arrays.deepEquals((Object[][]) l, (Object[][]) r);\n        }\n        if (l instanceof String[][] && r instanceof String[][]) {\n            return Arrays.deepEquals((String[][]) l, (String[][]) r);\n        }\n        if (l instanceof Number[][] && r instanceof Number[][]) {\n            return Arrays.deepEquals((Number[][]) l, (Number[][]) r);\n        }\n        if (l instanceof Boolean[][] && r instanceof Boolean[][]) {\n            return Arrays.deepEquals((Boolean[][]) l, (Boolean[][]) r);\n        }\n        if (l instanceof Date[][] && r instanceof Date[][]) {\n            return Arrays.deepEquals((Date[][]) l, (Date[][]) r);\n        }\n        if (l instanceof Calendar[][] && r instanceof Calendar[][]) {\n            return Arrays.deepEquals((Calendar[][]) l, (Calendar[][]) r);\n        }\n        if (l instanceof Map[][] && r instanceof Map[][]) {\n            return Arrays.deepEquals((Map[][]) l, (Map[][]) r);\n        }\n        if (l instanceof Set[][] && r instanceof Set[][]) {\n            return Arrays.deepEquals((Set[][]) l, (Set[][]) r);\n        }\n        if (l instanceof Collection[][] && r instanceof Collection[][]) {\n            return Arrays.deepEquals((Collection[][]) l, (Collection[][]) r);\n        }\n        if (l instanceof Iterable[][] && r instanceof Iterable[][]) {\n            return Arrays.deepEquals((Iterable[][]) l, (Iterable[][]) r);\n        }\n        if (l instanceof Iterator[][] && r instanceof Iterator[][]) {\n            return Arrays.deepEquals((Iterator[][]) l, (Iterator[][]) r);\n        }\n        if (l instanceof Object[][][] && r instanceof Object[][][]) {\n            return Arrays.deepEquals((Object[][][]) l, (Object[][][]) r);\n        }\n        if (l instanceof String[][][] && r instanceof String[][][]) {\n            return Arrays.deepEquals((String[][][]) l, (String[][][]) r);\n        }\n        if (l instanceof Number[][][] && r instanceof Number[][][]) {\n            return Arrays.deepEquals((Number[][][]) l, (Number[][][]) r);\n        }\n        if (l instanceof Boolean[][][] && r instanceof Boolean[][][]) {\n            return Arrays.deepEquals((Boolean[][][]) l, (Boolean[][][]) r);\n        }\n        if (l instanceof Date[][][] && r instanceof Date[][][]) {\n            return Arrays.deepEquals((Date[][][]) l, (Date[][][]) r);\n        }\n        if (l instanceof Calendar[][][] && r instanceof Calendar[][][]) {\n            return Arrays.deepEquals((Calendar[][][]) l, (Calendar[][][]) r);\n        }\n        if (l instanceof Map[][][] && r instanceof Map[][][]) {\n            return Arrays.deepEquals((Map[][][]) l, (Map[][][]) r);\n        }\n        if (l instanceof Set[][][] && r instanceof Set[][][]) {\n            return Arrays.deepEquals((Set[][][]) l, (Set[][][]) r);\n        }\n        if (l instanceof Collection[][][] && r instanceof Collection[][][]) {\n            return Arrays.deepEquals((Collection[][][]) l, (Collection[][][]) r);\n        }\n        if (l instanceof Iterable[][][] && r instanceof Iterable[][][]) {\n            return Arrays.deepEquals((Iterable[][][]) l, (Iterable[][][]) r);\n        }\n        if (l instanceof Iterator[][][] && r instanceof Iterator[][][]) {\n            return Arrays.deepEquals((Iterator[][][]) l, (Iterator[][][]) r);\n        }\n        if (l instanceof Object[][][][] && r instanceof Object[][][][]) {\n            return Arrays.deepEquals((Object[][][][]) l, (Object[][][][]) r);\n        }\n        if (l instanceof String[][][][] && r instanceof String[][][][]) {\n            return Arrays.deepEquals((String[][][][]) l, (String[][][][]) r);\n        }\n        if (l instanceof Number[][][][] && r instanceof Number[][][][]) {\n            return Arrays.deepEquals((Number[][][][]) l, (Number[][][][]) r);\n        }\n        if (l instanceof Boolean[][][][] && r instanceof Boolean[][][][]) {\n            return Arrays.deepEquals((Boolean[][][][]) l, (Boolean[][][][]) r);\n        }\n        if (l instanceof Date[][][][] && r instanceof Date[][][][]) {\n            return Arrays.deepEquals((Date[][][][]) l, (Date[][][][]) r);\n        }\n        if (l instanceof Calendar[][][][] && r instanceof Calendar[][][][]) {\n            return Arrays.deepEquals((Calendar[][][][]) l, (Calendar[][][][]) r);\n        }\n        if (l instanceof Map[][][][] && r instanceof Map[][][][]) {\n            return Arrays.deepEquals((Map[][][][]) l, (Map[][][][]) r);\n        }\n        if (l instanceof Set[][][][] && r instanceof Set[][][][]) {\n            return Arrays.deepEquals((Set[][][][]) l, (Set[][][][]) r);\n        }\n        if (l instanceof Collection[][][][] && r instanceof Collection[][][][]) {\n            return Arrays.deepEquals((Collection[][][][]) l, (Collection[][][][]) r);\n        }\n        if (l instanceof Iterable[][][][] && r instanceof Iterable[][][][]) {\n            return Arrays.deepEquals((Iterable[][][][]) l, (Iterable[][][][]) r);\n        }\n        if (l instanceof Iterator[][][][] && r instanceof Iterator[][][][]) {\n            return Arrays.deepEquals((Iterator[][][][]) l, (Iterator[][][][]) r);\n        }\n        if (l instanceof Object[][][][][] && r instanceof Object[][][][][]) {\n            return Arrays.deepEquals((Object[][][][][]) l, (Object[][][][][]) r);\n        }\n        if (l instanceof String[][][][][] && r instanceof String[][][][][]) {\n            return Arrays.deepEquals((String[][][][][]) l, (String[][][][][]) r);\n        }\n        if (l instanceof Number[][][][][] && r instanceof Number[][][][][]) {\n            return Arrays.deepEquals((Number[][][][][]) l, (Number[][][][][]) r);\n        }\n        if (l instanceof Boolean[][][][][] && r instanceof Boolean[][][][][]) {\n            return Arrays.deepEquals((Boolean[][][][][]) l, (Boolean[][][][][]) r);\n        }\n        if (l instanceof Date[][][][][] && r instanceof Date[][][][][]) {\n            return Arrays.deepEquals((Date[][][][][]) l, (Date[][][][][]) r);\n        }\n        if (l instanceof Calendar[][][][][] && r instanceof Calendar[][][][][]) {\n            return Arrays.deepEquals((Calendar[][][][][]) l, (Calendar[][][][][]) r);\n        }\n        if (l instanceof Map[][][][][] && r instanceof Map[][][][][]) {\n            return Arrays.deepEquals((Map[][][][][]) l, (Map[][][][][]) r);\n        }\n        if (l instanceof Set[][][][][] && r instanceof Set[][][][][]) {\n            return Arrays.deepEquals((Set[][][][][]) l, (Set[][][][][]) r);\n        }\n        if (l instanceof Collection[][][][][] && r instanceof Collection[][][][][]) {\n            return Arrays.deepEquals((Collection[][][][][]) l, (Collection[][][][][]) r);\n        }\n        if (l instanceof Iterable[][][][][] && r instanceof Iterable[][][][][]) {\n            return Arrays.deepEquals((Iterable[][][][][]) l, (Iterable[][][][][]) r);\n        }\n        if (l instanceof Iterator[][][][][] && r instanceof Iterator[][][][][]) {\n            return Arrays.deepEquals((Iterator[][][][][]) l, (Iterator[][][][][]) r);\n        }\n        if (l instanceof Object[][][][][][] && r instanceof Object[][][][][][]) {\n            return Arrays.deepEquals((Object[][][][][][]) l, (Object[][][][][][]) r);\n        }\n        if (l instanceof String[][][][][][] && r instanceof String[][][][][][]) {\n            return Arrays.deepEquals((String[][][][][][]) l, (String[][][][][][]) r);\n        }\n        if (l instanceof Number[][][][][][] && r instanceof Number[][][][][][]) {\n            return Arrays.deepEquals((Number[][][][][][]) l, (Number[][][][][][]) r);\n        }\n        if (l instanceof Boolean[][][][][][] && r instanceof Boolean[][][][][][]) {\n            return Arrays.deepEquals((Boolean[][][][][][]) l, (Boolean[][][][][][]) r);\n        }\n        if (l instanceof Date[][][][][][] && r instanceof Date[][][][][][]) {\n            return Arrays.deepEquals((Date[][][][][][]) l, (Date[][][][][][]) r);\n        }\n        if (l instanceof Calendar[][][][][][] && r instanceof Calendar[][][][][][]) {\n            return Arrays.deepEquals((Calendar[][][][][][]) l, (Calendar[][][][][][]) r);\n        }\n        if (l instanceof Map[][][][][][] && r instanceof Map[][][][][][]) {\n            return Arrays.deepEquals((Map[][][][][][]) l, (Map[][][][][][]) r);\n        }\n        if (l instanceof Set[][][][][][] && r instanceof Set[][][][][][]) {\n            return Arrays.deepEquals((Set[][][][][][]) l, (Set[][][][][][]) r);\n        }\n        if (l instanceof Collection[][][][][][] && r instanceof Collection[][][][][][]) {\n            return Arrays.deepEquals((Collection[][][][][][]) l, (Collection[][][][][][]) r);\n        }\n        if (l instanceof Iterable[][][][][][] && r instanceof Iterable[][][][][][]) {\n            return Arrays.deepEquals((Iterable[][][][][][]) l, (Iterable[][][][][][]) r);\n        }\n        if (l instanceof Iterator[][][][][][] && r instanceof Iterator[][][][][][]) {\n            return Arrays.deepEquals((Iterator[][][][][][]) l, (Iterator[][][][][][]) r);\n        }\n        if (l instanceof Object[][][][][][][] && r instanceof Object[][][][][][][]) {\n            return Arrays.deepEquals((Object[][][][][][][]) l, (Object[][][][][][][]) r);\n        }\n        if (l instanceof String[][][][][][][] && r instanceof String[][][][][][][]) {\n            return Arrays.deepEquals((String[][][][][][][]) l, (String[][][][][][][]) r);\n        }\n        if (l instanceof Number[][][][][][][] && r instanceof Number[][][][][][][]) {\n            return Arrays.\n            r = ((EvalContext) r).getSingleNodePointer();\n        }\n        if (l instanceof Collection) {\n            l = ((Collection) l).iterator();\n        }\n        if (r instanceof Collection) {\n            r = ((Collection) r).iterator();\n        }\n        if ((l instanceof Iterator) && !(r instanceof Iterator)) {\n            return contains((Iterator) l, r);\n        }\n        if (!(l instanceof Iterator) && (r instanceof Iterator)) {\n            return contains((Iterator) r, l);\n        }\n        if (l instanceof Iterator && r instanceof Iterator) {\n            return findMatch((Iterator) l, (Iterator) r);\n        }\n        return equal(l, r);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}