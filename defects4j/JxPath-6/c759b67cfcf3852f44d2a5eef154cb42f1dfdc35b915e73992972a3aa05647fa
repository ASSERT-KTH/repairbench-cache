{
    "generation": "    /**\n     * Compares two values\n     */\n    protected boolean equal(\n        EvalContext context,\n        Expression left,\n        Expression right) \n    {\n        Object l = left.compute(context);\n        Object r = right.compute(context);\n\n        if (l instanceof InitialContext || l instanceof SelfContext) {\n            l = ((EvalContext) l).getSingleNodePointer();\n        }\n\n        if (r instanceof InitialContext || r instanceof SelfContext) {\n            r = ((EvalContext) r).getSingleNodePointer();\n        }\n\n        // Do NOT automatically convert Collection to Iterator here.\n        // Only treat as Iterator for the 'many' side of comparision.\n\n        boolean lIsCollection = l instanceof Collection;\n        boolean rIsCollection = r instanceof Collection;\n        boolean lIsIterator = l instanceof Iterator;\n        boolean rIsIterator = r instanceof Iterator;\n\n        // Convert Collection to Iterator only if matched with a scalar\n        if ((lIsCollection || lIsIterator) && !(rIsCollection || rIsIterator)) {\n            Iterator lit = l instanceof Iterator ? (Iterator) l : ((Collection) l).iterator();\n            return contains(lit, r);\n        }\n        if (!(lIsCollection || lIsIterator) && (rIsCollection || rIsIterator)) {\n            Iterator rit = r instanceof Iterator ? (Iterator) r : ((Collection) r).iterator();\n            return contains(rit, l);\n        }\n        if ((lIsCollection || lIsIterator) && (rIsCollection || rIsIterator)) {\n            Iterator lit = l instanceof Iterator ? (Iterator) l : ((Collection) l).iterator();\n            Iterator rit = r instanceof Iterator ? (Iterator) r : ((Collection) r).iterator();\n            return findMatch(lit, rit);\n        }\n        return equal(l, r);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}