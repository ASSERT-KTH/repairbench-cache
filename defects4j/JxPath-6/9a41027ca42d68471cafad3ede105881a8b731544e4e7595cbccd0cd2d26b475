{
    "generation": "    /**\n     * Compares two values\n     */\n    protected boolean equal(\n        EvalContext context,\n        Expression left,\n        Expression right) \n    {\n        Object l = left.compute(context);\n        Object r = right.compute(context);\n\n//        System.err.println(\"COMPARING: \" +\n//            (l == null ? \"null\" : l.getClass().getName()) + \" \" +\n//            (r == null ? \"null\" : r.getClass().getName()));\n\n        if (l instanceof InitialContext || l instanceof SelfContext) {\n            l = ((EvalContext) l).getSingleNodePointer();\n        }\n\n        if (r instanceof InitialContext || r instanceof SelfContext) {\n            r = ((EvalContext) r).getSingleNodePointer();\n        }\n\n        if (l instanceof Collection && !(r instanceof Collection)) {\n            return contains(((Collection) l).iterator(), r);\n        }\n\n        if (r instanceof Collection && !(l instanceof Collection)) {\n            return contains(((Collection) r).iterator(), l);\n        }\n\n        if (l instanceof Collection && r instanceof Collection) {\n            Iterator lit = ((Collection) l).iterator();\n            Iterator rit = ((Collection) r).iterator();\n            while (lit.hasNext() && rit.hasNext()) {\n                if (!equal(lit.next(), rit.next())) {\n                    return false;\n                }\n            }\n            return !lit.hasNext() && !rit.hasNext();\n        }\n\n        return equal(l, r);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}