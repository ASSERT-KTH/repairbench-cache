{
    "generation": "protected boolean equal(\n    EvalContext context,\n    Expression left,\n    Expression right) \n{\n    Object l = left.compute(context);\n    Object r = right.compute(context);\n\n    if (l instanceof InitialContext || l instanceof SelfContext) {\n        l = ((EvalContext) l).getSingleNodePointer();\n    }\n    if (r instanceof InitialContext || r instanceof SelfContext) {\n        r = ((EvalContext) r).getSingleNodePointer();\n    }\n\n    // Instead of converting a Collection immediately into an Iterator (which\n    // loses the ability to iterate over the node-set more than once),\n    // we test for a node-set (either a Collection or Iterator) and then obtain\n    // a fresh Iterator if possible.\n    boolean lIsNodeSet = (l instanceof Collection) || (l instanceof Iterator);\n    boolean rIsNodeSet = (r instanceof Collection) || (r instanceof Iterator);\n\n    if (lIsNodeSet && !rIsNodeSet) {\n        Iterator<?> lIter = (l instanceof Collection) ? ((Collection<?>) l).iterator() : (Iterator<?>) l;\n        return contains(lIter, r);\n    }\n    if (!lIsNodeSet && rIsNodeSet) {\n        Iterator<?> rIter = (r instanceof Collection) ? ((Collection<?>) r).iterator() : (Iterator<?>) r;\n        return contains(rIter, l);\n    }\n    if (lIsNodeSet && rIsNodeSet) {\n        Iterator<?> lIter = (l instanceof Collection) ? ((Collection<?>) l).iterator() : (Iterator<?>) l;\n        Iterator<?> rIter = (r instanceof Collection) ? ((Collection<?>) r).iterator() : (Iterator<?>) r;\n        return findMatch(lIter, rIter);\n    }\n    return equal(l, r);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}