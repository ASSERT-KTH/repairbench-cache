{
    "generation": "protected boolean equal(\n    EvalContext context,\n    Expression left,\n    Expression right) \n{\n    Object l = left.compute(context);\n    Object r = right.compute(context);\n\n    if (l instanceof InitialContext || l instanceof SelfContext) {\n        l = ((EvalContext) l).getSingleNodePointer();\n    }\n\n    if (r instanceof InitialContext || r instanceof SelfContext) {\n        r = ((EvalContext) r).getSingleNodePointer();\n    }\n\n    // Handle cases where one is a Collection and the other is not\n    if (l instanceof Collection && !(r instanceof Collection)) {\n        return ((Collection<?>) l).contains(r);\n    }\n    if (r instanceof Collection && !(l instanceof Collection)) {\n        return ((Collection<?>) r).contains(l);\n    }\n\n    // Convert remaining Collections to iterators\n    if (l instanceof Collection) {\n        l = ((Collection<?>) l).iterator();\n    }\n    if (r instanceof Collection) {\n        r = ((Collection<?>) r).iterator();\n    }\n\n    if (l instanceof Iterator && !(r instanceof Iterator)) {\n        return contains((Iterator<?>) l, r);\n    }\n    if (!(l instanceof Iterator) && (r instanceof Iterator)) {\n        return contains((Iterator<?>) r, l);\n    }\n    if (l instanceof Iterator && r instanceof Iterator) {\n        return findMatch((Iterator<?>) l, (Iterator<?>) r);\n    }\n\n    if (l == null) {\n        return (r == null);\n    }\n    return l.equals(r);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}