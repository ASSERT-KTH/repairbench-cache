{
    "generation": "    /**\n     * Compares two values\n     */\n    protected boolean equal(\n        EvalContext context,\n        Expression left,\n        Expression right) \n    {\n        Object l = left.compute(context);\n        Object r = right.compute(context);\n\n//        System.err.println(\"COMPARING: \" +\n//            (l == null ? \"null\" : l.getClass().getName()) + \" \" +\n//            (r == null ? \"null\" : r.getClass().getName()));\n\n        if (l instanceof EvalContext) {\n            l = handleContext((EvalContext) l);\n        }\n\n        if (r instanceof EvalContext) {\n            r = handleContext((EvalContext) r);\n        }\n\n        if (l instanceof Collection) {\n            l = ((Collection) l).iterator();\n        }\n\n        if (r instanceof Collection) {\n            r = ((Collection) r).iterator();\n        }\n\n        if ((l instanceof Iterator) && !(r instanceof Iterator)) {\n            return contains((Iterator) l, r);\n        }\n        if (!(l instanceof Iterator) && (r instanceof Iterator)) {\n            return contains((Iterator) r, l);\n        }\n        if (l instanceof Iterator && r instanceof Iterator) {\n            return findMatch((Iterator) l, (Iterator) r);\n        }\n        return equal(l, r);\n    }\n\n    private Object handleContext(EvalContext context) {\n        if (context instanceof InitialContext || context instanceof SelfContext) {\n            return context.getSingleNodePointer();\n        }\n        // Handle other context types if necessary\n        return context.getValue();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}