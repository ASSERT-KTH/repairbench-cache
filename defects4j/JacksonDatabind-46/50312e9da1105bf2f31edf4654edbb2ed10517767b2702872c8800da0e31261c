{
    "generation": "    @Override\n    public StringBuilder getGenericSignature(StringBuilder sb)\n    {\n        // Example: AtomicReference<String[]>\n        // 1. Append base type signature: \"Ljava/util/concurrent/atomic/AtomicReference\"\n        _classSignature(_class, sb, false);\n        // 2. Append generic type opening bracket: '<'\n        sb.append('<');\n        // 3. Append signature of the referenced type: \"[Ljava/lang/String;\"\n        //    Note: _referencedType.getGenericSignature() is expected to append the full signature\n        //    including the trailing ';' for class types or the full array signature.\n        sb = _referencedType.getGenericSignature(sb);\n        // 4. Append closing bracket '>' and final semicolon ';' for the whole type\n        //    Result: Ljava/util/concurrent/atomic/AtomicReference<[Ljava/lang/String;>;\n        sb.append('>');\n        sb.append(';');\n        return sb;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}