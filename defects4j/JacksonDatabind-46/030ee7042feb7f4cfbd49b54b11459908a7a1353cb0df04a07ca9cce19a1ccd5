{
    "generation": "    @Override\n    public StringBuilder getGenericSignature(StringBuilder sb)\n    {\n        // Example: For AtomicReference<String>, should produce:\n        // Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;>;\n\n        // 1. Append base type signature: \"Ljava/util/concurrent/atomic/AtomicReference\"\n        _classSignature(_class, sb, false);\n        // 2. Append parameter opening bracket: '<'\n        sb.append('<');\n        // 3. Append parameter type signature: \"Ljava/lang/String;\"\n        sb = _referencedType.getGenericSignature(sb);\n        // 4. Append parameter closing bracket: '>'\n        sb.append('>');\n        // 5. Append the final semicolon for the whole signature: ';'\n        sb.append(';');\n        return sb;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}