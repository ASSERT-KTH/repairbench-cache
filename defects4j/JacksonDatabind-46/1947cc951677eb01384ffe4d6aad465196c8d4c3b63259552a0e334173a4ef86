{
    "generation": "    @Override\n    public StringBuilder getGenericSignature(StringBuilder sb)\n    {\n        _classSignature(_class, sb, false); // Appends \"Ljava/util/concurrent/atomic/AtomicReference\" (assuming `false` means no trailing ';')\n        sb.append('<'); // Appends \"<\". sb is now \"Ljava/util/concurrent/atomic/AtomicReference<\"\n        sb = _referencedType.getGenericSignature(sb); // For a SimpleType like String, this would append \"Ljava/lang/String;\".\n                                                   // sb is now \"Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;\"\n        sb.append(';'); // Appends an extra \";\". sb becomes \"Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;;\"\n        return sb;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}