{
    "generation": "    @Override\n    public StringBuilder getGenericSignature(StringBuilder sb)\n    {\n        _classSignature(_class, sb, false); // Appends the raw class signature L<classname> (without ';')\n        sb.append('<');\n        _referencedType.getGenericSignature(sb); // Appends the signature of the referenced type (e.g., Ljava/lang/String;)\n        // For generic type signature L<OUTER><L<INNER;>;>; we need '>' and ';' at the end.\n        // The original code only appended ';', resulting in L<OUTER><L<INNER>;;\n        sb.append(\">;\");\n        return sb;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}