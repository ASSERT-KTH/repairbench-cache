{
    "generation": "public String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    char last = 0;\n    boolean inSingleQuote = false;\n    boolean inDoubleQuote = false;\n    boolean escaped = false;\n\n    do {\n        if (isEmpty()) break;\n        Character c = consume();\n        if (escaped) {\n            escaped = false;\n        } else if (c == '\\\\') {\n            escaped = true;\n        } else if (c == '\\'' && !inDoubleQuote) {\n            inSingleQuote = !inSingleQuote;\n        } else if (c == '\"' && !inSingleQuote) {\n            inDoubleQuote = !inDoubleQuote;\n        }\n\n        if (!inSingleQuote && !inDoubleQuote) {\n            if (c != null) {\n                if (c == open) {\n                    depth++;\n                    if (start == -1) {\n                        start = pos;\n                    }\n                } else if (c == close) {\n                    depth--;\n                }\n            }\n        }\n\n        if (depth > 0 && !inSingleQuote && !inDoubleQuote && !escaped) {\n            end = pos; // don't include the outer match pair in the return\n        }\n        last = c != null ? c : 0;\n    } while (depth > 0);\n\n    return (end >= 0) ? queue.substring(start, end + 1) : \"\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}