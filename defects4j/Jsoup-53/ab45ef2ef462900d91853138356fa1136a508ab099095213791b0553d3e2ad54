{
    "generation": "public String chompBalanced(char open, char close) {\n    boolean inQuote = false;\n    char quoteChar = '\\0';\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    char last = 0;\n\n    do {\n        if (isEmpty()) break;\n        Character c = consume();\n        if (c == null) break;\n\n        // Handle quotes and escapes\n        if ((c == '\\'' || c == '\"')) {\n            if (!inQuote) {\n                inQuote = true;\n                quoteChar = c;\n            } else if (c == quoteChar) {\n                inQuote = false;\n                quoteChar = '\\0';\n            }\n        } else if (c == ESC && !inQuote) {\n            // Skip the next character as it's escaped\n            if (!isEmpty()) {\n                consume();\n            }\n            continue;\n        }\n\n        if (!inQuote) {\n            if (c.equals(open)) {\n                depth++;\n                if (start == -1)\n                    start = pos;\n            } else if (c.equals(close)) {\n                depth--;\n            }\n        }\n\n        if (depth > 0 && last != 0)\n            end = pos; // don't include the outer match pair in the return\n        last = c;\n    } while (depth > 0);\n\n    return (end >= 0 && start >= 0) ? queue.substring(start, end) : \"\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}