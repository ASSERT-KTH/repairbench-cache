{
    "generation": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n        boolean inQuote = false;\n        char quoteChar = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            // Handle quotes\n            if ((c == '\\'' || c == '\"') && last != ESC) {\n                if (inQuote) {\n                    if (c == quoteChar) {\n                        inQuote = false; // closing quote\n                    }\n                } else {\n                    inQuote = true;\n                    quoteChar = c.charValue();\n                }\n            }\n\n            if (!inQuote) {\n                if ((last == 0 || last != ESC) && c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos;\n                } else if ((last == 0 || last != ESC) && c.equals(close)) {\n                    depth--;\n                    if (depth == 0) end = pos; // don't include the closing bracket in the return\n                }\n            }\n\n            if (depth > 0)\n                end = pos; // keep updating end position while we're in the balanced section\n            last = c;\n        } while (depth > 0);\n\n        // If we're still in a quote when we run out of chars, treat it as unbalanced\n        if (inQuote) {\n            return \"\";\n        }\n\n        return (end >= 0) ? queue.substring(start, end) : \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}