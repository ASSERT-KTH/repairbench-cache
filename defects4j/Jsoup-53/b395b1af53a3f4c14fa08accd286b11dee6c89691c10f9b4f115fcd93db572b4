{
    "generation": "public String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    boolean inQuotes = false;\n    char quoteChar = 0;\n\n    do {\n        if (isEmpty()) break;\n        Character c = consume();\n        if (last == 0 || last != ESC) {\n            if (c == quoteChar) {\n                inQuotes = !inQuotes;\n            }\n            if (inQuotes) {\n                last = c;\n                continue;\n            }\n            if (c == open) {\n                depth++;\n                if (start == -1) {\n                    start = pos - 1; // adjust to include the opening character\n                }\n            } else if (c == close) {\n                depth--;\n            }\n        }\n\n        if (depth > 0) {\n            end = pos; // don't include the outer match pair in the return\n        }\n        last = c;\n    } while (depth > 0);\n\n    if (start >= 0 && end >= 0) {\n        return queue.substring(start, end);\n    } else {\n        return \"\";\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}