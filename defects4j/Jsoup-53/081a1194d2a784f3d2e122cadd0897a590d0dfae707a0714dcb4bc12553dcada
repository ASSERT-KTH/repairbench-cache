{
    "generation": "/**\n * Pulls a balanced string off the queue. E.g. if queue is \"(one (two) three) four\", (,) will return \"one (two) three\",\n * and leave \" four\" on the queue. Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\). Those escapes will be left\n * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for\n * contains text strings; use unescape for that.\n * @param open opener\n * @param close closer\n * @return data matched from the queue\n */\npublic String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    char last = 0;\n    boolean inQuote = false;\n    char quoteChar = 0;\n\n    do {\n        if (isEmpty()) break;\n        Character c = consume();\n        if (last == ESC) {\n            // escaped whatever this char is\n        } else if (c == '\\'' || c == '\"') {\n            if (inQuote) {\n                if (c == quoteChar)\n                    inQuote = false;\n            } else {\n                inQuote = true;\n                quoteChar = c;\n            }\n        } else if (!inQuote) {\n            if (c.equals(open)) {\n                depth++;\n                if (start == -1)\n                    start = pos - 1; // include the opener\n            } else if (c.equals(close)) {\n                depth--;\n            }\n        }\n\n        if (depth > 0) {\n            end = pos; // don't include the outer match pair in the return\n        }\n        last = c;\n    } while (depth > 0);\n    \n    final String out = (end >= 0) ? queue.substring(start, end) : \"\";\n    return out;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}