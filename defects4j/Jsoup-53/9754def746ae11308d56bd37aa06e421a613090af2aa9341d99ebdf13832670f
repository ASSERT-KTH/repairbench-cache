{
    "generation": "    /**\n     * Pulls a balanced string off the queue. E.g. if queue is \"(one (two) three) four\", (,) will return \"one (two) three\",\n     * and leave \" four\" on the queue. Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\). Those escapes will be left\n     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for\n     * contains text strings; use unescape for that.\n     * @param open opener\n     * @param close closer\n     * @return data matched from the queue\n     */\n    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n        boolean inQuote = false;\n        char quoteChar = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            if (inQuote) {\n                if (c.equals(quoteChar))\n                    inQuote = false;\n            } else if (c.equals('\\'') || c.equals('\"')) {\n                inQuote = true;\n                quoteChar = c;\n            } else if (last == 0 || last != ESC) {\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos - 1; // include the opener in the start position\n                } else if (c.equals(close))\n                    depth--;\n            }\n\n            if (depth > 0 && last != 0 && !inQuote)\n                end = pos; // don't include the outer match pair in the return, unless inside quotes\n            last = c;\n        } while (depth > 0);\n\n        if (start == -1 || end == -1)\n            return \"\";\n        else\n            return queue.substring(start, end);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}