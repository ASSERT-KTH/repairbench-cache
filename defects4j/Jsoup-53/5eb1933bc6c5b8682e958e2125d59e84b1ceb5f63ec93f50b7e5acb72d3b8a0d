{
    "generation": "public String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    \n    while (!isEmpty()) {\n        char c = consume();\n        \n        // Handle escapes: skip the next character\n        if (c == '\\\\') {\n            if (!isEmpty()) {\n                consume();\n            }\n            continue;\n        }\n        \n        // If we hit a quote, skip over the quoted section entirely.\n        if (c == '\"' || c == '\\'') {\n            char quote = c;\n            while (!isEmpty()) {\n                c = consume();\n                if (c == '\\\\') {\n                    if (!isEmpty()) {\n                        consume();\n                    }\n                } else if (c == quote) {\n                    break;\n                }\n            }\n            continue;\n        }\n        \n        // Process openers and closers (but not when inside quotes)\n        if (c == open) {\n            depth++;\n            // Record the start of content immediately after the first opener.\n            if (start == -1)\n                start = pos;\n        } else if (c == close) {\n            depth--;\n            if (depth == 0) {\n                // When depth goes to 0, set end to just before the closing character.\n                end = pos - 1;\n                break;\n            }\n        }\n        if (depth > 0)\n            end = pos; // update end while still inside balanced text\n    }\n    \n    return (start != -1 && end != -1 && start <= end) ? queue.substring(start, end) : \"\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}