{
    "generation": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n        boolean inSingleQuote = false;\n        boolean inDoubleQuote = false;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n\n            // Check for quotes, toggle state if not escaped\n            if (last == 0 || last != ESC) {\n                if (c == '\\'') {\n                    inSingleQuote = !inSingleQuote;\n                } else if (c == '\"') {\n                    inDoubleQuote = !inDoubleQuote;\n                }\n            }\n\n            boolean inQuote = inSingleQuote || inDoubleQuote;\n\n            // Process open/close only if not in a quote and not escaped\n            if (!inQuote && (last == 0 || last != ESC)) {\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1) {\n                        start = pos;\n                    }\n                } else if (c.equals(close)) {\n                    depth--;\n                }\n            }\n\n            if (depth > 0) {\n                end = pos; // update end while we're in the balanced span\n            }\n\n            last = c;\n        } while (depth > 0 && !isEmpty());\n\n        return (start != -1 && end >= 0) ? queue.substring(start, end) : \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}