{
    "generation": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n        char inQuote = '\\0';\n\n        do {\n            if (isEmpty()) break;\n            char c = consume();\n            boolean isEscaped = (last == ESC);\n\n            if (!isEscaped) {\n                if (inQuote != '\\0') {\n                    if (c == inQuote) {\n                        inQuote = '\\0';\n                    }\n                } else {\n                    if (c == '\\'' || c == '\"') {\n                        inQuote = c;\n                    }\n                }\n            }\n\n            if (inQuote == '\\0' && !isEscaped) {\n                if (c == open) {\n                    depth++;\n                    if (start == -1) {\n                        start = pos - 1; // pos is after consume, adjust to current character's position\n                    }\n                } else if (c == close) {\n                    depth--;\n                }\n            }\n\n            if (depth > 0) {\n                end = pos; // update end while depth is positive\n            }\n\n            last = c;\n        } while (depth > 0);\n\n        if (start != -1 && end > start) {\n            return queue.substring(start, end);\n        } else {\n            return \"\";\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}