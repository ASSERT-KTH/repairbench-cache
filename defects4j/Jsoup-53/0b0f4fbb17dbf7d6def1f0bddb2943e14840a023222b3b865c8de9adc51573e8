{
    "generation": "public String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    char last = 0;\n    boolean inSingleQuote = false;\n    boolean inDoubleQuote = false;\n\n    do {\n        if (isEmpty()) break;\n        Character c = consume();\n        if (last == ESC) {\n            // escaped char, skip special handling\n        } else if (c == '\\'') {\n            if (!inDoubleQuote) inSingleQuote = !inSingleQuote;\n        } else if (c == '\"') {\n            if (!inSingleQuote) inDoubleQuote = !inDoubleQuote;\n        } else if (!inSingleQuote && !inDoubleQuote) {\n            if (c.equals(open)) {\n                depth++;\n                if (start == -1)\n                    start = pos;\n            } else if (c.equals(close)) {\n                depth--;\n            }\n        }\n\n        if (depth > 0 && last != 0)\n            end = pos; // don't include the outer match pair in the return\n        last = c;\n    } while (depth > 0);\n    return (end >= 0) ? queue.substring(start, end) : \"\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}