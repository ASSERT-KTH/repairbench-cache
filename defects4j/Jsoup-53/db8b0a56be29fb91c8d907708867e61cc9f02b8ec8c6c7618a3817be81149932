{
    "generation": "public String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    char last = 0;\n    char inQuote = 0;\n\n    do {\n        if (isEmpty()) break;\n        char c = consume();\n\n        // Handle quotes\n        if (inQuote != 0) {\n            if (c == inQuote && (last != ESC)) {\n                inQuote = 0; // exit quote\n            }\n        } else {\n            if ((c == '\\'' || c == '\"') && (last != ESC)) {\n                inQuote = c; // enter quote\n            }\n        }\n\n        // Process open/close only if not in a quote and not escaped\n        if (inQuote == 0 && (last == 0 || last != ESC)) {\n            if (c == open) {\n                depth++;\n                if (start == -1)\n                    start = pos;\n            } else if (c == close) {\n                depth--;\n            }\n        }\n\n        if (depth > 0 && last != 0)\n            end = pos; // don't include the outer match pair in the return\n        last = c;\n    } while (depth > 0);\n    return (start != -1 && end != -1) ? queue.substring(start, end) : \"\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}