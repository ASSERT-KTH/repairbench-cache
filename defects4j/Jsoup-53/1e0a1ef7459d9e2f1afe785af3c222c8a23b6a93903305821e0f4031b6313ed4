{
    "generation": "public String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    boolean inSingleQuote = false;\n    boolean inDoubleQuote = false;\n    boolean inEscape = false;\n    char prev = 0;\n\n    // The queue begins at pos. We need to keep track.\n    int initialPos = pos;\n\n    while (!isEmpty()) {\n        char c = consume();\n\n        if (inEscape) {\n            inEscape = false;\n            prev = c;\n            continue;\n        }\n        if (c == ESC) {\n            inEscape = true;\n            prev = c;\n            continue;\n        }\n        // Toggle quote status only if not already inside another quote\n        if (c == '\\'' && !inDoubleQuote) {\n            inSingleQuote = !inSingleQuote;\n            prev = c;\n            continue;\n        }\n        if (c == '\"' && !inSingleQuote) {\n            inDoubleQuote = !inDoubleQuote;\n            prev = c;\n            continue;\n        }\n        if (inSingleQuote || inDoubleQuote) {\n            prev = c;\n            continue;\n        }\n\n        if (c == open) {\n            depth++;\n            if (start == -1)\n                start = pos; // pos already incremented in consume()\n        } else if (c == close) {\n            depth--;\n        }\n\n        if (depth == 0 && start != -1) {\n            end = pos - 1; // end is exclusive, pos is 1 past the last match\n            break;\n        }\n        prev = c;\n    }\n    if (start != -1 && end >= start) {\n        return queue.substring(start, end);\n    }\n    return \"\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}