{
    "generation": "public void clear() {\n    Iterator<Map.Entry<String, Integer>> it = entrySet().iterator();\n    while (it.hasNext()) {\n        it.next();\n        it.remove();\n    }\n}\n\n// Corrected KeyIterator's next node computation\nprivate TrieEntry<String, Integer> nextEntry() {\n    if (modCount != expectedModCount) {\n        throw new ConcurrentModificationException();\n    }\n    if (next == null) {\n        throw new NoSuchElementException();\n    }\n    TrieEntry<String, Integer> entry = next;\n    next = findNext(next);\n    return entry;\n}\n\nprivate TrieEntry<String, Integer> findNext(TrieEntry<String, Integer> node) {\n    TrieEntry<String, Integer> next = node.right;\n    if (next == null) {\n        TrieEntry<String, Integer> parent = node.parent;\n        while (parent != null && node == parent.right) {\n            node = parent;\n            parent = node.parent;\n        }\n        return parent;\n    } else {\n        TrieEntry<String, Integer> child = next.left;\n        while (child != null) {\n            next = child;\n            child = next.left;\n        }\n        return next;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}