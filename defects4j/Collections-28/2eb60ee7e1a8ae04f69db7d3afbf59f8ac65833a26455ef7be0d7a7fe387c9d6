{
    "generation": "public class PatriciaTrie<V> extends AbstractMapDecorator<String, V> implements Trie<String, V>, Cloneable, Serializable {\n\n    // ... (other methods and fields)\n\n    @Override\n    public SortedMap<String, V> prefixMap(final String prefix) {\n        return new PrefixSubMap<>(prefix);\n    }\n\n    // ... (other methods and fields)\n\n    private final class PrefixSubMap<V> extends AbstractSortedMapDecorator<String, V> {\n        private final String prefix;\n\n        PrefixSubMap(final String prefix) {\n            this.prefix = prefix;\n        }\n\n        @Override\n        protected SortedMap<String, V> decorated() {\n            final String lower = prefix;\n            final String upper = prefix.substring(0, prefix.length() - 1) + (char) (prefix.charAt(prefix.length() - 1) + 1);\n            return headMap(upper).tailMap(lower);\n        }\n\n        @Override\n        public void clear() {\n            // Do not clear the underlying trie, just clear the view\n            super.clear();\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}