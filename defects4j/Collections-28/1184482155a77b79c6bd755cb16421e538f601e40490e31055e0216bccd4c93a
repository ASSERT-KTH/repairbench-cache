{
    "generation": "public SortedMap<K, V> prefixMap(final K key) {\n    final int lengthInBits = length(key) * 8;\n    return new PrefixRangeMap(key, lengthInBits);\n}\n\nprivate final class PrefixRangeMap extends AbstractBitwiseTrie<K, V>.RangeMap {\n    private final K prefix;\n    private final int offsetInBits;\n    \n    private PrefixRangeMap(final K prefix, final int offsetInBits) {\n        this.prefix = prefix;\n        this.offsetInBits = offsetInBits;\n    }\n    \n    @Override\n    public void clear() {\n        Iterator<K> iter = keySet().iterator();\n        while (iter.hasNext()) {\n            iter.next();\n            iter.remove();\n        }\n    }\n    \n    // ... other methods of PrefixRangeMap ...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}