{
    "generation": "@Override\npublic SortedMap<K, V> prefixMap(final K prefix) {\n    AbstractMapEntry<K, V> entry = getEntry(prefix);\n    if (entry == null) {\n        // prefix doesn't match any key in the trie, return empty map\n        return Collections.emptySortedMap();\n    }\n\n    final BitSet prefixBitSet = toBitSet(prefix, entry.getKey());\n    if (!isPrefix(prefixBitSet, entry.getKeyBitSet())) {\n        // prefix doesn't match any key in the trie, return empty map\n        return Collections.emptySortedMap();\n    }\n\n    final NavigableMap<AbstractMapEntry<K, V>, V> subMap = navigableMap.tailMap(entry, true);\n    return new PrefixSubMap<>(subMap, prefixBitSet, comparator);\n}\n\nprivate static class PrefixSubMap<K, V> extends NavigableSubMap<K, V> {\n    private final BitSet prefixBitSet;\n\n    PrefixSubMap(final NavigableMap<AbstractMapEntry<K, V>, V> subMap, final BitSet prefixBitSet,\n                 final Comparator<? super K> comparator) {\n        super(subMap, comparator);\n        this.prefixBitSet = prefixBitSet;\n    }\n\n    @Override\n    public void clear() {\n        // Do not allow clearing the prefix map as it would modify the underlying trie\n        throw new UnsupportedOperationException(\"Prefix map does not support clear operation\");\n    }\n\n    @Override\n    protected AbstractMapEntry<K, V> toMapEntry(final AbstractMapEntry<K, V> entry) {\n        return new PrefixMapEntry<>(entry, prefixBitSet);\n    }\n\n    private static class PrefixMapEntry<K, V> extends AbstractMapEntry<K, V> {\n        private final AbstractMapEntry<K, V> entry;\n        private final BitSet prefixBitSet;\n\n        PrefixMapEntry(final AbstractMapEntry<K, V> entry, final BitSet prefixBitSet) {\n            this.entry = entry;\n            this.prefixBitSet = prefixBitSet;\n        }\n\n        @Override\n        public K getKey() {\n            return fromBitSet(prefixBitSet, entry.getKey(), entry.getKeyBitSet());\n        }\n\n        @Override\n        public V getValue() {\n            return entry.getValue();\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}