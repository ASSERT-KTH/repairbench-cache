{
    "generation": "protected V removeEntry(TrieNode node) {\n    V value = node.getValue();\n    TrieNode parent = node.getParent();\n    node.setValue(null);\n    node.setKey(null);\n\n    if (node.getLeftChild() == null && node.getRightChild() == null) {\n        if (parent != null) {\n            if (parent.getLeftChild() == node) {\n                parent.setLeftChild(null);\n            } else {\n                parent.setRightChild(null);\n            }\n            prune(parent);\n        } else {\n            root = null;\n        }\n    }\n\n    size--;\n    modCount++;\n    return value;\n}\n\nprivate void prune(TrieNode node) {\n    while (node != null && node.getKey() == null \n            && node.getLeftChild() == null && node.getRightChild() == null) {\n        TrieNode parent = node.getParent();\n        if (parent != null) {\n            if (parent.getLeftChild() == node) {\n                parent.setLeftChild(null);\n            } else {\n                parent.setRightChild(null);\n            }\n            node = parent;\n        } else {\n            root = null;\n            break;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}