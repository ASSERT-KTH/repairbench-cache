{
    "generation": "    @Override\n    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        // U2U_CONSTRUCTOR_TYPE typically represents FunctionType (or FunctionType|UnknownType).\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n\n        if (resultEqualsValue) { // Handles cases like `typeof x == \"function\"` or `goog.isFunction(x)` (when true)\n          // If the original type is an ObjectType and we are asserting it's a function,\n          // then this ObjectType should be narrowed to FunctionType.\n          // ObjectType is a supertype of FunctionType, so a generic object can be a function.\n          return ctorType;\n        } else { // Handles cases like `typeof x != \"function\"` or `goog.isFunction(x)` (when false)\n          // If the original type is an ObjectType and we are asserting it's NOT a function,\n          // it means this specific ObjectType instance is not a Function.\n          // Other kinds of objects (like Array, Date, plain objects) are still valid here.\n          // Thus, the type remains ObjectType, effectively excluding FunctionType from it\n          // in the context of the overall type narrowing for unions.\n          // Returning 'null' here (as in the original code) would incorrectly filter\n          // out valid non-function object types (e.g., Array) if they were part of a union\n          // that included a generic ObjectType.\n          return type;\n        }\n      }\n      // This handles `typeof x == \"object\"` or `typeof x != \"object\"`.\n      // If `value` is \"object\":\n      //   - If `resultEqualsValue` is true (`x == \"object\"`), then `matchesExpectation(\"object\")` is true.\n      //     An ObjectType matches \"object\", so return `type` (the original ObjectType).\n      //   - If `resultEqualsValue` is false (`x != \"object\"`), then `matchesExpectation(\"object\")` is false.\n      //     An ObjectType cannot be \"not an object\", so return `null` (impossible type).\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}