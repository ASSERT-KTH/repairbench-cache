{
    "generation": "@Override\npublic JSType caseObjectType(ObjectType type) {\n  if (value.equals(\"function\")) {\n    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n    if (resultEqualsValue) {\n      // true\u2010branch: keep only the function part of \u2018type\u2019\n      if (type.isSubtype(ctorType)) {\n        // a more specific function subtype\n        return type;\n      } else if (ctorType.isSubtype(type)) {\n        // a supertype covering functions \u2192 refine to the base Function\n        return ctorType;\n      } else {\n        // no overlap with functions\n        return null;\n      }\n    } else {\n      // false\u2010branch: drop any pure function types, keep the rest\n      return type.isSubtype(ctorType) ? null : type;\n    }\n  }\n  // non\u2010\"function\" typeof checks fall through to the \"object\" case\n  return matchesExpectation(\"object\") ? type : null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}