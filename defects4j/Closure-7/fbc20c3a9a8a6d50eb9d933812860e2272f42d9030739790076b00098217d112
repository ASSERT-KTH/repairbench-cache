{
    "generation": "@Override\npublic JSType caseObjectType(ObjectType type) {\n  if (value.equals(\"function\")) {\n    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n    if (resultEqualsValue) {\n      // positive branch: typeof x == \"function\"\n      return ctorType.isSubtype(type) ? ctorType : null;\n    } else {\n      // negative branch: typeof x != \"function\" \u2014 leave the original type\n      return type;\n    }\n  }\n  // for all other literals (e.g. \"object\"), only refine when it matches the expectation\n  return matchesExpectation(\"object\") ? type : null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}