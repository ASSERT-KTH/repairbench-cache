{
    "generation": "    @Override\n    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n        // If the comparison is true (e.g., `typeof x == 'function'` is true)\n        // and the current type 'type' can potentially be a function (i.e., 'type' is a supertype of 'Function'\n        // or a union type containing 'Function'), then refine 'type' to 'Function'.\n        // Otherwise, if the comparison is false (or if 'type' cannot be a function),\n        // return null, indicating no specific refinement can be made by this method for ObjectType.\n        return resultEqualsValue && type.isSupertype(ctorType) ? ctorType : null;\n      }\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}