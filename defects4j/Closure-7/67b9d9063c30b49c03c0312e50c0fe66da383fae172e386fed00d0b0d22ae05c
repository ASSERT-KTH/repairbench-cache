{
    "generation": "    @Override\n    public JSType caseObjectType(ObjectType type) {\n      if (value.equals(\"function\")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n        if (resultEqualsValue) {\n          return ctorType.isSubtype(type) ? ctorType : null;\n        } else {\n          // If result does not equal value, we need to consider all possible types\n          // including the original type and the function type.\n          // Here, we return the union of the original type and the function type\n          // if the original type is not already a function type.\n          if (type.isSubtypeOf(ctorType)) {\n            return type;\n          } else {\n            return getNativeType(OBJECT_FUNCTION_TYPE);\n          }\n        }\n      }\n      return matchesExpectation(\"object\") ? type : null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}