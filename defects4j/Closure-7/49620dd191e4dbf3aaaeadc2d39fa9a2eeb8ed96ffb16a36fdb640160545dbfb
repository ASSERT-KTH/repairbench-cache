{
    "generation": "@Override\npublic JSType caseObjectType(ObjectType type) {\n  if (value.equals(\"function\")) {\n    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n    if (resultEqualsValue) {\n      // Only keep function types\n      return ctorType.isSubtype(type) ? ctorType : null;\n    } else {\n      // Exclude function subtypes from the object type\n      JSType filtered = type.getGreatestSubtype(ctorType).isUnknownType()\n          ? type\n          : type.diff(ctorType);\n      return filtered;\n    }\n  }\n  return matchesExpectation(\"object\") ? type : null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}