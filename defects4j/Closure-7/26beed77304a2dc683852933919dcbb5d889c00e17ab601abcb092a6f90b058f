{
    "generation": "@Override\npublic JSType caseObjectType(ObjectType type) {\n  if (value.equals(\"function\")) {\n    JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n    if (resultEqualsValue) {\n      // Keep only ctorType if it's a subtype of the type (i.e., filter down)\n      return ctorType.isSubtype(type) ? ctorType : null;\n    } else {\n      // Exclude function subtypes from 'type':\n      if (ctorType.isSubtype(type)) {\n        // Remove ctorType from 'type', may widen type\n        return type.diff(ctorType);\n      } else {\n        return type;\n      }\n    }\n  }\n  return matchesExpectation(\"object\") ? type : null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}