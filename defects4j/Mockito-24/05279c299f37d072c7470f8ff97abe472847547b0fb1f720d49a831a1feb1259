{
    "generation": "public Object answer(InvocationOnMock invocation) {\n    if (methodsGuru.isToString(invocation.getMethod())) {\n        Object mock = invocation.getMock();\n        MockName name = mockUtil.getMockName(mock);\n        if (name.isDefault()) {\n            return \"Mock for \" +\n                   mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() +\n                   \", hashCode: \" + mock.hashCode();\n        } else {\n            return name.toString();\n        }\n    } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n        Object mock  = invocation.getMock();\n        Object other = invocation.getArgument(0);\n        // return 0 if comparing the same reference, otherwise any non\u2010zero\n        return (mock == other ? 0 : 1);\n    }\n\n    Class<?> returnType = invocation.getMethod().getReturnType();\n    return returnValueFor(returnType);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}