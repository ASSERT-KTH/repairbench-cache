{
    "generation": "    /**\n     * <p>Formats a <code>Calendar</code> object into the\n     * supplied <code>StringBuffer</code>.</p>\n     * \n     * @param calendar  the calendar to format\n     * @param buf  the buffer to format into\n     * @return the specified string buffer\n     */\n    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        if (mTimeZoneForced) {\n            // LANG-538:\n            // This bug occurs if the calendar's fields are set, but the internal time\n            // (milliseconds since epoch) is not yet computed. If setTimeZone() is then\n            // called, the calendar will interpret the existing field values in the new\n            // timezone, instead of converting the point in time to the new timezone.\n            // To fix this, we force the calendar to compute its internal time\n            // before setting the new timezone.\n            calendar = (Calendar) calendar.clone();\n            calendar.getTimeInMillis(); // Force computation of time in original timezone\n            calendar.setTimeZone(mTimeZone);\n        }\n        return applyRules(calendar, buf);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}