{
    "generation": "    /**\n     * Creates a period from the given millisecond duration with the standard period type\n     * and ISO rules, ensuring that the calculation is performed with the time-only period type.\n     * <p>\n     * The calculation uses the hour, minute, second and millisecond fields.\n     * The input duration is precise, therefore the calculation does not depend on any\n     * chronology or time zone. The period type is standard (including years, months, etc)\n     * however only the time fields described here are non-zero.\n     *\n     * @param duration  the duration, in milliseconds\n     */\n    protected BasePeriod(long duration) {\n        // Constructor delegates to the one specified below,\n        // thus using the standard period type.\n        // The calculation is done manually here to satisfy the contract\n        // which requires basing the calculation on time fields only.\n        // NOTE: This constructor exists to fulfill the contract of\n        // new Period(long) and new MutablePeriod(long).\n        // Javadoc is specific to those classes.\n\n        PeriodType type = PeriodType.standard(); // Resulting type is standard.\n        \n        // Perform the calculation manually for time fields based on precise definitions.\n        long durationMillis = duration;\n        int millis = FieldUtils.safeToInt(durationMillis % DateTimeConstants.MILLIS_PER_SECOND);\n        long R = durationMillis / DateTimeConstants.MILLIS_PER_SECOND;\n        int seconds = FieldUtils.safeToInt(R % DateTimeConstants.SECONDS_PER_MINUTE);\n        R = R / DateTimeConstants.SECONDS_PER_MINUTE;\n        int minutes = FieldUtils.safeToInt(R % DateTimeConstants.MINUTES_PER_HOUR);\n        R = R / DateTimeConstants.MINUTES_PER_HOUR;\n        int hours = FieldUtils.safeToInt(R); // Total hours\n        \n        // Call the constructor that sets all fields, ensuring date fields are zero\n        // and the type is standard, fulfilling the documented behavior.\n        this(0, 0, 0, 0, hours, minutes, seconds, millis, type);\n        // bug [3264409]\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}