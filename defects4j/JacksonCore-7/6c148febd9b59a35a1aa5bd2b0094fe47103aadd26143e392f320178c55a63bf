{
    "generation": "    public int writeValue() {\n        // Called BY Generator BEFORE value is output: needs to check if value is expected,\n        // and indicate what separator (if any) is needed.\n\n        // Most likely, object: needs to verify it's legal to output a value;\n        // i.e. field name has been written\n        if (_type == TYPE_OBJECT) {\n            // Check if expecting value (i.e., after field name):\n            if (!_gotName) {\n                // If not, expecting field name\n                // NOTE: JsonWriteContext uses value 5 for this status\n                return STATUS_EXPECT_NAME;\n            }\n            // Ok, expecting value; state change is that name is now used\n            _gotName = false;\n            ++_index;\n            // Status code indicates that a value is due next; no separator needed:\n            // (colon was already output by writeFieldName())\n            return STATUS_OK_AFTER_COLON;\n        }\n\n        // Ok, array?\n        if (_type == TYPE_ARRAY) {\n            int ix = _index;\n            ++_index;\n            // If first element, fine AS-IS; otherwise need comma:\n            return (ix < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;\n        }\n        \n        // Nope, root context\n        // No commas within root context, but need space if multiple values\n        ++_index;\n        // If first element, fine AS-IS; otherwise need space:\n        return (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}