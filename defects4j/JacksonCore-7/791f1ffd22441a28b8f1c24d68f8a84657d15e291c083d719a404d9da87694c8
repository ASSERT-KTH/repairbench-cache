{
    "generation": "    public int writeValue() {\n        // Most likely, object:\n        if (_type == TYPE_OBJECT) {\n            // A value is only valid when a name has just been written (_currentName != null)\n            if (_currentName == null) {\n                // Trying to write a value, but we expect a name. This is an error.\n                return STATUS_EXPECT_NAME;\n            }\n            // Valid value write: Consume the field name, update state for next write.\n            // (_currentName points to field name that has been written)\n            _currentName = null;\n            _gotName = false; // after value we next expect a name\n            _index++;\n            // Return status indicating what separator was needed BEFORE this value\n            return STATUS_OK_AFTER_COLON;\n        }\n\n        // Ok, array?\n        if (_type == TYPE_ARRAY) {\n            int ix = _index;\n            _index++;\n            // If ix < 0, first element: STATUS_OK_AS_IS. Otherwise: STATUS_OK_AFTER_COMMA\n            return (ix < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;\n        }\n        \n        // Nope, root context\n        // No commas within root context, but need space\n        _index++;\n        // If index is 0 after increment, it was the first value: STATUS_OK_AS_IS. Otherwise: STATUS_OK_AFTER_SPACE\n        return (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}