{
    "generation": "    public int writeValue() {\n        // Most likely, object:\n        if (_type == TYPE_OBJECT) {\n            // If we are in an object context and a field name has not yet been written,\n            // this is an invalid state for writing a value.\n            // We should indicate that a field name is expected first.\n            if (!_gotName) {\n                return STATUS_EXPECT_NAME;\n            }\n            // A field name was just written, so reset _gotName for the next field.\n            _gotName = false;\n            // Increment the index to count this (name, value) pair.\n            ++_index;\n            // Return status indicating that a colon should precede the value.\n            return STATUS_OK_AFTER_COLON;\n        }\n\n        // Ok, array?\n        if (_type == TYPE_ARRAY) {\n            int ix = _index;\n            ++_index;\n            // For the first element in an array, no separator needed.\n            // For subsequent elements, a comma is needed.\n            return (ix < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;\n        }\n        \n        // Nope, root context\n        // No commas within root context, but need space between root-level values\n        // (if more than one is allowed, which usually is not recommended for JSON).\n        ++_index;\n        // For the first root value, no space needed.\n        // For subsequent root values, a space is needed.\n        return (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}