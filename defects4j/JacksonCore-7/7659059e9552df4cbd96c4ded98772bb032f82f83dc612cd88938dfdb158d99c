{
    "generation": "    public int writeValue() {\n        // Most likely, object:\n        if (_type == TYPE_OBJECT) {\n            // If we are expecting a name, that's an error\n            if (!_gotName) {\n                // Jackson versions before 2.10 returned STATUS_OK_AFTER_COLON, which was incorrect\n                // and could lead to invalid JSON. See [core#177]\n                // Caller needs to check for this failure case\n                return STATUS_EXPECT_NAME;\n            }\n            // Otherwise, we are expecting a value, which is what caller is trying to do.\n            _gotName = false; // Ok, value written, next an optional name/end-object\n            ++_index;\n            return STATUS_OK_AFTER_COLON; // Need to output the colon first\n        }\n\n        // Ok, array?\n        if (_type == TYPE_ARRAY) {\n            int ix = _index;\n            ++_index;\n            // If first element, status is ok-as-is; otherwise need comma\n            return (ix < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;\n        }\n        \n        // Nope, root context\n        // No commas within root context, but need space if multiple values\n        ++_index;\n        // If first element, status is ok-as-is; otherwise need space\n        return (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}