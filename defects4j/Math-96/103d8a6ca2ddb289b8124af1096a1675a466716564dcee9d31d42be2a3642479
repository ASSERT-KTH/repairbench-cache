{
    "generation": "/**\n * Test for the equality of two Complex objects.\n * <p>\n * If both the real and imaginary parts of two Complex numbers\n * are exactly the same, and neither is <code>Double.NaN</code>, the two\n * Complex objects are considered to be equal (this also makes +0.0\n * and -0.0 compare as equal).</p>\n * <p>\n * All <code>NaN</code> values are considered to be equal \u2013 i.e., if either\n * (or both) real and imaginary parts of the complex number are equal\n * to <code>Double.NaN</code>, the complex number is equal to \n * <code>Complex.NaN</code>.</p>\n *\n * @param other Object to test for equality to this\n * @return true if two Complex objects are equal, false if\n *         object is null, not an instance of Complex, or\n *         not equal to this Complex instance\n */\n@Override\npublic boolean equals(Object other) {\n    if (this == other) {\n        return true;\n    }\n    if (!(other instanceof Complex)) {\n        return false;\n    }\n    Complex rhs = (Complex) other;\n    // if either is NaN, both must be NaN\n    if (this.isNaN() || rhs.isNaN()) {\n        return this.isNaN() && rhs.isNaN();\n    }\n    // exact match for real and imaginary parts, treating +0.0 and -0.0 as equal\n    return (this.real == rhs.getReal()) &&\n           (this.imaginary == rhs.getImaginary());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}