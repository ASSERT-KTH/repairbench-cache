{
    "generation": "  /**\n   * Resolve the referenced type within the enclosing scope.\n   */\n  @Override\n  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    // First, try resolving via the registry\n    boolean resolvedRegistry = resolveViaRegistry(t, enclosing);\n    if (resolvedRegistry) {\n      // Check for implicit prototype cycle after resolving via registry\n      if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n        return registry.isLastGeneration() ? getReferencedType() : this;\n      }\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ? getReferencedType() : this;\n    }\n\n    // If not resolved via registry, try resolving via properties\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n      return registry.isLastGeneration() ? getReferencedType() : this;\n    }\n\n    super.resolveInternal(t, enclosing);\n    if (isResolved()) {\n      finishPropertyContinuations();\n    }\n    return registry.isLastGeneration() ? getReferencedType() : this;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}