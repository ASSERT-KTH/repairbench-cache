{
    "generation": "  /**\n   * Resolve the referenced type within the enclosing scope.\n   */\n  @Override\n  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    // First attempt to resolve via the registry\n    boolean resolved = resolveViaRegistry(t, enclosing);\n\n    // Check for implicit prototype cycle and handle it\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n    }\n\n    if (resolved) {\n      // If resolved via registry, call super and finish property continuations\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ? getReferencedType() : this;\n    }\n\n    // If not resolved via registry, attempt to resolve via properties\n    resolveViaProperties(t, enclosing);\n\n    // Check for implicit prototype cycle and handle it again\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n    }\n\n    // Call super and finish property continuations if resolved\n    super.resolveInternal(t, enclosing);\n    if (isResolved()) {\n      finishPropertyContinuations();\n    }\n\n    // Return the resolved type or this\n    return registry.isLastGeneration() ? getReferencedType() : this;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}