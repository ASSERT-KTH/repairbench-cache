{
    "generation": "  /**\n   * Resolve the referenced type within the enclosing scope.\n   */\n  @Override\n  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    // TODO(user): Investigate whether it is really necessary to keep two\n    // different mechanisms for resolving named types, and if so, which order\n    // makes more sense. Now, resolution via registry is first in order to\n    // avoid triggering the warnings built into the resolution via properties.\n    boolean resolved = resolveViaRegistry(t, enclosing);\n\n    // If a cycle is detected after attempting resolution via registry,\n    // handle the cycle and return early to prevent infinite recursion.\n    // When a cycle is detected, it means 'this' type is already on the\n    // resolution stack. To break the infinite loop, we report the error\n    // and then mark the type as \"resolved\" (in an erroneous state)\n    // and return immediately, without further recursive calls.\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n      // After handling the cycle, the type should be considered resolved in an\n      // erroneous state to prevent further recursion.\n      // Do NOT call super.resolveInternal here, as it might re-trigger the cycle\n      // if it attempts to resolve the underlying type again.\n      // The handleTypeCycle() method is expected to put the type into a consistent\n      // error state.\n      return this;\n    }\n\n    if (resolved) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ?\n          getReferencedType() : this;\n    }\n\n    resolveViaProperties(t, enclosing);\n\n    // If a cycle is detected after attempting resolution via properties,\n    // handle the cycle and return early.\n    // Similar to the registry case, this prevents further recursion.\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n      // Same as above: prevent further recursive calls.\n      return this;\n    }\n\n    super.resolveInternal(t, enclosing);\n    if (isResolved()) {\n      finishPropertyContinuations();\n    }\n    return registry.isLastGeneration() ?\n        getReferencedType() : this;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}