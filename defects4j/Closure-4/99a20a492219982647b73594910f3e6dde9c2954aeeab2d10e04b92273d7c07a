{
    "generation": "/**\n * Resolve the referenced type within the enclosing scope.\n */\n@Override\nJSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n  // First, detect cycles early to avoid infinite recursion.\n  if (detectImplicitPrototypeCycle()) {\n    handleTypeCycle(t);\n    return this;\n  }\n\n  // Attempt to resolve via registry.\n  boolean resolved = resolveViaRegistry(t, enclosing);\n  if (detectImplicitPrototypeCycle()) { // check again after resolution\n    handleTypeCycle(t);\n    return this;\n  }\n\n  if (resolved) {\n    super.resolveInternal(t, enclosing);\n    finishPropertyContinuations();\n    return registry.isLastGeneration() ? getReferencedType() : this;\n  }\n\n  // Attempt to resolve via properties if not resolved by registry.\n  resolveViaProperties(t, enclosing);\n  if (detectImplicitPrototypeCycle()) { // check again after resolution\n    handleTypeCycle(t);\n    return this;\n  }\n\n  super.resolveInternal(t, enclosing);\n  if (isResolved()) {\n    finishPropertyContinuations();\n  }\n  return registry.isLastGeneration() ? getReferencedType() : this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}