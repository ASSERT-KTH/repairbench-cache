{
    "generation": "    public int getOffsetFromLocal(long instantLocal) {\n        // get the offset at instantLocal (first estimate)\n        final int offsetLocal = getOffset(instantLocal);\n        // adjust instantLocal using the estimate and recalc the offset\n        final long instantAdjusted = instantLocal - offsetLocal;\n        final int offsetAdjusted = getOffset(instantAdjusted);\n        // if the offsets differ, we must be near a DST boundary\n        if (offsetLocal != offsetAdjusted) {\n            // we need to ensure that time is always after the DST gap\n            // this happens naturally for positive offsets, but not for negative\n            if ((offsetLocal - offsetAdjusted) < 0) {\n                // if we just return offsetAdjusted then the time is pushed\n                // back before the transition, whereas it should be\n                // on or after the transition\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    return offsetLocal;\n                }\n            }\n        } else if (offsetLocal > 0) {\n            long prev = previousTransition(instantAdjusted);\n            if (prev < instantAdjusted) {\n                int offsetPrev = getOffset(prev);\n                int diff = offsetPrev - offsetLocal;\n                if (instantAdjusted - prev <= diff) {\n                    return offsetPrev;\n                }\n            }\n        }\n\n        // handle ambiguous times by preferring DST (summer) time\n        // this is the fix for the London timezone issue\n        if (offsetLocal != offsetAdjusted) {\n            int[] offsets = getOffsetsFromLocal(instantAdjusted, offsetLocal, offsetAdjusted);\n            if (offsets != null && offsets.length > 1) {\n                // prefer the DST offset (usually the larger one for positive offsets)\n                return Math.max(offsets[0], offsets[1]);\n            }\n        }\n        return offsetAdjusted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}