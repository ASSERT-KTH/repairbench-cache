{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // first estimate offset using the local instant\n    final int offsetLocal = getOffset(instantLocal);\n    // adjust the instant and re\u2010compute the offset\n    final long instantAdjusted = instantLocal - offsetLocal;\n    final int offsetAdjusted = getOffset(instantAdjusted);\n    // if the two offsets differ, we are near a DST boundary (gap or overlap)\n    if (offsetLocal != offsetAdjusted) {\n        // DST gap: offset increases\n        if (offsetLocal - offsetAdjusted < 0) {\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal != nextAdjusted) {\n                // in a gap, keep the first estimate\n                return offsetLocal;\n            }\n        }\n    } else {\n        // possible overlap: pick the earlier (daylight) instant\n        long prev = previousTransition(instantAdjusted);\n        if (prev < instantAdjusted) {\n            // use the offset *before* the transition\n            int offsetPrev = getOffset(prev - 1);\n            int diff = offsetPrev - offsetLocal;\n            if (instantAdjusted - prev <= diff) {\n                return offsetPrev;\n            }\n        }\n    }\n    // default\n    return offsetAdjusted;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}