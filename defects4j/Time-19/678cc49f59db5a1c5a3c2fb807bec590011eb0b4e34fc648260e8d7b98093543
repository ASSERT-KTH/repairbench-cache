{
    "generation": "    public int getOffsetFromLocal(long instantLocal) {\n        // get the offset at instantLocal (first estimate)\n        final int offsetLocal = getOffset(instantLocal);\n        // adjust instantLocal using the estimate and recalc the offset\n        final long instantAdjusted = instantLocal - offsetLocal;\n        final int offsetAdjusted = getOffset(instantAdjusted);\n\n        // if the offsets differ, we must be near a DST boundary\n        if (offsetLocal != offsetAdjusted) {\n            // Gap (offsetLocal < offsetAdjusted): Standard to Daylight\n            if ((offsetLocal - offsetAdjusted) < 0) {\n                // if we just return offsetAdjusted then the time is pushed\n                // back before the transition, whereas it should be\n                // on or after the transition\n                long nextLocal = nextTransition(instantAdjusted);\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                if (nextLocal != nextAdjusted) {\n                    return offsetLocal;\n                }\n            } else { // Overlap (offsetLocal > offsetAdjusted): Daylight to Standard\n                // This means offsetLocal is the 'daylight' offset and offsetAdjusted is the 'standard' offset.\n                // We want to return offsetLocal (daylight offset) according to the rule \"favour daylight (summer) time\".\n                return offsetLocal;\n            }\n        } else { // offsetLocal == offsetAdjusted: Either no transition, or an overlap where initial guess was standard time.\n            // This is the common scenario for overlaps where getOffset(instantLocal) already returns the standard offset.\n            // Check for previous transition to find a potential daylight offset to prefer.\n            long prev = previousTransition(instantAdjusted);\n            if (prev < instantAdjusted) { // If there was a previous transition before instantAdjusted\n                int offsetPrev = getOffset(prev); // Get the offset active *before* the transition at 'prev'\n                int diff = offsetPrev - offsetLocal;\n                // If offsetPrev is a larger offset (e.g., daylight saving) and instantAdjusted falls within the ambiguous period\n                // (which is 'diff' long from 'prev'), then we prefer offsetPrev.\n                if (diff > 0 && instantAdjusted - prev <= diff) {\n                    return offsetPrev;\n                }\n            }\n        }\n        return offsetAdjusted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}