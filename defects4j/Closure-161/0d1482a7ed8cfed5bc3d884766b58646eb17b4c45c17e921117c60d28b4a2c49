{
    "generation": "private Node tryFoldArrayAccess(Node n, Node left, Node right) {\n    Node parent = n.getParent();\n    if (right.getType() != Token.NUMBER) {\n        return n;\n    }\n\n    double index = right.getDouble();\n    int intIndex = (int) index;\n    if (intIndex != index) {\n        error(INVALID_GETELEM_INDEX_ERROR, right);\n        return n;\n    }\n\n    if (intIndex < 0) {\n        error(INDEX_OUT_OF_BOUNDS_ERROR, right);\n        return n;\n    }\n\n    // Check if the array has enough elements\n    int arrayLength = getNodeCount(left.getFirstChild());\n    if (intIndex >= arrayLength) {\n        error(INDEX_OUT_OF_BOUNDS_ERROR, right);\n        return n;\n    }\n\n    Node elem = left.getFirstChild();\n    for (int i = 0; elem != null && i < intIndex; i++) {\n        elem = elem.getNext();\n    }\n\n    if (elem == null) {\n        error(INDEX_OUT_OF_BOUNDS_ERROR, right);\n        return n;\n    }\n\n    if (elem.getType() == Token.EMPTY) {\n        elem = NodeUtil.newUndefinedNode(elem);\n    } else {\n        left.removeChild(elem);\n    }\n\n    n.getParent().replaceChild(n, elem);\n    reportCodeChange();\n    return elem;\n}\n\n// Helper method to get the number of elements in the array\nprivate int getNodeCount(Node arrayNode) {\n    int count = 0;\n    Node elem = arrayNode.getNext();\n    while (elem != null && elem.getType() != Token.COMMA) {\n        if (elem.getType() != Token.EMPTY) {\n            count++;\n        }\n        elem = elem.getNext();\n    }\n    return count;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}