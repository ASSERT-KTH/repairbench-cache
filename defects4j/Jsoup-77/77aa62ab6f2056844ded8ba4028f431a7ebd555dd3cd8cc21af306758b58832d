{
    "generation": "    /**\n     * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not\n     * found, skips.\n     *\n     * @param endTag tag to close\n     */\n    private void popStackToClose(Token.EndTag endTag) {\n        String elName = endTag.name();\n        Element firstFound = null;\n\n        // Find the first occurrence of an element with the given tag name, searching from the top of the stack.\n        // HTML tag names are case-insensitive, so we need to compare them ignoring case.\n        for (int pos = stack.size() -1; pos >= 0; pos--) {\n            Element next = stack.get(pos);\n            // Bug fix: Use equalsIgnoreCase to handle case-insensitivity of HTML tags.\n            // nodeName() typically returns the normalized (lowercase) name,\n            // while endTag.name() might preserve the original casing (e.g., \"DIV\").\n            if (next.nodeName().equalsIgnoreCase(elName)) {\n                firstFound = next;\n                break;\n            }\n        }\n        if (firstFound == null)\n            return; // not found, skip\n\n        // Pop elements from the stack starting from the top until the 'firstFound' element is removed.\n        // This effectively closes all elements above 'firstFound' as well.\n        for (int pos = stack.size() -1; pos >= 0; pos--) {\n            Element next = stack.get(pos);\n            stack.remove(pos);\n            if (next == firstFound)\n                break;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}