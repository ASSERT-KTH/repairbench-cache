{
    "generation": "    /**\n     * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not\n     * found, skips.\n     *\n     * @param endTag tag to close\n     */\n    private void popStackToClose(Token.EndTag endTag) {\n        String elName = endTag.name();\n        Element firstFound = null;\n\n        for (int pos = stack.size() -1; pos >= 0; pos--) {\n            Element next = stack.get(pos);\n            // In HTML parsing, tag names are case-insensitive. While Jsoup typically normalizes\n            // both endTag.name() and Element.nodeName() to lowercase based on ParseSettings,\n            // issues can arise in mixed configurations (like XmlParser with HtmlParseSettings)\n            // where element names on the stack might retain their original case unexpectedly,\n            // leading to a failure in comparison. Using equalsIgnoreCase ensures robustness\n            // against such potential case discrepancies when finding the target element.\n            if (next.nodeName().equalsIgnoreCase(elName)) {\n                firstFound = next;\n                break;\n            }\n        }\n        if (firstFound == null)\n            return; // not found, skip\n\n        // The second loop correctly removes elements from the top of the stack\n        // down to and including the 'firstFound' element.\n        for (int pos = stack.size() -1; pos >= 0; pos--) {\n            Element next = stack.get(pos);\n            stack.remove(pos);\n            if (next == firstFound)\n                break;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}