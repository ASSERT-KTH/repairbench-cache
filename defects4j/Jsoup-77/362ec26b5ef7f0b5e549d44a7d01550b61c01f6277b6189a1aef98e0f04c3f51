{
    "generation": "/**\n * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence.\n * If not found, skips.\n *\n * @param endTag tag to close\n */\nprivate void popStackToClose(Token.EndTag endTag) {\n    String elName = endTag.name();\n    // Find the FIRST (lowest) occurrence in stack matching elName, not just from top (for HTML-like case-insensitive matching etc)\n    int firstFoundPos = -1;\n    for (int pos = 0; pos < stack.size(); pos++) { // from the bottom\n        Element next = stack.get(pos);\n        if (next.nodeName().equals(elName)) {\n            firstFoundPos = pos;\n            break;\n        }\n    }\n    if (firstFoundPos == -1)\n        return; // not found, skip\n\n    // Remove from stack from the top down to and including firstFoundPos\n    for (int pos = stack.size() - 1; pos >= firstFoundPos; pos--) {\n        stack.remove(pos);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}