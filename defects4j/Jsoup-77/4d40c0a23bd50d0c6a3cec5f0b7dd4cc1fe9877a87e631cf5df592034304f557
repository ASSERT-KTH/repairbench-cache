{
    "generation": "    /**\n     * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not\n     * found, skips.\n     *\n     * @param endTag tag to close\n     */\n    private void popStackToClose(Token.EndTag endTag) {\n        String elName = endTag.name();\n        Element firstFound = null;\n        List<Integer> indicesToRemove = new ArrayList<>();\n\n        for (int pos = stack.size() - 1; pos >= 0; pos--) {\n            Element next = stack.get(pos);\n            if (next.nodeName().equals(elName)) {\n                firstFound = next;\n                indicesToRemove.add(pos);\n                break;\n            }\n        }\n        if (firstFound == null)\n            return; // not found, skip\n\n        // Remove the elements from the stack in reverse order of their indices\n        Collections.sort(indicesToRemove, Collections.reverseOrder());\n        for (Integer index : indicesToRemove) {\n            stack.remove(index.intValue());\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}