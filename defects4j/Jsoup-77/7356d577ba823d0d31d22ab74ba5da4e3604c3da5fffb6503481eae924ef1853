{
    "generation": "/**\n * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not\n * found, skips.\n *\n * @param endTag tag to close\n */\nprivate void popStackToClose(Token.EndTag endTag) {\n    // normalize the end tag name so that mismatched case (e.g. </DIV>) will match a <div> on the stack\n    String elName = settings.normalizeTag(endTag.name());\n    Element firstFound = null;\n\n    // find the first matching element on the stack (from the top)\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.get(pos);\n        if (next.nodeName().equals(elName)) {\n            firstFound = next;\n            break;\n        }\n    }\n    if (firstFound == null) {\n        // no matching start tag; ignore\n        return;\n    }\n\n    // pop everything off the stack until (and including) the matched element\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.remove(pos);\n        if (next == firstFound)\n            break;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}