{
    "generation": "    /**\n     * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not\n     * found, skips.\n     *\n     * @param endTag tag to close\n     */\n    private void popStackToClose(Token.EndTag endTag) {\n        String elName = endTag.name();\n        // When ParseSettings.htmlDefault is used, tag names are case-insensitive.\n        // Element node names are typically stored in lowercase by Jsoup for HTML documents.\n        // To correctly match an end tag (which might have different casing, e.g., </DIV>)\n        // with its corresponding element on the stack (e.g., <div>), we need to normalize\n        // the end tag's name to lowercase for comparison.\n        String elNameLower = elName.toLowerCase();\n\n        Element firstFound = null;\n\n        for (int pos = stack.size() -1; pos >= 0; pos--) {\n            Element next = stack.get(pos);\n            // Compare the element's node name (already lowercase) with the normalized end tag name.\n            if (next.nodeName().equals(elNameLower)) {\n                firstFound = next;\n                break;\n            }\n        }\n        if (firstFound == null)\n            return; // not found, skip\n\n        // This loop correctly pops elements from the stack until the firstFound element is removed.\n        // This implicitly closes any elements that were opened after firstFound but before its closing tag.\n        for (int pos = stack.size() -1; pos >= 0; pos--) {\n            Element next = stack.get(pos);\n            stack.remove(pos);\n            if (next == firstFound)\n                break;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}