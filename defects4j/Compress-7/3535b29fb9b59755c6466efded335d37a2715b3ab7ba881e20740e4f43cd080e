{
    "generation": "    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        int end = offset + length;\n        int nulPos = offset;\n\n        // Find the first NUL byte or end of buffer\n        while (nulPos < end && buffer[nulPos] != 0) {\n            nulPos++;\n        }\n\n        // Create a new byte array with just the name bytes\n        byte[] nameBytes = new byte[nulPos - offset];\n        System.arraycopy(buffer, offset, nameBytes, 0, nulPos - offset);\n\n        // Convert to String using ISO-8859-1 encoding\n        try {\n            return new String(nameBytes, \"ISO-8859-1\");\n        } catch (java.io.UnsupportedEncodingException e) {\n            // Fallback to platform default if ISO-8859-1 isn't available\n            return new String(nameBytes);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}