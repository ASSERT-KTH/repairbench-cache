{
    "generation": "    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        StringBuffer result = new StringBuffer(length);\n        int          end = offset + length;\n\n        for (int i = offset; i < end; ++i) {\n            if (buffer[i] == 0) {\n                break;\n            }\n            // Fix: Cast the byte to an unsigned integer before converting to char.\n            // This ensures that byte values greater than 127 (which are negative\n            // in Java's signed byte representation) are correctly mapped to their\n            // corresponding character code points (0-255) rather than extended\n            // to negative integers and then truncated to high-order Unicode characters.\n            result.append((char) (buffer[i] & 0xFF));\n        }\n\n        return result.toString();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}