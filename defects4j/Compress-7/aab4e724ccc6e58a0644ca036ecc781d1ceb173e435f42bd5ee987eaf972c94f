{
    "generation": "import java.io.UnsupportedEncodingException;\n\n    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     *\n     * Per POSIX/GNU standards, tar file names are sequences of bytes.\n     * They are not necessarily encoded in any specific character set.\n     * While often ASCII or UTF-8, other encodings or raw bytes are possible.\n     * ISO-8859-1 (Latin-1) is a common assumption for bytes 0-255,\n     * as it maps each byte directly to a Unicode code point (U+0000 to U+00FF).\n     * This method decodes the byte sequence using ISO-8859-1.\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        int len = 0;\n        final int max = offset + length;\n        // Determine the actual length of the name by finding the first NUL byte\n        // or hitting the boundary defined by length.\n        for (int i = offset; i < max; ++i) {\n            if (buffer[i] == 0) {\n                break; // Found NUL terminator\n            }\n            len++;\n        }\n\n        if (len > 0) {\n            try {\n                // Decode the relevant portion of the buffer using ISO-8859-1.\n                // This ensures that bytes 0x80-0xFF are mapped to U+0080-U+00FF,\n                // preserving the byte values as Unicode code points, which seems\n                // to be the behavior required by the test case.\n                return new String(buffer, offset, len, \"ISO-8859-1\");\n            } catch (UnsupportedEncodingException e) {\n                // This exception should technically never happen, as ISO-8859-1\n                // is required by the Java Language Specification.\n                // If it did, we might fallback to platform default or the original\n                // buggy behavior, but rethrowing seems appropriate given the\n                // guarantee of the encoding's presence.\n                throw new RuntimeException(\"ISO-8859-1 encoding not supported\", e);\n            }\n        }\n        // If the name has zero length (e.g., first byte is NUL or length is 0),\n        // return an empty string.\n        return \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}