{
    "generation": "    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        int end = offset + length;\n        int realEnd = offset;\n\n        // First find the end of the string (where NUL is or buffer length)\n        for (int i = offset; i < end; ++i) {\n            if (buffer[i] == 0) {\n                break;\n            }\n            realEnd = i + 1;\n        }\n\n        // Then convert the actual bytes to String with proper encoding\n        if (realEnd > offset) {\n            byte[] nameBytes = new byte[realEnd - offset];\n            System.arraycopy(buffer, offset, nameBytes, 0, realEnd - offset);\n            try {\n                return new String(nameBytes, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                // Fallback to default encoding if UTF-8 not available\n                return new String(nameBytes);\n            }\n        }\n        return \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}