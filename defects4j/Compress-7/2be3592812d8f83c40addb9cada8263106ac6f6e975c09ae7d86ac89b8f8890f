{
    "generation": "    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        // Determine the actual length of the string within the given segment,\n        // stopping at the first NUL byte or the specified length.\n        int nameLength = 0;\n        final int end = offset + length;\n        for (int i = offset; i < end; ++i) {\n            if (buffer[i] == 0) {\n                break;\n            }\n            nameLength++;\n        }\n\n        // If no characters were found (e.g., first byte is NUL or length is 0), return an empty string.\n        if (nameLength == 0) {\n            return \"\";\n        }\n\n        // Create a String from the bytes.\n        // Tar entry names are typically ASCII or ISO-8859-1 encoded.\n        // Using \"ISO-8859-1\" (Latin-1) is crucial because it maps all byte values\n        // (0-255) directly to their corresponding Unicode code points (U+0000 to U+00FF).\n        // This prevents incorrect character interpretation, especially for byte values > 127,\n        // which would otherwise be sign-extended and lead to incorrect Unicode characters\n        // when simply casting `(char) byte`.\n        try {\n            return new String(buffer, offset, nameLength, \"ISO-8859-1\");\n        } catch (java.io.UnsupportedEncodingException e) {\n            // ISO-8859-1 is a mandatory encoding in all Java implementations,\n            // so this catch block should theoretically never be reached.\n            // As a fallback, use the platform's default charset, though this\n            // might reintroduce encoding issues if the default isn't ISO-8859-1.\n            return new String(buffer, offset, nameLength);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}