{
    "generation": "import java.awt.geom.GeneralPath;\nimport java.awt.geom.PathIterator;\nimport java.awt.geom.Path2D;\nimport java.util.Arrays;\n\npublic class ShapeUtilities {\n\n    /**\n     * Tests two polygons for equality.  If both are <code>null</code> this\n     * method returns <code>true</code>.\n     *\n     * @param p1  path 1 (<code>null</code> permitted).\n     * @param p2  path 2 (<code>null</code> permitted).\n     *\n     * @return A boolean.\n     */\n    public static boolean equal(GeneralPath p1, GeneralPath p2) {\n        if (p1 == null) {\n            return (p2 == null);\n        }\n        if (p2 == null) {\n            return false;\n        }\n        if (p1.getWindingRule() != p2.getWindingRule()) {\n            return false;\n        }\n        PathIterator iterator1 = p1.getPathIterator(null);\n        PathIterator iterator2 = p2.getPathIterator(null); // Fixed: should be p2, not p1\n        double[] d1 = new double[6];\n        double[] d2 = new double[6];\n        boolean done = iterator1.isDone() && iterator2.isDone();\n        while (!done) {\n            if (iterator1.isDone() != iterator2.isDone()) {\n                return false;\n            }\n            int seg1 = iterator1.currentSegment(d1);\n            int seg2 = iterator2.currentSegment(d2);\n            if (seg1 != seg2) {\n                return false;\n            }\n            if (!arraysEqualWithTolerance(d1, d2)) {\n                return false;\n            }\n            iterator1.next();\n            iterator2.next();\n            done = iterator1.isDone() && iterator2.isDone();\n        }\n        return true;\n    }\n\n    private static boolean arraysEqualWithTolerance(double[] d1, double[] d2) {\n        final double TOLERANCE = 1e-6;\n        if (d1.length != d2.length) {\n            return false;\n        }\n        for (int i = 0; i < d1.length; i++) {\n            if (Math.abs(d1[i] - d2[i]) > TOLERANCE) {\n                return false;\n            }\n        }\n        return true;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}