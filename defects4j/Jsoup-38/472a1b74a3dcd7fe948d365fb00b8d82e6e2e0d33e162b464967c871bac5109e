{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        // \u2026 all other cases unchanged \u2026\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n\n            // \u2026 all other branches unchanged \u2026\n\n            } else if (name.equals(\"image\")) {\n                // change <image> to <img>, unless inside an <svg>\n                boolean inSvg = false;\n                for (Element el : tb.getStack()) {\n                    if (\"svg\".equals(el.nodeName())) {\n                        inSvg = true;\n                        break;\n                    }\n                }\n                if (inSvg) {\n                    // inside an SVG, leave as <image>\n                    tb.insert(startTag);\n                } else {\n                    // HTML context, convert to <img>\n                    return tb.process(startTag.name(\"img\"));\n                }\n            }\n\n            // \u2026 remaining branches unchanged \u2026\n\n            break;\n\n        // \u2026 other cases unchanged \u2026\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}