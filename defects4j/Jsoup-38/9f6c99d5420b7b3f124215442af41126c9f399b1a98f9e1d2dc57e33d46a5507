{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            // ... unchanged ...\n            break;\n        }\n        case Comment: {\n            // ... unchanged ...\n            break;\n        }\n        case Doctype: {\n            // ... unchanged ...\n            return false;\n        }\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n\n            if (name.equals(\"html\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartToHead)) {\n                // ... unchanged ...\n            } else if (name.equals(\"body\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"frameset\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartPClosers)) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.Headings)) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartPreListing)) {\n                // ... unchanged ...\n            } else if (name.equals(\"form\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"li\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.DdDt)) {\n                // ... unchanged ...\n            } else if (name.equals(\"plaintext\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"button\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"a\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.Formatters)) {\n                // ... unchanged ...\n            } else if (name.equals(\"nobr\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartApplets)) {\n                // ... unchanged ...\n            } else if (name.equals(\"table\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartEmptyFormatters)) {\n                // ... unchanged ...\n            } else if (name.equals(\"input\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartMedia)) {\n                // ... unchanged ...\n            } else if (name.equals(\"hr\")) {\n                // ... unchanged ...\n            }\n            // <<< This is the patched branch >>>\n            else if (name.equals(\"image\")) {\n                // change <image> to <img>, unless in an <svg> context\n                boolean inSvg = false;\n                for (Element el : tb.getStack()) {\n                    if (\"svg\".equals(el.nodeName())) {\n                        inSvg = true;\n                        break;\n                    }\n                }\n                if (!inSvg) {\n                    // mutate to <img> and reprocess\n                    startTag.name(\"img\");\n                    return tb.process(startTag);\n                }\n                // inside <svg>, treat <image> as a normal start tag\n                tb.insert(startTag);\n            }\n            // <<< end patched branch >>>\n            else if (name.equals(\"isindex\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"textarea\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"xmp\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"iframe\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"noembed\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"select\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartOptions)) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartRuby)) {\n                // ... unchanged ...\n            } else if (name.equals(\"math\")) {\n                // ... unchanged ...\n            } else if (name.equals(\"svg\")) {\n                // ... unchanged ...\n            } else if (StringUtil.in(name, Constants.InBodyStartDrop)) {\n                // ... unchanged ...\n                return false;\n            } else {\n                // default:\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            }\n            break;\n\n        case EndTag:\n            // ... unchanged ...\n            break;\n\n        case EOF:\n            // ... unchanged ...\n            break;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}