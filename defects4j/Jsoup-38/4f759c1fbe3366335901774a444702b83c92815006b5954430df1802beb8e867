{
    "generation": "        boolean process(Token t, HtmlTreeBuilder tb) {\n            switch (t.type) {\n                // ... other cases remain unchanged\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.name();\n                    if (name.equals(\"html\")) {\n                        // ... as before\n                    } else if (name.equals(\"image\")) {\n                        boolean isInSvg = false;\n                        LinkedList<Element> stack = tb.getStack();\n                        for (Element el : stack) {\n                            if (el.nodeName().equals(\"svg\")) {\n                                isInSvg = true;\n                                break;\n                            }\n                        }\n                        if (isInSvg) {\n                            tb.insert(startTag);\n                        } else {\n                            Token.StartTag imgTag = new Token.StartTag(\"img\", startTag.getAttributes());\n                            return tb.process(imgTag);\n                        }\n                    } else if (StringUtil.in(name, Constants.InBodyStartPClosers)) {\n                        // ... as before\n                    }\n                    // ... rest of the code\n                // ... rest of the cases remain unchanged\n            }\n            return true;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}