{
    "generation": "public int read(byte b[], int offset, int len) throws IOException {\n    if (b == null) {\n        throw new NullPointerException();\n    } else if (offset < 0 || len < 0) {\n        throw new IndexOutOfBoundsException();\n    } else if (offset > b.length || offset + len > b.length) {\n        throw new IndexOutOfBoundsException();\n    } else if (len == 0) {\n        return 0;\n    }\n    int result;\n    do {\n        if (!base64.hasData()) {\n            byte[] buf = new byte[doEncode ? 4096 : 8192];\n            int c = in.read(buf);\n            if (c == -1) {\n                // Underlying stream has ended. If there is no buffered data, return EOF.\n                if (!base64.hasData()) {\n                    return -1;\n                }\n            } else {\n                // If c > 0 and the caller's buffer exactly matches len, use it directly.\n                if (c > 0 && b.length == len) {\n                    base64.setInitialBuffer(b, offset, len);\n                }\n                if (doEncode) {\n                    base64.encode(buf, 0, c);\n                } else {\n                    base64.decode(buf, 0, c);\n                }\n            }\n        }\n        result = base64.readResults(b, offset, len);\n        // Retry if readResults returns 0 (see CODEC-101 fix rationale)\n    } while (result == 0);\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}