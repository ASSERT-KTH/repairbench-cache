{
    "generation": "    public int read(byte b[], int offset, int len) throws IOException {\n        if (b == null) {\n            throw new NullPointerException();\n        } else if (offset < 0 || len < 0) {\n            throw new IndexOutOfBoundsException();\n        } else if (offset > b.length || offset + len > b.length) {\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        } else {\n            int totalRead = 0;\n            int readLen;\n            do {\n                if (!base64.hasData()) {\n                    byte[] buf = new byte[doEncode ? 4096 : 8192];\n                    int c = in.read(buf);\n                    if (c == -1) {\n                        readLen = base64.readResults(b, offset + totalRead, len - totalRead);\n                        if (readLen < 0) {\n                            return totalRead > 0 ? totalRead : -1;\n                        }\n                        totalRead += readLen;\n                        break;\n                    }\n                    // A little optimization to avoid System.arraycopy()\n                    // when possible.\n                    if (c > 0 && b.length == len) {\n                        base64.setInitialBuffer(b, offset, len);\n                    }\n                    if (doEncode) {\n                        base64.encode(buf, 0, c);\n                    } else {\n                        base64.decode(buf, 0, c);\n                    }\n                }\n                readLen = base64.readResults(b, offset + totalRead, len - totalRead);\n                if (readLen > 0) {\n                    totalRead += readLen;\n                }\n            } while (readLen == 0);\n\n            return totalRead > 0 ? totalRead : readLen;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}