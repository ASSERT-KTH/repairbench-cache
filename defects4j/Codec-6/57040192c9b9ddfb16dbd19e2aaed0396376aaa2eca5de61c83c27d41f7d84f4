{
    "generation": "public int read(byte b[], int offset, int len) throws IOException {\n    if (b == null) {\n        throw new NullPointerException();\n    } else if (offset < 0 || len < 0) {\n        throw new IndexOutOfBoundsException();\n    } else if (offset > b.length || offset + len > b.length) {\n        throw new IndexOutOfBoundsException();\n    } else if (len == 0) {\n        return 0;\n    }\n\n    // Try to get some decoded/encoded output. In rare cases, base64.readResults may return 0,\n    // so we continuously read from the underlying input until we get\n    // a positive result or end-of-stream.\n    int readLen = base64.readResults(b, offset, len);\n    while (readLen == 0) {\n        if (!base64.hasData()) {\n            byte[] buf = new byte[doEncode ? 4096 : 8192];\n            int c = in.read(buf);\n            if (c == -1) {\n                return -1;\n            }\n            // When possible, adjust the base64 internal buffer to point to the caller's destination.\n            if (c > 0 && b.length == len) {\n                base64.setInitialBuffer(b, offset, len);\n            }\n            if (doEncode) {\n                base64.encode(buf, 0, c);\n            } else {\n                base64.decode(buf, 0, c);\n            }\n        }\n        readLen = base64.readResults(b, offset, len);\n    }\n    return readLen;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}