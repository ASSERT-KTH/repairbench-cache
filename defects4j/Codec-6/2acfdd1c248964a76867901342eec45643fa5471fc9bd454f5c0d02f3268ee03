{
    "generation": "public int read(byte b[], int offset, int len) throws IOException {\n    if (b == null) {\n        throw new NullPointerException();\n    } else if (offset < 0 || len < 0) {\n        throw new IndexOutOfBoundsException();\n    } else if (offset > b.length || offset + len > b.length) {\n        throw new IndexOutOfBoundsException();\n    } else if (len == 0) {\n        return 0;\n    } else {\n        int readLen = 0;\n        // loop to avoid returning 0 unless truly end of stream\n        while (readLen == 0) {\n            if (!base64.hasData()) {\n                byte[] buf = new byte[doEncode ? 4096 : 8192];\n                int c = in.read(buf);\n                if (c > 0 && b.length == len) {\n                    base64.setInitialBuffer(b, offset, len);\n                }\n                if (doEncode) {\n                    base64.encode(buf, 0, c);\n                } else {\n                    base64.decode(buf, 0, c);\n                }\n            }\n            readLen = base64.readResults(b, offset, len);\n            // break if EOF detected\n            if (readLen < 0) {\n                break;\n            }\n            // if bytes produced, return them\n            if (readLen > 0) {\n                break;\n            }\n            // else, readLen == 0; loop to try reading more from underlying input\n            // But if no more data can be loaded from input, break out\n            if (in.available() == 0) {\n                int c = in.read();\n                if (c == -1) {\n                    // underlying stream also exhausted, so no more data to decode\n                    // ensure Base64 stream is marked EOF\n                    base64.setInitialBuffer(new byte[0], 0, -1);\n                    break;\n                } else {\n                    // put back the byte we've just read\n                    byte[] singleByte = new byte[]{(byte) c};\n                    if (doEncode) {\n                        base64.encode(singleByte, 0, 1);\n                    } else {\n                        base64.decode(singleByte, 0, 1);\n                    }\n                }\n            }\n        }\n        return readLen;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}