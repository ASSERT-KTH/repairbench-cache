{
    "generation": "/**\n * Visits a NEW node.\n */\nprivate void visitNew(NodeTraversal t, Node n) {\n  Node constructor = n.getFirstChild();\n  JSType type = getJSType(constructor).restrictByNotNullOrUndefined();\n  FunctionType fnType = null;\n  if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {\n    fnType = type.toMaybeFunctionType();\n  }\n  if (fnType != null) {\n    visitParameterList(t, n, fnType);\n    ensureTyped(t, n, fnType.getInstanceType());\n  } else {\n    if (!type.isConstructor() && !type.isEmptyType() && !type.isUnknownType()) {\n      report(t, n, NOT_A_CONSTRUCTOR);\n    }\n    ensureTyped(t, n);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}