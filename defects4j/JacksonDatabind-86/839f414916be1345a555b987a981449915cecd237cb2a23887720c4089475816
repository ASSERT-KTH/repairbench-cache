{
    "generation": "public JavaType getSuperClass() {\n    if (_superClass != null) {\n        return _superClass;\n    }\n    // If we have a raw class but don't have super type yet, resolve it\n    if (_class != null) {\n        Class<?> superCls = _class.getSuperclass();\n        if (superCls != null && superCls != Object.class) {\n            // Make sure we properly resolve the super class, including recursive types\n            TypeFactory fac = TypeFactory.defaultInstance();\n            return fac._fromClass(null, superCls, null);\n        }\n    }\n    // For reference types, try to resolve super type\n    if (_valueHandler != null) {\n        JavaType superType = _valueHandler.getSuperType();\n        if (superType != null) {\n            return superType;\n        }\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}