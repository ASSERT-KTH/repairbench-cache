{
    "generation": "    @Override\n    public JavaType getSuperClass()\n    {\n        if (_superClassType == null) {\n            // Need to resolve superclass, but only on demand.  Important\n            // for performance (avoid resolving if not needed) and to\n            // avoid infinite recursion if superclass is itself recursive.\n\n            // Ok: check if base type even defines a super class.\n            Class<?> rawSuper = _class.getSuperclass();\n            if (rawSuper == null) {\n                return null; // No super class\n            }\n\n            // Important: must always construct Type from *raw* class, not\n            // from type variable.\n            _superClassType = _typeFactory.constructType(rawSuper);\n        }\n        return _superClassType;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}