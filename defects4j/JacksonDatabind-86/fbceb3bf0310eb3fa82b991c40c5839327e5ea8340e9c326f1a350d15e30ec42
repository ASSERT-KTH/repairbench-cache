{
    "generation": "package com.fasterxml.jackson.databind.type;\n\nimport java.lang.reflect.TypeVariable; // Assuming this import or similar is present\n\n// This method would be part of the `ResolvedRecursiveType` class\n// assuming it extends `ReferenceType` and has a `protected JavaType _resolved;` field.\n@Override\npublic JavaType getSuperClass() {\n    if (_resolved != null) {\n        return _resolved.getSuperClass();\n    }\n    // If not yet resolved, delegate to the superclass behavior.\n    // In later Jackson versions (2.10+), the constructor of ResolvedRecursiveType\n    // ensures that the `_anchorType` (which ReferenceType uses for its `_referenced` field)\n    // is properly set, making `super.getSuperClass()` functional.\n    // In older versions (like 2.9.x), this might still be problematic if the constructor\n    // did not set `_anchorType`. However, without more context on the full class,\n    // this is the standard fix for this method.\n    return super.getSuperClass();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}