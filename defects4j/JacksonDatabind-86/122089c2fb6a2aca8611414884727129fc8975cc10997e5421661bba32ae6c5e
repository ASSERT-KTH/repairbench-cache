{
    "generation": "protected JavaType _fromClass(Class<?> cls, TypeBindings bindings)\n{\n    // First: is it something we have already seen?\n    JavaType result = _typeCache.get(cls, bindings);\n    if (result != null) {\n        return result;\n    }\n    // If not, need to construct it\n    result = _constructType(cls, bindings);\n    // Important: cache it before resolving super types to handle recursive cases\n    _typeCache.add(result);\n    // Then resolve super types\n    _resolveSuperTypes(result, cls);\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}