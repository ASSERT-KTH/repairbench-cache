{
    "generation": "protected JavaType constructType(Type jdkType, TypeBindings bindings, JavaType creator) throws IllegalArgumentException\n{\n    // First: let's check if we already have (or are building) similar type\n    JavaType[] superTypes = findSuperTypes(jdkType, bindings);\n\n    if (superTypes != null) {\n        // Handle the case where type is being constructed:\n        for (JavaType superType : superTypes) {\n            if (superType.isReferenceType()) {\n                // 20-Jun-2017, tatu: Added handling of case where we would resolve\n                //   reference type to match type we are working with\n                if (superType.containedType().equals(jdkType)) {\n                    return superType;\n                }\n            }\n        }\n    }\n\n    // rest of the method implementation would follow...\n    // ...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}