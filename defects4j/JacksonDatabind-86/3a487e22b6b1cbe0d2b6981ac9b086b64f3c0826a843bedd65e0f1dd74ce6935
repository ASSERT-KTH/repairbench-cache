{
    "generation": "@Override\npublic JavaType getSuperClass() {\n    if (_superClass == null) {\n        _superClass = _findSuperClass();\n    }\n    return _superClass;\n}\n\nprivate JavaType _findSuperClass() {\n    // First: is it a recursive reference to something we know?\n    if (_class.getSuperclass() == _superInterfaceClass) {\n        // If so, we need to resolve the recursion\n        return this;\n    }\n    // Otherwise, just use the raw class\n    return _typeFactory.constructType(_class.getSuperclass());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}