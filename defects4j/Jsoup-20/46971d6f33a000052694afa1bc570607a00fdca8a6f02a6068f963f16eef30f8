{
    "generation": "// switching the charset midstream when a meta http-equiv tag defines the charset.\nstatic Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {\n    String docData;\n    Document doc = null;\n\n    if (charsetName == null) { // determine from meta. safe parse as UTF-8\n        // decode as default charset\n        docData = Charset.forName(defaultCharset).decode(byteData).toString();\n        // strip spurious BOM if present\n        if (docData.length() > 0 && docData.charAt(0) == '\\uFEFF') {\n            docData = docData.substring(1);\n        }\n        // parse to detect any meta charset\n        doc = parser.parseInput(docData, baseUri);\n        Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n        if (meta != null) {\n            String foundCharset = meta.hasAttr(\"http-equiv\")\n                ? getCharsetFromContentType(meta.attr(\"content\"))\n                : meta.attr(\"charset\");\n            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) {\n                // re-decode with the found charset\n                charsetName = foundCharset;\n                byteData.rewind();\n                docData = Charset.forName(foundCharset).decode(byteData).toString();\n                // strip BOM again if present\n                if (docData.length() > 0 && docData.charAt(0) == '\\uFEFF') {\n                    docData = docData.substring(1);\n                }\n                doc = null; // force reparsing below\n            }\n        }\n    } else { // charset specified by header or user\n        Validate.notEmpty(charsetName, \"Must set charset arg to character set of file to parse. \"\n            + \"Set to null to attempt to detect from HTML\");\n        docData = Charset.forName(charsetName).decode(byteData).toString();\n        // strip spurious BOM if present\n        if (docData.length() > 0 && docData.charAt(0) == '\\uFEFF') {\n            docData = docData.substring(1);\n        }\n    }\n\n    if (doc == null) {\n        doc = parser.parseInput(docData, baseUri);\n        doc.outputSettings().charset(charsetName);\n    }\n\n    return doc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}