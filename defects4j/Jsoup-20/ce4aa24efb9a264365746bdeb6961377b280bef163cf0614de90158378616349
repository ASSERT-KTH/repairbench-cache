{
    "generation": "    static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {\n        String docData;\n        Document doc = null;\n        if (charsetName == null) { // determine from meta. safe parse as UTF-8\n            // look for <meta http-equiv=\"Content-Type\" content=\"text/html;charset=gb2312\"> or HTML5 <meta charset=\"gb2312\">\n            String decoded = Charset.forName(defaultCharset).decode(byteData).toString();\n            if (!decoded.isEmpty() && decoded.charAt(0) == '\\uFEFF') {\n                decoded = decoded.substring(1);\n            }\n            docData = decoded;\n            doc = parser.parseInput(docData, baseUri);\n            Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n            if (meta != null) { // if not found, will keep utf-8 as best attempt\n                String foundCharset = meta.hasAttr(\"http-equiv\") ? getCharsetFromContentType(meta.attr(\"content\")) : meta.attr(\"charset\");\n                if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode\n                    charsetName = foundCharset;\n                    byteData.rewind();\n                    String redecoded = Charset.forName(foundCharset).decode(byteData).toString();\n                    if (!redecoded.isEmpty() && redecoded.charAt(0) == '\\uFEFF') {\n                        redecoded = redecoded.substring(1);\n                    }\n                    docData = redecoded;\n                    doc = null;\n                }\n            }\n        } else { // specified by content type header (or by user on file load)\n            Validate.notEmpty(charsetName, \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\");\n            String decoded = Charset.forName(charsetName).decode(byteData).toString();\n            if (!decoded.isEmpty() && decoded.charAt(0) == '\\uFEFF') {\n                decoded = decoded.substring(1);\n            }\n            docData = decoded;\n        }\n        if (doc == null) {\n            doc = parser.parseInput(docData, baseUri);\n            doc.outputSettings().charset(charsetName);\n        }\n        return doc;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}