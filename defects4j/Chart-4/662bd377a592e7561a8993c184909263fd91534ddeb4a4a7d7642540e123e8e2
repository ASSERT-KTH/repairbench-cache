{
    "generation": "public Range getDataRange(ValueAxis axis) {\n    // safeguard against null input\n    if (axis == null) {\n        throw new IllegalArgumentException(\"Null 'axis' argument.\");\n    }\n    Range result = null;\n    List mappedDatasets = new ArrayList();\n    List includedAnnotations = new ArrayList();\n    boolean isDomainAxis;\n\n    // determine whether this is a domain or a range axis\n    int domainIndex = getDomainAxisIndex(axis);\n    if (domainIndex >= 0) {\n        isDomainAxis = true;\n        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));\n        // include any plot\u2010level annotations for the primary axis\n        if (domainIndex == 0) {\n            for (Iterator it = this.annotations.iterator(); it.hasNext();) {\n                Object ann = it.next();\n                if (ann instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(ann);\n                }\n            }\n        }\n    }\n    else {\n        int rangeIndex = getRangeAxisIndex(axis);\n        if (rangeIndex >= 0) {\n            isDomainAxis = false;\n            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));\n            if (rangeIndex == 0) {\n                for (Iterator it = this.annotations.iterator(); it.hasNext();) {\n                    Object ann = it.next();\n                    if (ann instanceof XYAnnotationBoundsInfo) {\n                        includedAnnotations.add(ann);\n                    }\n                }\n            }\n        }\n        else {\n            // the supplied axis does not belong to this plot\n            return null;\n        }\n    }\n\n    // now collect the data ranges from all mapped datasets\n    for (Iterator it = mappedDatasets.iterator(); it.hasNext();) {\n        XYDataset d = (XYDataset) it.next();\n        if (d == null) {\n            continue;\n        }\n        XYItemRenderer r = getRendererForDataset(d);\n        if (isDomainAxis) {\n            if (r != null) {\n                result = Range.combine(result, r.findDomainBounds(d));\n            }\n            else {\n                result = Range.combine(result, DatasetUtilities.findDomainBounds(d));\n            }\n        }\n        else {\n            if (r != null) {\n                result = Range.combine(result, r.findRangeBounds(d));\n            }\n            else {\n                result = Range.combine(result, DatasetUtilities.findRangeBounds(d));\n            }\n        }\n        // only query renderer annotations if we have a renderer\n        if (r != null) {\n            for (Iterator rit = r.getAnnotations().iterator(); rit.hasNext();) {\n                Object ann = rit.next();\n                if (ann instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(ann);\n                }\n            }\n        }\n    }\n\n    // finally, include any annotation bounds\n    for (Iterator it = includedAnnotations.iterator(); it.hasNext();) {\n        XYAnnotationBoundsInfo info = (XYAnnotationBoundsInfo) it.next();\n        if (info.getIncludeInDataBounds()) {\n            if (isDomainAxis) {\n                result = Range.combine(result, info.getXRange());\n            }\n            else {\n                result = Range.combine(result, info.getYRange());\n            }\n        }\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}