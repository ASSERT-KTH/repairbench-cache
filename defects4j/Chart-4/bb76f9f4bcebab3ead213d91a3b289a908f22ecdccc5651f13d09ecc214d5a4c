{
    "generation": "/**\n * Returns the range for the specified axis.\n *\n * @param axis  the axis.\n *\n * @return The range.\n */\npublic Range getDataRange(ValueAxis axis) {\n\n    Range result = null;\n    List mappedDatasets = new ArrayList();\n    List includedAnnotations = new ArrayList();\n    boolean isDomainAxis = true;\n\n    // is it a domain axis?\n    int domainIndex = getDomainAxisIndex(axis);\n    if (domainIndex >= 0) {\n        isDomainAxis = true;\n        mappedDatasets.addAll(\n                getDatasetsMappedToDomainAxis(new Integer(domainIndex)));\n        if (domainIndex == 0) {\n            // include plot\u2010level annotations\n            Iterator it = this.annotations.iterator();\n            while (it.hasNext()) {\n                XYAnnotation ann = (XYAnnotation) it.next();\n                if (ann instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(ann);\n                }\n            }\n        }\n    }\n\n    // or is it a range axis?\n    int rangeIndex = getRangeAxisIndex(axis);\n    if (rangeIndex >= 0) {\n        isDomainAxis = false;\n        mappedDatasets.addAll(\n                getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));\n        if (rangeIndex == 0) {\n            Iterator it = this.annotations.iterator();\n            while (it.hasNext()) {\n                XYAnnotation ann = (XYAnnotation) it.next();\n                if (ann instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(ann);\n                }\n            }\n        }\n    }\n\n    // iterate through the datasets that map to the axis and get the union\n    // of the ranges.\n    Iterator itDatasets = mappedDatasets.iterator();\n    while (itDatasets.hasNext()) {\n        XYDataset d = (XYDataset) itDatasets.next();\n        if (d != null) {\n            XYItemRenderer r = getRendererForDataset(d);\n            if (isDomainAxis) {\n                if (r != null) {\n                    result = Range.combine(result, r.findDomainBounds(d));\n                }\n                else {\n                    result = Range.combine(result,\n                            DatasetUtilities.findDomainBounds(d));\n                }\n            }\n            else {\n                if (r != null) {\n                    result = Range.combine(result, r.findRangeBounds(d));\n                }\n                else {\n                    result = Range.combine(result,\n                            DatasetUtilities.findRangeBounds(d));\n                }\n            }\n            // include any renderer\u2010level annotations\n            if (r != null) {\n                Collection cols = r.getAnnotations();\n                if (cols != null) {\n                    Iterator itAnn = cols.iterator();\n                    while (itAnn.hasNext()) {\n                        Object o = itAnn.next();\n                        if (o instanceof XYAnnotationBoundsInfo) {\n                            includedAnnotations.add(o);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // finally include the annotation bounds\n    Iterator itBounds = includedAnnotations.iterator();\n    while (itBounds.hasNext()) {\n        XYAnnotationBoundsInfo info =\n                (XYAnnotationBoundsInfo) itBounds.next();\n        if (info.getIncludeInDataBounds()) {\n            if (isDomainAxis) {\n                result = Range.combine(result, info.getXRange());\n            }\n            else {\n                result = Range.combine(result, info.getYRange());\n            }\n        }\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}