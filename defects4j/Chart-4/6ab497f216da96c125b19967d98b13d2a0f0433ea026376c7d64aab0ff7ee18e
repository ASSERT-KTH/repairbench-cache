{
    "generation": "/**\n * Returns the range for the specified axis.\n *\n * @param axis  the axis.\n *\n * @return The range.\n */\npublic Range getDataRange(ValueAxis axis) {\n\n    Range result = null;\n    List mappedDatasets = new ArrayList();\n    List includedAnnotations = new ArrayList();\n    boolean isDomainAxis = true;\n\n    // is it a domain axis?\n    int domainIndex = getDomainAxisIndex(axis);\n    if (domainIndex >= 0) {\n        isDomainAxis = true;\n        mappedDatasets.addAll(\n            getDatasetsMappedToDomainAxis(new Integer(domainIndex))\n        );\n        if (domainIndex == 0) {\n            // grab the plot's annotations\n            Iterator itA = this.annotations.iterator();\n            while (itA.hasNext()) {\n                XYAnnotation annotation = (XYAnnotation) itA.next();\n                if (annotation instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(annotation);\n                }\n            }\n        }\n    }\n\n    // or is it a range axis?\n    int rangeIndex = getRangeAxisIndex(axis);\n    if (rangeIndex >= 0) {\n        isDomainAxis = false;\n        mappedDatasets.addAll(\n            getDatasetsMappedToRangeAxis(new Integer(rangeIndex))\n        );\n        if (rangeIndex == 0) {\n            Iterator itA = this.annotations.iterator();\n            while (itA.hasNext()) {\n                XYAnnotation annotation = (XYAnnotation) itA.next();\n                if (annotation instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(annotation);\n                }\n            }\n        }\n    }\n\n    // iterate through the datasets that map to the axis and get the union\n    // of the ranges.\n    Iterator itD = mappedDatasets.iterator();\n    while (itD.hasNext()) {\n        XYDataset d = (XYDataset) itD.next();\n        if (d != null) {\n            XYItemRenderer r = getRendererForDataset(d);\n            if (isDomainAxis) {\n                if (r != null) {\n                    result = Range.combine(result, r.findDomainBounds(d));\n                }\n                else {\n                    result = Range.combine(\n                        result,\n                        DatasetUtilities.findDomainBounds(d)\n                    );\n                }\n            }\n            else {\n                if (r != null) {\n                    result = Range.combine(result, r.findRangeBounds(d));\n                }\n                else {\n                    result = Range.combine(\n                        result,\n                        DatasetUtilities.findRangeBounds(d)\n                    );\n                }\n            }\n            // FIX: only collect annotations if the renderer is non-null\n            if (r != null) {\n                Collection annots = r.getAnnotations();\n                Iterator itAnn = annots.iterator();\n                while (itAnn.hasNext()) {\n                    XYAnnotation a = (XYAnnotation) itAnn.next();\n                    if (a instanceof XYAnnotationBoundsInfo) {\n                        includedAnnotations.add(a);\n                    }\n                }\n            }\n        }\n    }\n\n    // now include any XYAnnotationBoundsInfo objects\n    Iterator itB = includedAnnotations.iterator();\n    while (itB.hasNext()) {\n        XYAnnotationBoundsInfo info = (XYAnnotationBoundsInfo) itB.next();\n        if (info.getIncludeInDataBounds()) {\n            if (isDomainAxis) {\n                result = Range.combine(result, info.getXRange());\n            }\n            else {\n                result = Range.combine(result, info.getYRange());\n            }\n        }\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}