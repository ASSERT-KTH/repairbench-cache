{
    "generation": "/**\n * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n * @param tableau simple tableau for the problem\n * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n * @return row with the minimum ratio\n */\nprivate Integer getPivotRow(SimplexTableau tableau, final int col) {\n    // 1) Do the basic minimum ratio test\n    List<Integer> minRatioPositions = new ArrayList<Integer>();\n    double minRatio = Double.MAX_VALUE;\n    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n        double rhs   = tableau.getEntry(i, tableau.getWidth() - 1);\n        double entry = tableau.getEntry(i, col);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            double ratio = rhs / entry;\n            int cmp = Double.compare(ratio, minRatio);\n            if (cmp == 0) {\n                minRatioPositions.add(i);\n            } else if (cmp < 0) {\n                minRatio = ratio;\n                minRatioPositions.clear();\n                minRatioPositions.add(i);\n            }\n        }\n    }\n\n    // 2) If no valid pivot row, unbounded\n    if (minRatioPositions.isEmpty()) {\n        return null;\n    }\n\n    // 3) If only one candidate, done\n    if (minRatioPositions.size() == 1) {\n        return minRatioPositions.get(0);\n    }\n\n    // 4) Degeneracy (tie) \u2013 try to kick out an artificial variable first\n    for (Integer row : minRatioPositions) {\n        for (int k = 0; k < tableau.getNumArtificialVariables(); k++) {\n            int aCol = tableau.getArtificialVariableOffset() + k;\n            double aEntry = tableau.getEntry(row, aCol);\n            if (Precision.equals(aEntry, 1d, maxUlps)\n                && row.equals(tableau.getBasicRow(aCol))) {\n                return row;\n            }\n        }\n    }\n\n    // 5) Apply Bland's rule: choose the row whose basic variable has the smallest column index\n    Integer chosen = null;\n    int bestCol = Integer.MAX_VALUE;\n    for (Integer row : minRatioPositions) {\n        for (int j = 0; j < tableau.getWidth() - 1; j++) {\n            if (row.equals(tableau.getBasicRow(j))) {\n                if (j < bestCol) {\n                    bestCol = j;\n                    chosen = row;\n                }\n                break;\n            }\n        }\n    }\n    // Fallback to the first in case something goes wrong (should not happen)\n    return (chosen != null) ? chosen : minRatioPositions.get(0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}