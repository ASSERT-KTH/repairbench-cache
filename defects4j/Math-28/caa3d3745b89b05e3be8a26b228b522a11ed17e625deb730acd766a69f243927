{
    "generation": "/**\n * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n * @param tableau simple tableau for the problem\n * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n * @return row with the minimum ratio\n */\nprivate Integer getPivotRow(SimplexTableau tableau, final int col) {\n    List<Integer> minRatioPositions = new ArrayList<Integer>();\n    double minRatio = Double.MAX_VALUE;\n    int width = tableau.getWidth();\n    int height = tableau.getHeight();\n    // 1. find all rows with minimal positive ratio\n    for (int i = tableau.getNumObjectiveFunctions(); i < height; i++) {\n        double entry = tableau.getEntry(i, col);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            double ratio = tableau.getEntry(i, width - 1) / entry;\n            int cmp = Double.compare(ratio, minRatio);\n            if (cmp < 0) {\n                minRatio = ratio;\n                minRatioPositions.clear();\n                minRatioPositions.add(i);\n            } else if (cmp == 0) {\n                minRatioPositions.add(i);\n            }\n        }\n    }\n    if (minRatioPositions.isEmpty()) {\n        return null;\n    }\n    if (minRatioPositions.size() == 1) {\n        return minRatioPositions.get(0);\n    }\n    // 2. degeneracy: try to force out an artificial variable first\n    int numArt = tableau.getNumArtificialVariables();\n    int artOffset = tableau.getArtificialVariableOffset();\n    for (Integer row : minRatioPositions) {\n        for (int k = 0; k < numArt; k++) {\n            int varCol = artOffset + k;\n            if (Precision.equals(tableau.getEntry(row, varCol), 1d, maxUlps)\n                && tableau.getBasicRow(varCol) == row.intValue()) {\n                return row;\n            }\n        }\n    }\n    // 3. Bland's rule: choose the leaving basic variable with the smallest column index\n    Integer minRow = null;\n    int minVar = Integer.MAX_VALUE;\n    for (Integer row : minRatioPositions) {\n        for (int j = 0; j < width - 1; j++) {\n            if (tableau.getBasicRow(j) == row.intValue()) {\n                if (j < minVar) {\n                    minVar = j;\n                    minRow = row;\n                }\n                break;  // once found the basic var for this row, go to next row\n            }\n        }\n    }\n    return (minRow == null) ? minRatioPositions.get(0) : minRow;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}