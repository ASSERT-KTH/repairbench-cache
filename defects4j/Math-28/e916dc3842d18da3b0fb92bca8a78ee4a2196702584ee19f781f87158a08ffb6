{
    "generation": "    private Integer getPivotRow(SimplexTableau tableau, final int col) {\n        List<Integer> minRatioPositions = new ArrayList<Integer>();\n        double minRatio = Double.MAX_VALUE;\n        for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n            double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n            double entry = tableau.getEntry(i, col);\n\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                double ratio = rhs / entry;\n                \n                if (Precision.equals(ratio, minRatio, maxUlps)) {\n                    minRatioPositions.add(i);\n                } else if (ratio < minRatio) {\n                    minRatio = ratio;\n                    minRatioPositions.clear();\n                    minRatioPositions.add(i);\n                }\n            }\n        }\n\n        if (minRatioPositions.isEmpty()) {\n            return null;\n        } else if (minRatioPositions.size() > 1) {\n            for (Integer row : minRatioPositions) {\n                for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {\n                    int column = i + tableau.getArtificialVariableOffset();\n                    if (Precision.equals(tableau.getEntry(row, column), 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {\n                        return row;\n                    }\n                }\n            }\n\n            Integer minRow = null;\n            Integer minValue = null;\n            for (Integer row : minRatioPositions) {\n                Integer colIndex = tableau.get BasicVariable(row);\n                if (colIndex == null) {\n                    continue;\n                }\n                if (minValue == null || colIndex < minValue) {\n                    minValue = colIndex;\n                    minRow = row;\n                }\n            }\n            return minRow;\n        }\n        return minRatioPositions.get(0);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}