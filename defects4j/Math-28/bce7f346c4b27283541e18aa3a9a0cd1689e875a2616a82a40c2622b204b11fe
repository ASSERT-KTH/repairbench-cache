{
    "generation": "private Integer getPivotRow(SimplexTableau tableau, final int col) {\n    // create a list of all the rows that tie for the lowest score in the minimum ratio test\n    List<Integer> minRatioPositions = new ArrayList<Integer>();\n    double minRatio = Double.MAX_VALUE;\n    int firstRow = tableau.getNumObjectiveFunctions();\n    int lastRow  = tableau.getHeight();\n    int rhsCol   = tableau.getWidth() - 1;\n    for (int i = firstRow; i < lastRow; i++) {\n        double rhs   = tableau.getEntry(i, rhsCol);\n        double entry = tableau.getEntry(i, col);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            double ratio = rhs / entry;\n            int cmp = Double.compare(ratio, minRatio);\n            if (cmp < 0) {\n                minRatio = ratio;\n                minRatioPositions.clear();\n                minRatioPositions.add(i);\n            } else if (cmp == 0) {\n                minRatioPositions.add(i);\n            }\n        }\n    }\n\n    if (minRatioPositions.isEmpty()) {\n        return null;\n    }\n    if (minRatioPositions.size() == 1) {\n        return minRatioPositions.get(0);\n    }\n\n    // 1. if any tied row can force an artificial variable out of the basis, do that\n    for (Integer row : minRatioPositions) {\n        for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {\n            int colIndex = i + tableau.getArtificialVariableOffset();\n            double artEntry = tableau.getEntry(row, colIndex);\n            if (Precision.equals(artEntry, 1d, maxUlps)\n                && row.equals(tableau.getBasicRow(colIndex))) {\n                return row;\n            }\n        }\n    }\n\n    // 2. Bland's rule: choose the row whose basic variable has the smallest column index\n    Integer minRow     = null;\n    int     minVarIndex = tableau.getWidth();\n    int     nObj        = tableau.getNumObjectiveFunctions();\n    int     width       = tableau.getWidth() - 1; // omit RHS\n\n    for (Integer row : minRatioPositions) {\n        for (int j = nObj; j < width; j++) {\n            if (row.equals(tableau.getBasicRow(j))) {\n                if (j < minVarIndex) {\n                    minVarIndex = j;\n                    minRow = row;\n                }\n                break; // once we find the basic variable for this row, stop\n            }\n        }\n    }\n\n    return minRow;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}