{
    "generation": "private Integer getPivotRow(SimplexTableau tableau, final int col) {\n    List<Integer> minRatioPositions = new ArrayList<>();\n    double minRatio = Double.MAX_VALUE;\n    // First pass: perform the minimum ratio test\n    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n        final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n        final double entry = tableau.getEntry(i, col);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            final double ratio = rhs / entry;\n            int cmp = Double.compare(ratio, minRatio);\n            if (cmp == 0) {\n                minRatioPositions.add(i);\n            } else if (cmp < 0) {\n                minRatio = ratio;\n                minRatioPositions.clear();\n                minRatioPositions.add(i);\n            }\n        }\n    }\n\n    if (minRatioPositions.isEmpty()) {\n        return null;\n    }\n    // Degeneracy: there is more than one candidate with the same (minimum) ratio.\n    if (minRatioPositions.size() > 1) {\n        // 1. First try: check if an artificial variable can be forced out of the basis.\n        for (Integer row : minRatioPositions) {\n            for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {\n                int column = i + tableau.getArtificialVariableOffset();\n                final double entry = tableau.getEntry(row, column);\n                if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {\n                    return row;\n                }\n            }\n        }\n        // 2. Second try: apply Bland's rule.\n        // For each candidate row, find its basic variable \u2013 choose the row whose basic variable has the smallest index.\n        Integer minRow = null;\n        int minIndex = tableau.getWidth();\n        for (Integer row : minRatioPositions) {\n            for (int j = tableau.getNumObjectiveFunctions(); j < tableau.getWidth() - 1; j++) {\n                if (row.equals(tableau.getBasicRow(j))) {\n                    if (j < minIndex) {\n                        minIndex = j;\n                        minRow = row;\n                    }\n                    break; // Found the basic variable for this row, so move on.\n                }\n            }\n        }\n        return (minRow != null) ? minRow : minRatioPositions.get(0);\n    }\n    // If only one candidate, simply return it.\n    return minRatioPositions.get(0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}