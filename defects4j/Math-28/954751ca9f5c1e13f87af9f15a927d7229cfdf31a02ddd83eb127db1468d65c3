{
    "generation": "    /**\n     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n     * @param tableau simple tableau for the problem\n     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n     * @return row with the minimum ratio, or null if no pivot is possible\n     */\n    private Integer getPivotRow(SimplexTableau tableau, final int col) {\n        // create a list of all the rows that tie for the lowest score in the minimum ratio test\n        List<Integer> candidates = new ArrayList<>();\n        double minRatio = Double.MAX_VALUE;\n\n        for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n                final double ratio = rhs / entry;\n\n                if (ratio < minRatio) {\n                    minRatio = ratio;\n                    candidates = new ArrayList<>();\n                    candidates.add(i);\n                } else if (ratio == minRatio) {\n                    candidates.add(i);\n                }\n            }\n        }\n\n        if (candidates.isEmpty()) {\n            return null; // no pivot possible, exit\n        } else if (candidates.size() == 1) {\n            return candidates.get(0);\n        } else {\n            // Apply Bland's Rule: select the row with the smallest index basic variable\n            Integer selectedRow = null;\n            int minBasicIndex = Integer.MAX_VALUE;\n            for (Integer row : candidates) {\n                for (int j = 0; j < tableau.getWidth() - 1; j++) {\n                    if (row == tableau.getBasicRow(j)) {\n                        if (j < minBasicIndex) {\n                            minBasicIndex = j;\n                            selectedRow = row;\n                        }\n                        break; // first basic variable for this row, no need to check further columns\n                    }\n                }\n            }\n            return selectedRow;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}