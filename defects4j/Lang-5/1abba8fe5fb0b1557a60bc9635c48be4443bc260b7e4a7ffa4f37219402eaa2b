{
    "generation": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len == 0) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    // Special handling for locales starting with an underscore (empty language)\n    if (str.charAt(0) == '_') {\n        // Must be at least 3 characters: \"_\" + 2-letter country code.\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        // Validate that the two characters after the underscore are uppercase letters.\n        for (int i = 1; i < 3; i++) {\n            char ch = str.charAt(i);\n            if (!Character.isLetter(ch) || !Character.isUpperCase(ch)) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n        String country = str.substring(1, 3);\n        if (len == 3) {\n            return new Locale(\"\", country);\n        }\n        // There must be another underscore following the country\n        if (str.charAt(3) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        // Variant must not be empty (i.e. string must be longer than 4)\n        if (len == 4) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String variant = str.substring(4);\n        return new Locale(\"\", country, variant);\n    }\n\n    // Regular handling for locales starting with a language code.\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch0 = str.charAt(0);\n    final char ch1 = str.charAt(1);\n    if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str);\n    }\n    if (len < 5) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final char ch3 = str.charAt(3);\n    if (ch3 == '_') {\n        return new Locale(str.substring(0, 2), \"\", str.substring(4));\n    }\n    final char ch4 = str.charAt(4);\n    if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 5) {\n        return new Locale(str.substring(0, 2), str.substring(3, 5));\n    }\n    if (len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(5) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}