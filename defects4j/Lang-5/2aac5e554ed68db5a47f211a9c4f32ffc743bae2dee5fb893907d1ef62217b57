{
    "generation": "    public static Locale toLocale(final String str) {\n        if (str == null) {\n            return null;\n        }\n        final int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        boolean startsWithUnderscore = str.charAt(0) == '_';\n\n        if (!startsWithUnderscore) {\n            return toLocaleWithoutStartingUnderscore(str, len);\n        } else {\n            return toLocaleWithStartingUnderscore(str, len);\n        }\n    }\n\n    private static Locale toLocaleWithoutStartingUnderscore(final String str, final int len) {\n        final char ch0 = str.charAt(0);\n        final char ch1 = str.charAt(1);\n        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str.substring(0, 2), \"\");\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        final char ch4 = str.charAt(4);\n        if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        }\n        if (len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n    }\n\n    private static Locale toLocaleWithStartingUnderscore(final String str, final int len) {\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(1) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String country;\n        String variant = \"\";\n        String language = \"\";\n        int pos = 2;\n        if (pos < len && str.charAt(pos) == '_') {\n            pos++;\n        }\n        for (; pos < len; pos++) {\n            if (str.charAt(pos) == '_') {\n                break;\n            }\n        }\n        if (pos == 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        country = str.substring(2, pos);\n        if (country.length() != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        for (int i = 0; i < country.length(); i++) {\n            if (!Character.isUpperCase(country.charAt(i))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n        if (pos < len) {\n            variant = str.substring(pos + 1);\n        }\n        return new Locale(language, country, variant);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}