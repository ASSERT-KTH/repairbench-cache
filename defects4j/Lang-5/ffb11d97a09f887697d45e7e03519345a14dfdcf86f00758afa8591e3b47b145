{
    "generation": "    public static Locale toLocale(final String str) {\n        if (str == null) {\n            return null;\n        }\n        final int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        // Handle cases where string starts with underscore\n        if (str.charAt(0) == '_') {\n            if (len < 3) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 3) {\n                return new Locale(\"\", str.substring(1, 3));\n            }\n            // Check if we have country code (next 2 chars must be uppercase letters)\n            if (len >= 3) {\n                char ch1 = str.charAt(1);\n                char ch2 = str.charAt(2);\n                if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                if (len == 3) {\n                    return new Locale(\"\", str.substring(1, 3));\n                }\n                if (len >= 4 && str.charAt(3) == '_') {\n                    // Format is _CC_V or _CC_VV...\n                    if (len >= 5) {\n                        return new Locale(\"\", str.substring(1, 3), str.substring(4));\n                    }\n                } else if (len >= 5) {\n                    // Format is _CCVVV...\n                    if (len < 5) {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                    return new Locale(\"\", str.substring(1, 3), str.substring(3));\n                }\n            }\n        }\n\n        // Handle normal case (starts with language code)\n        final char ch0 = str.charAt(0);\n        final char ch1 = str.charAt(1);\n        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str);\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        final char ch4 = str.charAt(4);\n        if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        }\n        if (len < 7) {\n            if (str.charAt(5) == '_') {\n                // Handle case like en_GB_xxx with only 6 chars (5 is '_')\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(5) != '_') {\n            // Handle case where there's no third underscore (just language and country)\n            return new Locale(str.substring(0, 2), str.substring(3, 5), \"\");\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}