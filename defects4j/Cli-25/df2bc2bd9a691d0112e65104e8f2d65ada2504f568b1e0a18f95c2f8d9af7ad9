{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)\n{\n    if (text == null) {\n        return sb;\n    }\n    if (nextLineTabStop >= width)\n    {\n        // stops infinite loop happening\n        nextLineTabStop = width - 1;\n    }\n\n    // Prepend the padding so that even the very first chunk is indented.\n    final String padding = createPadding(nextLineTabStop);\n    text = padding + text;\n\n    int pos = findWrapPos(text, width, 0);\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    while (true)\n    {\n        // Remove the printed part and trim the leftover.\n        text = text.substring(pos).trim();\n        if (text.length() == 0)\n        {\n            return sb;\n        }\n        // Prepend the indent uniformly on every new line.\n        text = padding + text;\n        pos = findWrapPos(text, width, 0);\n        if (pos == -1)\n        {\n            sb.append(text);\n            return sb;\n        }\n        if ((text.length() > width) && (pos == nextLineTabStop - 1))\n        {\n            pos = width;\n        }\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}