{
    "generation": "    /**\n     * Method called to expand size of the current segment, to\n     * accommodate for more contiguous content. Usually only\n     * used when parsing tokens like names if even then.\n     */\n    public char[] expandCurrentSegment()\n    {\n        final char[] curr = _currentSegment;\n        final int len = curr.length;\n        int newLen;\n\n        // If we're already at or over the minimal threshold, grow only by minimum\n        // (by 1 - leaving it up to caller to perhaps need to call again)\n        // (or MAX_SEGMENT_LEN, if that's somehow smaller - let's assume non-negative length)\n        if (len >= MAX_SEGMENT_LEN) { // MAX_SEGMENT_LEN is the biggest normal segment size\n            // Cannot grow by 50% any more, do minimal expansion\n            newLen = len + 1;\n        } else {\n            // Otherwise, grow by 50%, but capped at MAX_SEGMENT_LEN.\n            // Also must ensure that we grow by at least one char\n            newLen = Math.min(MAX_SEGMENT_LEN, Math.max(len + 1, len + (len >> 1)));\n        }\n        return (_currentSegment = Arrays.copyOf(curr, newLen));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}