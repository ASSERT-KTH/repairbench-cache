{
    "generation": "    /**\n     * Method called to expand size of the current segment, to\n     * accommodate for more contiguous content. Usually only\n     * used when parsing tokens like names if even then.\n     */\n    public char[] expandCurrentSegment()\n    {\n        final char[] curr = _currentSegment;\n        final int len = curr.length;\n        int newLen;\n\n        // Determine new length: grow by 50% normally,\n        // but no more than max segment length. However, beyond max segment len,\n        // slow down growth to 25%\n        if (len < MAX_SEGMENT_LEN) { // MAX_SEGMENT_LEN is 256k == 262144\n            newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));\n        } else {\n            // Otherwise, grow by 25% (slower growth past max segment)\n            // Need to make sure it grows by at least one char\n            newLen = len + (len >> 2);\n        }\n        // Let's ensure we always grow at least by one char:\n        // (should not be needed with the logic above, but as safeguard)\n        if (newLen <= len) {\n            newLen = len + 1;\n        }\n        return (_currentSegment = Arrays.copyOf(curr, newLen));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}