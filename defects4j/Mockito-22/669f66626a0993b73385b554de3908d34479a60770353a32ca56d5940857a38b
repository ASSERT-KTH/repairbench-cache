{
    "generation": "public static boolean areEqual(Object o1, Object o2) {\n    if (o1 == null || o2 == null) {\n        return o1 == null && o2 == null;\n    } else if (isArray(o1) && isArray(o2)) {\n        return areArraysEqual(o1, o2);\n    } else {\n        return o1.equals(o2);\n    }\n}\n\nprivate static boolean areArraysEqual(Object o1, Object o2) {\n    if (!o1.getClass().equals(o2.getClass())) {\n        return false;\n    }\n    int length = Array.getLength(o1);\n    if (length != Array.getLength(o2)) {\n        return false;\n    }\n    for (int i = 0; i < length; i++) {\n        Object e1 = Array.get(o1, i);\n        Object e2 = Array.get(o2, i);\n        if (e1 == null && e2 == null) {\n            continue;\n        }\n        if (e1 == null || e2 == null) {\n            return false;\n        }\n        if (areWrapperTypes(e1, e2)) {\n            if (e1 instanceof Number && e2 instanceof Number) {\n                return ((Number)e1).equals(e2);\n            }\n        }\n        if (!areEqual(e1, e2)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean areWrapperTypes(Object o1, Object o2) {\n    return (o1 instanceof Integer && o2 instanceof Integer)\n           || (o1 instanceof Double && o2 instanceof Double)\n           || (o1 instanceof Float && o2 instanceof Float)\n           || (o1 instanceof Long && o2 instanceof Long)\n           || (o1 instanceof Short && o2 instanceof Short)\n           || (o1 instanceof Byte && o2 instanceof Byte);\n}\n\nprivate static boolean isArray(Object o) {\n    return o != null && o.getClass().isArray();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}