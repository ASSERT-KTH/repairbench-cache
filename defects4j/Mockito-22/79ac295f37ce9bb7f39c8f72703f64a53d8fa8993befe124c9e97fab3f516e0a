{
    "generation": "public static boolean areEqual(Object o1, Object o2) {\n    // shortcut for identical references (also handles null == null)\n    if (o1 == o2) {\n        return true;\n    }\n    // one is null and the other isn't\n    if (o1 == null || o2 == null) {\n        return false;\n    }\n    Class<?> c1 = o1.getClass();\n    Class<?> c2 = o2.getClass();\n\n    // both must be arrays to compare element\u2010wise\n    if (c1.isArray() && c2.isArray()) {\n        int len1 = java.lang.reflect.Array.getLength(o1);\n        int len2 = java.lang.reflect.Array.getLength(o2);\n        if (len1 != len2) {\n            return false;\n        }\n        for (int i = 0; i < len1; i++) {\n            Object e1 = java.lang.reflect.Array.get(o1, i);\n            Object e2 = java.lang.reflect.Array.get(o2, i);\n            if (!areEqual(e1, e2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // if only one is an array, they're not equal\n    if (c1.isArray() || c2.isArray()) {\n        return false;\n    }\n\n    // fallback to standard equals()\n    return o1.equals(o2);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}