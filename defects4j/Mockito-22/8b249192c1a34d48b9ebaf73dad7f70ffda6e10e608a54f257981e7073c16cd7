{
    "generation": "public static boolean areEqual(Object o1, Object o2) {\n    if (o1 == null || o2 == null) {\n        return o1 == null && o2 == null;\n    } else if (isArray(o1)) {\n        if (!isArray(o2)) {\n            return false;\n        }\n        if (o1 instanceof Object[] && o2 instanceof Object[]) {\n            return areObjectArraysEqual((Object[]) o1, (Object[]) o2);\n        } else if (o1 instanceof int[] && o2 instanceof int[]) {\n            return areIntArraysEqual((int[]) o1, (int[]) o2);\n        } else if (o1 instanceof double[] && o2 instanceof double[]) {\n            return areDoubleArraysEqual((double[]) o1, (double[]) o2);\n        } else {\n            return false;\n        }\n    } else {\n        return o1.equals(o2);\n    }\n}\n\nprivate static boolean areObjectArraysEqual(Object[] a1, Object[] a2) {\n    if (a1.length != a2.length) {\n        return false;\n    }\n    for (int i = 0; i < a1.length; i++) {\n        if (!areEqual(a1[i], a2[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean areIntArraysEqual(int[] a1, int[] a2) {\n    if (a1.length != a2.length) {\n        return false;\n    }\n    for (int i = 0; i < a1.length; i++) {\n        if (a1[i] != a2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean areDoubleArraysEqual(double[] a1, double[] a2) {\n    if (a1.length != a2.length) {\n        return false;\n    }\n    for (int i = 0; i < a1.length; i++) {\n        if (Double.compare(a1[i], a2[i]) != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean isArray(Object o) {\n    return o instanceof Object[] || o instanceof int[] || o instanceof double[];\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}