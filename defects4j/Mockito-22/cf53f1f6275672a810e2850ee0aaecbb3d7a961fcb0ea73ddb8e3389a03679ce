{
    "generation": "public static boolean areEqual(Object o1, Object o2) {\n    if (o1 == null || o2 == null) {\n        return o1 == null && o2 == null;\n    } else if (o1.getClass().isArray() && o2.getClass().isArray()) {\n        return areArraysEqual(o1, o2);\n    } else {\n        return o1.equals(o2);\n    }\n}\n\nprivate static boolean areArraysEqual(Object o1, Object o2) {\n    if (o1.getClass() != o2.getClass()) {\n        return false;\n    }\n    if (o1 instanceof Object[] && o2 instanceof Object[]) {\n        Object[] arr1 = (Object[]) o1;\n        Object[] arr2 = (Object[]) o2;\n        if (arr1.length != arr2.length) {\n            return false;\n        }\n        for (int i = 0; i < arr1.length; i++) {\n            if (!areEqual(arr1[i], arr2[i])) {\n                return false;\n            }\n        }\n        return true;\n    } else if (o1 instanceof int[] && o2 instanceof int[]) {\n        int[] arr1 = (int[]) o1;\n        int[] arr2 = (int[]) o2;\n        if (arr1.length != arr2.length) {\n            return false;\n        }\n        for (int i = 0; i < arr1.length; i++) {\n            if (arr1[i] != arr2[i]) {\n                return false;\n            }\n        }\n        return true;\n    } else if (o1 instanceof double[] && o2 instanceof double[]) {\n        double[] arr1 = (double[]) o1;\n        double[] arr2 = (double[]) o2;\n        if (arr1.length != arr2.length) {\n            return false;\n        }\n        for (int i = 0; i < arr1.length; i++) {\n            if (arr1[i] != arr2[i]) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        // Handle other array types similarly\n        return false;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}