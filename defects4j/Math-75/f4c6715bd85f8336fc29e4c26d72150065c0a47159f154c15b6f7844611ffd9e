{
    "generation": "    /**\n      * Returns the percentage of values that are equal to v\n     * (as a proportion between 0 and 1).\n     * <p>\n     * Returns <code>Double.NaN</code> if no values have been added.</p>\n     *\n     * @param v the value to lookup\n     * @return the proportion of values equal to v\n     * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n     */\n    @Deprecated\n    public double getPct(Object v) {\n        final long n = getSumFreq();\n        if (n == 0) {\n            return Double.NaN;\n        }\n        try {\n            // Cast v to Comparable and get its count.\n            // Divide by the total number of values.\n            return (double) getCount((Comparable<?>) v) / n;\n        } catch (ClassCastException e) {\n            // If v is not Comparable, it cannot be in the frequency table.\n            // Return 0 as per the expected behavior for non-comparable objects\n            // seen in tests like testPcts with \"foo\".\n            return 0d;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}