{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * \n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (!token.startsWith(\"-\") || token.length() < 2) {\n            return false;\n        }\n        \n        // Check all characters before '=' (if any) are valid short options\n        String optionPart = token.split(\"=\")[0].substring(1);\n        for (int i = 0; i < optionPart.length(); i++) {\n            if (!options.hasShortOption(optionPart.substring(i, i + 1))) {\n                return false;\n            }\n        }\n        return !optionPart.isEmpty();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}