{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * \n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // Short options can be like -S, -SV, -S=V, -SV1=V2, -S1S2, or multi-character ones\n        if (!token.startsWith(\"-\") || token.startsWith(\"--\") || token.length() < 2) {\n            return false;\n        }\n        String opt = token.substring(1);\n        // Find the index of '=' (if any), cut off value part\n        int eqIndex = opt.indexOf('=');\n        if (eqIndex != -1) {\n            opt = opt.substring(0, eqIndex);\n        }\n        // Now check the whole substring as a short option\n        return options.hasShortOption(opt);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}