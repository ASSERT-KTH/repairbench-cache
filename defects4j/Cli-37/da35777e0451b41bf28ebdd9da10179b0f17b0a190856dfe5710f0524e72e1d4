{
    "generation": "/**\n * Tells if the token looks like a short option.\n *\n * @param token\n */\nprivate boolean isShortOption(String token) {\n    if (!token.startsWith(\"-\") || token.length() < 2) {\n        return false;\n    }\n    // strip leading \"-\" and any \"=value\"\n    String opt = token.substring(1);\n    int eq = opt.indexOf('=');\n    if (eq != -1) {\n        opt = opt.substring(0, eq);\n    }\n    // if what's left matches a long option, it's not a short option\n    if (opt.length() > 1 && options.hasLongOption(opt)) {\n        return false;\n    }\n    // otherwise test the first character as a short option\n    return options.hasShortOption(opt.substring(0, 1));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}