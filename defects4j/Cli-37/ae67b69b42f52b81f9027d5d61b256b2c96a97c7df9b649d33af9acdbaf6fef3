{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     *\n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (!token.startsWith(\"-\") || token.length() < 2) {\n            return false;\n        }\n\n        // Check if the token is a single short option with possible value\n        if (token.length() == 2) {\n            return options.hasShortOption(token.substring(1));\n        }\n\n        // Check if the token is a combined short options (like -t1last)\n        for (int i = 1; i < token.length(); i++) {\n            char c = token.charAt(i);\n            if (c == '=') {\n                // If there's an '=' it's a short option with value\n                return options.hasShortOption(token.substring(1, i));\n            }\n            if (!options.hasShortOption(String.valueOf(c))) {\n                return false;\n            }\n        }\n\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}