{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * <p>\n     * A token looks like a short option if it begins with a single hyphen\n     * followed by a character that is a recognized short option.\n     * </p>\n     * <p>\n     * Examples: {@code -S}, {@code -SV}, {@code -S=V}, {@code -SV1V2}, {@code -S1S2} all look\n     * like short options if {@code S} is a registered short option. This method does not\n     * fully validate the token structure beyond the initial character.\n     * </p>\n     * \n     * @param token The token to check.\n     * @return {@code true} if the token starts with a single hyphen followed by\n     *         a recognized short option character, and is not a long option format (\"--\").\n     */\n    private boolean isShortOption(String token)\n    {\n        // Check if token starts with \"-\", is at least 2 chars long, \n        // does not start with \"--\" (to distinguish from long options),\n        // and the char following the initial \"-\" is a registered short option.\n        if (token == null || !token.startsWith(\"-\") || token.length() < 2 || token.startsWith(\"--\")) {\n            return false;\n        }\n        \n        return options.hasShortOption(token.substring(1, 2));\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}