{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token) {\n    // must start with single \"-\" and not be just \"-\" or a long option\n    if (!token.startsWith(\"-\") || token.startsWith(\"--\") || token.length() < 2) {\n        return false;\n    }\n    // strip leading \"-\" and any \"=value\" suffix\n    String withoutDash = token.substring(1);\n    int eqPos = withoutDash.indexOf('=');\n    String optName = (eqPos >= 0) ? withoutDash.substring(0, eqPos) : withoutDash;\n    // if there's a multi-character short option matching the whole name, accept it\n    if (options.hasShortOption(optName)) {\n        return true;\n    }\n    // otherwise fall back to single-character short options (clusters)\n    return options.hasShortOption(optName.substring(0, 1));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}