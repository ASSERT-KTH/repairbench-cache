{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token)\n{\n    // Accepts tokens like -S, -SV, -S=V, -SV1=V2, -S1S2 as (potential) short options if any prefix matches a registered short option\n    if (!token.startsWith(\"-\") || token.length() < 2) {\n        return false;\n    }\n    String t = token.substring(1);\n    int eqIndex = t.indexOf('=');\n    String tNoValue = (eqIndex < 0) ? t : t.substring(0, eqIndex);\n    // try all prefixes, if any is a known short option\n    for (int i = 1; i <= tNoValue.length(); i++) {\n        String prefix = tNoValue.substring(0, i);\n        if (options.hasShortOption(prefix)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}