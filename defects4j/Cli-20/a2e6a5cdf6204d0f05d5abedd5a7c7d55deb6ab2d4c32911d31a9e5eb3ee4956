{
    "generation": "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {\n    init();\n    this.options = options;\n\n    Iterator iter = Arrays.asList(arguments).iterator();\n\n    while (iter.hasNext()) {\n        String token = (String) iter.next();\n\n        if (token.startsWith(\"--\")) {\n            int eqIndex = token.indexOf('=');\n            if (eqIndex != -1) {\n                String[] parts = token.split(\"=\", 2);\n                tokens.add(parts[0]);\n                if (parts.length > 1) {\n                    tokens.add(parts[1]);\n                }\n            } else {\n                tokens.add(token);\n            }\n        } else if (\"-\".equals(token)) {\n            tokens.add(token);\n        } else if (token.startsWith(\"-\")) {\n            if (token.length() == 2) {\n                processOptionToken(token, stopAtNonOption);\n                if (stopAtNonOption) {\n                    while (iter.hasNext()) {\n                        tokens.add(iter.next());\n                    }\n                }\n                break;\n            } else if (!stopAtNonOption && options.hasOption(token)) {\n                tokens.add(token);\n            } else {\n                if (stopAtNonOption) {\n                    tokens.add(token);\n                    while (iter.hasNext()) {\n                        tokens.add(iter.next());\n                    }\n                    break;\n                } else {\n                    burstToken(token, stopAtNonOption);\n                }\n            }\n        } else {\n            if (stopAtNonOption) {\n                while (iter.hasNext()) {\n                    tokens.add(iter.next());\n                }\n                tokens.add(token);\n                break;\n            }\n            tokens.add(token);\n        }\n\n        gobble(iter);\n    }\n    return (String[]) tokens.toArray(new String[tokens.size()]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}