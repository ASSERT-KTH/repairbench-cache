{
    "generation": "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {\n    init();\n    this.options = options;\n\n    List<String> tokens = new ArrayList<>();\n    Iterator<String> iter = Arrays.asList(arguments).iterator();\n    boolean stopProcessing = false;\n\n    while (iter.hasNext() && !stopProcessing) {\n        String token = iter.next();\n\n        if (token.startsWith(\"--\")) {\n            int eqIndex = token.indexOf('=');\n            String key = eqIndex == -1 ? token : token.substring(0, eqIndex);\n            if (options.hasOption(key)) {\n                if (eqIndex != -1) {\n                    tokens.add(key);\n                    tokens.add(token.substring(eqIndex + 1));\n                } else {\n                    tokens.add(token);\n                }\n            } else {\n                tokens.add(token);\n                if (stopAtNonOption) {\n                    stopProcessing = true;\n                }\n            }\n        } else if (\"-\".equals(token)) {\n            tokens.add(token);\n        } else if (token.startsWith(\"-\")) {\n            if (options.hasOption(token)) {\n                tokens.add(token);\n            } else {\n                tokens.add(token);\n                if (stopAtNonOption) {\n                    stopProcessing = true;\n                } else {\n                    if (token.length() == 2) {\n                        processOptionToken(token, stopAtNonOption);\n                    } else {\n                        burstToken(token, stopAtNonOption);\n                    }\n                }\n            }\n        } else {\n            tokens.add(token);\n            if (stopAtNonOption) {\n                stopProcessing = true;\n            }\n        }\n\n        if (!stopProcessing) {\n            gobble(iter);\n        }\n    }\n\n    if (stopProcessing) {\n        while (iter.hasNext()) {\n            tokens.add(iter.next());\n        }\n    }\n\n    return tokens.toArray(new String[0]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}