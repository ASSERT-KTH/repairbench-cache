{
    "generation": "boolean process(Token t, TreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            // ... unchanged ...\n        }\n        case Comment: {\n            // ... unchanged ...\n        }\n        case Doctype: {\n            // ... unchanged ...\n        }\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n\n            // ---- ADD THIS SCRIPT HANDLER ----\n            if (\"script\".equals(name)) {\n                // Insert the <script> element\n                tb.insert(startTag);\n                // Switch the tokenizer to ScriptData so everything up to </script> is raw\n                tb.tokeniser.transition(TokeniserState.ScriptData);\n                // Remember the insertion mode so we can pop back on </script>\n                tb.markInsertionMode();\n                // No more framesets allowed once we hit a script\n                tb.framesetOk(false);\n                // Switch the tree builder into Text mode\n                tb.transition(Text);\n            }\n            // ---- end script handler ----\n            else if (name.equals(\"html\")) {\n                // ... rest of your existing StartTag logic unchanged ...\n            }\n            // (all of the other else\u2010ifs remain exactly as before)\n            else {\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            }\n            break;\n\n        case EndTag:\n            // ... unchanged ...\n            break;\n        case EOF:\n            // ... unchanged ...\n            break;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}