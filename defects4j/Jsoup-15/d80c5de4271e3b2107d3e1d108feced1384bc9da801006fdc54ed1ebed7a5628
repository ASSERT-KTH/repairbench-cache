{
    "generation": "boolean process(Token t, TreeBuilder tb) {\n    switch (t.type) {\n        // \u2026 your existing Character, Comment, Doctype cases \u2026\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n\n            // \u2026 all your other if/else branches \u2026\n\n            // === ADD THIS SCRIPT HANDLER ===\n            else if (\"script\".equals(name)) {\n                // close any open <p>\n                if (tb.inButtonScope(\"p\")) {\n                    tb.process(new Token.EndTag(\"p\"));\n                }\n                // insert the <script> element\n                Element scriptEl = tb.insert(startTag);\n                // switch tokenizer to ScriptData (so '<' inside script is not treated as a tag)\n                tb.tokeniser.transition(TokeniserState.ScriptData);\n                // remember to restore back to InBody once we hit </script>\n                tb.markInsertionMode();\n                // no more <frameset> allowed after script\n                tb.framesetOk(false);\n                // switch tree builder into TEXT mode for raw data\n                tb.transition(Text);\n            }\n\n            // \u2026 continue your existing branches for plaintext, button, a, \u2026  \u2026\n\n            else {\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            }\n            break;\n\n        // \u2026 your existing EndTag, EOF cases \u2026\n\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}