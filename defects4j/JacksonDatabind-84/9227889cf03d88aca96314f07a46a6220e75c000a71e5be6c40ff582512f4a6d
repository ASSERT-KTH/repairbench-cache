{
    "generation": "public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {\n    TypeFactory tf = TypeFactory.defaultInstance();\n    JavaType baseType = tf.constructType(Base.class);\n    tf.constructType(new TypeReference<Sub>() {}, baseType);\n    Sub sub = new Sub();\n    String serialized = objectMapper().writeValueAsString(sub);\n    assertEquals(\"{\\\"base\\\":1,\\\"sub\\\":2}\", serialized);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}