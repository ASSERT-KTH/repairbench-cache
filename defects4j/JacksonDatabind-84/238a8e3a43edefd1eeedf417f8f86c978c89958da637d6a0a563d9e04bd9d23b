{
    "generation": "public BeanDescription constructBeanType(Class<?> clazz, TypeFactoryagna) {\n    // Collect properties from the entire class hierarchy\n    Set<Class<?>> seen = new HashSet<>();\n    List<BeanProperty> properties = new ArrayList<>();\n\n    for (Class<?> current = clazz; current != null; current = current.getSuperclass()) {\n        if (seen.add(current)) {\n            // Collect properties from current class\n            List<BeanProperty> currentProperties = ...; // logic to collect properties for current class\n            properties.addAll(currentProperties);\n        }\n    }\n\n    // Construct BeanDescription with collected properties\n    BeanDescriptionImpl beanDesc = new BeanDescriptionImpl(..., properties, ...);\n    return beanDesc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}