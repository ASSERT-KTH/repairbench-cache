{
    "generation": "import com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.databind.type.TypeFactory;\nimport java.io.IOException;\nimport junit.framework.TestCase;\n\npublic class TestTypeFactoryWithRecursiveTypes {\n\n    static class Base {\n        public int base = 1;\n\n        public int getBase() {\n            return base;\n        }\n    }\n\n    static class Sub extends Base {\n        public int sub = 2;\n\n        public int getSub() {\n            return sub;\n        }\n    }\n\n    private ObjectMapper objectMapper() {\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.configure(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS, true);\n        return mapper;\n    }\n\n    public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {\n        TypeFactory tf = TypeFactory.defaultInstance();\n        tf.constructType(Base.class);\n        tf.constructType(Sub.class);\n        Sub sub = new Sub();\n        String serialized = objectMapper().writeValueAsString(sub);\n        assertEquals(\"{\\\"base\\\":1,\\\"sub\\\":2}\", serialized);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}