{
    "generation": "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {\n    List<String> tokens = new ArrayList<>();\n    boolean eatTheRest = false;\n\n    for (int i = 0; i < arguments.length; i++) {\n        String arg = arguments[i];\n\n        if (\"--\".equals(arg)) {\n            eatTheRest = true;\n            tokens.add(\"--\");\n        } else if (\"-\".equals(arg)) {\n            tokens.add(\"-\");\n        } else if (arg.startsWith(\"-\")) {\n            String opt = Util.stripLeadingHyphens(arg);\n            int equalsIndex = opt.indexOf('=');\n\n            if (equalsIndex != -1) {\n                String optionName = opt.substring(0, equalsIndex);\n                String optionValue = opt.substring(equalsIndex + 1);\n\n                if (options.hasOption(optionName)) {\n                    tokens.add(\"--\" + optionName);\n                    tokens.add(optionValue);\n                } else if (optionName.length() == 1 && options.hasOption(optionName)) {\n                    tokens.add(\"-\" + optionName);\n                    tokens.add(optionValue);\n                } else {\n                    eatTheRest = stopAtNonOption;\n                    tokens.add(arg);\n                }\n            } else {\n                if (options.hasOption(opt)) {\n                    tokens.add(arg);\n                } else {\n                    if (opt.length() > 1 && options.hasOption(opt.substring(0, 1))) {\n                        tokens.add(\"-\" + opt.substring(0, 1));\n                        tokens.add(opt.substring(1));\n                    } else {\n                        eatTheRest = stopAtNonOption;\n                        tokens.add(arg);\n                    }\n                }\n            }\n        } else {\n            tokens.add(arg);\n        }\n\n        if (eatTheRest) {\n            for (i++; i < arguments.length; i++) {\n                tokens.add(arguments[i]);\n            }\n            break;\n        }\n    }\n\n    return tokens.toArray(new String[0]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}