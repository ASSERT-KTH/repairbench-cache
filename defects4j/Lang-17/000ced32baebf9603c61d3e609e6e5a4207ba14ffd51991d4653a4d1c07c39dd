{
    "generation": "    public final void translate(CharSequence input, Writer out) throws IOException {\n        if (out == null) {\n            throw new IllegalArgumentException(\"The Writer must not be null\");\n        }\n        if (input == null) {\n            return;\n        }\n        int charIndex = 0;\n        int len = input.length();\n        int codePointCount = Character.codePointCount(input, 0, len);\n        for (int pos = 0; pos < codePointCount; ) {\n            int codePoint = Character.codePointAt(input, charIndex);\n            int consumed = translate(input, pos, out);\n            if (consumed == 0) {\n                char[] c = Character.toChars(codePoint);\n                out.write(c);\n                charIndex += Character.charCount(codePoint);\n                pos++;\n            } else {\n                for (int i = 0; i < consumed; i++) {\n                    if (charIndex >= len) {\n                        break;\n                    }\n                    codePoint = Character.codePointAt(input, charIndex);\n                    charIndex += Character.charCount(codePoint);\n                }\n                pos += consumed;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}