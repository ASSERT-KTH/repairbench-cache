{
    "generation": "    public final void translate(CharSequence input, Writer out) throws IOException {\n        if (out == null) {\n            throw new IllegalArgumentException(\"The Writer must not be null\");\n        }\n        if (input == null) {\n            return;\n        }\n        int codePointPos = 0; // Tracks the code point index\n        int charPos = 0; // Tracks the char index\n        int inputLength = input.length();\n        int totalCodePoints = Character.codePointCount(input, 0, inputLength);\n        \n        while (codePointPos < totalCodePoints && charPos < inputLength) {\n            int consumed = translate(input, codePointPos, out);\n            if (consumed == 0) {\n                // Write the current code point as it is not translated\n                int codePoint = Character.codePointAt(input, charPos);\n                char[] chars = Character.toChars(codePoint);\n                out.write(chars);\n                // Advance both indices based on the current code point\n                charPos += Character.charCount(codePoint);\n                codePointPos++;\n            } else {\n                // Move past the consumed code points\n                for (int i = 0; i < consumed && charPos < inputLength; i++) {\n                    int codePoint = Character.codePointAt(input, charPos);\n                    charPos += Character.charCount(codePoint);\n                    codePointPos++;\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}