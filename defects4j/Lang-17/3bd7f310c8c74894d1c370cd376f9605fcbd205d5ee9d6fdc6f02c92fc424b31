{
    "generation": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out == null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input == null) {\n        return;\n    }\n    int pos = 0;\n    final int count = Character.codePointCount(input, 0, input.length());\n    while (pos < count) {\n        // Call the abstract translator method.\n        // The 'pos' variable is interpreted as the index in code points.\n        int consumed = translate(input, pos, out);\n        if (consumed == 0) {\n            // Convert the code point index to the actual char index.\n            int index = Character.offsetByCodePoints(input, 0, pos);\n            int cp = Character.codePointAt(input, index);\n            out.write(Character.toChars(cp));\n            consumed = 1;\n        }\n        pos += consumed;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}