{
    "generation": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out == null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input == null) {\n        return;\n    }\n    int pos = 0;\n    int len = input.length();               // use char\u2010length, not codePointCount\n    while (pos < len) {\n        int consumed = translate(input, pos, out);\n        if (consumed == 0) {\n            // no translation, just copy one codepoint (handles surrogates)\n            int codePoint = Character.codePointAt(input, pos);\n            out.write(Character.toChars(codePoint));\n            pos += Character.charCount(codePoint);\n        } else {\n            // the translator consumed 'consumed' codepoints, skip them\n            for (int pt = 0; pt < consumed; pt++) {\n                int codePoint = Character.codePointAt(input, pos);\n                pos += Character.charCount(codePoint);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}