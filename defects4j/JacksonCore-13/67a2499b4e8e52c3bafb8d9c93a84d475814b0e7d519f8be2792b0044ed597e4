{
    "generation": "// for [core#246]\npublic void testFieldNameQuotingEnabled() throws IOException\n{\n    // First, default with quotes (QUOTE_FIELD_NAMES enabled by default)\n    _testFieldNameQuotingEnabled(JSON_F, true, true, \"{\\\"foo\\\":1}\");\n    _testFieldNameQuotingEnabled(JSON_F, false, true, \"{\\\"foo\\\":1}\");\n\n    // Then, without quotes (QUOTE_FIELD_NAMES disabled)\n    _testFieldNameQuotingEnabled(JSON_F, true, false, \"{foo:1}\");\n    _testFieldNameQuotingEnabled(JSON_F, false, false, \"{foo:1}\");\n\n    // Then, with alternatively configured factory (QUOTE_FIELD_NAMES disabled)\n    JsonFactory JF2 = new JsonFactory();\n    JF2.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);\n\n    _testFieldNameQuotingEnabled(JF2, true, true, \"{\\\"foo\\\":1}\"); // Default case, expects quotes as feature is re-enabled\n    _testFieldNameQuotingEnabled(JF2, false, true, \"{\\\"foo\\\":1}\");\n\n    // And without quotes\n    _testFieldNameQuotingEnabled(JF2, true, false, \"{foo:1}\");\n    _testFieldNameQuotingEnabled(JF2, false, false, \"{foo:1}\");\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}