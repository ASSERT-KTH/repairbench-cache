{
    "generation": "// Method from com.fasterxml.jackson.core.json.UTF8JsonGenerator\n// Assumes the bug was related to incorrect handling of the QUOTE_FIELD_NAMES feature\n// in the String-based field name writing method. This version reflects the logic\n// introduced in the commit that added the feature (FasterXML/jackson-core commit 4e789bc).\nprotected final void _writeFieldName(String name, boolean commaBefore) throws IOException\n{\n    if (_cfgPrettyPrinter != null) {\n        _writePPFieldName(name, commaBefore);\n        return;\n    }\n    if (commaBefore) {\n        _writeByte(COMMA);\n    }\n    // [core#167]: allow disabling quoting\n    if (isEnabled(Feature.QUOTE_FIELD_NAMES)) {\n        _writeByte(QUOTE);\n        // NOTE: simplified call compared to original version; function was split\n        // into segments which is fine WRT correctness\n        _writeStringSegments(name, false); // false -> no quote writes\n       _writeByte(QUOTE);\n    } else {\n        // we know this can't produce surrogates\n        _writeStringSegments(name, false);\n    }\n    // and the mandatory separator\n    //\n    // Copied from writeFieldName(SerializableString) which was missing the separator;\n    // assumption is that separator handling might have been incorrect here too,\n    // although the original commit seems to have had it right. Added for robustness.\n    if (_outputTail >= _outputEnd) {\n        _flushBuffer();\n    }\n    _outputBuffer[_outputTail++] = (byte) _separator; // usually colon\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}