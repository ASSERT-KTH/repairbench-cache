{
    "generation": "    /**\n     * Method called to output a field name when using specific serialized\n     * name.\n     *\n     * @param name Name to write\n     * @param commaBefore If true, need to write comma separator before name/value pair\n     *\n     * @since 2.0\n     */\n    protected void _writeFieldName(SerializableString name, boolean commaBefore) throws IOException\n    {\n        if (_cfgPrettyPrinter != null) {\n            _writePPFieldName(name, commaBefore);\n            return;\n        }\n        // Try to output separator sequence with checks for buffer overflow\n        if (commaBefore) {\n            _writer.write(',');\n        }\n        /* 22-Nov-2008, tatu: Non-standard (\"javascript\") comments? discouraged,\n         *   non-supported for now\n         */\n        // Note: we know keys are safe Strings, so no need to encode them;\n        // also, they are never empty.\n        if (isEnabled(Feature.QUOTE_FIELD_NAMES)) {\n            _writer.write('\"');\n            // No real benefit from using append() since we have Caching?\n            // 05-Dec-2019, tatu: Wait. What? Caching is orthogonal, use append()\n//            final char[] cbuf = name.asQuotedChars();\n//            _writer.write(cbuf, 0, cbuf.length);\n            name.appendQuoted(_writer);\n            _writer.write('\"');\n        } else {\n            // 14-Sep-2016, tatu: As per [core#312], `_writeString()` not correct...\n            // Also note: NO escaping applied\n            name.appendUnquoted(_writer);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}