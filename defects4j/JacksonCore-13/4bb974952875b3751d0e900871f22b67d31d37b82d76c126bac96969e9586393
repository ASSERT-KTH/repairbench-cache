{
    "generation": "    private void _testFieldNameQuotingEnabled(JsonFactory factory, boolean autoClose, boolean quoteFieldNames, String expectedJson) throws IOException\n    {\n        String actualJson = _testFieldNameQuotingEnabledHelper(factory, autoClose, quoteFieldNames);\n        assertEquals(expectedJson, actualJson);\n    }\n\n    private String _testFieldNameQuotingEnabledHelper(JsonFactory factory, boolean autoClose, boolean quoteFieldNames) throws IOException {\n        JsonGenerator g = factory.createGenerator(new StringWriter(), JsonEncoding.UTF8);\n        g.setFeature(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT, autoClose);\n        g.setFeature(JsonGenerator.Feature.QUOTE_FIELD_NAMES, quoteFieldNames);\n\n        g.writeStartObject();\n        g.writeFieldName(\"foo\");\n        g.writeNumber(1);\n        g.writeEndObject();\n        g.close();\n\n        return _testFieldNameQuotingEnabledHelper2(factory, autoClose, quoteFieldNames);\n    }\n\n    private String _testFieldNameQuotingEnabledHelper2(JsonFactory factory, boolean autoClose, boolean quoteFieldNames) throws IOException {\n        StringWriter sw = new StringWriter();\n        JsonGenerator g = factory.createGenerator(sw, JsonEncoding.UTF8);\n        g.setFeature(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT, autoClose);\n        g.setFeature(JsonGenerator.Feature.QUOTE_FIELD_NAMES, quoteFieldNames);\n        g.writeStartObject();\n        g.writeFieldName(\"foo\");\n        g.writeNumber(1);\n        g.writeEndObject();\n        g.close();\n        return sw.toString();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}