{
    "generation": "    // for [core#246]\n    public void testFieldNameQuotingEnabled() throws IOException\n    {\n        // First, test with default factory, with quoting enabled by default\n        \n        // Default, with quotes\n        _testFieldNameQuotingEnabled(JSON_F, true, true, \"{\\\"foo\\\":1}\");\n        _testFieldNameQuotingEnabled(JSON_F, false, true, \"{\\\"foo\\\":1}\");\n\n        // Without quotes\n        _testFieldNameQuotingEnabled(JSON_F, true, false, \"{foo:1}\");\n        _testFieldNameQuotingEnabled(JSON_F, false, false, \"{foo:1}\");\n\n        // Then with alternatively configured factory\n\n        JsonFactory JF2 = new JsonFactory();\n        JF2.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);\n\n        // Enable feature on generator, expect quotes\n        _testFieldNameQuotingEnabled(JF2, true, true, \"{\\\"foo\\\":1}\");\n        // Factory disabled, generator doesn't enable, no quotes\n        _testFieldNameQuotingEnabled(JF2, false, false, \"{foo:1}\");\n\n        // Without quotes\n        _testFieldNameQuotingEnabled(JF2, true, false, \"{foo:1}\");\n        _testFieldNameQuotingEnabled(JF2, false, false, \"{foo:1}\");\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}