{
    "generation": "    /**\n     * Escape constant fields into regular expression\n     * @param regex The destination regex\n     * @param value The source field\n     * @param unquote If true, replace two success quotes ('') with single quote (')\n     * @return The <code>StringBuilder</code>\n     */\n    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n        for(int i= 0; i<value.length(); i++) {\n            char c= value.charAt(i);\n            switch(c) {\n            case '\\'':\n                if(unquote) {\n                    if(++i==value.length()) {\n                        return regex;\n                    }\n                    c= value.charAt(i);\n                }\n                break;\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '.':\n                regex.append('\\\\');\n            }\n            regex.append(c);\n        }\n        return regex;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}