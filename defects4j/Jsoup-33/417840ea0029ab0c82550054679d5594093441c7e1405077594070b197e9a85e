{
    "generation": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing()) {\n        Tag tag = Tag.valueOf(startTag.name());\n        // if the tag is one that should be empty (or is unknown), then create an empty element.\n        if (tag.isEmpty() || !tag.isKnownTag()) {\n            return insertEmpty(startTag);\n        } else {\n            // otherwise, even though a \"/\" was present, treat it as a normal (non-empty) element:\n            // insert it normally and then emit a fake end tag to close it immediately.\n            Element el = new Element(tag, baseUri, startTag.attributes);\n            insert(el);\n            tokeniser.emit(new Token.EndTag(el.tagName()));\n            return el;\n        }\n    }\n    Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}