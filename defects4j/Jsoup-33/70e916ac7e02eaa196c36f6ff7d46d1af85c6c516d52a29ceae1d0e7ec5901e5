{
    "generation": "Element insert(Token.StartTag startTag) {\n    // handle empty unknown tags\n    // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.\n\n    if (startTag.isSelfClosing()) {\n        // Check if the tag is known and recognized as a void tag (e.g., br, img, hr, meta, link, etc.)\n        Tag tag = Tag.valueOf(startTag.name());\n        Element el = insertEmpty(startTag);\n        if (tag.isKnownTag() && tag.isSelfClosing()) {\n            // Do NOT add to stack, do NOT emit fake end tag - just return (void elements)\n            return el;\n        } else {\n            // For unknown or non-void tags, we treat as opening and closing immediately\n            stack.add(el);\n            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing\n            return el;\n        }\n    }\n\n    Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}