{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // Get the initial offset assuming instantLocal is treated as a UTC time (incorrect, but starting point)\n    final int offsetLocal = getOffset(instantLocal);\n    // Adjust to get an estimated UTC time\n    final long instantAdjusted = instantLocal - offsetLocal;\n    final int offsetAdjusted = getOffset(instantAdjusted);\n\n    if (offsetLocal != offsetAdjusted) {\n        if (offsetLocal > offsetAdjusted) {\n            // Handle DST overlap by returning the earlier offset (summer time)\n            return offsetLocal;\n        } else {\n            // Handle DST gap by checking transitions\n            long nextLocal = nextTransition(instantAdjusted);\n            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n            if (nextLocal != nextAdjusted) {\n                return offsetLocal;\n            }\n        }\n    }\n    return offsetAdjusted;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}