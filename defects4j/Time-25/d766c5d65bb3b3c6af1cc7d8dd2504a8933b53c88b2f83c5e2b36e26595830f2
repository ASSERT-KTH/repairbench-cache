{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // get the offset at instantLocal (first estimate)\n    final int offsetLocal = getOffset(instantLocal);\n    // adjust instantLocal using the estimate and recalc the offset\n    final long instantAdjusted = instantLocal - offsetLocal;\n    final int offsetAdjusted = getOffset(instantAdjusted);\n\n    if (offsetLocal != offsetAdjusted) {\n        long nextLocal = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n\n        if (nextLocal != nextAdjusted) {\n            // Ensure that in overlaps (e.g., when clocks go backward), the later offset is preferred (summer time)\n            if ((offsetLocal - offsetAdjusted) < 0) {\n                return offsetLocal;\n            } else {\n                return offsetAdjusted;\n            }\n        } else {\n            // If transitions are at the same instant, pick the larger offset to prefer summer time\n            return Math.max(offsetLocal, offsetAdjusted);\n        }\n    }\n\n    return offsetAdjusted;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}