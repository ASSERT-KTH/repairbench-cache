{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // get the offset at instantLocal (first estimate)\n    final int offsetLocal = getOffset(instantLocal);\n    // adjust instantLocal using the estimate and recalc the offset\n    final long instantAdjusted = instantLocal - offsetLocal;\n    final int offsetAdjusted = getOffset(instantAdjusted);\n\n    // handle DST overlap (clocks go back) \u2013 favour the earlier instant (daylight time)\n    long prevTrans = previousTransition(instantAdjusted);\n    if (prevTrans != instantAdjusted) {\n        int offsetBefore = getOffset(prevTrans - 1);\n        int offsetAfter  = getOffset(prevTrans);\n        if (offsetBefore > offsetAfter) {\n            // local times from [prevTrans + offsetAfter, prevTrans + offsetBefore)\n            // are ambiguous \u2013 choose the earlier instant => offsetBefore\n            long overlapStartLocal = prevTrans + offsetAfter;\n            long overlapEndLocal   = prevTrans + offsetBefore;\n            if (instantLocal >= overlapStartLocal && instantLocal < overlapEndLocal) {\n                return offsetBefore;\n            }\n        }\n    }\n\n    // handle DST gap (clocks go forward)\n    if (offsetLocal != offsetAdjusted && (offsetLocal - offsetAdjusted) < 0) {\n        long nextLocal    = nextTransition(instantAdjusted);\n        long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n        if (nextLocal != nextAdjusted) {\n            return offsetLocal;\n        }\n    }\n    // normal case\n    return offsetAdjusted;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}