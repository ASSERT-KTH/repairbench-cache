{
    "generation": "@Override\nprotected void _addExplicitAnyCreator(DeserializationContext ctxt,\n        BeanDescription beanDesc, CreatorCollector creators,\n        CreatorCandidate candidate)\n    throws JsonMappingException\n{\n    // Looks like there's bit of magic regarding 1-parameter creators; others simpler:\n    if (1 != candidate.paramCount()) {\n        // Ok: for delegates, we want one and exactly one parameter without\n        // injection AND without name\n        int oneNotInjected = candidate.findOnlyParamWithoutInjection();\n        if (oneNotInjected >= 0) {\n            // getting close; but must not have name\n            if (candidate.paramName(oneNotInjected) == null) {\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);\n                return;\n            }\n        }\n        _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);\n        return;\n    }\n    AnnotatedParameter param = candidate.parameter(0);\n    JacksonInject.Value injectId = candidate.injection(0);\n    PropertyName paramName = candidate.explicitParamName(0);\n    BeanPropertyDefinition propDef = candidate.propertyDef(0);\n\n    // If there's injection or explicit name, should be properties-based\n    boolean useProps = (paramName != null) || (injectId != null);\n    // If no explicit name/injection but we have a matching property, use its name\n    if (!useProps && propDef != null && propDef.couldSerialize()) {\n        // propDef.getFullName already has naming\u2010strategy applied\n        paramName = propDef.getFullName();\n        useProps = true;\n    }\n\n    if (useProps) {\n        SettableBeanProperty[] properties = new SettableBeanProperty[] {\n            constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)\n        };\n        creators.addPropertyCreator(candidate.creator(), true, properties);\n        return;\n    }\n\n    // fallback: single-arg creator (delegate / value)\n    _handleSingleArgumentCreator(creators, candidate.creator(), true, true);\n\n    // unlink the POJOPropertyBuilder so no unresolved constructor arg remains\n    if (propDef != null) {\n        ((POJOPropertyBuilder) propDef).removeConstructors();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}