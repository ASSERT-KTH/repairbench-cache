{
    "generation": "protected void _addExplicitAnyCreator(DeserializationContext ctxt,\n        BeanDescription beanDesc, CreatorCollector creators,\n        CreatorCandidate candidate)\n    throws JsonMappingException\n{\n    // Looks like there's bit of magic regarding 1-parameter creators; others simpler:\n    if (1 != candidate.paramCount()) {\n        // Ok: for delegates, we want one and exactly one parameter without\n        // injection AND without name\n        int oneNotInjected = candidate.findOnlyParamWithoutInjection();\n        if (oneNotInjected >= 0) {\n            // getting close; but must not have name\n            if (candidate.paramName(oneNotInjected) == null) {\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);\n                return;\n            }\n        }\n        _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);\n        return;\n    }\n    AnnotatedParameter param = candidate.parameter(0);\n    JacksonInject.Value injectId = candidate.injection(0);\n    PropertyName paramName = candidate.explicitParamName(0);\n    BeanPropertyDefinition paramDef = candidate.propertyDef(0);\n\n    // If there's injection or explicit name, should be properties-based\n    boolean useProps = (paramName != null) || (injectId != null);\n    if (!useProps && (paramDef != null)) {\n        // One more thing: if implicit name matches property with a getter\n        // or field, we'll consider it property-based as well.\n        // As per [databind#2051], need to honor naming strategy:\n        PropertyName implicit = candidate.findImplicitParamName(0);\n        if (implicit != null) {\n            paramName = implicit;\n        } else {\n            // fall back to the property definition's name (already\n            // renamed by the configured naming strategy)\n            paramName = paramDef.getFullName();\n        }\n        useProps = paramDef.couldSerialize();\n    }\n    if (useProps) {\n        SettableBeanProperty[] props = new SettableBeanProperty[] {\n            constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)\n        };\n        creators.addPropertyCreator(candidate.creator(), true, props);\n        return;\n    }\n    // otherwise it's a single-arg \"delegate\" or \"scalar\" creator\n    _handleSingleArgumentCreator(creators, candidate.creator(), true, true);\n\n    // sever link to constructor property to avoid later unresolved props\n    if (paramDef != null) {\n        ((POJOPropertyBuilder) paramDef).removeConstructors();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}