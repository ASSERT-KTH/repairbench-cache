{
    "generation": "/**\n * Helper method called when there is the explicit \"is-creator\", but no mode declaration.\n *\n * @since 2.9.2\n */\nprotected void _addExplicitAnyCreator(DeserializationContext ctxt,\n        BeanDescription beanDesc, CreatorCollector creators,\n        CreatorCandidate candidate)\n    throws JsonMappingException\n{\n    // Looks like there's bit of magic regarding 1-parameter creators; others simpler:\n    if (1 != candidate.paramCount()) {\n        // Ok: for delegates, we want one and exactly one parameter without\n        // injection AND without name\n        int oneNotInjected = candidate.findOnlyParamWithoutInjection();\n        if (oneNotInjected >= 0) {\n            // getting close; but must not have name\n            if (candidate.paramName(oneNotInjected) == null) {\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);\n                return;\n            }\n        }\n        _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);\n        return;\n    }\n    AnnotatedParameter param = candidate.parameter(0);\n    JacksonInject.Value injectId = candidate.injection(0);\n    // Initially, get the (possibly raw) parameter name; note: if coming from JVM\n    // parameter names (and not explicitly annotated) it is considered \"implicit\"\n    PropertyName paramName = candidate.explicitParamName(0);\n    BeanPropertyDefinition paramDef = candidate.propertyDef(0);\n    \n    // Determine whether to create property-based creator.\n    // If there is an injection then that is an indication to use property mode;\n    // otherwise, even if a name is available we try to use the version that\n    // has been potentially renamed via a naming strategy if we have a property definition.\n    boolean useProps = (injectId != null) || (paramName != null);\n    if (injectId == null && paramDef != null) {\n        // As per [databind#2051], if a naming strategy is configured,\n        // we must use the 'implicit' name (which can be renamed by the strategy)\n        PropertyName implName = candidate.findImplicitParamName(0);\n        if (implName != null && paramDef.couldSerialize()) {\n            paramName = implName;\n            useProps = true;\n        }\n    }\n    if (useProps) {\n        SettableBeanProperty[] properties = new SettableBeanProperty[] {\n                constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)\n        };\n        creators.addPropertyCreator(candidate.creator(), true, properties);\n        return;\n    }\n    _handleSingleArgumentCreator(creators, candidate.creator(), true, true);\n    \n    // one more thing: sever link to creator property, to avoid possible later\n    // problems with \"unresolved\" constructor property\n    if (paramDef != null) {\n        ((POJOPropertyBuilder) paramDef).removeConstructors();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}