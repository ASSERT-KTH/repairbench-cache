{
    "generation": "/**\n * Helper method called when there is the explicit \"is-creator\", but no mode declaration.\n *\n * @since 2.9.2\n */\nprotected void _addExplicitAnyCreator(DeserializationContext ctxt,\n        BeanDescription beanDesc, CreatorCollector creators,\n        CreatorCandidate candidate)\n    throws JsonMappingException\n{\n    // Looks like there's bit of magic regarding 1-parameter creators; others simpler:\n    if (1 != candidate.paramCount()) {\n        // Ok: for delegates, we want one and exactly one parameter without\n        // injection AND without name\n        int oneNotInjected = candidate.findOnlyParamWithoutInjection();\n        if (oneNotInjected >= 0) {\n            // getting close; but most not have name\n            if (candidate.paramName(oneNotInjected) == null) {\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);\n                return;\n            }\n        }\n        _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);\n        return;\n    }\n    AnnotatedParameter param = candidate.parameter(0);\n    JacksonInject.Value injectId = candidate.injection(0);\n    PropertyName paramName = candidate.explicitParamName(0);\n    BeanPropertyDefinition paramDef = candidate.propertyDef(0);\n\n    // If there's injection or explicit name, should be properties-based\n    boolean useProps = (paramName != null) || (injectId != null);\n    if (!useProps && (paramDef != null)) {\n        // 25-May-2018, tatu: as per [databind#2051], looks like we have to get\n        //    not implicit name, but name with possible strategy-based-rename\n        // i.e. use the name from the BeanPropertyDefinition (which has been\n        // renamed via any active PropertyNamingStrategy)\n        paramName = paramDef.getFullName();\n        useProps = paramDef.couldSerialize();\n    }\n    if (useProps) {\n        SettableBeanProperty[] properties = new SettableBeanProperty[] {\n            constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)\n        };\n        creators.addPropertyCreator(candidate.creator(), true, properties);\n        return;\n    }\n\n    // fallback to single-arg (delegate/primitive) creator\n    _handleSingleArgumentCreator(creators, candidate.creator(), true, true);\n\n    // sever link to creator property to avoid later issues with unresolved\n    if (paramDef != null) {\n        ((POJOPropertyBuilder) paramDef).removeConstructors();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}