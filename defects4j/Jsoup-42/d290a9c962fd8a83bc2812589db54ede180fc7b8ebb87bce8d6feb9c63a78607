{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();\n    // iterate the form control elements and accumulate their values\n    for (Element el: elements) {\n        // only submittable controls\n        if (!el.tag().isFormSubmittable()) continue;\n        // skip disabled controls\n        if (el.hasAttr(\"disabled\")) continue;\n\n        String name = el.attr(\"name\");\n        if (name.length() == 0) continue;\n        String type = el.attr(\"type\");\n\n        if (\"select\".equals(el.tagName())) {\n            Elements options = el.select(\"option[selected]\");\n            boolean set = false;\n            for (Element option: options) {\n                data.add(HttpConnection.KeyVal.create(name, option.val()));\n                set = true;\n            }\n            if (!set) {\n                Element option = el.select(\"option\").first();\n                if (option != null) {\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n                }\n            }\n        } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n            // only add if checked\n            if (el.hasAttr(\"checked\")) {\n                // default unchecked-value to \"on\" if none supplied\n                String val = el.hasAttr(\"value\") && el.val().length() > 0\n                    ? el.val()\n                    : \"on\";\n                data.add(HttpConnection.KeyVal.create(name, val));\n            }\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}