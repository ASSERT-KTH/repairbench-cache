{
    "generation": "public List<Connection.KeyVal> formData() {\n    ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();\n\n    for (Element el : elements) {\n        if (!el.tag().isFormSubmittable()) continue;\n        String name = el.attr(\"name\");\n        if (name.isEmpty()) continue;\n        String type = el.attr(\"type\");\n        \n        if (el.attr(\"disabled\") != null) continue;\n\n        if (\"select\".equals(el.tagName())) {\n            Elements selected = el.select(\"option[selected]\");\n            if (selected.isEmpty()) {\n                Element firstOption = el.selectFirst(\"option\");\n                if (firstOption != null) {\n                    data.add(HttpConnection.KeyVal.create(name, firstOption.val()));\n                }\n            } else {\n                for (Element option : selected) {\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n                }\n            }\n        } else if (\"checkbox\".equalsIgnoreCase(type)) {\n            if (el.hasAttr(\"checked\")) {\n                String value = el.attr(\"value\");\n                if (value.isEmpty()) {\n                    value = \"on\"; // Set default value to \"on\"\n                }\n                data.add(HttpConnection.KeyVal.create(name, value));\n            }\n        } else if (\"radio\".equalsIgnoreCase(type)) {\n            if (el.hasAttr(\"checked\")) {\n                data.add(HttpConnection.KeyVal.create(name, el.val()));\n            }\n        } else if (\"textarea\".equalsIgnoreCase(type)) {\n            data.add(HttpConnection.KeyVal.create(name, el.text()));\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}