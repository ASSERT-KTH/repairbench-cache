{
    "generation": "public List<Connection.KeyVal> formData() {\n    ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();\n\n    for (Element el : elements) {\n        if (!el.tag().isFormSubmittable()) continue;\n        String name = el.attr(\"name\");\n        if (name.isEmpty()) continue;\n\n        if (\"select\".equals(el.tagName())) {\n            Elements options = el.select(\"option[selected]\");\n            if (options.isEmpty()) {\n                // If no options are selected, take the first option\n                Element option = el.select(\"option\").first();\n                if (option != null) {\n                    data.add(Connection.KeyVal.create(name, option.val()));\n                }\n            } else {\n                for (Element option : options) {\n                    data.add(Connection.KeyVal.create(name, option.val()));\n                }\n            }\n        } else if (\"checkbox\".equalsIgnoreCase(el.attr(\"type\")) || \"radio\".equalsIgnoreCase(el.attr(\"type\"))) {\n            if (el.hasAttr(\"checked\")) {\n                String value = el.attr(\"value\");\n                // If value is not set, default to 'on' for checkboxes\n                if (value.isEmpty() && \"checkbox\".equalsIgnoreCase(el.attr(\"type\"))) {\n                    value = \"on\";\n                }\n                data.add(Connection.KeyVal.create(name, value));\n            }\n        } else {\n            // For other input types, include the value\n            data.add(Connection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}