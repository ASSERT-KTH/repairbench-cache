{
    "generation": "public int read(byte[] buffer, int start, int length) throws IOException {\n    if (closed) {\n        throw new IOException(\"The stream is closed\");\n    }\n    if (inf.finished() || current == null) {\n        return -1;\n    }\n\n    // avoid int overflow, check null buffer\n    if (start <= buffer.length && length >= 0 && start >= 0\n        && buffer.length - start >= length) {\n\n        if (current.getMethod() == ZipArchiveOutputStream.STORED) {\n            int csize = (int) current.getSize();\n            if (readBytesOfEntry >= csize) {\n                return -1;\n            }\n            if (offsetInBuffer >= lengthOfLastRead) {\n                offsetInBuffer = 0;\n                lengthOfLastRead = in.read(buf);\n                if (lengthOfLastRead == -1) {\n                    throw new IOException(\"Truncated ZIP file\");\n                }\n                count(lengthOfLastRead);\n                bytesReadFromStream += lengthOfLastRead;\n            }\n            int available = lengthOfLastRead - offsetInBuffer;\n            int toRead = length < available ? length : available;\n            int remaining = csize - readBytesOfEntry;\n            if (remaining < toRead) {\n                toRead = remaining;\n            }\n            System.arraycopy(buf, offsetInBuffer, buffer, start, toRead);\n            offsetInBuffer += toRead;\n            readBytesOfEntry += toRead;\n            crc.update(buffer, start, toRead);\n            return toRead;\n        }\n\n        // DEFLATED\n        if (inf.needsInput()) {\n            fill();\n            if (lengthOfLastRead <= 0) {\n                throw new IOException(\"Truncated ZIP file\");\n            }\n            bytesReadFromStream += lengthOfLastRead;\n        }\n        int numRead;\n        try {\n            numRead = inf.inflate(buffer, start, length);\n        } catch (DataFormatException e) {\n            throw new ZipException(e.getMessage());\n        }\n        if (numRead == 0) {\n            if (inf.finished()) {\n                return -1;\n            }\n            throw new IOException(\"Truncated ZIP file\");\n        }\n        crc.update(buffer, start, numRead);\n        return numRead;\n    }\n\n    throw new ArrayIndexOutOfBoundsException();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}