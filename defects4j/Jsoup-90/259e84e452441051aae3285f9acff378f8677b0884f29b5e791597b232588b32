{
    "generation": "private static boolean looksLikeUtf8(byte[] input) {\n    int i = 0;\n    // Check for BOM:\n    if (input.length >= 3 \n            && (input[0] & 0xFF) == 0xEF \n            && (input[1] & 0xFF) == 0xBB \n            && (input[2] & 0xFF) == 0xBF) {\n        i = 3;\n    }\n\n    int j = input.length;\n    for (; i < j; i++) {\n        int o = input[i] & 0xFF;\n        if ((o & 0x80) == 0) {\n            continue; // ASCII byte; move on.\n        }\n\n        int end;\n        if ((o & 0xE0) == 0xC0) {\n            // 2-byte sequence: 1 continuation byte required.\n            if (i + 1 >= j)\n                return false;\n            end = i + 1;\n        } else if ((o & 0xF0) == 0xE0) {\n            // 3-byte sequence: 2 continuation bytes required.\n            if (i + 2 >= j)\n                return false;\n            end = i + 2;\n        } else if ((o & 0xF8) == 0xF0) {\n            // 4-byte sequence: 3 continuation bytes required.\n            if (i + 3 >= j)\n                return false;\n            end = i + 3;\n        } else {\n            return false;\n        }\n\n        // Check that each continuation byte starts with 10xxxxxx.\n        for (int k = i + 1; k <= end; k++) {\n            int cont = input[k] & 0xFF;\n            if ((cont & 0xC0) != 0x80) {\n                return false;\n            }\n        }\n        // Skip over the continuation bytes we've just checked.\n        i = end;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}