{
    "generation": "private static boolean looksLikeUtf8(byte[] input) {\n    int i = 0;\n    // BOM:\n    if (input.length >= 3\n        && (input[0] & 0xFF) == 0xEF\n        && (input[1] & 0xFF) == 0xBB\n        && (input[2] & 0xFF) == 0xBF) {\n        i = 3;\n    }\n\n    for (int len = input.length; i < len; ++i) {\n        int o = input[i] & 0xFF;\n        if ((o & 0x80) == 0) {\n            continue; // ASCII\n        }\n\n        int end;\n        if ((o & 0xE0) == 0xC0) {\n            // must have one continuation byte\n            if (i + 1 >= len)\n                return false;\n            end = i + 1;\n        } else if ((o & 0xF0) == 0xE0) {\n            // must have two continuation bytes\n            if (i + 2 >= len)\n                return false;\n            end = i + 2;\n        } else if ((o & 0xF8) == 0xF0) {\n            // must have three continuation bytes\n            if (i + 3 >= len)\n                return false;\n            end = i + 3;\n        } else {\n            return false;\n        }\n\n        while (i < end) {\n            i++;\n            o = input[i] & 0xFF;\n            if ((o & 0xC0) != 0x80) {\n                return false;\n            }\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}