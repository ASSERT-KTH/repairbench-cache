{
    "generation": "    /**\n     * Helper method used to prevent both caching and cache lookups for structured\n     * types that have custom value handlers\n     *\n     * @since 2.8.11\n     */\n    private boolean _hasCustomHandlers(JavaType t) {\n        if (!t.isContainerType()) {\n            return false;\n        }\n\n        // 1. Check if this container type has a custom deserializer/serializer specified for its content.\n        // This covers cases where annotations like @JsonDeserialize(contentUsing=...) or @JsonSerialize(contentUsing=...)\n        // are used directly on the property that holds this container type.\n        if (t.getContentDeserializer() != null) { // or getContentSerializer() != null for serialization\n            return true;\n        }\n\n        // 2. For Map-like types, check if a custom deserializer/serializer is specified for keys.\n        // This is crucial for the failing test case which uses @JsonDeserialize(keyUsing=...).\n        if (t.isMapLikeType()) {\n            if (t.getKeyDeserializer() != null) { // or getKeySerializer() != null for serialization\n                return true;\n            }\n        }\n\n        // 3. Check the content (value) type itself for value or type handlers.\n        // This was the logic present in the original code.\n        JavaType ct = t.getContentType();\n        if (ct != null) {\n            if ((ct.getValueHandler() != null) || (ct.getTypeHandler() != null)) {\n                return true;\n            }\n        }\n\n        // 4. For Map-like types, check the key type itself for value handlers.\n        // This implements the \"Second\" part of the original method's comment.\n        if (t.isMapLikeType()) {\n            JavaType kt = t.getKeyType();\n            if (kt != null) {\n                // As per comment, keys are generally untyped, so only value handlers are relevant.\n                if (kt.getValueHandler() != null) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}