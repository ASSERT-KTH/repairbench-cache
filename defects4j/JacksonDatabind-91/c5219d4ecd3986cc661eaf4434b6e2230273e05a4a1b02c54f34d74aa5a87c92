{
    "generation": "    /**\n     * Helper method used to prevent both caching and cache lookups for structured\n     * types that have custom value handlers\n     *\n     * @since 2.8.11\n     */\n    private boolean _hasCustomHandlers(JavaType t) {\n        if (t.isContainerType()) {\n            // First: value types may have value and/or type handlers\n            JavaType ct = t.getContentType();\n            if (ct != null) {\n                // 13-Mar-2017, tatu: Take priority, see [databind#1568]\n                if ( (ct.getValueHandler() != null) || (ct.getTypeHandler() != null) ) {\n                     return true;\n                }\n            }\n            // Second: map(-like) types may have value handler for key (but not type; keys are untyped)\n            // 28-Apr-2018, tatu: Need to check this case too, wasn't done previously\n            if (t.isMapLikeType()) {\n                 JavaType kt = t.getKeyType();\n                 // We should check kt is not null for safety, although MapLikeType should have one\n                 if (kt != null && kt.getValueHandler() != null) {\n                     return true;\n                 }\n            }\n        }\n        // 13-Mar-2017, tatu: Also, need to handle non-container types too...\n        // But initially let's just fix the missing check, leave non-container handling\n        // (which wasn't there) for later / if necessary.\n        // So, if not detected for container, check main type itself? No, let's stick\n        // to the original structure's focus for now.\n\n        // If no custom handler found on container's contents or map keys, return false\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}