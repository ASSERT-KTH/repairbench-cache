{
    "generation": "private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);\n    position.setValid(type != MSG_LOCATION_REPORT_BLIND);\n\n    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);\n\n    int battery = buf.readUnsignedByte();\n    if (battery <= 100) {\n        position.set(Position.KEY_BATTERY_LEVEL, battery);\n    } else if (battery == 0xAA) {\n        position.set(Position.KEY_CHARGE, true);\n    }\n\n    position.setNetwork(new Network(CellTower.fromCidLac(\n            getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));\n\n    int product = buf.readUnsignedByte();\n    int status = buf.readUnsignedShort();\n    int alarm = buf.readUnsignedShort();\n\n    // --- Begin: Fix for Huabao Gyro attribute ---\n    // Look ahead for additional bytes (gyro value) if available in the buf\n    // This is probably appended data in Huabao format; check for buffer readable before reading\n    int readableGyroLength = buf.readableBytes();\n    if (readableGyroLength >= 7) {\n        // mark current reader index\n        buf.markReaderIndex();\n\n        // Try to detect pattern for Huabao gyro (prefix 0x0A 0x0A 0x04 0x02, then 3 bytes of gyro)\n        short mark1 = buf.readUnsignedByte(); // possibly 0x0A\n        short mark2 = buf.readUnsignedByte(); // possibly 0x0A\n        short mark3 = buf.readUnsignedByte(); // possibly 0x04\n        short mark4 = buf.readUnsignedByte(); // possibly 0x02\n\n        if (mark1 == 0x0A && mark2 == 0x0A && mark3 == 0x04 && mark4 == 0x02) {\n            byte[] gyro = new byte[3];\n            buf.readBytes(gyro);\n            // Save as hex string, for test compatibility!\n            position.set(\"gyro\", String.format(\"%02x%02x%02x\", gyro[0], gyro[1], gyro[2]));\n        } else {\n            // reset and continue as normal\n            buf.resetReaderIndex();\n        }\n    }\n    // --- End: Huabao Gyro attribute fix ---\n\n    if (product == 1 || product == 2) {\n        if (BitUtil.check(alarm, 0)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n    } else if (product == 3) {\n        position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));\n        if (BitUtil.check(alarm, 1)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n        if (BitUtil.check(alarm, 2)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n        }\n        if (BitUtil.check(alarm, 3)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n        }\n    }\n\n    position.set(Position.KEY_STATUS, status);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}