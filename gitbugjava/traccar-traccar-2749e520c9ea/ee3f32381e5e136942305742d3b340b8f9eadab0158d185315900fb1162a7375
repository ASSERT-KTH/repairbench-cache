{
    "generation": "private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);\n    position.setValid(type != MSG_LOCATION_REPORT_BLIND);\n\n    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);\n\n    int battery = buf.readUnsignedByte();\n    if (battery <= 100) {\n        position.set(Position.KEY_BATTERY_LEVEL, battery);\n    } else if (battery == 0xAA) {\n        position.set(Position.KEY_CHARGE, true);\n    }\n\n    position.setNetwork(new Network(CellTower.fromCidLac(\n            getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));\n\n    int product = buf.readUnsignedByte();\n    int status = buf.readUnsignedShort();\n    int alarm = buf.readUnsignedShort();\n\n    if (product == 1 || product == 2) {\n        if (BitUtil.check(alarm, 0)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n    } else if (product == 3) {\n        position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));\n        if (BitUtil.check(alarm, 1)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n        if (BitUtil.check(alarm, 2)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n        }\n        if (BitUtil.check(alarm, 3)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n        }\n    }\n\n    position.set(Position.KEY_STATUS, status);\n\n    // Extract gyro/IMU/\"gyro\" field if present (11 bytes at the end of the message)\n    if (buf.isReadable(7)) {\n        int readerIndex = buf.readerIndex();\n        int readable = buf.readableBytes();\n        // gyro field found at the end, 7 bytes before the tail\n        // This is a heuristic: 4 bytes (gyro) + 3 bytes (checksum or separator)\n        if (readable >= 7) {\n            // Search for 0x7E tail marker\n            int tailPos = buf.writerIndex() - 1;\n            if (buf.getUnsignedByte(tailPos) == 0x7E) {\n                // 4 bytes before the last 3 bytes is probably our \"gyro\" field\n                buf.readerIndex(tailPos - 6);\n                ByteBuf gyroBuf = buf.readSlice(4);\n                StringBuilder sb = new StringBuilder();\n                while (gyroBuf.isReadable()) {\n                    sb.append(String.format(\"%02x\", gyroBuf.readByte()));\n                }\n                position.set(\"gyro\", sb.toString());\n                // Leave readerIndex unchanged for further decoding\n                buf.readerIndex(readerIndex);\n            }\n        }\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}