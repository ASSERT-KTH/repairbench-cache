{
    "generation": "@Override\nprotected String doFormat(final String code, final LineEnding ending) throws IOException {\n    final var source = new InputSource(new StringReader(code));\n    final var parser = new CSSOMParser(new SACParserCSS3());\n    final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);\n    var formattedCode = sheet.getCssText(this.formatter);\n\n    // Ensuring consistent line endings across platform and parser behavior\n    if (ending == LineEnding.CRLF) {\n        formattedCode = formattedCode.replaceAll(\"\\r\\n\", \"\\n\");\n    }\n    formattedCode = formattedCode.replace(\"\\t;\", \"\\\\9;\");\n\n    if (code.equals(formattedCode) && ending == LineEnding.CRLF) {\n        return formattedCode;\n    }\n    if (code.equals(formattedCode)) {\n        return null;\n    }\n    if (ending == LineEnding.CRLF && !formattedCode.contains(\"\\r\")) {\n        formattedCode = formattedCode.replaceAll(\"\\n\", \"\\r\\n\");\n    }\n    if (ending == LineEnding.LF && formattedCode.contains(\"\\r\")) {\n        formattedCode = formattedCode.replaceAll(\"\\r\\n\", \"\\n\");\n    }\n\n    return formattedCode;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}