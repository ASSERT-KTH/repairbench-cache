{
    "generation": "    @Override\n    protected String doFormat(final String code, final LineEnding ending) throws IOException {\n\n        // Store original settings from this.formatter to restore them later.\n        // this.formatter is an instance field and could be used by other methods or subsequent calls.\n        final var originalQuoteURLs = this.formatter.isQuoteURLs();\n        final var originalRemoveUnnecessaryCode = this.formatter.isRemoveUnnecessaryCode();\n        // CSSWriterSettings initializes newLineString to null, meaning system default will be used.\n        final var originalNewLineString = this.formatter.getNewLineString();\n\n        try {\n            // Apply settings consistent with behavior expected by existing test hashes.\n            // 1. Use the specified line ending.\n            this.formatter.setNewLineString(ending.getChars());\n            // 2. Do not quote URLs (older ph-css behavior, likely for existing hashes).\n            this.formatter.setQuoteURLs(false);\n            // 3. Remove unnecessary code (e.g. last semicolon in a block)\n            //    (older ph-css behavior and likely for existing hashes).\n            this.formatter.setRemoveUnnecessaryCode(true);\n\n            final var source = new InputSource(new StringReader(code));\n            final var parser = new CSSOMParser(new SACParserCSS3());\n            // Assuming CSSStyleSheetImpl is a project-specific type or alias for com.helger.css.decl.CascadingStyleSheet.\n            // The original code uses this cast, so we keep it.\n            final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);\n            var formattedCode = sheet.getCssText(this.formatter);\n\n            // Patch converted 'tab' back to '\\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.\n            formattedCode = formattedCode.replace(\"\\t;\", \"\\\\9;\");\n\n            if (code.equals(formattedCode)) {\n                return null;\n            }\n            return formattedCode;\n        } finally {\n            // Restore original settings to avoid side-effects on the formatter instance.\n            this.formatter.setQuoteURLs(originalQuoteURLs);\n            this.formatter.setRemoveUnnecessaryCode(originalRemoveUnnecessaryCode);\n            this.formatter.setNewLineString(originalNewLineString);\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}