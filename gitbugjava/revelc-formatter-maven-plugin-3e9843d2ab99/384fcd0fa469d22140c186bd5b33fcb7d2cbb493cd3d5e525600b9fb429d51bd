{
    "generation": "@Override\nprotected String doFormat(final String code, final LineEnding ending) throws IOException {\n    final var source = new InputSource(new StringReader(code));\n    final var parser = new CSSOMParser(new SACParserCSS3());\n    final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);\n    var formattedCode = sheet.getCssText(this.formatter);\n\n    // Patch converted 'tab' back to '\\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.\n    formattedCode = formattedCode.replace(\"\\t;\", \"\\\\9;\");\n\n    // Normalize all existing line\u2010breaks to '\\n'\n    formattedCode = formattedCode.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\");\n    // Then convert to the requested line ending\n    String eol = ending == LineEnding.CRLF ? \"\\r\\n\" : \"\\n\";\n    formattedCode = formattedCode.replace(\"\\n\", eol);\n\n    // Ensure the output ends with a newline\n    if (!formattedCode.endsWith(eol)) {\n        formattedCode += eol;\n    }\n\n    // If nothing changed, return null to signal idempotence\n    return code.equals(formattedCode) ? null : formattedCode;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}