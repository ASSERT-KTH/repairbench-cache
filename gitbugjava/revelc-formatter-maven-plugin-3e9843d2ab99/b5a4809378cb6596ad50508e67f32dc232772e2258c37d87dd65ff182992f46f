{
    "generation": "    @Override\n    protected String doFormat(final String code, final LineEnding ending) throws IOException {\n\n        final var source = new InputSource(new StringReader(code));\n        // Assuming SACParserCSS3 is correctly new com.helger.css.parser.SACParserCSS3()\n        final var parser = new CSSOMParser(new com.helger.css.parser.SACParserCSS3());\n        // Assuming CSSStyleSheetImpl is com.helger.css.decl.CSSStyleSheetImpl\n        final var sheet = (com.helger.css.decl.CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);\n\n        // If parsing fails and sheet is null, getCssText would throw a NullPointerException.\n        // We assume parsing is successful as the test failure is a hash mismatch, not an NPE.\n        if (sheet == null) {\n            // Handle parsing failure, e.g., return original code or throw an exception\n            // For now, let's assume successful parsing as per original code's behavior.\n            // This situation might indicate an empty or unparsable CSS,\n            // in which case returning null (no change) or original code might be appropriate.\n            // To be safe and reflect potential no-ops on unparseable content:\n            return null; \n        }\n\n        // Create a copy of the base formatter settings (this.formatter)\n        // this.formatter is of type com.helger.css.writer.CSSWriterSettings\n        final var writerSettings = new com.helger.css.writer.CSSWriterSettings(this.formatter);\n        // Apply the specific line ending for this formatting operation from the 'ending' parameter\n        writerSettings.setNewLineString(ending.getChars());\n\n        // Generate the formatted CSS text using the customized writer settings\n        var formattedCode = sheet.getCssText(writerSettings);\n\n        // Patch converted 'tab' back to '\\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.\n        formattedCode = formattedCode.replace(\"\\t;\", \"\\\\9;\");\n\n        if (code.equals(formattedCode)) {\n            return null;\n        }\n        return formattedCode;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}