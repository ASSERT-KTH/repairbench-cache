{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        // An element is inlineable if all these conditions are met:\n        // 1. It's an inline tag.\n        // 2. The output mode is not \"outline\".\n        // 3. Its parent is a block-level tag, or it's a root element (parent is null).\n        // 4. It has a previous sibling.\n        // 5. That previous sibling is either an inline element or a non-blank text node.\n\n        if (!tag().isInline()) {\n            return false; // Condition 1: Must be an inline tag.\n        }\n        if (out.outline()) {\n            return false; // Condition 2: Output mode must not be outline.\n        }\n\n        // Condition 3: Parent must be block-level, or this is a root element (parent is null).\n        // If parent() is not null AND parent is not block (i.e., parent is inline),\n        // then this element is not considered \"inlineable\" by this method's specific definition\n        // (which relates to indenting children of block tags).\n        if (parent() != null && !parent().isBlock()) {\n            return false;\n        }\n\n        Node previousSibling = previousSibling();\n        if (previousSibling == null) {\n            return false; // Condition 4: Must have a previous sibling.\n        }\n\n        // Condition 5: Nature of the previous sibling.\n        if (previousSibling instanceof Element) {\n            // Previous sibling is an element. Inlineable if that element is also inline.\n            return !((Element) previousSibling).isBlock();\n        } else if (previousSibling instanceof TextNode) {\n            // Previous sibling is a text node. Inlineable if that text node is not blank.\n            return !((TextNode) previousSibling).isBlank();\n        }\n        \n        // Previous sibling is of other type (e.g., Comment, DataNode).\n        // These do not make the current element \"inlineable\" for formatting purposes.\n        return false;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}