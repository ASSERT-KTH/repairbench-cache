{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        // 1. Element's tag must be inline.\n        if (!tag().isInline()) {\n            return false;\n        }\n\n        // 2. Element must not contain any block-level children.\n        // If an inline element contains a block element, it should not be considered inlineable.\n        for (org.jsoup.nodes.Node child : this.childNodes()) {\n            if (child instanceof org.jsoup.nodes.Element) {\n                org.jsoup.nodes.Element elChild = (org.jsoup.nodes.Element) child;\n                if (elChild.tag().isBlock()) {\n                    return false;\n                }\n            }\n        }\n\n        // 3. Parent must be a block element or null (root).\n        // This ensures that inline elements nested within other inline elements\n        // (e.g., `<span><b>text</b></span>`) do not get unnecessarily broken onto new lines,\n        // unless they are explicitly not inlineable by other rules.\n        if (parent() != null && !parent().isBlock()) {\n            return false;\n        }\n\n        // 4. Output settings must not disallow outlining (pretty printing mode).\n        if (out.outline()) {\n            return false;\n        }\n\n        // Removed the `previousSibling() != null` condition.\n        // This allows the first inline child of a block element to be considered inlineable,\n        // which helps in keeping sequences of inline elements on the same line (e.g., <a><a>).\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}