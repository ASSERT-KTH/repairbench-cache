{
    "generation": "           (jsDoc.hasThisType() ||\n           jsDoc.isOverride())) {\n        return false;\n      }\n      // Don't traverse functions unless they would normally\n      int pType = parent.getType();\n      if (!(pType == Token.BLOCK ||\n            pType == Token.SCRIPT ||\n            pType == Token.NAME ||\n            pType == Token.ASSIGN)) {\n        return false;\n      }\n    }\n    if (parent != null && parent.getType() == Token.ASSIGN) {\n      Node lhs = parent.getFirstChild();\n      Node rhs = lhs.getNext();\n      if (n == lhs) {\n        // Always traverse the left side of the assignment. To handle\n        if (assignLhsChild == null) {\n          assignLhsChild = lhs;\n        }\n      } else {\n        // Only traverse the right side if it's not an assignment to a prototype\n        if (lhs.getType() == Token.GETPROP &&\n            lhs.getLastChild().getString().",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}