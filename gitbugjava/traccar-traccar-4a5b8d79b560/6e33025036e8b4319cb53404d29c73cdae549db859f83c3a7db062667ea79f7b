{
    "generation": "@Override\nprotected Object decode(\n        Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n    String sentence = (String) msg;\n    sentence = sentence.substring(sentence.indexOf('|') + 1, sentence.lastIndexOf('|'));\n\n    Position position = new Position();\n    position.setProtocol(getProtocolName());\n\n    SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\");\n    Date actualTime = null;\n    Date utcTime = null;\n    boolean gpsValidSet = false;\n    boolean gpsValid = false;\n\n    for (String entry : sentence.split(\",\")) {\n        int delimiter = entry.indexOf('=');\n        if (delimiter < 0) {\n            continue;\n        }\n        String key = entry.substring(0, delimiter);\n        String value = entry.substring(delimiter + 1);\n        switch (key) {\n            case \"unit\":\n                DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, value);\n                if (deviceSession != null) {\n                    position.setDeviceId(deviceSession.getDeviceId());\n                }\n                break;\n            case \"gps_valid\":\n                gpsValidSet = true;\n                gpsValid = Integer.parseInt(value) != 0;\n                break;\n            case \"datetime_actual\":\n                actualTime = dateFormat.parse(value);\n                break;\n            case \"datetime_utc\":\n                utcTime = dateFormat.parse(value);\n                break;\n            case \"latitude\":\n                position.setLatitude(Double.parseDouble(value));\n                break;\n            case \"longitude\":\n                position.setLongitude(Double.parseDouble(value));\n                break;\n            case \"altitude\":\n                position.setAltitude(Double.parseDouble(value));\n                break;\n            case \"velocity\":\n                position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(value)));\n                break;\n            case \"heading\":\n                position.setCourse(Integer.parseInt(value));\n                break;\n            case \"eventid\":\n                position.set(Position.KEY_EVENT, Integer.parseInt(value));\n                break;\n            case \"mileage\":\n                position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));\n                break;\n            case \"satellites\":\n                position.set(Position.KEY_SATELLITES, Integer.parseInt(value));\n                break;\n            case \"ignition\":\n                position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);\n                break;\n            case \"door\":\n                position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);\n                break;\n            case \"arm\":\n                position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);\n                break;\n            case \"fuel\":\n                position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));\n                break;\n            case \"rpm\":\n                position.set(Position.KEY_RPM, Integer.parseInt(value));\n                break;\n            case \"main_voltage\":\n                position.set(Position.KEY_POWER, Double.parseDouble(value));\n                break;\n            case \"backup_voltage\":\n                position.set(Position.KEY_BATTERY, Double.parseDouble(value));\n                break;\n            case \"analog1\":\n            case \"analog2\":\n            case \"analog3\":\n                position.set(\n                    Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'),\n                    Double.parseDouble(value)\n                );\n                break;\n            default:\n                // all other keys become attributes\n                position.set(key, value);\n                break;\n        }\n    }\n\n    // decide on timestamp\n    long timestamp = 0;\n    if (actualTime != null && actualTime.getTime() > 0) {\n        timestamp = actualTime.getTime();\n    } else if (utcTime != null && utcTime.getTime() > 0) {\n        timestamp = utcTime.getTime();\n    }\n\n    if (timestamp > 0) {\n        position.setTime(new Date(timestamp));\n        // validity: gps_valid if present, otherwise assume valid\n        if (gpsValidSet) {\n            position.setValid(gpsValid);\n        } else {\n            position.setValid(true);\n        }\n    } else {\n        // no usable time \u2192 mark as attribute\u2010only message\n        position.setValid(false);\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}