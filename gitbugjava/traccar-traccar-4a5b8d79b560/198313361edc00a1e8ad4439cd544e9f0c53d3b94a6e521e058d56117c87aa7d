{
    "generation": "@Override\nprotected Object decode(\n        Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n    String sentence = (String) msg;\n    int first = sentence.indexOf('|');\n    int last = sentence.lastIndexOf('|');\n\n    // Defensive: Find first '|' and last '|', if not found, use start/end of string\n    if (first == -1) {\n        first = 0;\n    } else {\n        first += 1;\n    }\n    if (last == -1) {\n        last = sentence.length();\n    }\n\n    sentence = sentence.substring(first, last);\n\n    Position position = new Position();\n    position.setProtocol(getProtocolName());\n\n    for (String entry : sentence.split(\",\")) {\n        int delimiter = entry.indexOf('=');\n        // Defensive: skip entries without '='\n        if (delimiter < 0) {\n            continue;\n        }\n        String key = entry.substring(0, delimiter).trim();\n        String value = entry.substring(delimiter + 1).trim();\n        switch (key) {\n            case \"unit\":\n                DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, value);\n                if (deviceSession != null) {\n                    position.setDeviceId(deviceSession.getDeviceId());\n                }\n                break;\n            case \"gps_valid\":\n                position.setValid(Integer.parseInt(value) != 0);\n                break;\n            case \"datetime_actual\":\n                position.setTime(new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\").parse(value));\n                break;\n            case \"latitude\":\n                position.setLatitude(Double.parseDouble(value));\n                break;\n            case \"longitude\":\n                position.setLongitude(Double.parseDouble(value));\n                break;\n            case \"altitude\":\n                position.setAltitude(Double.parseDouble(value));\n                break;\n            case \"velocity\":\n                // Starcom uses kph in this field\n                position.setSpeed(UnitsConverter.knotsFromKph(Double.parseDouble(value)));\n                break;\n            case \"heading\":\n                position.setCourse(Double.parseDouble(value));\n                break;\n            case \"eventid\":\n                position.set(Position.KEY_EVENT, Integer.parseInt(value));\n                break;\n            case \"mileage\":\n                // Some records have float mileage\n                position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));\n                break;\n            case \"odometer\":\n                position.set(Position.KEY_ODOMETER, Long.parseLong(value));\n                break;\n            case \"satellites\":\n                position.set(Position.KEY_SATELLITES, Integer.parseInt(value));\n                break;\n            case \"ignition\":\n                position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);\n                break;\n            case \"door\":\n                position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);\n                break;\n            case \"arm\":\n                position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);\n                break;\n            case \"fuel\":\n                position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));\n                break;\n            case \"rpm\":\n                position.set(Position.KEY_RPM, Integer.parseInt(value));\n                break;\n            case \"main_voltage\":\n                position.set(Position.KEY_POWER, Double.parseDouble(value));\n                break;\n            case \"backup_voltage\":\n                position.set(Position.KEY_BATTERY, Double.parseDouble(value));\n                break;\n            case \"analog1\":\n            case \"analog2\":\n            case \"analog3\":\n                position.set(Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'), Double.parseDouble(value));\n                break;\n            case \"extra1\":\n            case \"extra2\":\n            case \"extra3\":\n                // These are extra fields, set as attributes, not default\n                position.set(key, value);\n                break;\n            default:\n                position.set(key, value);\n                break;\n        }\n    }\n\n    // If valid could not be set, check for coordinates to set as valid\n    if (!position.hasValid()) {\n        Double lat = position.getLatitude();\n        Double lon = position.getLongitude();\n        position.setValid(lat != null && lon != null && lat != 0.0 && lon != 0.0);\n    }\n\n    if (position.getDeviceId() == null) {\n        return null;\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}