{
    "generation": "    protected void _serializeXmlNull(JsonGenerator jgen) throws IOException\n    {\n        // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly\n        //    configured root name...\n        if (jgen instanceof ToXmlGenerator) {\n            ToXmlGenerator xgen = (ToXmlGenerator) jgen;\n            QName rootName = null;\n\n            // Check for explicitly configured root name from SerializationConfig\n            PropertyName pname = _config.getFullRootName();\n\n            // Use configured name if available and non-empty...\n            if (pname != null && pname != PropertyName.NO_NAME && !pname.isEmpty()) {\n                 // Construct QName from PropertyName.\n                 // Use empty string for no namespace, as per QName constructor javadoc\n                 String ns = pname.getNamespace();\n                 if (ns == null) {\n                     ns = \"\";\n                 }\n                 rootName = new QName(ns, pname.getSimpleName());\n            } else {\n                 // ...otherwise use the default placeholder for null\n                 rootName = ROOT_NAME_FOR_NULL;\n            }\n            // This method ensures that the root element is started with the correct name,\n            // if not already started.\n            _initWithRootName(xgen, rootName);\n        }\n        // Regardless of root name setting, serialize actual null value\n        // which in XML means possibly an empty element, or explicit nil maybe\n        super.serializeValue(jgen, null);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}