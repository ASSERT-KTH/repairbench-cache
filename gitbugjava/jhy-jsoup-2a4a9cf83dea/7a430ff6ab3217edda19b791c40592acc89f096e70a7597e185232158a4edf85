{
    "generation": "        @Override\n        public boolean matches(Element root, Element element) {\n            Element currentChainElement = element; // element is the initial element to check (e.g., from Collector)\n            // evaluate from last to first evaluator, going up the parent chain\n            for (int i = evaluators.size() - 1; i >= 0; --i) {\n                if (currentChainElement == null) {\n                    return false; // Reached top of document before satisfying all evaluators\n                }\n\n                // If the selection root is an Element (i.e., not the Document root),\n                // then the current element being evaluated in the ancestor chain (currentChainElement)\n                // must not be an ancestor of that selection root.\n                // It can be the root itself. Or, if currentChainElement is an ancestor of the original 'element',\n                // it must be in the path from 'element' up to 'root', or 'element' itself.\n                // This check prevents the selector from matching parts of the document \"above\" the selection root.\n                if (!(root instanceof org.jsoup.nodes.Document)) {\n                    // Check if currentChainElement is a strict ancestor of root.\n                    // A strict ancestor is a parent, or grandparent, etc., but not the element itself.\n                    // (If currentChainElement == root, this check will result in isStrictAncestorOfRoot = false, which is correct)\n                    boolean isStrictAncestorOfRoot = false;\n                    Element parentScanner = root.parent(); // Start scanning from the direct parent of root\n                    while (parentScanner != null) {\n                        if (parentScanner == currentChainElement) {\n                            isStrictAncestorOfRoot = true;\n                            break;\n                        }\n                        // Stop if we hit a Document node in the ancestry, as Elements can't be ancestors of that unless it's the root itself (already handled)\n                        if (parentScanner instanceof org.jsoup.nodes.Document) {\n                            break;\n                        }\n                        parentScanner = parentScanner.parent();\n                    }\n\n                    if (isStrictAncestorOfRoot) {\n                        return false; // Match fails if current chain element is an ancestor of the selection root\n                    }\n                }\n\n                Evaluator eval = evaluators.get(i);\n                if (!eval.matches(root, currentChainElement)) {\n                    return false; // Current evaluator in the chain does not match currentChainElement\n                }\n                currentChainElement = currentChainElement.parent(); // Move to parent for the next (outer) evaluator\n            }\n            return true; // All evaluators in the chain matched their respective elements in the hierarchy\n        }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}