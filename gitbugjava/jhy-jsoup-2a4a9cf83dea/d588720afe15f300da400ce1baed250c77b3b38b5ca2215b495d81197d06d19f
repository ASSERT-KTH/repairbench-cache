{
    "generation": "        @Override\n        public boolean matches(Element root, Element element) {\n            // evaluate from last to first\n            for (int i = evaluators.size() -1; i >= 0; --i) {\n                if (element == null)\n                    return false;\n\n                // If the current element to check has moved outside the scope of the query root,\n                // this path is not a valid match.\n                // element must be root or a descendant of root.\n                // Node.contains(other) is true if Node is self or an ancestor of other.\n                // So, root.contains(element) means root is 'element' or an ancestor of 'element'.\n                if (element != root && !root.contains(element))\n                    return false;\n\n                Evaluator eval = evaluators.get(i);\n                if (!eval.matches(root, element))\n                    return false;\n                element = element.parent();\n            }\n            return true;\n        }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}