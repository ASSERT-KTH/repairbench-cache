{
    "generation": "@Override\npublic boolean matches(Element root, Element element) {\n    int size = evaluators.size();\n    // When used in a descendant query (more than one evaluator), the element\n    // must be a proper descendant of the context (i.e. not the root itself).\n    if (size > 1 && element == root)\n        return false;\n\n    int i = size - 1;\n    // The candidate element must match the right-most evaluator.\n    if (!evaluators.get(i).matches(root, element))\n        return false;\n\n    // For each remaining evaluator (moving left in the selector),\n    // look upward through the ancestors until a match is found.\n    for (i--; i >= 0; i--) {\n        element = element.parent();\n        while (element != null && element != root && !evaluators.get(i).matches(root, element)) {\n            element = element.parent();\n        }\n        // If we reached the root (or ran out of ancestors) without a match, then fail.\n        if (element == null || element == root)\n            return false;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}