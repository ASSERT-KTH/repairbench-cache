{
    "generation": "    private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n        decodeCoordinates(position, buf);\n        position.setAltitude(buf.readShort());\n        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n        position.setCourse(buf.readUnsignedShort());\n        position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n        if (buf.readableBytes() == 20) {\n            buf.skipBytes(4); // remaining battery and mileage\n            position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n            position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n            buf.readUnsignedInt(); // area id\n            position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n            buf.skipBytes(3); // reserved\n            return position;\n        }\n        while (buf.readableBytes() > 2) {\n            int subtype = buf.readUnsignedByte();\n            int length = buf.readUnsignedByte();\n            int endIndex = buf.readerIndex() + length;\n            String stringValue;\n            switch (subtype) {\n                case 0x01:\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                    break;\n                case 0x02:\n                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n                    break;\n                case 0x2b:\n                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());\n                    break;\n                case 0x30:\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                    break;\n                case 0x31:\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    break;\n                case 0x33:\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                    if (stringValue.startsWith(\"*M00\")) {\n                        String lockStatus = stringValue.substring(8, 8 + 7);\n                        position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n                    }\n                    break;\n                case 0x34:\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                    if (stringValue.startsWith(\"*M00\")) {\n                        String lockStatus = stringValue.substring(8, 8 + 7);\n                        position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n                    } else {\n                        int mark = buf.readUnsignedByte();\n                        if (mark == 0x7C) {\n                            while (buf.readerIndex() < endIndex) {\n                                int extendedType = buf.readUnsignedByte();\n                                int extendedLength = buf.readUnsignedByte();\n                                switch (extendedType) {\n                                    case 0x01:\n                                        long alarms = buf.readUnsignedInt();\n                                        if (BitUtil.check(alarms, 0)) {\n                                            position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                                        }\n                                        if (BitUtil.check(alarms, 1)) {\n                                            position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                                        }\n                                        if (BitUtil.check(alarms, 2)) {\n                                            position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                                        }\n                                        if (BitUtil.check(alarms, 3)) {\n                                            position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n                                        }\n                                        if (BitUtil.check(alarms, 4)) {\n                                            position.set(Position.KEY_ALARM, Position.ALARM_TAMPERING);\n                                        }\n                                        break;\n                                    default:\n                                        buf.skipBytes(extendedLength);\n                                        break;\n                                }\n                            }\n                        }\n                        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    }\n                    break;\n                default:\n                    break;\n            }\n            buf.readerIndex(endIndex);\n        }\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}