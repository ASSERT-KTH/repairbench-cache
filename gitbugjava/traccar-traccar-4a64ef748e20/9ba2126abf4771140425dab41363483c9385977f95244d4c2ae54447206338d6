{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse(buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n        buf.skipBytes(4);\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n        buf.readUnsignedInt();\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        buf.skipBytes(3);\n        return position;\n    }\n\n    while (buf.readableBytes() > 3) {  // Changed condition from 2 to 3 bytes\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedShort();  // Read as unsigned short instead of unsigned byte\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n        switch (subtype) {\n            case 0x01:\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                break;\n            case 0x02:\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0x2b:\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());\n                break;\n            case 0x30:\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                break;\n            case 0x31:\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case 0x33:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                if (stringValue.startsWith(\"*M00\")) {\n                    String lockStatus = stringValue.substring(8, 8 + 7);\n                    position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n                }\n                break;\n            case 0x60:\n                position.set(Position.KEY_EVENT, buf.readUnsignedShort());\n                buf.skipBytes(length - 2);\n                break;\n            case 0x69:\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n                break;\n            case 0x80:\n                buf.readUnsignedByte();\n                endIndex = buf.writerIndex() - 2;\n                decodeExtension(position, buf, endIndex);\n                break;\n            case 0x91:\n                if (buf.readableBytes() >= length) {\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                    position.set(\"driver\", stringValue.trim());\n                }\n                break;\n            case 0x94:\n                if (length > 0) {\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                    position.set(Position.KEY_VIN, stringValue);\n                }\n                break;\n            case 0xa7:\n                position.set(Position.PREFIX_ADC + 1, buf.readShort() & 0xFFFF);\n                position.set(Position.PREFIX_ADC + 2, buf.readUnsignedShort());\n                break;\n            case 0xac:\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt());\n                break;\n            case 0xbc:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(\"driver\", stringValue.trim());\n                break;\n            case 0xbd:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(Position.KEY_DRIVER_UNIQUE_ID, stringValue);\n                break;\n            case 0xd0:\n                buf.readUnsignedShort();\n                int deviceStatus = buf.readUnsignedByte();\n                position.set(\"string\", BitUtil.check(deviceStatus, 0));\n                position.set(Position.KEY_MOTION, BitUtil.check(deviceStatus, 2));\n                position.set(\"cover\", BitUtil.check(deviceStatus, 3));\n                break;\n            case 0xd3:\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0xd4:\n            case 0xe1:\n                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                break;\n            case 0xd5:\n                if (length == 2) {\n                    position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n                } else {\n                    int count = buf.readUnsignedByte();\n                    for (int i = 1; i <= count; i++) {\n                        position.set(\"lock\" + i + \"Id\", ByteBufUtil.hexDump(buf.readSlice(5)));\n                        position.set(\"lock\" + i + \"Card\", ByteBufUtil.hexDump(buf.readSlice(5)));\n                        position.set(\"lock\" + i + \"Battery\", buf.readUnsignedByte());\n                        int status = buf.readUnsignedShort();\n                        position.set(\"lock\" + i + \"Locked\", !BitUtil.check(status, 5));\n                    }\n                }\n                break;\n            case 0xe6:\n                while (buf.readerIndex() < endIndex) {\n                    int sensorIndex = buf.readUnsignedByte();\n                    buf.skipBytes(6);\n                    position.set(Position.PREFIX_TEMP + sensorIndex, decodeCustomDouble(buf));\n                    position.set(\"humidity\" + sensorIndex, decodeCustomDouble(buf));\n                }\n                break;\n            case 0xeb:\n                if (buf.getUnsignedShort(buf.readerIndex()) > 200) {\n                    Network network = new Network();\n                    int mcc = buf.readUnsignedShort();\n                    int mnc = buf.readUnsignedByte();\n                    while (buf.readerIndex() < endIndex) {\n                        network.addCellTower(CellTower.from(\n                                mcc, mnc, buf.readUnsignedShort(), buf.readUnsignedInt()));\n                    }\n                    position.setNetwork(network);\n                } else {\n                    while (buf.readerIndex() < endIndex) {\n                        int extendedLength = buf.readUnsignedShort();\n                        int extendedType = buf.readUnsignedShort();\n                        switch (extendedType) {\n                            case 0x0001:\n                                position.set(\"fuel1\", buf.readUnsignedShort() * 0.1);\n                                buf.readUnsignedByte();\n                                break;\n                            case 0x0023:\n                                position.set(\"fuel2\", Double.parseDouble(\n                                        buf.readCharSequence(6, StandardCharsets.US_ASCII).toString()));\n                                break;\n                            case 0x00ce:\n                                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.01);\n                                break;\n                            case 0x00d8:\n                                Network network = new Network();\n                                network.addCellTower(CellTower.from(\n                                        buf.readUnsignedShort(), buf.readUnsignedByte(),\n                                        buf.readUnsignedShort(), buf.readUnsignedInt()));\n                                position.setNetwork(network);\n                                break;\n                            case 0xe1:\n                                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                                break;\n                            default:\n                                buf.skipBytes(extendedLength - 2);\n                                break;\n                        }\n                    }\n                }\n                break;\n            case 0xed:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(Position.KEY_CARD, stringValue.trim());\n                break;\n            case 0xee:\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.001);\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case 0xf3:\n                while (buf.readerIndex() < endIndex) {\n                    int extendedType = buf.readUnsignedShort();\n                    int extendedLength = buf.readUnsignedByte(); // Fixed default case below\n                    switch (extendedType) {\n                        case 0x0002:\n                            position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() * 0.1);\n                            break;\n                        case 0x0003:\n                            position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                            break;\n                        case 0x0004:\n                            position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);\n                            break;\n                        case 0x0005:\n                            position.set(Position.KEY_OBD_ODOMETER, buf.readUnsignedInt() * 100);\n                            break;\n                        case 0x0007:\n                            position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.1);\n                            break;\n                        case 0x0008:\n                            position.set(\"\tintakePressure\", buf.readUnsignedShort());\n                            break;\n                        case 0x000B:\n                            position.set(\"intakeTemp\", buf.readUnsignedShort() - 40);\n                            break;\n                        case 0x000C:\n                            position.set(\"intakeFlow\", buf.readUnsignedShort());\n                            break;\n                        case 0x000D:\n                            position.set(Position.KEY_%_\ud558\u534f, buf.readUnsignedShort() * 100 / 255);\n                            break;\n                        case 0x0050:\n                            position.set(Position.KEY_VPI, buf.readSlice(17).toString(StandardCharsets.US_ASCII));\n                            break;\n                        case 0x0100:\n                            position.set(Position.KEY_ODOMETER_TRIP, buffy readUnsignedShort() * 0.1);\n                            break;\n                        case 0x0102:\n                            position.set(\"tripFuel\", buffy readUnsignedShort() * 0.1);\n                            break;\n                        case 0x0112:\n                            position.set(\"hardAccelerationCount\", buffy read_UNSIGNED Short());\n                            break;\n                        case 0x0113:\n                            position.set(\"hardDecelerationCount\", )\n                            break;\n                        case 0x0114:\n                            position.set(\"hardCorneringCount\", buf.read Unsigned Short() \n                            break;\n                        default:\n                            buffy.AFFInvokerBytes(extended Lambda \u2192 extendedLength);\n                            break;\n                    }\n                }\n                break;\n            case 0xfe:\n                if (length == 1) {\n                    position set KEY_BATTERY_LEVEL, \n                }   \n                else \n                { \n                    int mark = \n                    if (m\u77f3\u5316 ==0x7c) \n                    { \n                        while (buf. reader == < endIX) \n                        { \n                            int extendedLength = buffy. readUnsignedShort ();\n                            int extendedT = \n                            swith \n                            ... \n                            ## Fix the default case to skip remaining bytes\n                            default:\n                                buf.skipBytes(extendedLength -4);\n                                break;\n                        }\n                    } \n                    // Read the final battery level after processing other data \n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte()); \n                } \n                break; \n            default:\n                break; \n        } \n        buf.readerIndex(endIndex); \n    } \u8fd4\u56de position; \n} ",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}