{
    "generation": "        case 0xFE:\n            if (length == 1) {\n                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n            } else {\n                int mark = buf.readUnsignedByte();\n                if (mark == 0x7C) {\n                    while (buf.readerIndex() < endIndex) {\n                        int extendedType = buf.readUnsignedByte();\n                        int extendedLength = buf.readUnsignedByte();\n                        switch (extendedType) {\n                            case 0x01:\n                                long alarms = buf.readUnsignedInt();\n                                if (BitUtil.check(alarms, 0)) {\n                                    position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                                }\n                                if (BitUtil.check(alarms, 1)) {\n                                    position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                                }\n                                if (BitUtil.check(alarms, 2)) {\n                                    position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                                }\n                                if (BitUtil.check(alarms, 3)) {\n                                    position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n                                }\n                                if (BitUtil.check(alarms, 4)) {\n                                    position.set(Position.KEY_ALARM, Position.ALARM_TAMPERING);\n                                }\n                                break;\n                            default:\n                                buf.skipBytes(extendedLength);\n                                break;\n                        }\n                    }\n                }\n                // Only set battery level if mark == 0x7C; otherwise, rely on other fields\n                buf.readUnsignedByte(); // Skip battery if not part of extended types\n            }\n            break;",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}