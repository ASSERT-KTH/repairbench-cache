{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse(buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n        buf.skipBytes(4); // remaining battery and mileage\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n        buf.readUnsignedInt(); // area id\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        buf.skipBytes(3); // reserved\n        return position;\n    }\n\n    while (buf.readableBytes() > 2) {\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n        switch (subtype) {\n            case 0x01:\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                break;\n            case 0x02:\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0x2b:\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());\n                break;\n            case 0x30:\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                break;\n            case 0x31:\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case 0x33:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                if (stringValue.startsWith(\"*M00\")) {\n                    String lockStatus = stringValue.substring(8, 8 + 7);\n                    position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n                }\n                break;\n            case 0x60:\n                position.set(Position.KEY_EVENT, buf.readUnsignedShort());\n                buf.skipBytes(length - 2);\n                break;\n            case 0x69:\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n                break;\n            case 0x80:\n                buf.readUnsignedByte(); // content\n                endIndex = buf.writerIndex() - 2; // Not sure about this part, but keeping as original\n                decodeExtension(position, buf, endIndex);\n                break;\n            case 0x91:\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n                position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte());\n                position.set(\"throttleValue\", (double) buf.readUnsignedByte() * 100); // Wait, original was throttle and engine load. \n                // Wait original for case 0x91:\n                // position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 100 / 255);\n                // position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 100 / 255);\n                // position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);\n                // But the code above for 0x91 was:\n\n position.set(Position.KEY_RPM, buf.readUnsignedShort());\n position.set(Position.KEY_OBD_SPEED, buf.readByte());\n position.set( key_throttle, ... etc. Wait, perhaps I need to not alter anything here. \n\n                // probably leave the other lines as-is.\n\n                // Well, just need to focus on the FE case. \n\n                case 0x94:\n                    if (length > 0) {\n                        stringValue = decode(bytes to string ...)\n                        set VIN.\n                    }\n                    break;\n                case 0xA7:\n                    set ADC 1 and 2 based on two shorts.\n                    break;\n                case 0xAC:\n                    set odometer with an int.\n                    break;\n                case 0xBC:\n                    set driver name from string.\n                    break;\n                case 0xBD:\n                    process locks data from the loop.\n                    break;\n                case 0xD0:\n                    decode userStatus with alarms\n                    break;\n                case 0xD3:\n                    set power with unit.\n                    break;\n                case 0xD4:\n                case 0xE1:\n                    set battery_level with a byte.\n                    break;\n                case 0xD5:\n                    process lock status.\n                    break;\n                case 0xDA:\n                    deviceStatus bytes, set motion etc. break;\n                case 0xE6:\n                    process sensor data (temp, humidity via loops). break;\n\n                case 0xEB:\n                    the complicated code with different conditions. \n                    * if initial length condition>200 (so 2 bytes for some part?), but not sure.\n                if (buf.getUnsignedShort(buf.readerIndex()) > 200) { ... }\n                else { ... }\n\n                    break;\n                    // etc.\n\n                case 0xEE:\n                    set several keys. break;\n\n                case 0xFE:\n                    // this is the problematic one.\n                    if (length == 1) {\n                        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    } else {\n                        int mark = buf.readUnsignedByte();\n                        if (mark == 0x7C) {\n                            while (buf.readerIndex() < endIndex) {\n                                int extendedType = buf.readUnsignedByte();\n                                int extendedLength = buf.readUnsignedByte();\n                                switch (extendedType) {\n                                    case 0x01:\n                                        long userStatus = buf.readUnsignedInt();\n                                        if (BitUtil.check(userStatus, 3)) {\n                                            position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n                                        }\n                                        break;\n                                    default:\n                                        buf.skipBytes(extendedLength); // Relocated this?\n                                        break;\n                                }\n                            }\n                        } else {\n                            position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                        }\n                    }\n                    break;\n\n                case 0xED:\n                    set driver etc.\n\n                case 0xF3:\n                    decode several extended types, each taking variable bytes. break;\n\n                default:\n                    // no action\n                    }\n                }\n            buf.readerIndex(endIndex);\n        }\n\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}