{
    "generation": "    /**\n     * Finds the next text wrap position after <code>startPos</code> for the\n     * text in <code>text</code> with the column width <code>width</code>.\n     * The wrap point is the last position before startPos+width having a\n     * whitespace character (space, \\n, \\r). If there is no whitespace character\n     * before startPos+width, it will return startPos+width.\n     *\n     * @param text The text being searched for the wrap position\n     * @param width width of the wrapped text\n     * @param startPos position from which to start the lookup whitespace\n     * character\n     * @return position on which the text must be wrapped or -1 if the wrap\n     * position is at the end of the text\n     */\n    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int limit = startPos + width;\n\n        // Handle explicit EOL chars (\\n, \\t) first.\n        // If found strictly before the calculated limit, wrap just after it.\n        int nlPos = text.indexOf('\\n', startPos);\n        int tabPos = text.indexOf('\\t', startPos);\n        int firstEOL = -1;\n\n        if (nlPos != -1 && tabPos != -1) {\n            firstEOL = Math.min(nlPos, tabPos);\n        } else if (nlPos != -1) {\n            firstEOL = nlPos;\n        } else {\n            firstEOL = tabPos; // Could be -1 if neither found\n        }\n\n        // If an explicit EOL is found before the calculated limit, return the position immediately after it\n        if (firstEOL != -1 && firstEOL < limit) {\n            return firstEOL + 1; // Return position AFTER EOL char\n        }\n\n        // If the potential wrap position is at or beyond the end of the text,\n        // return -1 (signifies the end).\n        if (limit >= text.length())\n        {\n            return -1;\n        }\n\n        // Look backwards for the last whitespace character (' ', \\n, \\r)\n        // in the range [startPos, limit - 1]. Start checking from limit-1.\n        int pos = limit; // Use limit as starting point for backward search index calculation\n        while (pos > startPos)\n        {\n            // Decrement pos first to check indices limit-1, limit-2, ..., startPos\n            pos--;\n            char c = text.charAt(pos);\n            if (c == ' ' || c == '\\n' || c == '\\r')\n            {\n                // Found whitespace at index 'pos'. As per docs and tests (e.g., testFindWrapPos with space),\n                // return the index *of* this whitespace character.\n                return pos;\n            }\n        }\n\n        // No suitable whitespace found in the range [startPos, limit - 1].\n        // As per docs, wrap exactly at the width limit in this case.\n        return limit;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}