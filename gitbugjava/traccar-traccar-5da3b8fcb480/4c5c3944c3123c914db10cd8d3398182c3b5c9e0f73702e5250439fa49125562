{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse(buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n\n        buf.skipBytes(4); // remaining battery and mileage\n        position.setAltitude(short, ....\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n        buf.readUnsignedInt(); // area id\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        buf.skipBytes(3); // reserved\n\n        return position;\n\n    }\n\n    while (buf.readableBytes() > 2) {\n\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n        switch (subtype) {\n            //\u5176\u4ed6 cases remain the same.\n\n            case 0xEB:\n                if (buf.getUnsignedShort(buf.readerIndex()) > 200) {\n                    Network network = new Network();\n                    int mcc = buf.readUnsignedShort();\n                    int mnc = buf.readUnsignedByte();\n                    while (buf.readerIndex() < endIndex) {\n                        network.addCellTower(CellTower.from(\n                                mcc, mnc, buf.readUnsignedShort(), buf.readUnsignedShort(),\n                                buf.readUnsignedShort()));\n                    }\n                    position.setNetwork(network);\n                } else {\n                    while (buf.readerIndex() < endIndex) {\n                        int extendedLength = buf.readUnsignedShort();\n                        int extendedType = buf.readUnsignedShort();\n                        switch (extendedType) {\n                            case 0x0001:\n                                position.set(\"fuel1\", buf.readUnsignedShort() * 0.1);\n                                buf.readUnsignedByte(); // unused\n                                break;\n                            case 0x0023:\n                                stringValue = buf.readCharSequence(6, StandardCharsets.US_ASCII).toString();\n                                position.set(\"fuel2\", Double.parseDouble(stringValue));\n                                break;\n                            case 0x00CE:\n                                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);\n                                break;\n                            case 0x00D8:\n                                Network network = new Network();\n                                network.addCellTower(CellTower.from(\n                                        buf.readUnsignedShort(), buf.readUnsignedByte(),\n                                        buf.readUnsignedShort(), buf.readUnsignedInt()));\n                                position.setNetwork(network);\n                                break;\n                            case 0xE1:\n                                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                                break;\n                            default:\n                                buf.skipBytes(extendedLength -4); //\u66f4\u6539 here\n                                break;\n                        }\n                    }\n                }\n                break;\n            // all other cases remain the same.\n\n            default:\n                break;\n        }\n        buf.readerIndex(endIndex);\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}