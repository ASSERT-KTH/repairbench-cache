{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse(buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n\n        buf.skipBytes(4); // remaining battery and mileage\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n        buf.readUnsignedInt(); // area id\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        buf.skipBytes(3); // reserved\n\n        return position;\n\n    }\n\n    while (buf.readableBytes() > 2) {\n\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n        switch (subtype) {\n            case 0x01:\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                break;\n            case 0x02:\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0x2b:\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());\n                break;\n            case 0x30:\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                break;\n            case 0x31:\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case 0x33:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                if (stringValue.startsWith(\"*M00\")) {\n                    String lockStatus = stringValue.substring(8, 8 + 7);\n                    position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n                }\n                break;\n            case 0x80:\n                buf.readUnsignedByte(); // content\n                endIndex = buf.writerIndex() - 2;\n                decodeExtension(position, buf, endIndex);\n                break;\n            case 0x91:\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n                position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte());\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 100 / 255);\n                position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 100 / 255);\n                buf.readUnsignedShort();\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.01);\n                buf.readUnsignedShort();\n                buf.readUnsignedInt();\n                buf.readUnsignedShort();\n                position.set(Position.KEY_FUEL_USED, buf.readUnsignedShort() * 0.01);\n                break;\n            case 0x94:\n                if (length > 0) {\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                    position.set(Position.KEY_VIN, stringValue);\n                }\n                break;\n            case 0xA7:\n                position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());\n                position.set(Position.PREFIX_ADC + 2, buf.readUnsignedShort());\n                break;\n            case 0xAC:\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt());\n                break;\n            case 0xBC:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(\"driver\", stringValue.trim());\n                break;\n            case 0xBD:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(Position.KEY_DRIVER_UNIQUE_ID, stringValue);\n                break;\n            case 0xD0:\n                long userStatus = buf.readUnsignedInt();\n                if (BitUtil.check(userStatus, 3)) {\n                    position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n                }\n                break;\n            case 0xD3:\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0xD4:\n                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                break;\n            case 0xD5:\n                if (length == 2) {\n                    position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n                } else {\n                    int count = buf.readUnsignedByte();\n                    for (int i = 1; i <= count; i++) {\n                        position.set(\"lock\" + i + \"Id\", ByteBufUtil.hexDump(buf.readSlice(5)));\n                        position.set(\"lock\" + i + \"Card\", ByteBufUtil.hexDump(buf.readSlice(5)));\n                        position.set(\"lock\" + i + \"Battery\", buf.readUnsignedByte());\n                        int status = buf.readUnsignedShort();\n                        position.set(\"lock\" + i + \"Locked\", !BitUtil.check(status, 5));\n                    }\n                }\n                break;\n            case 0xDA:\n                buf.readUnsignedShort(); // string cut count\n                int deviceStatus = buf.readUnsignedByte();\n                position.set(\"string\", BitUtil.check(deviceStatus, 0));\n                position.set(Position.KEY_MOTION, BitUtil.check(deviceStatus, 2));\n                position.set(\"cover\", BitUtil.check(deviceStatus, 3));\n                break;\n            case 0xE6:\n                while (buf.readerIndex() < endIndex) {\n                    int sensorIndex = buf.readUnsignedByte();\n                    buf.skipBytes(6); // mac\n                    position.set(Position.PREFIX_TEMP + sensorIndex, decodeCustomDouble(buf));\n                    position.set(\"humidity\" + sensorIndex, decodeCustomDouble(buf));\n                }\n                break;\n            case 0xEB:\n                if (buf.getUnsignedShort(buf.readerIndex()) > 200) {\n                    Network network = new Network();\n                    int mcc = buf.readUnsignedShort();\n                    int mnc = buf.readUnsignedByte();\n                    while (buf)readerIndex) < endIndex.){ \n                        network.addCellTower(CellTower.from(\n                                mcc, mnc, buf.readUnsignedShort(), buf.readUnsignedShort(),\n                                buf. readUnsignedByte()));\n\n                    }\n                    position.setNetwork(network);\n                } else {\n                    while (buf)readerIndex() < endIndex) {\n                        int extendedLength = buf.readUnsignedShort();\n                        int extendedType = buf.readUnsignedShort();\n                        switch (extendedType) {\n                            case 0x0001:\n                                position.set(\"fuel1\", buf.readUnsignedShort() * 0.1);\n                                buf.readUnsignedByte(); // unused\n                                break;\n                            case 0x0023:\n                                position.set(\"fuel2\", Double.parseDouble(\n                                        buf.readCharSequence(6, StandardCharsets.US_ASCII).toString()));\n                                break;\n                            case 0x00CE:\n                                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.01);\n                                break;\n                            case 0x00D8:\n                                Network network = new Network();\n                                network.addCellTower(CellTower.from(\n                                        buf.readUnsignedShort(), (short) buf.readUnsignedByte(),\n                                        buf.readUnsignedShort(), buf.readUnsignedInt()));\n                                position.setNetwork(network);\n                                break;\n                            case 0xE1:\n                                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                                break;\n                            default:\n                                buf.skipBytes(extendedLength - 2);\n                                break;\n                        }\n                    }\n                }\n                break;\n            case 0xED:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(Position.KEY_CARD, stringValue.trim());\n                break;\n            case 0xEE:\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.001);\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case 0xF3:\n                while (buf)readerIndex < endIndex) {\n\n                    // Fix the order of reading extendedType and extendedLength in 0xF3 subtype\n                    int extendedType = buf.readUnsignedShort();\n                    int extendedLength = buf.readUnsignedByte();\n\n                    switch (extendedType) {\n                        case 0x0002:\n                            position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() * 0.1);\n                            break;\n                        case 0x0003:\n                            position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                            break;\n                        case 0x0004:\n                            position.set. Has ((Key. power |(buffer 's Read uint16 *0.001 )\n                            \uff0c etc. \n\n                        case_0x0005:\n                            ){\n\n                            position.set(Position.KEY_OBD_ODOMETER, buf.readUnsignedInt() * 100);\n                            } \n                        // \u5176\u4ed6 cases\u5904\u7406 as before. \n\n                        default:\n                            // Skip remaining bytes of the entry\n                            buf.skipBytes(extendedLength - 2);\n                            break;\n                    }\n                }\n                break;\n            case 0xFE:\n                if (length == 1) {\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                } else {\n                    int mark = buf.readUnsignedByte();\n                    if (mark == 0x7C) {\n                        while (buf)readerIndex() < endIndex)) { \n                            int extendedType = buf.readUnsignedByte();\n                            int extendedLength = buf.readUnsignedByte();\n                            int dataStart = buf)readerIndex ();\n                            int dataEnd = \n\n dataStart \n\n + extends. \n extendedLength; \n\n                          if_dataEnd > endIndex \u7684 \\:\n                            break;\n\n                         , switch ({\n\n \n\n                             case0x01: {\n\n                                 long userStatus = buf.readUnsignedInt(); \n                                 if_BIT the (userStatus,3\n\n                            ){\n\n                                Position.SET( key_\uc54c\ub78c... \n\n                             } \n\n                                 break;\n\n                             default: \n\n\u6536\u5230\u7684  the extendedLength\uc5d0 \n\n                                buf.skipBytes(extendedLength); \n\n\u4e0d\u662f 20:\n\n IF extendedType\ub294 not\u88ab \u5904\u7406 (eg,\u4e0d\u77e5\u9053,\u5219 the extendedEntry\u7684 \ubaa8\ub4e0 data bytes are skipped. \n\n                            } \n\n                        // ensure the rdr gg moreover => the data end: \n\n                        \u5efa. \u8be5_ buf's reader index to dataEnd\uff1a\n\n                        \uc368\ub294 \n\n                        _\uc774 code needs it \n\n                        buf)readerIndex('-dataEnd:\n\n\n\n                        } \n\n                            } else { \n                                // if mark is not 0x7C, read battery level and discard remaining data\n\n                                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                                // Skip remaining bytes (after mark byte and battery level byte)\n                                buf.skipBytes(length - 2);\n                        }\n                        // Ensure the reader index reaches the end of the subtype data\n                        buf.readerIndex(endIndex);\n                    }\n                    break;\n            default:\n                break;\n        }\n        buf.readerIndex(endIndex);\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}