{
    "generation": "    protected void replaceChild(Node out, Node in) {\n        Validate.isTrue(out.parentNode == this);\n        Validate.notNull(in);\n        if (out == in) // If node is replaced with itself, do nothing.\n            return;\n\n        if (in.parentNode != null)\n            in.parentNode.removeChild(in);\n\n        final int index = out.siblingIndex; // Get index of original node ('out')\n        ensureChildNodes().set(index, in);  // Replace 'out' with 'in' at the same index\n        in.parentNode = this;               // Update 'in's parent\n        in.setSiblingIndex(index);          // Update 'in's sibling index\n        out.parentNode = null;              // 'out' is no longer connected\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}