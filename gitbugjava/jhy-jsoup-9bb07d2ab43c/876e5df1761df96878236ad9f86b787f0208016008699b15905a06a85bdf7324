{
    "generation": "    protected void replaceChild(Node out, Node in) {\n        Validate.isTrue(out.parentNode == this);\n        Validate.notNull(in);\n\n        // If the node is replacing itself, no actual change is needed.\n        // This prevents the node from being removed from its parent and then re-inserted,\n        // which can lead to incorrect sibling indices or structural issues if not handled carefully.\n        if (out == in) {\n            return;\n        }\n\n        if (in.parentNode != null) {\n            in.parentNode.removeChild(in);\n        }\n\n        final int index = out.siblingIndex;\n        ensureChildNodes().set(index, in);\n        in.parentNode = this;\n        in.setSiblingIndex(index);\n        out.parentNode = null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}