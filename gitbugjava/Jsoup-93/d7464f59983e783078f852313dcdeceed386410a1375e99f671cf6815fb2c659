{
    "generation": "    /**\n     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the\n     * list will not be reflected in the DOM.\n     * @return a list of key vals\n     */\n    public List<Connection.KeyVal> formData() {\n        ArrayList<Connection.KeyVal> data = new ArrayList<>();\n\n        // iterate the form control elements and accumulate their values\n        for (Element el: elements) {\n            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable\n            if (el.hasAttr(\"disabled\")) continue; // skip disabled form inputs\n            String name = el.attr(\"name\");\n            if (name.length() == 0) continue; // skip unnamed elements\n            String type = el.attr(\"type\").toLowerCase(); // use lower case for type comparison\n\n\n            if (\"select\".equals(el.normalName())) {\n                Elements options = el.select(\"option[selected]\");\n                boolean set = false;\n                for (Element option: options) {\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n                    set = true;\n                }\n                if (!set) {\n                    Element option = el.select(\"option\").first();\n                    if (option != null)\n                        data.add(HttpConnection.KeyVal.create(name, option.val()));\n                }\n            } else if (\"checkbox\".equals(type) || \"radio\".equals(type)) {\n                // only add checkbox or radio if they have the checked attribute\n                if (el.hasAttr(\"checked\")) {\n                    final String val = el.val().length() >  0 ? el.val() : \"on\";\n                    data.add(HttpConnection.KeyVal.create(name, val));\n                }\n            } else {\n                // All other control types, like <textarea>, <input type=text|hidden|password|submit|file|etc>\n                // Exclude input[type=button], input[type=reset] as they are buttons and their values are not submitted\n                // (input[type=submit] is submitted, but usually only if it was the triggering button - not handled here)\n                // (input[type=image] also submits x,y coords - not handled here)\n                // For the failing test, we specifically need to exclude input[type=button]\n                if (el.normalName().equals(\"input\") && (\"button\".equals(type) || \"reset\".equals(type))) {\n                    // skip these button types\n                } else {\n                    data.add(HttpConnection.KeyVal.create(name, el.val()));\n                }\n            }\n        }\n        return data;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}