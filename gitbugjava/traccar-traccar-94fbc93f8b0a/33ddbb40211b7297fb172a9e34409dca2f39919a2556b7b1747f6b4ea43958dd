{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    // Clean up the form string: strip any leading control characters (length\u2010prefix,\n    // nulls, etc.) and remove a leading '%' if present\n    if (form == null || form.isEmpty()) {\n        return;\n    }\n    // Remove null bytes\n    form = form.replace(\"\\0\", \"\");\n    // Strip any non\u2010printable prefix characters\n    while (!form.isEmpty() && form.charAt(0) <= 0x1F) {\n        form = form.substring(1);\n    }\n    // Strip a single leading '%'\n    if (form.startsWith(\"%\")) {\n        form = form.substring(1);\n    }\n    // Split into individual keys\n    String[] keys = form.split(\"%\");\n    CellTower cellTower = new CellTower();\n    for (String key : keys) {\n        if (key.isEmpty()) {\n            continue;\n        }\n        switch (key) {\n            case \"SA\":\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case \"MV\":\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);\n                break;\n            case \"BV\":\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n                break;\n            case \"GQ\":\n                cellTower.setSignalStrength((int) buf.readUnsignedByte());\n                break;\n            case \"CE\":\n                cellTower.setCellId(buf.readUnsignedInt());\n                break;\n            case \"LC\":\n                cellTower.setLocationAreaCode(buf.readUnsignedShort());\n                break;\n            case \"CN\": {\n                int combined = (int) (buf.readUnsignedInt() % 100000);\n                cellTower.setMobileCountryCode(combined / 100);\n                cellTower.setMobileNetworkCode(combined % 100);\n                break;\n            }\n            case \"RL\":\n                buf.readUnsignedByte(); // rxlev\n                break;\n            case \"PC\":\n                position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());\n                break;\n            case \"AT\":\n                position.setAltitude(buf.readUnsignedInt());\n                break;\n            case \"RP\":\n                position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                break;\n            case \"GS\":\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                break;\n            case \"DT\":\n                position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);\n                break;\n            case \"VN\":\n                position.set(Position.KEY_VIN, readString(buf));\n                break;\n            case \"MF\":\n                buf.readUnsignedShort(); // mass air flow rate\n                break;\n            case \"EL\":\n                buf.readUnsignedByte(); // engine load\n                break;\n            case \"TR\":\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                break;\n            case \"ET\":\n                position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());\n                break;\n            case \"FL\":\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                break;\n            case \"ML\":\n                buf.readUnsignedByte(); // mil status\n                break;\n            case \"FC\":\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());\n                break;\n            case \"CI\":\n                readString(buf); // format string\n                break;\n            case \"AV1\":\n                position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());\n                break;\n            case \"NC\":\n                readString(buf); // gsm neighbor cell info\n                break;\n            case \"SM\":\n                buf.readUnsignedShort(); // max speed between reports\n                break;\n            case \"GL\":\n                readString(buf); // google link\n                break;\n            case \"MA\":\n                readString(buf); // mac address\n                break;\n            case \"PD\":\n                buf.readUnsignedByte(); // pending code status\n                break;\n            case \"CD\":\n                position.set(Position.KEY_ICCID, readString(buf));\n                break;\n            case \"CM\":\n                buf.readLong(); // imsi\n                break;\n            case \"GN\":\n                buf.skipBytes(60); // g sensor data\n                break;\n            case \"GV\":\n                buf.skipBytes(6); // maximum g force\n                break;\n            case \"ME\":\n                buf.readLong(); // imei\n                break;\n            case \"IA\":\n                buf.readUnsignedByte(); // intake air temperature\n                break;\n            case \"MP\":\n                buf.readUnsignedByte(); // manifold absolute pressure\n                break;\n            case \"EO\":\n                position.set(Position.KEY_ODOMETER,\n                    UnitsConverter.metersFromMiles(buf.readUnsignedInt()));\n                break;\n            case \"EH\":\n                position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 360000);\n                break;\n            case \"ZO1\":\n            case \"ZO2\":\n            case \"ZO3\":\n                buf.readUnsignedByte(); // various status\n                break;\n            case \"ZO4\":\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 0.4);\n                break;\n            case \"ZO5\":\n                buf.readUnsignedByte();\n                break;\n            case \"ZO6\":\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte() * 0.805);\n                break;\n            case \"ZO7\":\n            case \"ZO8\":\n            case \"ZO11\":\n            case \"ZO12\":\n            case \"ZO13\":\n            case \"ZO15\":\n            case \"ZO16\":\n            case \"ZO17\":\n                buf.readUnsignedByte(); // various pressures/status\n                break;\n            case \"ZO9\":\n                position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 0.5);\n                break;\n            case \"ZO10\":\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.5);\n                break;\n            case \"ZO14\":\n                position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte());\n                break;\n            case \"ZH1\":\n                buf.readUnsignedShort(); // cargo weight\n                break;\n            case \"ZH2\":\n                position.set(Position.KEY_FUEL_CONSUMPTION,\n                    buf.readUnsignedShort() * 16.428 / 3600);\n                break;\n            case \"ZH3\":\n                position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.25);\n                break;\n            case \"ZL1\":\n                buf.readUnsignedInt(); // fuel used (natural gas)\n                break;\n            case \"ZL2\":\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 161);\n                break;\n            case \"ZL3\":\n                buf.readUnsignedInt(); // vehicle hours\n                break;\n            case \"ZL4\":\n                position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);\n                break;\n            case \"ZS1\":\n                position.set(Position.KEY_VIN, readString(buf));\n                break;\n            case \"JO1\":\n            case \"JO2\":\n            case \"JO3\":\n            case \"JO6\":\n            case \"JO7\":\n            case \"JO8\":\n            case \"JO9\":\n            case \"JO10\":\n            case \"JO12\":\n                buf.readUnsignedByte();\n                break;\n            case \"JO4\":\n                position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte());\n                break;\n            case \"JO5\":\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.4);\n                break;\n            case \"JO11\":\n                position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);\n                break;\n            case \"JH1\":\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() / 256.0);\n                break;\n            case \"JH2\":\n                position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.125);\n                break;\n            case \"JH3\":\n            case \"JH4\":\n            case \"JH5\":\n            case \"JH6\":\n            case \"JH7\": {\n                int index = Integer.parseInt(key.substring(2)) - 2;\n                position.set(\"axleWeight\" + index, buf.readUnsignedShort() * 0.5);\n                break;\n            }\n            case \"JH8\":\n                position.set(Position.KEY_ODOMETER_SERVICE, buf.readUnsignedShort() * 5);\n                break;\n            case \"JH9\":\n            case \"JH10\":\n            case \"JH12\":\n                buf.readUnsignedShort(); // various short fields\n                break;\n            case \"JH11\":\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.05);\n                break;\n            case \"JL1\":\n                position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.5);\n                break;\n            case \"JL2\":\n                position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);\n                break;\n            case \"JL3\":\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n                break;\n            case \"JL4\":\n                position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.001);\n                break;\n            case \"JS1\":\n                position.set(Position.KEY_VIN, readString(buf));\n                break;\n            case \"JS2\":\n                readString(buf); // fms version supported\n                break;\n            case \"JS3\":\n                position.set(\"driver1\", readString(buf));\n                break;\n            case \"JS4\":\n                position.set(\"driver2\", readString(buf));\n                break;\n            case \"JN1\":\n            case \"JN2\":\n            case \"JN3\":\n            case \"JN4\":\n            case \"JN5\":\n                buf.readUnsignedInt(); // various time/distance fields\n                break;\n            default:\n                // Unknown key: nothing to read\n                break;\n        }\n    }\n\n    // Finally attach cell-tower info if available\n    if (cellTower.getMobileCountryCode() != null\n            && cellTower.getMobileNetworkCode() != null\n            && cellTower.getCellId() != null && cellTower.getCellId() != 0\n            && cellTower.getLocationAreaCode() != null) {\n        position.setNetwork(new Network(cellTower));\n    } else if (cellTower.getSignalStrength() != null) {\n        position.set(Position.KEY_RSSI, cellTower.getSignalStrength());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}