{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    CellTower cellTower = new CellTower();\n    String[] keys = form.substring(1).split(\"%\");\n    for (String key : keys) {\n        switch (key) {\n            case \"SA\":\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case \"MV\":\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);\n                break;\n            case \"BV\":\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n                break;\n            case \"GQ\":\n                cellTower.setSignalStrength((int) buf.readUnsignedByte());\n                break;\n            case \"CE\":\n                cellTower.setCellId(buf.readUnsignedInt());\n                break;\n            case \"LC\":\n                cellTower.setLocationAreaCode(buf.readUnsignedShort());\n                break;\n            case \"CN\":\n                int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // mcc mnc\n                cellTower.setMobileCountryCode(combinedMobileCodes / 1000); // \u8c03\u6574\u8ba1\u7b97\u65b9\u5f0f\n                cellTower.setMobileNetworkCode(combinedMobileCodes % 1000 / 10);\n                cellTower.setBaseStationId(combinedMobileCodes % 10);\n                break;\n            case \"RL\":\n                buf.readUnsignedByte(); // rxlev\n                break;\n            case \"PC\":\n                position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());\n                break;\n            case \"AT\":\n                position.setAltitude(buf.readUnsignedInt());\n                break;\n            case \"RP\":\n                position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                break;\n            case \"GS\":\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                break;\n            case \"DT\":\n                position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);\n                break;\n            case \"VN\":\n                position.set(Position.KEY_VIN, readString(buf));\n                break;\n            case \"PD\":\n                buf.readUnsignedByte(); // pending code status\n                break;\n            case \"CD\":\n                position.set(Position.KEY_ICCID, readString(buf));\n                break;\n            case \"CM\":\n                position.set(Position.KEY_IMEI, String.valueOf(buf.readUnsignedInt())); // \u5047\u8bbe IMEI \u662f4\u5b57\u8282\u6570\u503c\n                break;\n            case \"GN\":\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte() * 0.805);\n                break;\n            case \"JO5\":\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.4);\n                break;\n            case \"MA\":\n                position.set(\"macAddress\", readString(buf)); // \u4f7f\u7528\u660e\u786e\u7684\u952e\u540d\n                break;\n            case \"EL\":\n                position.set(\"engineLoad\", buf.readUnsignedByte() * 1); // \u53ef\u80fd\u9700\u8981\u6b63\u786e\u7684\u7f29\u653e\u56e0\u5b50\n                break;\n            case \"MF\":\n                position.set(\"massAirFlow\", buf.readUnsignedShort() * 1); // \u8bb0\u5f55\u53ef\u80fd\u9700\u8981\u7684\u503c\n                break;\n            case \"MP\":\n                position.set(\"manifoldPressure\", buf.readUnsignedByte() * 1); // \u540c\u6837\u8bb0\u5f55\u53ef\u80fd\u88ab\u5ffd\u7565\u7684\u503c\n                break;\n            case \"JH1\":\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() / 256.0);\n                break;\n            case \"JH2\":\n                position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.125);\n                break;\n            case \"JH3\":\n            case \"JH4\":\n            case \"JH5\":\n            case \"JH6\":\n            case \"JH7\":\n                int index = Integer.parseInt(key.substring(2)); // \u89e3\u6790\u6570\u5b57\u90e8\u5206\u4f5c\u4e3a\u7d22\u5f15\n                position.set(\"axleWeight\" + index, buf.readUnsignedShort() * 0.5);\n                break;\n            case \"JH8\":\n                position.set(Position.KEY_ODOMETER_SERVICE, buf.readUnsignedShort() * 5);\n                break;\n            case \"JH9\":\n                buf.readUnsignedShort(); // \u7701\u7565\u5f53\u524d\u4e0d\u9700\u8981\u7684\u5b57\u6bb5\n                break;\n            case \"ZL2\":\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 161);\n                break;\n            case \"JH10\":\n                position.set(\"ambientTemperature\", buf.readUnsignedShort() - 40); // \u53ef\u80fd\u9700\u8981\u66f4\u6b63\u8ba1\u7b97\n                break;\n            case \"JH12\":\n                position.set(\"fuelEconomy\", buf.readUnsignedShort() * 100); // \u7f3a\u5c11\u9002\u5f53\u5904\u7406\u53ef\u80fd\u5bfc\u81f4\u7f13\u51b2\u533a\u9519\u4f4d\n                break;\n            case \"JS3\":\n                position.set(\"driver1\", readString(buf));\n                break;\n            case \"JS4\":\n                position.set(\"driver2\", readString(buf));\n                break;\n            case \"JS2\":\n                position.set(\"fmsVersion\", readString(buf));\n                break;\n            default:\n                // \u9ed8\u8ba4\u60c5\u51b5\u6d88\u8017\u672a\u77e5\u5b57\u6bb5\u53602\u5b57\u8282\uff08\u5047\u8bbe\u4e3ashort\u7c7b\u578b\uff09\n                buf.readUnsignedShort();\n                break;\n        }\n    }\n\n    if (cellTower.getMobileCountryCode() != null &&\n            cellTower.getMobileNetworkCode() != null &&\n            cellTower.getCellId() != null && cellTower.getCellId() != 0 &&\n            cellTower.getLocationAreaCode() != null) {\n        position.setNetwork(new Network(cellTower));\n    } else if (cellTower.getSignalStrength() != null) {\n        position.set(Position.KEY_RSSI, cellTower.getSignalStrength());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}