{
    "generation": "    // normalises the document after parsing. Moves any text nodes that are\n    // direct children of the html element into the start of the body element.\n    private void normalise(Element element) {\n        List<Node> toMove = new ArrayList<>(); // Use diamond operator for cleaner generics\n        for (Node node: element.childNodes) {\n            // Node iterators can be sensitive to modification during iteration.\n            // However, we collect nodes first and modify the parent later.\n            if (node instanceof TextNode) {\n                TextNode tn = (TextNode) node;\n                // Keep track of non-blank text nodes directly under the root element.\n                if (!tn.isBlank()) {\n                    toMove.add(node);\n                }\n            }\n        }\n\n        // Now, move the collected text nodes to the beginning of the body.\n        if (!toMove.isEmpty()) { // Only proceed if there are nodes to move\n            Element body = body(); // Get the body element (assuming this method exists and returns the body)\n            if (body != null) { // Ensure body element exists\n\n                // Remove the nodes from their original parent (the root element) first.\n                // Iterating through the collected list `toMove` is safe.\n                for (Node node : toMove) {\n                    element.removeChild(node);\n                }\n\n                // Insert the nodes at the beginning of the body element.\n                // Convert the List to an array for the addChildren method.\n                Node[] nodesToInsert = toMove.toArray(new Node[0]);\n                // The addChildren(index, nodes...) method inserts the nodes sequentially\n                // starting at the specified index, shifting existing children.\n                // Inserting at index 0 places them at the very beginning.\n                body.addChildren(0, nodesToInsert);\n            }\n            // If body is null (which is unlikely for standard HTML docs), the nodes are just removed from the root.\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}