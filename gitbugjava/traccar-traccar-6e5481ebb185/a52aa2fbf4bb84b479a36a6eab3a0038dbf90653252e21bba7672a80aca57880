{
    "generation": "    private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {\n\n        int length = 0;\n        if (hasLength) {\n            length = buf.readUnsignedByte();\n            if (length == 0) {\n                boolean zeroedData = true;\n                for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {\n                    if (buf.getByte(i) != 0) {\n                        zeroedData = false;\n                        break;\n                    }\n                }\n                if (zeroedData) {\n                    buf.skipBytes(Math.min(buf.readableBytes(), 45));\n                }\n                return false;\n            }\n        }\n\n        int mcc = buf.readUnsignedShort();\n        int mnc;\n        if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {\n            mnc = buf.readUnsignedShort();\n        } else {\n            mnc = buf.readUnsignedByte();\n        }\n        int lac;\n        if (type == MSG_LBS_ALARM) {\n            lac = buf.readInt();\n        } else {\n            lac = buf.readUnsignedShort();\n        }\n        long cid;\n        if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {\n            cid = buf.readLong();\n        } else if (type == MSG_GPS_LBS_6) {\n            cid = buf.readUnsignedInt();\n        } else {\n            cid = buf.readUnsignedMedium();\n        }\n\n        int maskedMcc = BitUtil.to(mcc, 15);\n        if (maskedMcc == 0 || mnc == 0 || lac == 0 || cid == 0) {\n            if (hasLength && length > 9) {\n                buf.skipBytes(length - 9);\n            }\n            return false;\n        }\n\n        position.setNetwork(new Network(CellTower.from(maskedMcc, mnc, lac, cid)));\n\n        if (hasLength && length > 9) {\n            buf.skipBytes(length - 9);\n        }\n\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}