{
    "generation": "private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {\n\n    int length = 0;\n    if (hasLength) {\n        length = buf.readUnsignedByte();\n        if (length == 0) {\n            // If length is zero, skip the remaining bytes.\n            boolean zeroedData = true;\n            for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {\n                if (buf.getByte(i) != 0) {\n                    zeroedData = false;\n                    break;\n                }\n            }\n            if (zeroedData) {\n                buf.skipBytes(Math.min(buf.readableBytes(), 45));\n            }\n            return false;\n        }\n    }\n\n    if (buf.readableBytes() < 9) {\n        // Not enough bytes left in the buffer\n        return false;\n    }\n\n    int mcc = buf.readUnsignedShort();\n    int mnc = (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) ?\n        buf.readUnsignedShort() : buf.readUnsignedByte();\n\n    int lac = (type == MSG_LBS_ALARM) ? buf.readInt() : buf.readUnsignedShort();\n\n    long cid = (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) ?\n        buf.readLong() : (type == MSG_GPS_LBS_6) ? buf.readUnsignedInt() : buf.readUnsignedMedium();\n\n    if (position == null) {\n        return false;\n    }\n\n    position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));\n\n    if (length > 9) {\n        buf.skipBytes(length - 9);\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}