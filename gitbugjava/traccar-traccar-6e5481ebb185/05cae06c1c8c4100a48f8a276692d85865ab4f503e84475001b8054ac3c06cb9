{
    "generation": "private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {\n\n    int length = 0;\n    if (hasLength) {\n        length = buf.readUnsignedByte();\n        // no LBS payload\n        if (length == 0) {\n            boolean zeroedData = true;\n            // check if next bytes are all zero\n            for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {\n                if (buf.getByte(i) != 0) {\n                    zeroedData = false;\n                    break;\n                }\n            }\n            // skip the empty LBS block if it really is zero\n            if (zeroedData) {\n                buf.skipBytes(Math.min(buf.readableBytes(), 45));\n            }\n            return false;\n        }\n        // too short to contain a full LBS record\n        if (length < 9) {\n            buf.skipBytes(Math.min(buf.readableBytes(), length));\n            return false;\n        }\n    }\n\n    // parse MCC\n    int mcc = buf.readUnsignedShort();\n    // parse MNC length based on high bit or message type\n    int mnc;\n    if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {\n        mnc = buf.readUnsignedShort();\n    } else {\n        mnc = buf.readUnsignedByte();\n    }\n    // parse LAC\n    int lac;\n    if (type == MSG_LBS_ALARM) {\n        lac = buf.readInt();\n    } else {\n        lac = buf.readUnsignedShort();\n    }\n    // parse CID\n    long cid;\n    if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {\n        cid = buf.readLong();\n    } else if (type == MSG_GPS_LBS_6) {\n        cid = buf.readUnsignedInt();\n    } else {\n        cid = buf.readUnsignedMedium();\n    }\n\n    // store network info\n    position.setNetwork(new Network(\n            CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));\n\n    // skip any extra bytes in the LBS payload\n    if (hasLength && length > 9) {\n        buf.skipBytes(length - 9);\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}