{
    "generation": "private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {\n    boolean zeroedData = false;\n\n    int length = hasLength ? buf.readUnsignedByte() : 0;\n    if (length == 0) {\n        zeroedData = true;\n        for (int i = buf.readerIndex(); i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) != 0) {\n                zeroedData = false;\n                break;\n            }\n        }\n    }\n\n    if (!zeroedData) {\n        buf.readerIndex(buf.readerIndex() + length);\n    }\n\n    int mcc = buf.readUnsignedShort();\n    int mnc;\n    if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {\n        mnc = buf.readUnsignedShort();\n    } else {\n        mnc = buf.readUnsignedByte();\n    }\n\n    int lac;\n    if (type == MSG_LBS_ALARM) {\n        lac = buf.readInt();\n    } else {\n        lac = buf.readUnsignedShort();\n    }\n\n    long cid;\n    if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {\n        cid = buf.readLong();\n    } else if (type == MSG_GPS_LBS_6) {\n        cid = buf.readUnsignedInt();\n    } else {\n        cid = buf.readUnsignedMedium();\n    }\n\n    position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}