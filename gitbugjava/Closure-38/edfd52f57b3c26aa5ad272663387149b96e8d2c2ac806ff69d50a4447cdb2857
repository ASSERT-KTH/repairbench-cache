{
    "generation": "  void addNumber(double x) {\n    // This is not pretty printing. This is to prevent misparsing of x- -4 as\n    // x--4 (which is a syntax error).\n    char prev = getLastChar();\n    boolean negativeZero = isNegativeZero(x);\n    // Add a space before negative numbers or negative zero if the previous\n    // character was a minus sign.\n    if ((x < 0 || negativeZero) && prev == '-') { // Fix: Added check for negativeZero\n      add(\" \");\n    }\n\n    // Try to represent the number as an integer if possible.\n    // Make sure we are not trimming digits off the end of an otherwise number.\n    // Specifically, we're looking for numbers like 1.0E100, which are technically\n    // integers, but we want to print them in exponential notation.\n    // We also special-case negative zero.\n    if ((long) x == x && !negativeZero) {\n      long value = (long) x;\n      long mantissa = value;\n      int exp = 0;\n      // NOTE: The logic below for scientific notation was present in the original\n      // buggy code provided. It might have its own issues (e.g., floating point\n      // precision with Math.pow), but the fix requested only addresses the\n      // spacing issue with negative zero.\n      if (Math.abs(x) >= 100) { // This check was in the original snippet\n        // This loop condition was in the original snippet and might be imprecise\n        while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n          mantissa /= 10;\n          exp++;\n        }\n      }\n      // Use scientific notation if the exponent is greater than 2 (e.g., 1E3).\n      if (exp > 2) {\n        add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n      } else {\n        // Otherwise, print the integer directly.\n        add(Long.toString(value));\n      }\n    } else {\n      // Handle doubles, negative zero, and integers that couldn't be\n      // represented compactly using the integer logic.\n      add(String.valueOf(x));\n    }\n  }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}