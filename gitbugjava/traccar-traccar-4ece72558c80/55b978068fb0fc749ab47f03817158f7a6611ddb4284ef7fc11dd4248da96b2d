{
    "generation": "private List<Position> parseData(\r\n            Channel channel, SocketAddress remoteAddress, ByteBuf buf, int locationPacketId, String... imei) {\r\n        List<Position> positions = new LinkedList<>();\r\n\r\n        if (!connectionless) {\r\n            buf.readUnsignedInt(); // data length\r\n        }\r\n\r\n        int codec = buf.readUnsignedByte();\r\n        int count = buf.readUnsignedByte();\r\n\r\n        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\r\n        if (deviceSession == null) {\r\n            return null;\r\n        }\r\n\r\n        for (int i = 0; i < count; i++) {\r\n            Position position = new Position(getProtocolName());\r\n\r\n            position.setDeviceId(deviceSession.getDeviceId());\r\n            position.setValid(true);\r\n\r\n            if (codec == CODEC_13) {\r\n                buf.readUnsignedByte(); // type\r\n                int length = buf.readInt() - 4;\r\n                getLastLocation(position, new Date(buf.readUnsignedInt() * 1000));\r\n                if (isPrintable(buf, length)) {\r\n                    position.set(Position.KEY_RESULT,\r\n                            buf.readCharSequence(length, StandardCharsets.US_ASCII).toString().trim());\r\n                } else {\r\n                    position.set(Position.KEY_RESULT,\r\n                            ByteBufUtil.hexDump(buf.readSlice(length)));\r\n                }\r\n            } else if (codec == CODEC_12) {\r\n                decodeSerial(channel, remoteAddress, deviceSession, position, buf);\r\n            } else {\r\n                decodeLocation(position, buf, codec, getCacheManager().getObject(Device.class, deviceSession.getDeviceId()).getModel());\r\n            }\r\n\r\n            if (!position.getOutdated() || !position.getAttributes().isEmpty()) {\r\n                positions.add(position);\r\n            }\r\n        }\r\n\r\n        if (channel != null && codec != CODEC_12 && codec != CODEC_13) {\r\n            ByteBuf response = Unpooled.buffer();\r\n            if (connectionless) {\r\n                response.writeShort(5);\r\n                response.writeShort(0);\r\n                response.writeByte(0x01);\r\n                response.writeByte(locationPacketId);\r\n                response.writeByte(count);\r\n            } else {\r\n                response.writeInt(count);\r\n            }\r\n            channel.writeAndFlush(new NetworkMessage(response, remoteAddress));\r\n        }\r\n\r\n        return positions.isEmpty() ? null : positions;\r\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}