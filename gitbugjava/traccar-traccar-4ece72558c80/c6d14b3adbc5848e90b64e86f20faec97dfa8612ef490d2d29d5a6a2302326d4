{
    "generation": "private List<Position> parseData(\n        Channel channel, SocketAddress remoteAddress, ByteBuf buf, int locationPacketId, String... imei) {\n    List<Position> positions = new LinkedList<>();\n\n    if (!connectionless) {\n        buf.readUnsignedInt(); // data length\n    }\n\n    int codec = buf.readUnsignedByte();\n    int count = buf.readUnsignedByte();\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n    String model = getCacheManager().getObject(Device.class, deviceSession.getDeviceId()).getModel();\n\n    for (int i = 0; i < count; i++) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        position.setValid(true);\n\n        if (codec == CODEC_13) {\n            // record type\n            int type = buf.readUnsignedByte();\n            // total record length minus 4 bytes of timestamp\n            int length = buf.readInt() - 4;\n            // timestamp (seconds)\n            Date time = new Date(buf.readUnsignedInt() * 1000);\n            getLastLocation(position, time);\n\n            // read the payload\n            String value;\n            if (isPrintable(buf, length)) {\n                value = buf.readCharSequence(length, StandardCharsets.US_ASCII)\n                           .toString().trim();\n            } else {\n                value = ByteBufUtil.hexDump(buf.readSlice(length));\n            }\n\n            // if this is driver unique ID record (type 0x06), store under the driver key\n            if (type == 0x06) {\n                position.set(Position.KEY_DRIVER_UNIQUE_ID, value);\n            } else {\n                position.set(Position.KEY_RESULT, value);\n            }\n\n        } else if (codec == CODEC_12) {\n            decodeSerial(channel, remoteAddress, deviceSession, position, buf);\n        } else {\n            decodeLocation(position, buf, codec, model);\n        }\n\n        if (!position.getOutdated() || !position.getAttributes().isEmpty()) {\n            positions.add(position);\n        }\n    }\n\n    if (channel != null && codec != CODEC_12 && codec != CODEC_13) {\n        ByteBuf response = Unpooled.buffer();\n        if (connectionless) {\n            response.writeShort(5);\n            response.writeShort(0);\n            response.writeByte(0x01);\n            response.writeByte(locationPacketId);\n            response.writeByte(count);\n        } else {\n            response.writeInt(count);\n        }\n        channel.writeAndFlush(new NetworkMessage(response, remoteAddress));\n    }\n\n    return positions.isEmpty() ? null : positions;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}