{
    "generation": "    /**\n     * Converts an old style id to a new style id.\n     * \n     * @param id  the old style id\n     * @return the new style id, null if not found\n     */\n    private static synchronized String getConvertedId(String id) {\n        Map<String, String> map = cZoneIdConversion;\n        if (map == null) {\n            // Backwards compatibility with TimeZone.\n            // The list is derived from TimeZoneData.java\n            map = new HashMap<String, String>();\n            // Note: order should be preserved for those entries\n            // that have duplicates. The first mapping should be used.\n            // For example, CET is mapped to Europe/Berlin, but also\n            // CEST is mapped to CET. If CET is placed after CEST,\n            // CEST -> CET -> Europe/Berlin. If CET is placed before\n            // CEST, CEST -> CET, which is what we want.\n\n            // Note: Joda Time uses the long-form name for America/Indiana/Indianapolis\n            // See http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6450954\n            // Also, AGT is America/Argentina/Buenos_Aires not America/Buenos_Aires\n            // Also, IST is Asia/Kolkata not Asia/Calcutta\n            // Also, VST is Asia/Ho_Chi_Minh not Asia/Saigon\n            // Also, WET maps to WET, MET maps to CET, ECT maps to CET, EET maps to EET\n\n            map.put(\"GMT\", \"UTC\");\n            map.put(\"WET\", \"WET\"); // Fixed\n            map.put(\"CET\", \"CET\"); // Added\n            map.put(\"MET\", \"CET\"); // Fixed\n            map.put(\"ECT\", \"CET\"); // Fixed\n            map.put(\"EET\", \"EET\"); // Fixed\n            map.put(\"MIT\", \"Pacific/Apia\");\n            map.put(\"HST\", \"Pacific/Honolulu\");  // JDK 1.1 compatible\n            map.put(\"AST\", \"America/Anchorage\");\n            map.put(\"PST\", \"America/Los_Angeles\");\n            map.put(\"MST\", \"America/Denver\");  // JDK 1.1 compatible\n            map.put(\"PNT\", \"America/Phoenix\");\n            map.put(\"CST\", \"America/Chicago\");\n            map.put(\"EST\", \"America/New_York\");  // JDK 1.1 compatible\n            map.put(\"IET\", \"America/Indiana/Indianapolis\"); // Fixed\n            map.put(\"PRT\", \"America/Puerto_Rico\");\n            map.put(\"CNT\", \"America/St_Johns\");\n            map.put(\"AGT\", \"America/Argentina/Buenos_Aires\"); // Fixed\n            map.put(\"BET\", \"America/Sao_Paulo\");\n            map.put(\"ART\", \"Africa/Cairo\");\n            map.put(\"CAT\", \"Africa/Harare\");\n            map.put(\"EAT\", \"Africa/Addis_Ababa\");\n            map.put(\"NET\", \"Asia/Yerevan\");\n            map.put(\"PLT\", \"Asia/Karachi\");\n            map.put(\"IST\", \"Asia/Kolkata\"); // Fixed\n            map.put(\"BST\", \"Asia/Dhaka\");\n            map.put(\"VST\", \"Asia/Ho_Chi_Minh\"); // Fixed\n            map.put(\"CTT\", \"Asia/Shanghai\");\n            map.put(\"JST\", \"Asia/Tokyo\");\n            map.put(\"ACT\", \"Australia/Darwin\");\n            map.put(\"AET\", \"Australia/Sydney\");\n            map.put(\"SST\", \"Pacific/Guadalcanal\");\n            map.put(\"NST\", \"Pacific/Auckland\");\n            cZoneIdConversion = map;\n        }\n        return map.get(id);\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}