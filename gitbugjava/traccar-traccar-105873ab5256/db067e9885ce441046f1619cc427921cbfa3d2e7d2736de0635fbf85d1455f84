{
    "generation": "    @Override\n    protected Object decode(\n            Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n        ByteBuf buf = (ByteBuf) msg;\n        buf.readUnsignedByte(); // header\n        int flags = buf.readUnsignedByte();\n        buf.readUnsignedShortLE(); // length\n        buf.readUnsignedShortLE(); // checksum\n        int index = buf.readUnsignedShortLE();\n        int type = buf.readUnsignedByte();\n        if (BitUtil.check(flags, 4)) {\n            sendResponse(channel, remoteAddress, index, type, buf.slice());\n        }\n        if (type == MSG_DATA || type == MSG_SERVICES) {\n            List<Position> positions = new LinkedList<>();\n            Set<Integer> keys = new HashSet<>();\n            boolean hasLocation = false;\n            Position position = new Position(getProtocolName());\n            DeviceSession deviceSession = null;\n            while (buf.isReadable()) {\n                int endIndex = buf.readUnsignedByte() + buf.readerIndex();\n                int key = buf.readUnsignedByte();\n                if (keys.contains(key)) {\n                    if (!hasLocation) {\n                        getLastLocation(position, null);\n                    }\n                    positions.add(position);\n                    keys.clear();\n                    hasLocation = false;\n                    position = new Position(getProtocolName());\n                }\n                keys.add(key);\n                switch (key) {\n                    case 0x01:\n                        deviceSession = getDeviceSession(\n                                channel, remoteAddress, buf.readCharSequence(15, StandardCharsets.US_ASCII).toString());\n                        if (deviceSession == null) {\n                            return null;\n                        }\n                        break;\n                    case 0x02:\n                        long alarm = buf.readUnsignedIntLE();\n                        position.set(Position.KEY_ALARM, decodeAlarm(alarm));\n                        if (BitUtil.check(alarm, 31)) {\n                            position.set(\"bark\", true);\n                        }\n                        break;\n                    case 0x14:\n                        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                        position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.001);\n                        break;\n                    case 0x20:\n                        hasLocation = true;\n                        position.setLatitude(buf.readIntLE() * 0.0000001);\n                        position.setLongitude(buf.readIntLE() * 0.0000001);\n                        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                        position.setCourse(buf.readUnsignedShortLE());\n                        position.setAltitude(buf.readShortLE());\n                        int hdop = buf.readUnsignedShortLE();\n                        position.setValid(hdop > 0);\n                        position.set(Position.KEY_HDOP, hdop * 0.1);\n                        position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                        break;\n                    case 0x21:\n                        int mcc = buf.readUnsignedShortLE();\n                        int mnc = buf.readUnsignedByte();\n                        if (position.getNetwork() == null) {\n                            position.setNetwork(new Network());\n                        }\n                        while (buf.readerIndex() < endIndex) {\n                            int rssi = buf.readByte();\n                            position.getNetwork().addCellTower(CellTower.from(\n                                    mcc, mnc, buf.readUnsignedShortLE(), buf.readUnsignedShortLE(), rssi));\n                        }\n                        break;\n                    case 0x22:\n                        if (position.getNetwork() == null) {\n                            position.setNetwork(new Network());\n                        }\n                        while (buf.readerIndex() < endIndex) {\n                            int rssi = buf.readByte();\n                            String mac = ByteBufUtil.hexDump(buf.readSlice(6)).replaceAll(\"(..)\", \"$1:\");\n                            position.getNetwork().addWifiAccessPoint(WifiAccessPoint.from(\n                                    mac.substring(0, mac.length() - 1), rssi));\n                        }\n                        break;\n                    case 0x23:\n                        position.set(\"tagId\", readTagId(buf));\n                        position.setLatitude(buf.readIntLE() * 0.0000001);\n                        position.setLongitude(buf.readIntLE() * 0.0000001);\n                        position.setValid(true);\n                        hasLocation = true;\n                        break;\n                    case 0x24:\n                        position.setTime(new Date(buf.readUnsignedIntLE() * 1000));\n                        long status = buf.readUnsignedIntLE();\n                        if (BitUtil.check(status, 4)) {\n                            position.set(Position.KEY_CHARGE, true);\n                        }\n                        if (BitUtil.check(status, 7)) {\n                            position.set(Position.KEY_ARCHIVE, true);\n                        }\n                        position.set(Position.KEY_MOTION, BitUtil.check(status, 9));\n                        position.set(Position.KEY_RSSI, BitUtil.between(status, 19, 24));\n                        position.set(Position.KEY_BATTERY_LEVEL, BitUtil.from(status, 24));\n                        position.set(Position.KEY_STATUS, status);\n                        break;\n                    case 0x28:\n                        int beaconFlags = buf.readUnsignedByte();\n                        position.set(\"tagId\", readTagId(buf));\n                        position.set(\"tagRssi\", (int) buf.readByte());\n                        position.set(\"tag1mRssi\", (int) buf.readByte());\n                        if (BitUtil.check(beaconFlags, 7)) {\n                            position.setLatitude(buf.readIntLE() * 0.0000001);\n                            position.setLongitude(buf.readIntLE() * 0.0000001);\n                            position.setValid(true);\n                            hasLocation = true;\n                        }\n                        if (BitUtil.check(beaconFlags, 6)) {\n                            position.set(\"description\", buf.readCharSequence(\n                                    endIndex - buf.readerIndex(), StandardCharsets.US_ASCII).toString());\n                        }\n                        break;\n                    case 0x2A:\n                        buf.readUnsignedByte(); // flags\n                        buf.skipBytes(6); // mac\n                        buf.readUnsignedByte(); // rssi\n                        position.setLatitude(buf.readIntLE() * 0.0000001);\n                        position.setLongitude(buf.readIntLE() * 0.0000001);\n                        position.setValid(true);\n                        hasLocation = true;\n                        break;\n                    case 0x30:\n                        buf.readUnsignedIntLE(); // timestamp\n                        position.set(Position.KEY_STEPS, buf.readUnsignedIntLE());\n                        break;\n                    case 0x31:\n                        int i = 1;\n                        while (buf.readerIndex() < endIndex) {\n                            position.set(\"activity\" + i + \"Time\", buf.readUnsignedIntLE());\n                            position.set(\"activity\" + i, buf.readUnsignedIntLE());\n                            i += 1;\n                        }\n                        break;\n                    case 0x37:\n                        buf.readUnsignedIntLE(); // timestamp\n                        long barking = buf.readUnsignedIntLE();\n                        if (BitUtil.check(barking, 31)) {\n                            position.set(\"barkStop\", true);\n                        }\n                        position.set(\"barkCount\", BitUtil.to(barking, 31));\n                        break;\n                    case 0x40:\n                        buf.readUnsignedIntLE(); // timestamp\n                        int heartRate = buf.readUnsignedByte();\n                        if (heartRate > 1) {\n                            position.set(Position.KEY_HEART_RATE, heartRate);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n                buf.readerIndex(endIndex);\n            }\n            if (!hasLocation) {\n                getLastLocation(position, null);\n            }\n            positions.add(position);\n            if (deviceSession != null) {\n                for (Position p : positions) {\n                    p.setDeviceId(deviceSession.getDeviceId());\n                }\n            } else {\n                return null;\n            }\n            return positions;\n        }\n        return null;\n    }\n\n    @Override\n    protected void encode(\n            Channel channel, SocketAddress remoteAddress, Object msg, List<Object> out) throws Exception {\n        List<Position> positions = (List<Position>) msg;\n        for (Position position : positions) {\n            ByteBuf buf = channel.alloc().buffer();\n            buf.writeByte(MSG_DATA);\n            buf.writeByte(0);\n            buf.writeShortLE(0);\n            buf.writeShortLE(0);\n            buf.writeShortLE(0);\n            buf.writeByte(0x01);\n            buf.writeCharSequence(position.getDeviceId(), StandardCharsets.US_ASCII);\n            if (position.containsKey(Position.KEY_ALARM)) {\n                buf.writeByte(0x02);\n                buf.writeIntLE(encodeAlarm(position.getLong(Position.KEY_ALARM)));\n            }\n            if (position.containsKey(Position.KEY_BATTERY_LEVEL)) {\n                buf.writeByte(0x14);\n                buf.writeByte(position.getInt(Position.KEY_BATTERY_LEVEL));\n                buf.writeShortLE((int) (position.getDouble(Position.KEY_BATTERY) * 1000));\n            }\n            if (position.containsKey(Position.KEY_LATITUDE) && position.containsKey(Position.KEY_LONGITUDE)) {\n                buf.writeByte(0x20);\n                buf.writeIntLE((int) (position.getDouble(Position.KEY_LATITUDE) * 10000000));\n                buf.writeIntLE((int) (position.getDouble(Position.KEY_LONGITUDE) * 10000000));\n                buf.writeShortLE(UnitsConverter.kphToKnots(position.getDouble(Position.KEY_SPEED)));\n                buf.writeShortLE(position.getInt(Position.KEY_COURSE));\n                buf.writeShortLE(position.getInt(Position.KEY_ALTITUDE));\n                if (position.containsKey(Position.KEY_HDOP)) {\n                    buf.writeShortLE((int) (position.getDouble(Position.KEY_HDOP) * 10));\n                } else {\n                    buf.writeShortLE(0);\n                }\n                if (position.containsKey(Position.KEY_ODOMETER)) {\n                    buf.writeIntLE(position.getInt(Position.KEY_ODOMETER));\n                } else {\n                    buf.writeIntLE(0);\n                }\n                if (position.containsKey(Position.KEY_SATELLITES)) {\n                    buf.writeByte(position.getInt(Position.KEY_SATELLITES));\n                } else {\n                    buf.writeByte(0);\n                }\n            }\n            if (position.containsKey(Position.KEY_NETWORK)) {\n                Network network = position.getNetwork();\n                if (network.getCellTowers().size() > 0) {\n                    buf.writeByte(0x21);\n                    for (CellTower cellTower : network.getCellTowers()) {\n                        buf.writeShortLE(cellTower.getMcc());\n                        buf.writeByte(cellTower.getMnc());\n                        buf.writeShortLE(cellTower.getLac());\n                        buf.writeShortLE(cellTower.getCid());\n                        buf.writeByte(cellTower.getRssi());\n                    }\n                }\n                if (network.getWifiAccessPoints().size() > 0) {\n                    buf.writeByte(0x22);\n                    for (WifiAccessPoint wifiAccessPoint : network.getWifiAccessPoints()) {\n                        buf.writeCharSequence(wifiAccessPoint.getMac(), StandardCharsets.US_ASCII);\n                        buf.writeByte(wifiAccessPoint.getRssi());\n                    }\n                }\n            }\n            if (position.containsKey(\"tagId\")) {\n                buf.writeByte(0x23);\n                buf.writeCharSequence(position.getString(\"tagId\"), StandardCharsets.US_ASCII);\n                buf.writeIntLE((int) (position.getDouble(Position.KEY_LATITUDE) * 10000000));\n                buf.writeIntLE((int) (position.getDouble(Position.KEY_LONGITUDE) * 10000000));\n            }\n            if (position.containsKey(Position.KEY_TIME)) {\n                buf.writeByte(0x24);\n                buf.writeIntLE((int) (position.getTime().getTime() / 1000));\n                long status = 0;\n                if (position.containsKey(Position.KEY_CHARGE)) {\n                    BitUtil.set(status, 4);\n                }\n                if (position.containsKey(Position.KEY_ARCHIVE)) {\n                    BitUtil.set(status, 7);\n                }\n                if (position.containsKey(Position.KEY_MOTION)) {\n                    BitUtil.set(status, 9);\n                }\n                if (position.containsKey(Position.KEY_RSSI)) {\n                    BitUtil.set(status, 19, position.getInt(Position.KEY_RSSI));\n                }\n                if (position.containsKey(Position.KEY_BATTERY_LEVEL)) {\n                    BitUtil.set(status, 24, position.getInt(Position.KEY_BATTERY_LEVEL));\n                }\n                if (position.containsKey(Position.KEY_STATUS)) {\n                    status = position.getLong(Position.KEY_STATUS);\n                }\n                buf.writeIntLE((int) status);\n            }\n            if (position.containsKey(\"tagId\")) {\n                buf.writeByte(0x28);\n                buf.writeByte(0);\n                buf.writeCharSequence(position.getString(\"tagId\"), StandardCharsets.US_ASCII);\n                if (position.containsKey(Position.KEY_LATITUDE) && position.containsKey(Position.KEY_LONGITUDE)) {\n                    BitUtil.set(buf.getByte(2), 7);\n                    buf.writeIntLE((int) (position.getDouble(Position.KEY_LATITUDE) * 10000000));\n                    buf.writeIntLE((int) (position.getDouble(Position.KEY_LONGITUDE) * 10000000));\n                }\n                if (position.containsKey(\"description\")) {\n                    BitUtil.set(buf.getByte(2), 6);\n                    buf.writeCharSequence(position.getString(\"description\"), StandardCharsets.US_ASCII);\n                }\n            }\n            if (position.containsKey(\"tagId\")) {\n                buf.writeByte(0x2A);\n                buf.writeByte(0);\n                buf.writeCharSequence(position.getString(\"tagId\"), StandardCharsets.US_ASCII);\n                buf.writeByte(position.getInt(\"tagRssi\"));\n                buf.writeByte(position.getInt(\"tag1mRssi\"));\n                buf.writeIntLE((int) (position.getDouble(Position.KEY_LATITUDE) * 10000000));\n                buf.writeIntLE((int) (position.getDouble(Position.KEY_LONGITUDE) * 10000000));\n            }\n            if (position.containsKey(Position.KEY_STEPS)) {\n                buf.writeByte(0x30);\n                buf.writeIntLE((int) (position.getTime().getTime() / 1000));\n                buf.writeIntLE(position.getInt(Position.KEY_STEPS));\n            }\n            if (position.containsKey(\"activity1Time\") && position.contains\n        }\n        return null;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}