{
    "generation": "@Override\nprotected Object decode(\n        Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n    ByteBuf buf = (ByteBuf) msg;\n\n    buf.readUnsignedByte(); // header\n    int flags = buf.readUnsignedByte();\n    buf.readUnsignedShortLE(); // length\n    buf.readUnsignedShortLE(); // checksum\n    int index = buf.readUnsignedShortLE();\n    int type = buf.readUnsignedByte();\n\n    if (BitUtil.check(flags, 4)) {\n        sendResponse(channel, remoteAddress, index, type, buf.slice());\n    }\n\n    if (type == MSG_DATA || type == MSG_SERVICES) {\n\n        List<Position> positions = new LinkedList<>();\n        Set<Integer> keys = new HashSet<>();\n        boolean hasLocation = false;\n        Position position = new Position(getProtocolName());\n\n        DeviceSession deviceSession = null;\n\n        while (buf.isReadable()) {\n            int length = buf.readUnsignedByte();\n            int endIndex = buf.readerIndex() + length;\n            if (endIndex > buf.writerIndex()) {\n                // Not enough bytes for TLV value, break to avoid IndexOutOfBounds\n                break;\n            }\n            if (!buf.isReadable()) break; // prevent from exception\n            int key = buf.readUnsignedByte();\n\n            if (keys.contains(key)) {\n                if (!hasLocation) {\n                    getLastLocation(position, null);\n                }\n                positions.add(position);\n                keys.clear();\n                hasLocation = false;\n                position = new Position(getProtocolName());\n            }\n            keys.add(key);\n\n            switch (key) {\n                case 0x01:\n                    if (endIndex - buf.readerIndex() < 15) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    deviceSession = getDeviceSession(\n                            channel, remoteAddress, buf.readCharSequence(15, StandardCharsets.US_ASCII).toString());\n                    if (deviceSession == null) {\n                        return null;\n                    }\n                    break;\n                case 0x02:\n                    if (endIndex - buf.readerIndex() < 4) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    long alarm = buf.readUnsignedIntLE();\n                    position.set(Position.KEY_ALARM, decodeAlarm(alarm));\n                    if (BitUtil.check(alarm, 31)) {\n                        position.set(\"bark\", true);\n                    }\n                    break;\n                case 0x14:\n                    if (endIndex - buf.readerIndex() < 3) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.001);\n                    break;\n                case 0x20:\n                    if (endIndex - buf.readerIndex() < 23) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    hasLocation = true;\n                    position.setLatitude(buf.readIntLE() * 0.0000001);\n                    position.setLongitude(buf.readIntLE() * 0.0000001);\n                    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                    position.setCourse(buf.readUnsignedShortLE());\n                    position.setAltitude(buf.readShortLE());\n                    int hdop = buf.readUnsignedShortLE();\n                    position.setValid(hdop > 0);\n                    position.set(Position.KEY_HDOP, hdop * 0.1);\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    break;\n                case 0x21: {\n                    if (endIndex - buf.readerIndex() < 3) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    int mcc = buf.readUnsignedShortLE();\n                    int mnc = buf.readUnsignedByte();\n                    if (position.getNetwork() == null) {\n                        position.setNetwork(new Network());\n                    }\n                    while (buf.readerIndex() + 5 <= endIndex) {\n                        int rssi = buf.readByte();\n                        position.getNetwork().addCellTower(CellTower.from(\n                                mcc, mnc, buf.readUnsignedShortLE(), buf.readUnsignedShortLE(), rssi));\n                    }\n                    buf.readerIndex(endIndex);\n                    continue;\n                }\n                case 0x22: {\n                    if (position.getNetwork() == null) {\n                        position.setNetwork(new Network());\n                    }\n                    while (buf.readerIndex() + 7 <= endIndex) {\n                        int rssi = buf.readByte();\n                        String mac = ByteBufUtil.hexDump(buf.readSlice(6)).replaceAll(\"(..)\", \"$1:\");\n                        position.getNetwork().addWifiAccessPoint(WifiAccessPoint.from(\n                                mac.substring(0, mac.length() - 1), rssi));\n                    }\n                    buf.readerIndex(endIndex);\n                    continue;\n                }\n                case 0x23:\n                    if (endIndex - buf.readerIndex() < 8) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    position.set(\"tagId\", readTagId(buf));\n                    position.setLatitude(buf.readIntLE() * 0.0000001);\n                    position.setLongitude(buf.readIntLE() * 0.0000001);\n                    position.setValid(true);\n                    hasLocation = true;\n                    break;\n                case 0x24:\n                    if (endIndex - buf.readerIndex() < 8) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    position.setTime(new Date(buf.readUnsignedIntLE() * 1000));\n                    long status = buf.readUnsignedIntLE();\n                    if (BitUtil.check(status, 4)) {\n                        position.set(Position.KEY_CHARGE, true);\n                    }\n                    if (BitUtil.check(status, 7)) {\n                        position.set(Position.KEY_ARCHIVE, true);\n                    }\n                    position.set(Position.KEY_MOTION, BitUtil.check(status, 9));\n                    position.set(Position.KEY_RSSI, BitUtil.between(status, 19, 24));\n                    position.set(Position.KEY_BATTERY_LEVEL, BitUtil.from(status, 24));\n                    position.set(Position.KEY_STATUS, status);\n                    break;\n                case 0x28: {\n                    if (endIndex - buf.readerIndex() < 4) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    int beaconFlags = buf.readUnsignedByte();\n                    position.set(\"tagId\", readTagId(buf));\n                    position.set(\"tagRssi\", (int) buf.readByte());\n                    position.set(\"tag1mRssi\", (int) buf.readByte());\n                    if (BitUtil.check(beaconFlags, 7)) {\n                        if (endIndex - buf.readerIndex() < 8) {\n                            buf.readerIndex(endIndex);\n                            break;\n                        }\n                        position.setLatitude(buf.readIntLE() * 0.0000001);\n                        position.setLongitude(buf.readIntLE() * 0.0000001);\n                        position.setValid(true);\n                        hasLocation = true;\n                    }\n                    if (BitUtil.check(beaconFlags, 6)) {\n                        int descLen = endIndex - buf.readerIndex();\n                        if (descLen > 0 && buf.isReadable(descLen)) {\n                            position.set(\"description\", buf.readCharSequence(\n                                    descLen, StandardCharsets.US_ASCII).toString());\n                        }\n                    }\n                    break;\n                }\n                case 0x2A:\n                    if (endIndex - buf.readerIndex() < 12) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    buf.readUnsignedByte(); // flags\n                    buf.skipBytes(6); // mac\n                    buf.readUnsignedByte(); // rssi\n                    position.setLatitude(buf.readIntLE() * 0.0000001);\n                    position.setLongitude(buf.readIntLE() * 0.0000001);\n                    position.setValid(true);\n                    hasLocation = true;\n                    break;\n                case 0x30:\n                    if (endIndex - buf.readerIndex() < 8) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    buf.readUnsignedIntLE(); // timestamp\n                    position.set(Position.KEY_STEPS, buf.readUnsignedIntLE());\n                    break;\n                case 0x31: {\n                    int i = 1;\n                    while (buf.readerIndex() + 8 <= endIndex) {\n                        position.set(\"activity\" + i + \"Time\", buf.readUnsignedIntLE());\n                        position.set(\"activity\" + i, buf.readUnsignedIntLE());\n                        i += 1;\n                    }\n                    break;\n                }\n                case 0x37:\n                    if (endIndex - buf.readerIndex() < 8) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    buf.readUnsignedIntLE(); // timestamp\n                    long barking = buf.readUnsignedIntLE();\n                    if (BitUtil.check(barking, 31)) {\n                        position.set(\"barkStop\", true);\n                    }\n                    position.set(\"barkCount\", BitUtil.to(barking, 31));\n                    break;\n                case 0x40:\n                    if (endIndex - buf.readerIndex() < 5) {\n                        buf.readerIndex(endIndex);\n                        break;\n                    }\n                    buf.readUnsignedIntLE(); // timestamp\n                    int heartRate = buf.readUnsignedByte();\n                    if (heartRate > 1) {\n                        position.set(Position.KEY_HEART_RATE, heartRate);\n                    }\n                    break;\n                default:\n                    // skip unknown TLV\n                    break;\n            }\n            buf.readerIndex(endIndex);\n        }\n\n        if (!hasLocation) {\n            getLastLocation(position, null);\n        }\n        positions.add(position);\n\n        if (deviceSession != null) {\n            for (Position p : positions) {\n                p.setDeviceId(deviceSession.getDeviceId());\n            }\n        } else {\n            return null;\n        }\n\n        return positions;\n\n    }\n\n    // in RESP packets (type=0) there is a KEY_RESULT TLV in the body\n    if (type == MSG_RESPONSE) {\n        // Try extract result TLV if present\n        while (buf.isReadable()) {\n            int len = buf.readUnsignedByte();\n            int key = buf.readUnsignedByte();\n            if (key == 0x10 && len >= 1) {\n                String result = String.valueOf(buf.readUnsignedByte());\n                Position position = new Position(getProtocolName());\n                position.set(Position.KEY_RESULT, result);\n                return position;\n            } else {\n                buf.skipBytes(len - 1);\n            }\n        }\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}