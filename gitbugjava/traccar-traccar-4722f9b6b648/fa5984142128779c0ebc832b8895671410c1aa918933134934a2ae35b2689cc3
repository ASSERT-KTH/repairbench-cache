{
    "generation": "    private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n        buf.readUnsignedShortLE(); // length\n\n        buf.skipBytes(3); // identification header\n        buf.readUnsignedIntLE(); // index\n\n        DeviceSession deviceSession = getDeviceSession(\n                channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n        if (deviceSession == null) {\n            return null;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedByte(); // session status\n        buf.skipBytes(4); // reserved\n\n        // Read date and time (4 bytes)\n        int dateTime = buf.readUnsignedIntLE();\n\n        // Parse date and time correctly\n        int year = 2000 + (dateTime >> 26);\n        int month = (dateTime >> 22) & 0x0F;\n        int day = (dateTime >> 17) & 0x1F;\n        int hour = (dateTime >> 12) & 0x1F;\n        int minute = (dateTime >> 6) & 0x3F;\n        int second = dateTime & 0x3F;\n\n        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n        calendar.clear();\n        calendar.set(year, month - 1, day, hour, minute, second);\n\n        position.setTime(calendar.getTime());\n\n        buf.skipBytes(23); // coordinates block\n\n        buf.skipBytes(3); // data tag header\n        decodeMinimalDataSet(position, buf);\n\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}