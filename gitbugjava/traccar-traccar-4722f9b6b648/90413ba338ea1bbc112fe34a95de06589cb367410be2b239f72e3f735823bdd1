{
    "generation": "    private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n        // Read and verify length\n        int length = buf.readUnsignedShortLE();\n        if (buf.readableBytes() < length - 2) { // subtract 2 for the length field itself\n            return null;\n        }\n\n        buf.skipBytes(3); // identification header\n        buf.readUnsignedIntLE(); // index\n\n        DeviceSession deviceSession = getDeviceSession(\n                channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n        if (deviceSession == null) {\n            return null;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedByte(); // session status\n        buf.skipBytes(4); // reserved\n\n        // Read and set time properly\n        long dateTimeValue = ((long)buf.readUnsignedIntLE()) * 1000L; // assuming this is seconds since epoch\n        if (dateTimeValue > 0) {\n            position.setTime(new Date(dateTimeValue));\n        }\n\n        // Process coordinate block\n        buf.skipBytes(23); // coordinates block\n\n        buf.skipBytes(3); // data tag header\n        decodeMinimalDataSet(position, buf);\n\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}