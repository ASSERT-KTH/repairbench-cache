{
    "generation": "    private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n        // Iridium SBD epoch: May 20, 2014, 00:00:00 UTC\n        final long IRIDIUM_SBD_EPOCH_MS = 1400544000000L;\n\n        buf.readUnsignedShortLE(); // length\n\n        buf.skipBytes(3); // identification header\n        buf.readUnsignedIntLE(); // index\n\n        DeviceSession deviceSession = getDeviceSession(\n                channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n        if (deviceSession == null) {\n            return null;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedByte(); // session status\n        buf.skipBytes(4); // reserved (MOMSN + MTMSN)\n        \n        long timeSecondsSinceIridiumEpoch = buf.readUnsignedIntLE(); // date and time (Time of Session)\n        long unixTimeMillis = IRIDIUM_SBD_EPOCH_MS + (timeSecondsSinceIridiumEpoch * 1000L);\n        position.setTime(new java.util.Date(unixTimeMillis)); // Use fully qualified name if import cannot be assumed\n\n        buf.skipBytes(23); // coordinates block\n\n        buf.skipBytes(3); // data tag header\n        decodeMinimalDataSet(position, buf);\n\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}