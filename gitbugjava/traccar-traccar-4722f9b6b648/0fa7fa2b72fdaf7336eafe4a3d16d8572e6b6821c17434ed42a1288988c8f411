{
    "generation": "private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    // skip SBD header\n    buf.readUnsignedShortLE();       // length\n    buf.skipBytes(3);                // identification header\n    buf.readUnsignedIntLE();         // index\n\n    // read device id (IMEI)\n    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    // skip session status/reserved/timestamp\n    buf.readUnsignedByte();          // session status\n    buf.skipBytes(4);                // reserved\n    buf.readUnsignedIntLE();         // device timestamp (ignored)\n\n    // skip the raw coordinate block\n    buf.skipBytes(23);\n\n    // enter the minimal data set\n    buf.skipBytes(3);                // data tag header\n    decodeMinimalDataSet(position, buf);\n\n    // for Iridium deliveries we do not trust the onboard time\n    // override position time to server receipt time\n    position.setTime(new Date());\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}