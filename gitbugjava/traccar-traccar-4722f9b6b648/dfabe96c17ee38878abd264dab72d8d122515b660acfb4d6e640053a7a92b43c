{
    "generation": "private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    buf.readUnsignedShortLE(); // length\n\n    buf.skipBytes(3); // identification header\n    buf.readUnsignedIntLE(); // index\n\n    DeviceSession deviceSession = getDeviceSession(\n            channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedByte(); // session status\n    buf.skipBytes(4); // reserved\n    position.setTime(new Date(buf.readUnsignedIntLE() * 1000)); // date and time\n\n    // Coordinates block\n    int flags = buf.readUnsignedByte();\n    position.setValid((flags & 0x01) > 0);\n    position.setLatitude(buf.readIntLE() / 1000000.0);\n    position.setLongitude(buf.readIntLE() / 1000000.0);\n    position.setAltitude(buf.readIntLE() * 0.1);\n    position.setSpeed(buf.readUnsignedByte() * 0.539957);\n    position.setCourse(buf.readUnsignedShortLE() * 0.1);\n    buf.readUnsignedByte(); // satellites\n\n    buf.skipBytes(3); // data tag header\n    decodeMinimalDataSet(position, buf);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}