{
    "generation": "    private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n        buf.readUnsignedShortLE(); // length\n\n        buf.skipBytes(3); // identification header\n        buf.readUnsignedIntLE(); // index\n\n        DeviceSession deviceSession = getDeviceSession(\n                channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n        if (deviceSession == null) {\n            return null;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedByte(); // session status\n        buf.skipBytes(4); // reserved\n        long time = buf.readUnsignedIntLE(); // date and time\n        if (time < 0x01d4f180) { // 01 01 01 00 00 00\n            time += 0x100000000L; // add 2^32\n        }\n        position.setTime(new Date(time * 1000));\n\n        int positionType = buf.readUnsignedByte();\n        if (positionType == 0xc8) {\n            buf.skipBytes(3); // lon high\n            buf.skipBytes(3); // lat high\n            position.setLongitude(buf.readUnsignedIntLE() / 300000.0);\n            position.setLatitude(buf.readUnsignedIntLE() / 300000.0);\n            buf.skipBytes(1); // ext block count\n        } else if (positionType == 0xd0) {\n            buf.skipBytes(3); // lon high\n            buf.skipBytes(3); // lat high\n            position.setLongitude(buf.readUnsignedIntLE() / 300.0);\n            position.setLatitude(buf.readUnsignedIntLE() / 300.0);\n            buf.skipBytes(1); // ext block count\n        } else if (positionType == 0xe0) {\n            buf.skipBytes(14); // coordinates block\n            buf.skipBytes(1); // ext block count\n        }\n\n        buf.skipBytes(3); // data tag header\n        decodeMinimalDataSet(position, buf);\n\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}