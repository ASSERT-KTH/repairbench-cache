{
    "generation": "private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    buf.readUnsignedShortLE(); // length\n\n    buf.skipBytes(3); // identification header\n    buf.readUnsignedIntLE(); // index\n\n    DeviceSession deviceSession = getDeviceSession(\n            channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedByte(); // session status\n    buf.skipBytes(4); // reserved\n    long timestamp = buf.readUnsignedIntLE(); // date and time\n\n    if (timestamp > 0) {\n        // Iridium timestamp: seconds since 2014-01-01 00:00:00 UTC\n        Calendar base = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n        base.set(2014, Calendar.JANUARY, 1, 0, 0, 0);\n        base.set(Calendar.MILLISECOND, 0);\n        position.setTime(new Date(base.getTimeInMillis() + timestamp * 1000));\n    } else {\n        position.setTime(new Date());\n    }\n\n    buf.skipBytes(23); // coordinates block\n\n    buf.skipBytes(3); // data tag header\n    decodeMinimalDataSet(position, buf);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}