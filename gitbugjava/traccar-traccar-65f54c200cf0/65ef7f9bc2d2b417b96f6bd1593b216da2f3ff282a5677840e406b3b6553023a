{
    "generation": "private void decodeLocation(Position position, ByteBuf buf, int codec, String model) {\n\n    int globalMask = 0x0f;\n\n    if (codec == CODEC_GH3000) {\n\n        long time = buf.readUnsignedInt() & 0x3fffffff;\n        time += 1167609600; // 2007-01-01 00:00:00\n\n        globalMask = buf.readUnsignedByte();\n        if (BitUtil.check(globalMask, 0)) {\n            position.setTime(new Date(time * 1000));\n\n            int locationMask = buf.readUnsignedByte();\n            decodeGh3000Location(position, buf, locationMask);\n        } else {\n            getLastLocation(position, new Date(time * 1000));\n        }\n\n    } else {\n        decodeNonGh3000Location(position, buf);\n    }\n\n    processExtendedDataRecords(position, buf, codec, globalMask, model);\n}\n\nprivate void decodeGh3000Location(Position position, ByteBuf buf, int locationMask) {\n    if (BitUtil.check(locationMask, 0)) {\n        position.setLatitude(buf.readFloat());\n        position.setLongitude(buf.readFloat());\n    }\n\n    if (BitUtil.check(locationMask, 1)) {\n        position.setAltitude(buf.readUnsignedShort());\n    }\n\n    if (BitUtil.check(locationMask, 2)) {\n        position.setCourse(buf.readUnsignedByte() * 360.0 / 256);\n    }\n\n    if (BitUtil.check(locationMask, 3)) {\n        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedByte()));\n    }\n\n    if (BitUtil.check(locationMask, 4)) {\n        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n    }\n\n    if (BitUtil.check(locationMask, 5)) {\n        decodeCellTower(position, buf);\n    } else if (BitUtil.check(locationMask, 6)) {\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n    } else if (BitUtil.check(locationMask, 7)) {\n        position.set(Position.KEY_OPERATOR, buf.readUnsignedInt());\n    }\n}\n\nprivate void decodeNonGh3000Location(Position position, ByteBuf buf) {\n    position.setTime(new Date(buf.readLong()));\n\n    position.set(\"priority\", buf.readUnsignedByte());\n\n    position.setLongitude(buf.readInt() / 10000000.0);\n    position.setLatitude(buf.readInt() / 10000000.0);\n\n    position.setAltitude(buf.readShort());\n    position.setCourse(buf.readUnsignedShort());\n\n    int satellites = buf.readUnsignedByte();\n    position.set(Position.KEY_SATELLITES, satellites);\n\n    position.setValid(satellites != 0);\n\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort()));\n\n    int codec = buf.readUnsignedByte();\n\n    position.set(Position.KEY_EVENT, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16));\n    buf.readUnsignedByte(); // generation type\n\n    readExtByte(buf, codec, CODEC_8_EXT);\n}\n\nprivate void decodeCellTower(Position position, ByteBuf buf) {\n    CellTower cellTower = CellTower.fromLacCid(getConfig(), buf.readUnsignedShort(), buf.readUnsignedShort());\n    if (BitUtil.check(globalMask, 6)) {\n        cellTower.setSignalStrength((int) buf.readUnsignedByte());\n    }\n\n    if (BitUtil.check(globalMask, 7)) {\n        cellTower.setOperator(buf.readUnsignedInt());\n    }\n\n    position.setNetwork(new Network(cellTower));\n}\n\nprivate void processExtendedDataRecords(Position position, ByteBuf buf, int codec, int globalMask, String model) {\n    if (BitUtil.check(globalMask, 1)) {\n        processExtendedData(1, buf, codec, \"1 byte data\", model, position);\n    }\n\n    if (BitUtil.check(globalMask, 2)) {\n        processExtendedData(2, buf, codec, \"2 byte data\", model, position);\n    }\n\n    if (BitUtil.check(globalMask, 3)) {\n        processExtendedData(4, buf, codec, \"4 byte data\", model, position);\n    }\n\n    if (codec == CODEC_8 || codec == CODEC_8_EXT || codec == CODEC_16) {\n        processExtendedData(8, buf, codec, \"8 byte data\", model, position);\n    }\n\n    if (extended) {\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n        processExtendedData(cnt, buf, codec, \"16 byte data\", model, position);\n    }\n\n    if (codec == CODEC_8_EXT) {\n        processExtendedData(buf.readUnsignedShort(), buf, codec, \"X byte data\", model, position);\n    }\n}\n\nprivate void processExtendedData(int count, ByteBuf buf, int codec, String description, String model, Position position) {\n    for (int i = 0; i < count; i++) {\n        decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 1, codec, model);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}