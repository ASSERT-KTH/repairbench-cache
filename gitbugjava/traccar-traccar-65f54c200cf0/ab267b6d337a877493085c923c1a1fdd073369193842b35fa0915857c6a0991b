{
    "generation": "private void decodeLocation(Position position, ByteBuf buf, int codec, String model) {\n\n    int globalMask = 0x0f;\n\n    if (codec == CODEC_GH3000) {\n\n        long time = buf.readUnsignedInt() & 0x3fffffff;\n        time += 1167609600; // 2007-01-01 00:00:00\n\n        globalMask = buf.readUnsignedByte();\n        if (BitUtil.check(globalMask, 0)) {\n\n            position.setTime(new Date(time * 1000));\n\n            int locationMask = buf.readUnsignedByte();\n\n            if (BitUtil.check(locationMask, 0)) {\n                position.setLatitude(buf.readFloat());\n                position.setLongitude(buf.readFloat());\n            }\n            // ... existing nested if checks ...\n        } else {\n            getLastLocation(position, new Date(time * 1000));\n        }\n\n    } else {\n\n        position.setTime(new Date(buf.readLong())); // Read the time first\n        globalMask = buf.readUnsignedByte(); // **New line to read globalMask first**\n        position.set(\"priority\", buf.readUnsignedByte()); // Now correct position after globalMask\n\n        position.setLongitude(buf.readInt() / 10000000.0);\n        position.setLatitude(buf.readInt() / 10000000.0);\n        position.setAltitude(buf.readShort());\n        position.setCourse(buf.readUnsignedShort());\n\n        int satellites = buf.readUnsignedByte();\n        position.set(Position.KEY_SATELLITES, satellites);\n\n        position.setValid(satellites != 0);\n\n        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort()));\n\n        position.set(Position.KEY_EVENT, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16));\n        if (codec == CODEC_16) {\n            buf.readUnsignedByte(); // generation type\n        }\n\n        readExtByte(buf, codec, CODEC_8_EXT); // total IO data records\n\n    }\n\n    // Read 1 byte data: Now using the correctly set globalMask\n    if (BitUtil.check(globalMask, 1)) {\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n        for (int j = 0; j < cnt; j++) {\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 1, codec, model);\n        }\n    }\n\n    // The subsequent sections (reading 2,4,8, etc. bytes data) remain the same as they depend on the corrected globalMask\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}