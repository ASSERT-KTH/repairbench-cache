{
    "generation": "public static Try<Done> registerCallContext(\n    final ActorRef<CallContextProviderMessage> callContextProvider,\n    final String callContext,\n    final AriCommand ariCommand) {\n\n  // don't register for deletes or any non\u2010creation commands\n  final AriCommandType type = ariCommand.extractCommandType();\n  if (!type.isCreationCommand() || type == AriCommandType.DELETE) {\n    return Try.success(Done.done());\n  }\n\n  final Option<AriResource> maybeResource =\n      ariCommand\n        .extractResourceRelations()\n        .find(AriResourceRelation::isCreated)\n        .map(AriResourceRelation::getResource);\n\n  if (maybeResource.isEmpty()) {\n    return Try.failure(new RuntimeException(\n      String.format(\"Failed to extract resourceId from command '%s'\", ariCommand)));\n  }\n\n  final AriResource resource = maybeResource.get();\n  callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));\n  return Try.success(Done.done());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}