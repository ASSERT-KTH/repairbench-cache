{
    "generation": "public static Try<Done> registerCallContext(\n    final ActorRef<CallContextProviderMessage> callContextProvider,\n    final String callContext,\n    final AriCommand ariCommand) {\n\n  // Do not register for DELETE\u2010requests or any non\u2010creation commands\n  final var cmdType = ariCommand.extractCommandType();\n  if (cmdType.isDeletionCommand() || !cmdType.isCreationCommand()) {\n    return Try.success(Done.done());\n  }\n\n  final Option<AriResource> maybeResource =\n      ariCommand.extractResourceRelations()\n                .find(AriResourceRelation::isCreated)\n                .map(AriResourceRelation::getResource);\n\n  if (maybeResource.isEmpty()) {\n    return Try.failure(\n      new RuntimeException(\n        String.format(\n          \"Failed to extract resourceId from command '%s'\", ariCommand.toString())));\n  }\n\n  final AriResource resource = maybeResource.get();\n  callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));\n  return Try.success(Done.done());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}