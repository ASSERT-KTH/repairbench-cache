{
    "generation": "/**\n Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n @param tags tag names to allow\n @return this (for chaining)\n */\npublic Safelist addTags(String... tags) {\n    Validate.notNull(tags);\n\n    for (String tagName : tags) {\n        Validate.notEmpty(tagName);\n        try {\n            Tag tag = Tag.valueOf(tagName.toLowerCase(Locale.ENGLISH));\n            if (tag.isKnownTag()) {\n                tagNames.add(TagName.valueOf(tagName.toLowerCase(Locale.ENGLISH)));\n            } else {\n                throw new ValidationException(\n                    \"Tag '\" + tagName + \"' is not a known/supported tag and cannot be added to the safelist\");\n            }\n        } catch (IllegalArgumentException e) {\n            throw new ValidationException(\n                \"Tag '\" + tagName + \"' could not be added to the safelist because it is unsupported\", e);\n        }\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}