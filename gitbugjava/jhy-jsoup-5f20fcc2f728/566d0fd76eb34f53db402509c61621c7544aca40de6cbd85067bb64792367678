{
    "generation": "    /**\n     Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n     @param tags tag names to allow\n     @return this (for chaining)\n     */\n    public Safelist addTags(String... tags) {\n        Validate.notNull(tags);\n\n        for (String tagName : tags) {\n            Validate.notEmpty(tagName);\n            try {\n                TagName tag = TagName.valueOf(tagName);\n                if (tag.isBlock() || tag.isInline() || tag.isData() || tag.isTemplate()) {\n                    tagNames.add(tag);\n                } else {\n                    throw new ValidationException(\"Unsupported tag name: \" + tagName);\n                }\n            } catch (IllegalArgumentException e) {\n                throw new ValidationException(\"Unsupported tag name: \" + tagName);\n            }\n        }\n        return this;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}