{
    "generation": "/**\n Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n @param tags tag names to allow\n @return this (for chaining)\n */\npublic Safelist addTags(String... tags) {\n    Validate.notNull(tags);\n\n    for (String tagName : tags) {\n        Validate.notEmpty(tagName);\n        if (isUnsupportedTag(tagName)) {\n            throw new ValidationException(\"Tag %s is unsupported\".formatted(tagName));\n        }\n        tagNames.add(TagName.valueOf(tagName));\n    }\n    return this;\n}\n\nprivate static boolean isUnsupportedTag(String tagName) {\n    // List of tags that should never be allowed, regardless of context.\n    switch (tagName.toLowerCase()) {\n        case \"noscript\", \"script\", \"style\":\n            return true;\n        default:\n            return false;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}