{
    "generation": "/**\n Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n @param tags tag names to allow\n @return this (for chaining)\n */\npublic Safelist addTags(String... tags) {\n    Validate.notNull(tags);\n\n    for (String tagName : tags) {\n        Validate.notEmpty(tagName);\n        TagName tn;\n        try {\n            tn = TagName.valueOf(tagName);\n        } catch (IllegalArgumentException e) {\n            throw new ValidationException(\"Tag '\" + tagName + \"' is unsupported\");\n        }\n        if (tn == TagName.NOSCRIPT) {\n            throw new ValidationException(\"Tag '\" + tagName + \"' is unsupported\");\n        }\n        tagNames.add(tn);\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}