{
    "generation": "    /**\n     Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n     @param tags tag names to allow\n     @return this (for chaining)\n     */\n    public Safelist addTags(String... tags) {\n        Validate.notNull(tags);\n\n        for (String tagName : tags) {\n            Validate.notEmpty(tagName);\n            // Certain tags are inherently unsafe and should never be allowed in a safelist,\n            // even if explicitly requested. 'noscript' is one such tag.\n            // The test 'noscriptIsBlocked' expects a ValidationException for this case.\n            if (tagName.equalsIgnoreCase(\"noscript\")) {\n                Validate.fail(\"The 'noscript' tag is not supported in the safelist.\");\n            }\n            tagNames.add(TagName.valueOf(tagName));\n        }\n        return this;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}