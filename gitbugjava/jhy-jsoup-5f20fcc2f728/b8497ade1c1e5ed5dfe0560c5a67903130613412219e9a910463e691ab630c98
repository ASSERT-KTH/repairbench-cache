{
    "generation": "    /**\n     Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n     @param tags tag names to allow\n     @return this (for chaining)\n     */\n    public Safelist addTags(String... tags) {\n        Validate.notNull(tags);\n\n        for (String tagName : tags) {\n            Validate.notEmpty(tagName);\n\n            if (!isSupportedTagName(tagName)) {\n                throw new ValidationException(\"unsupported tagName: \" + tagName);\n            }\n\n            tagNames.add(TagName.valueOf(tagName));\n        }\n        return this;\n    }\n\n    private boolean isSupportedTagName(String tagName) {\n        // Provide your logic to determine if the tag name is supported.\n        // For example, you can use a list of supported tags or check against predefined values.\n        Set<String> supportedTags = new HashSet<>(Arrays.asList(\"DIV\", \"SPAN\", \"P\", \"A\", \"IMG\")); // Modify this list as needed.\n        return supportedTags.contains(tagName.toUpperCase());\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}