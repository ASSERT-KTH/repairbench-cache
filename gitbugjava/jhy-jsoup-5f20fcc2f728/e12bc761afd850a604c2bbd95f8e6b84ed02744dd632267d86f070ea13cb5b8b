{
    "generation": "import org.jsoup.internal.Validate;\nimport org.jsoup.parser.TagName;\nimport org.jsoup.safety.Safelist.TagName; // Assuming TagName is nested or imported correctly\nimport org.jsoup.safety.Safelist.ValidationException; // Assuming ValidationException is nested or imported correctly\n\nimport java.util.Locale;\n\n// -- The following is the fixed function --\n\n    /**\n     Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n     <p> Note that {@code noscript} cannot be added, as it is not supported.\n     @param tags tag names to allow\n     @return this (for chaining)\n     @throws ValidationException if {@code noscript} is attempted to be added.\n     */\n    public Safelist addTags(String... tags) {\n        Validate.notNull(tags);\n\n        for (String tagName : tags) {\n            Validate.notEmpty(tagName);\n            // ensure tag is supported before adding (currently, only noscript is unsupported)\n            String normalName = tagName.trim().toLowerCase(Locale.ENGLISH);\n            if (normalName.equals(\"noscript\")) {\n                // see https://github.com/jhy/jsoup/issues/1711\n                // noscript is ignored in parsing, so including here is misleading\n                throw new ValidationException(\"Tag <\" + tagName + \"> cannot be added to the Safelist (unsupported).\");\n            }\n\n            tagNames.add(TagName.valueOf(tagName)); // TagName.valueOf normalizes\n        }\n        return this;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}