{
    "generation": "    /**\n     Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n     @param tags tag names to allow\n     @return this (for chaining)\n     */\n    public Safelist addTags(String... tags) {\n        Validate.notNull(tags);\n\n        for (String tagName : tags) {\n            Validate.notEmpty(tagName); // Ensures tagName is not null and not an empty string.\n\n            // Normalize the input tag name using the Safelist's configured ParseSettings.\n            // ParseSettings.normalizeTag(string) also trims whitespace from the input.\n            String normalizedTagName = this.settings.normalizeTag(tagName);\n\n            // The problem requires blocking \"noscript\".\n            // Check against the normalized name, case-insensitively, to catch all forms like \"noscript\", \"NOSCRIPT\", etc.\n            // If normalizedTagName is empty (e.g., input was \"   \"), it won't match \"noscript\".\n            // An empty normalizedTagName will be caught later by TagName.valueOf().\n            if (normalizedTagName.equalsIgnoreCase(\"noscript\")) {\n                // Throw ValidationException as per test expectations for \"unsupported\" tags.\n                // This uses the Safelist's nested ValidationException class.\n                throw new ValidationException(String.format(\"Tag <%s> is unsupported.\", normalizedTagName));\n            }\n            \n            // Add the tag. Use the Safelist's own ParseSettings for creating/obtaining the TagName instance.\n            // This ensures that the case sensitivity (or lack thereof) of tags in this Safelist\n            // is consistent with how the Safelist was configured.\n            // TagName.valueOf() will perform further validation, e.g., ensuring the normalized name is not empty,\n            // and will return a TagName instance that is normalized according to this.settings.\n            tagNames.add(TagName.valueOf(tagName, this.settings));\n        }\n        return this;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}