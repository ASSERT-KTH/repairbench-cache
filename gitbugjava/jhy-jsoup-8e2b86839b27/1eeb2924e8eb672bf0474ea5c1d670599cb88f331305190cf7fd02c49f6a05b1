{
    "generation": "    private boolean isFormatAsBlock(Document.OutputSettings out) {\n        // Check for CSS display property override\n        String style = attributes().getIgnoreCase(\"style\");\n        if (!style.isEmpty()) { // attributes().getIgnoreCase() returns \"\" if attribute not found\n            // Regex to find \"display: block\", \"display: inline\", or \"display: inline-block\"\n            // (?i) for case-insensitive matching. \\b for word boundaries.\n            boolean hasBlock = style.matches(\"(?i).*\\\\bdisplay\\\\s*:\\\\s*block\\\\b.*\");\n            boolean hasInline = style.matches(\"(?i).*\\\\bdisplay\\\\s*:\\\\s*inline\\\\b.*\");\n            boolean hasInlineBlock = style.matches(\"(?i).*\\\\bdisplay\\\\s*:\\\\s*inline-block\\\\b.*\");\n\n            // If only inline-like styles are present (and not block)\n            if ((hasInline || hasInlineBlock) && !hasBlock) {\n                return false; // Element is formatted as inline\n            }\n            // If only block style is present (and not inline-like)\n            if (hasBlock && !hasInline && !hasInlineBlock) {\n                return true; // Element is formatted as block\n            }\n            // If style has conflicting directives (e.g., \"display:inline; display:block;\")\n            // or no relevant display directives (e.g. \"color:red;\"),\n            // fall through to default tag-based behavior.\n            // This handles cases like \"display:inline; display:block;\" (CSS block wins) correctly\n            // for block tags (e.g. <p>) by falling through to `tag.formatAsBlock() == true`.\n            // And for \"display:block; display:inline;\" (CSS inline wins) for inline tags (e.g. <span>)\n            // by falling through to `tag.formatAsBlock() == false` and `!tag.isInline() == false`.\n        }\n\n        // Default behavior based on tag type and outline mode:\n\n        // 1. If the tag is inherently a block-formatting tag (e.g., p, div).\n        //    Tag.formatAsBlock() is true for tags that are !isInline, !isData, !isFormListed, !isFormSubmittable.\n        //    It's generally false for tags like <pre> (preserves whitespace) or <textarea> (data), and inline tags.\n        if (tag.formatAsBlock()) {\n            return true;\n        }\n\n        // 2. If in outline mode, tags that are not intrinsically inline types should also be formatted as blocks.\n        //    This ensures elements like <pre> or <textarea> (where tag.formatAsBlock() is false but tag.isInline() is also false)\n        //    get block formatting (newlines and indentation) when outlining.\n        //    tag.isInline() is true for <span>, <b>, <img>, <br>, etc.\n        //    tag.isInline() is false for <p>, <div>, <pre>, <textarea>, etc.\n        if (out.outline() && !tag.isInline()) {\n            return true;\n        }\n        \n        return false; // Default to inline if not specified otherwise\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}