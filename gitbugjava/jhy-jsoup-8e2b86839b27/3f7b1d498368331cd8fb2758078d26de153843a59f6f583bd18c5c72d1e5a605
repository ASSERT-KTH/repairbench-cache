{
    "generation": "    private boolean isFormatAsBlock(Document.OutputSettings out) {\n        // If the element's tag is inherently a block-level element, it should be formatted as a block.\n        if (tag.formatAsBlock()) {\n            return true;\n        }\n\n        // If the parent element is a block-level element, its children are often formatted as blocks.\n        // This helps maintain proper indentation for lists, table cells, etc.\n        if (parent() != null && parent().tag().formatAsBlock()) {\n            return true;\n        }\n\n        // If outlining is enabled in the output settings, all elements are formatted as blocks.\n        if (out.outline()) {\n            return true;\n        }\n\n        // Fix for Issue 1926: An element (even an inherently inline one, or one with `display:inline`)\n        // should be formatted as a block if it contains any child element that is formatted as a block.\n        // This ensures that containers like `<td>` correctly indent their contents and wrap closing tags,\n        // even if child block elements have `display:inline` styles.\n        if (this instanceof Element) {\n            for (Node child : childNodes()) {\n                if (child instanceof Element) {\n                    // Recursively check if the child element is formatted as a block.\n                    // If any child is, then this element should also be treated as a block for formatting.\n                    if (((Element) child).isFormatAsBlock(out)) {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        // Otherwise, the element is not formatted as a block.\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}