{
    "generation": "        // Fixed version based on HTML Spec: https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n        void read(Tokeniser t, CharacterReader r) {\n            // previous state needs to have consumed the '<'\n            switch (r.current()) {\n                case '!':\n                    r.advance();\n                    t.transition(MarkupDeclarationOpen);\n                    break;\n                case '/':\n                    r.advance();\n                    t.transition(EndTagOpen);\n                    break;\n                case '?':\n                    r.advance();\n                    // spec ignores processing instructions. createBogusComment allows reading until >, and token emitted\n                    t.createBogusCommentPending();\n                    t.transition(BogusComment);\n                    break;\n                default:\n                    if (r.matchesLetter()) {\n                        // optimize letter case. No need to emit < as char, but keep state correct\n                        t.createTagPending(true); // true = start tag\n                        t.transition(TagName);\n                        // reconsume letter in TagName state\n                    } else {\n                        // \"<\", no letters after => treat like data\n                        t.error(this);\n                        t.emit('<');\n                        t.transition(Data);\n                        // reconsume in Data state\n                    }\n                    break;\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}