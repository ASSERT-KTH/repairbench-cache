{
    "generation": "  public int[] calculateSpans(int[] prices) {\n    int[] spans = new int[prices.length];\n    spans[0] = 1; // Span of first element is always 1\n    Stack<Integer> indexStack = new Stack<>();\n    // Push the index of first element\n    indexStack.push(0);\n    for (int i = 1; i < prices.length; i++) {\n      while (!indexStack.isEmpty()\n          && prices[i] >= prices[indexStack.peek()])\n        indexStack.pop();\n      // If index stack is empty, the price at index 'i'\n      // is greater than all previous values\n      if (indexStack.isEmpty())\n        spans[i] = i + 1;\n      else\n        spans[i] = i - indexStack.peek();\n      indexStack.push(i);\n    }\n    return spans;\n  }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}