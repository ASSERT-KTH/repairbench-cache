{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    int startIndex = -1;\n    int endIndex = -1;\n\n    // Find the start and end indices of a single full frame\n    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n        if (buf.getByte(i) == '[' && startIndex == -1) {\n            startIndex = i;\n        }\n        if (buf.getByte(i) == ']') {\n            endIndex = i + 1;\n            if (startIndex != -1) {\n                break;\n            }\n        }\n    }\n\n    if (startIndex != -1 && endIndex != -1 && endIndex > startIndex) {\n        // Skip bytes before the frame\n        buf.readerIndex(startIndex);\n        ByteBuf frame = Unpooled.buffer();\n        int frameEnd = endIndex;\n\n        while (buf.readerIndex() < frameEnd) {\n            byte b1 = buf.readByte();\n            if (b1 == '}') {\n                // Make sure there is another byte to read\n                if (buf.readerIndex() >= frameEnd) {\n                    throw new IllegalArgumentException(\"Incomplete escape sequence at frame end\");\n                }\n                byte b2 = buf.readByte();\n                switch (b2) {\n                    case 0x01:\n                        frame.writeByte('}');\n                        break;\n                    case 0x02:\n                        frame.writeByte('[');\n                        break;\n                    case 0x03:\n                        frame.writeByte(']');\n                        break;\n                    case 0x04:\n                        frame.writeByte(',');\n                        break;\n                    case 0x05:\n                        frame.writeByte('*');\n                        break;\n                    default:\n                        throw new IllegalArgumentException(String.format(\n                                \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                }\n            } else {\n                frame.writeByte(b1);\n            }\n        }\n\n        // Set readerIndex to frameEnd so next decode() finds following frame\n        buf.readerIndex(frameEnd);\n        return frame;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}