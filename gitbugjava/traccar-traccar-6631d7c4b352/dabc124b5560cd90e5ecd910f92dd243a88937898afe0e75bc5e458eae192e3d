{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    int frameStart = -1;\n    int frameEnd = -1;\n\n    // Look for the first '['\n    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n        if (buf.getByte(i) == '[') {\n            frameStart = i;\n            break;\n        }\n    }\n\n    // Look for the first ']' after frameStart\n    if (frameStart != -1) {\n        for (int i = frameStart; i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) == ']') {\n                frameEnd = i;\n                break;\n            }\n        }\n    }\n\n    if (frameStart != -1 && frameEnd != -1 && frameEnd > frameStart) {\n        int oldReaderIndex = buf.readerIndex();\n        buf.readerIndex(frameStart);\n\n        ByteBuf frame = Unpooled.buffer(frameEnd - frameStart + 1);\n        int endIndex = frameEnd + 1;\n        while (buf.readerIndex() < endIndex) {\n            byte b1 = buf.readByte();\n            if (b1 == '}') {\n                // make sure there is at least one byte to read in the frame\n                if (buf.readerIndex() < endIndex) {\n                    byte b2 = buf.readByte();\n                    switch (b2) {\n                        case 0x01:\n                            frame.writeByte('}');\n                            break;\n                        case 0x02:\n                            frame.writeByte('[');\n                            break;\n                        case 0x03:\n                            frame.writeByte(']');\n                            break;\n                        case 0x04:\n                            frame.writeByte(',');\n                            break;\n                        case 0x05:\n                            frame.writeByte('*');\n                            break;\n                        default:\n                            throw new IllegalArgumentException(String.format(\n                                    \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                    }\n                } else {\n                    // Incomplete escape sequence, break out (shouldn't happen since frameEnd is at ']')\n                    frame.writeByte(b1);\n                }\n            } else {\n                frame.writeByte(b1);\n            }\n        }\n\n        // Remove what we've read\n        buf.readerIndex(endIndex);\n\n        return frame;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}