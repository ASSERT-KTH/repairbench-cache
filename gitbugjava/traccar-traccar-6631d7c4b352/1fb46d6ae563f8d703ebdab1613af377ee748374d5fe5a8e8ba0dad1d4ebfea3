{
    "generation": "    @Override\n    protected Object decode(\n            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n        int endIndex = -1;\n        // Corrected loop: scan forwards from the current readerIndex\n        // to find the ']' that marks the end of the *first* complete frame.\n        for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1; // endIndex is the position *after* the ']'\n                break;\n            }\n        }\n\n        if (endIndex > 0) { // A ']' was found, indicating a potential frame end\n            ByteBuf frame = Unpooled.buffer();\n            // Process bytes from the current buf.readerIndex() up to (but not including) endIndex.\n            // buf.readByte() advances buf.readerIndex().\n            while (buf.readerIndex() < endIndex) {\n                byte b1 = buf.readByte();\n                if (b1 == '}') { // Start of a potential escape sequence\n                    // If '}' is encountered, the next byte is part of the escape sequence.\n                    // This read is safe because endIndex is at least buf.readerIndex() + 1 (due to ']')\n                    // if b1 was the byte before ']', b2 will be ']'.\n                    byte b2 = buf.readByte();\n                    switch (b2) {\n                        case 0x01:\n                            frame.writeByte('}');\n                            break;\n                        case 0x02:\n                            frame.writeByte('[');\n                            break;\n                        case 0x03:\n                            frame.writeByte(']');\n                            break;\n                        case 0x04:\n                            frame.writeByte(',');\n                            break;\n                        case 0x05:\n                            frame.writeByte('*');\n                            break;\n                        default:\n                            // '}' was followed by an unexpected byte.\n                            throw new IllegalArgumentException(String.format(\n                                    \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                    }\n                } else { // Not an escape sequence start, just a regular byte\n                    frame.writeByte(b1);\n                }\n            }\n            return frame; // Return the decoded frame\n        }\n\n        // No ']' found in the readable part of the buffer, so no complete frame yet.\n        return null;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}