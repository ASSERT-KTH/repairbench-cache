{
    "generation": "@Override\nprotected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n    // Mark the current reader index in case we do not have a complete frame yet.\n    buf.markReaderIndex();\n    ByteBuf frame = Unpooled.buffer();\n\n    // Process one frame: read bytes until we find an unescaped closing bracket ']'\n    while (buf.isReadable()) {\n        byte b = buf.readByte();\n        if (b == '}') {\n            // Must have one more byte for the escape code.\n            if (!buf.isReadable()) {\n                buf.resetReaderIndex();\n                return null; // Incomplete escape sequence.\n            }\n            byte b2 = buf.readByte();\n            switch (b2) {\n                case 0x01:\n                    frame.writeByte('}');\n                    break;\n                case 0x02:\n                    frame.writeByte('[');\n                    break;\n                case 0x03:\n                    frame.writeByte(']');\n                    break;\n                case 0x04:\n                    frame.writeByte(',');\n                    break;\n                case 0x05:\n                    frame.writeByte('*');\n                    break;\n                default:\n                    throw new IllegalArgumentException(String.format(\n                            \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n            }\n        } else {\n            frame.writeByte(b);\n            // When we encounter the closing bracket, we have a full frame.\n            if (b == ']') {\n                return frame;\n            }\n        }\n    }\n\n    // If we reached here, the buffer does not contain a complete frame.\n    buf.resetReaderIndex();\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}