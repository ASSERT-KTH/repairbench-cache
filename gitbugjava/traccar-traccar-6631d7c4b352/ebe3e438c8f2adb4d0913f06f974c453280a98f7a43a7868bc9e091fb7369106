{
    "generation": "    @Override\n    protected Object decode(\n            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n        // Search for the first occurrence of ']' starting from the current readerIndex.\n        // This is crucial for correctly decoding one frame at a time, especially\n        // when the input buffer contains multiple concatenated frames.\n        int endIndex = -1;\n        for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1; // endIndex will be the position *after* the ']' character.\n                break; // Found the first ']', so we can stop searching.\n            }\n        }\n\n        // If a complete frame (ending with ']') is found\n        if (endIndex > 0) {\n            ByteBuf frame = Unpooled.buffer();\n\n            // Read bytes from the input buffer up to the calculated endIndex\n            while (buf.readerIndex() < endIndex) {\n                byte b1 = buf.readByte();\n                if (b1 == '}') {\n                    // If an escape character '}' is encountered, read the next byte\n                    // and translate it according to the protocol.\n                    byte b2 = buf.readByte();\n                    switch (b2) {\n                        case 0x01:\n                            frame.writeByte('}');\n                            break;\n                        case 0x02:\n                            frame.writeByte('[');\n                            break;\n                        case 0x03:\n                            frame.writeByte(']');\n                            break;\n                        case 0x04:\n                            frame.writeByte(',');\n                            break;\n                        case 0x05:\n                            frame.writeByte('*');\n                            break;\n                        default:\n                            // If an unknown escape sequence is encountered, throw an exception.\n                            // buf.readerIndex() - 1 points to the position of b2.\n                            throw new IllegalArgumentException(String.format(\n                                    \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                    }\n                } else {\n                    // If not an escape character, write the byte directly to the frame\n                    frame.writeByte(b1);\n                }\n            }\n            // After the loop, buf.readerIndex() will be equal to endIndex,\n            // effectively consuming the frame from the input buffer.\n            return frame;\n        }\n\n        // If no complete frame is found, return null.\n        // The readerIndex of `buf` will not be advanced in this case,\n        // allowing Netty to accumulate more data before retrying decoding.\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}