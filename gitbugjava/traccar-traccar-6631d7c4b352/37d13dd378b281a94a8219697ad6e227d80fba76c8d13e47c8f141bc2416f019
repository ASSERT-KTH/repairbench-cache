{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    // find the first ']' (end of a single frame)\n    int endIndex = -1;\n    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n        if (buf.getByte(i) == ']') {\n            endIndex = i + 1;\n            break;\n        }\n    }\n    // no complete frame yet\n    if (endIndex < 0) {\n        return null;\n    }\n    // extract and un\u2010escape the frame\n    ByteBuf frame = Unpooled.buffer(endIndex - buf.readerIndex());\n    while (buf.readerIndex() < endIndex) {\n        byte b1 = buf.readByte();\n        if (b1 == '}') {\n            byte b2 = buf.readByte();\n            switch (b2) {\n                case 0x01:\n                    frame.writeByte('}');\n                    break;\n                case 0x02:\n                    frame.writeByte('[');\n                    break;\n                case 0x03:\n                    frame.writeByte(']');\n                    break;\n                case 0x04:\n                    frame.writeByte(',');\n                    break;\n                case 0x05:\n                    frame.writeByte('*');\n                    break;\n                default:\n                    throw new IllegalArgumentException(String.format(\n                            \"unexpected byte at %d: 0x%02x\",\n                            buf.readerIndex() - 1, b2));\n            }\n        } else {\n            frame.writeByte(b1);\n        }\n    }\n    return frame;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}