{
    "generation": "    @Override\n    protected Object decode(\n            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n        int endIndex = -1;\n        // Corrected: search forward from the current readerIndex to find the first ']'\n        for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1; // endIndex is exclusive (points one byte *after* ']')\n                break;\n            }\n        }\n\n        if (endIndex > 0) { // A ']' was found, indicating a potential complete frame\n            ByteBuf frame = Unpooled.buffer(); // Use default capacity as in original code\n            \n            // Process bytes up to (but not including) endIndex.\n            // buf.readerIndex() is advanced by buf.readByte()\n            while (buf.readerIndex() < endIndex) {\n                byte b1 = buf.readByte();\n                if (b1 == '}') { // Escape character encountered\n                    // Check if there's another byte available for the escape sequence *within the current frame*.\n                    // After reading b1, buf.readerIndex() points to the position of the next byte.\n                    // If buf.readerIndex() is already at endIndex, b1 was the last byte of the frame's content.\n                    // An escape sequence '}' needs a following byte (b2).\n                    if (buf.readerIndex() < endIndex) {\n                        byte b2 = buf.readByte();\n                        switch (b2) {\n                            case 0x01:\n                                frame.writeByte('}');\n                                break;\n                            case 0x02:\n                                frame.writeByte('[');\n                                break;\n                            case 0x03:\n                                frame.writeByte(']');\n                                break;\n                            case 0x04:\n                                frame.writeByte(',');\n                                break;\n                            case 0x05:\n                                frame.writeByte('*');\n                                break;\n                            default:\n                                // '}' was followed by an unrecognized escape code byte.\n                                throw new IllegalArgumentException(String.format(\n                                        \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                        }\n                    } else {\n                        // '}' was the last byte of content in the frame segment (e.g. \"[...content}]\").\n                        // This constitutes an incomplete escape sequence.\n                        throw new IllegalArgumentException(String.format(\n                                \"incomplete escape sequence at end of frame, readerIndex: %d, endIndex: %d\",\n                                buf.readerIndex(), endIndex));\n                    }\n                } else {\n                    frame.writeByte(b1);\n                }\n            }\n            return frame;\n        }\n\n        return null; // No ']' found, so the frame is incomplete.\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}