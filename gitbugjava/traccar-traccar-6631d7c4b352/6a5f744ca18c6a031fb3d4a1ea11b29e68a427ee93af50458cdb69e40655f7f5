{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    int startIndex = -1;\n    int endIndex = -1;\n    // Find the start '['\n    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n        if (buf.getByte(i) == '[') {\n            startIndex = i;\n            break;\n        }\n    }\n    // Find the end ']'\n    if (startIndex != -1) {\n        for (int i = buf.writerIndex() - 1; i > startIndex; i--) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1;\n                break;\n            }\n        }\n    }\n\n    if (startIndex != -1 && endIndex != -1 && endIndex > startIndex) {\n        // Set reader index to start of frame\n        buf.readerIndex(startIndex);\n        // Mark end of frame\n        int oldWriterIndex = buf.writerIndex();\n        buf.writerIndex(endIndex);\n\n        ByteBuf frame = Unpooled.buffer();\n        while (buf.readerIndex() < endIndex) {\n            byte b1 = buf.readByte();\n            if (b1 == '}') {\n                if (buf.readerIndex() < endIndex) {\n                    byte b2 = buf.readByte();\n                    switch (b2) {\n                        case 0x01:\n                            frame.writeByte('}');\n                            break;\n                        case 0x02:\n                            frame.writeByte('[');\n                            break;\n                        case 0x03:\n                            frame.writeByte(']');\n                            break;\n                        case 0x04:\n                            frame.writeByte(',');\n                            break;\n                        case 0x05:\n                            frame.writeByte('*');\n                            break;\n                        default:\n                            throw new IllegalArgumentException(String.format(\n                                    \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                    }\n                } else {\n                    // if trailing '}' with no following escape, copy as is\n                    frame.writeByte(b1);\n                }\n            } else {\n                frame.writeByte(b1);\n            }\n        }\n        buf.writerIndex(oldWriterIndex);\n        // Remove read bytes\n        buf.readerIndex(endIndex);\n        return frame;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}