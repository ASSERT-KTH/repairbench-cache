{
    "generation": "@Override\nprotected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n    int frameEndIndex = -1;\n    int index = buf.readerIndex();\n    while (index < buf.writerIndex()) {\n        byte b = buf.getByte(index);\n        if (b == ']') {\n            frameEndIndex = index + 1;\n            break;\n        } else if (b == '}') {\n            // Skip over the escape sequence.\n            index += 2;\n            continue;\n        }\n        index++;\n    }\n\n    if (frameEndIndex < 0) {\n        // No complete frame is available.\n        return null;\n    }\n\n    ByteBuf frame = Unpooled.buffer();\n    while (buf.readerIndex() < frameEndIndex) {\n        byte b1 = buf.readByte();\n        if (b1 == '}') {\n            if (buf.readerIndex() >= frameEndIndex) {\n                throw new IllegalArgumentException(\"Incomplete escape sequence at end of frame\");\n            }\n            byte b2 = buf.readByte();\n            switch (b2) {\n                case 0x01:\n                    frame.writeByte('}');\n                    break;\n                case 0x02:\n                    frame.writeByte('[');\n                    break;\n                case 0x03:\n                    frame.writeByte(']');\n                    break;\n                case 0x04:\n                    frame.writeByte(',');\n                    break;\n                case 0x05:\n                    frame.writeByte('*');\n                    break;\n                default:\n                    throw new IllegalArgumentException(String.format(\n                            \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n            }\n        } else {\n            frame.writeByte(b1);\n        }\n    }\n    return frame;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}