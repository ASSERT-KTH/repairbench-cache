{
    "generation": "    @Override\n    protected Object decode(\n            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n        // Find the first closing bracket ']' starting from the reader index\n        int frameEndIndex = -1; // Index of ']'\n        for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) == ']') {\n                frameEndIndex = i;\n                break;\n            }\n        }\n\n        // If no closing bracket found, wait for more data\n        if (frameEndIndex == -1) {\n            return null;\n        }\n\n        // We have a potential frame from readerIndex up to frameEndIndex (inclusive).\n        int frameStartIndex = buf.readerIndex();\n        // Estimate size, actual size might be smaller due to escape sequences\n        int initialCapacity = frameEndIndex - frameStartIndex + 1;\n        ByteBuf frame = Unpooled.buffer(initialCapacity);\n\n        // Process bytes up to and including the closing bracket\n        while (buf.readerIndex() <= frameEndIndex) {\n            byte b1 = buf.readByte();\n            if (b1 == '}') {\n                // Check if there's another byte available *within* the frame for the escape sequence\n                if (buf.readerIndex() <= frameEndIndex) {\n                    byte b2 = buf.readByte(); // Read the potential escape code byte\n                    switch (b2) {\n                        case 0x01:\n                            frame.writeByte('}'); // 7d 01 -> 7d\n                            break;\n                        case 0x02:\n                            frame.writeByte('['); // 7d 02 -> 5b\n                            break;\n                        case 0x03:\n                            frame.writeByte(']'); // 7d 03 -> 5d\n                            break;\n                        case 0x04:\n                            frame.writeByte(','); // 7d 04 -> 2c\n                            break;\n                        case 0x05:\n                            frame.writeByte('*'); // 7d 05 -> 2a\n                            break;\n                        default:\n                            // Invalid escape sequence byte value\n                            throw new IllegalArgumentException(String.format(\n                                    \"unexpected byte after escape char '}' at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                    }\n                } else {\n                    // '}' was the last byte of the frame (the character at frameEndIndex).\n                    // This means it's an incomplete escape sequence.\n                    throw new IllegalArgumentException(String.format(\n                            \"incomplete escape sequence at end of frame, index %d\", buf.readerIndex() - 1));\n                }\n            } else {\n                // Regular byte, just write it to the frame buffer\n                frame.writeByte(b1);\n            }\n        }\n\n        // The input buffer's readerIndex is now positioned right after the processed frame.\n        return frame;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}