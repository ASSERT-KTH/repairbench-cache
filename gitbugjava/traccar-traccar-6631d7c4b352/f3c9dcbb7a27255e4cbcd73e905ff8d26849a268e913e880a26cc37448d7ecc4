{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    // Find the first possible full frame delimited by '[' ... ']'\n    int frameStart = -1;\n    int frameEnd = -1;\n    // Look for start '['\n    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n        if (buf.getByte(i) == '[') {\n            frameStart = i;\n            break;\n        }\n    }\n    if (frameStart == -1) {\n        return null;\n    }\n    // Look for end ']'\n    for (int i = frameStart + 1; i < buf.writerIndex(); i++) {\n        if (buf.getByte(i) == ']') {\n            frameEnd = i;\n            break;\n        }\n    }\n    if (frameEnd == -1) {\n        return null; // Not yet a full frame\n    }\n\n    int oldReaderIndex = buf.readerIndex();\n    buf.readerIndex(frameStart);\n\n    ByteBuf frame = Unpooled.buffer();\n    while (buf.readerIndex() <= frameEnd) {\n        byte b1 = buf.readByte();\n        if (b1 == '}') {\n            if (buf.readerIndex() > frameEnd) {\n                // Junk trailing '}' after end marker, treat as normal (write last '}').\n                frame.writeByte(b1);\n                break;\n            }\n            byte b2 = buf.readByte();\n            switch (b2) {\n                case 0x01:\n                    frame.writeByte('}');\n                    break;\n                case 0x02:\n                    frame.writeByte('[');\n                    break;\n                case 0x03:\n                    frame.writeByte(']');\n                    break;\n                case 0x04:\n                    frame.writeByte(',');\n                    break;\n                case 0x05:\n                    frame.writeByte('*');\n                    break;\n                default:\n                    throw new IllegalArgumentException(String.format(\n                            \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n            }\n        } else {\n            frame.writeByte(b1);\n        }\n    }\n    buf.readerIndex(frameEnd + 1);\n\n    return frame;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}