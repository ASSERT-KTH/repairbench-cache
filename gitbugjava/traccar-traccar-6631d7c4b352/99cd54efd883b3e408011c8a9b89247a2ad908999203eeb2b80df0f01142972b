{
    "generation": "@Override\nprotected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n    int startIndex = buf.readerIndex();\n    int writerIndex = buf.writerIndex();\n\n    // Search forward for the first unescaped closing bracket ']'\n    int frameEndIndex = -1;\n    int i = startIndex;\n    while (i < writerIndex) {\n        byte b = buf.getByte(i);\n        if (b == '}') {\n            // If escape indicator is found but the escape code is not yet available, wait for more bytes.\n            if (i + 1 >= writerIndex) {\n                return null;\n            }\n            // Skip both the escape indicator and its code.\n            i += 2;\n            continue;\n        } else if (b == ']') {\n            frameEndIndex = i;\n            break;\n        } else {\n            i++;\n        }\n    }\n\n    // If no complete frame (no unescaped ']') is found, return null.\n    if (frameEndIndex < 0) {\n        return null;\n    }\n\n    // Create a new ByteBuf for the decoded frame.\n    ByteBuf frame = Unpooled.buffer(frameEndIndex - startIndex + 1);\n    \n    // Decode the frame from its encoded form.\n    // Note: frameEndIndex is based on the original buffer positions.\n    while (buf.readerIndex() <= frameEndIndex) {\n        byte b1 = buf.readByte();\n        if (b1 == '}') {\n            // We expect an escape code following '}'.\n            if (!buf.isReadable()) {\n                // Incomplete escape sequence; should not happen because we checked during scanning.\n                return null;\n            }\n            byte b2 = buf.readByte();\n            switch (b2) {\n                case 0x01:\n                    frame.writeByte('}');\n                    break;\n                case 0x02:\n                    frame.writeByte('[');\n                    break;\n                case 0x03:\n                    frame.writeByte(']');\n                    break;\n                case 0x04:\n                    frame.writeByte(',');\n                    break;\n                case 0x05:\n                    frame.writeByte('*');\n                    break;\n                default:\n                    throw new IllegalArgumentException(String.format(\n                        \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n            }\n        } else {\n            frame.writeByte(b1);\n        }\n    }\n    \n    return frame;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}