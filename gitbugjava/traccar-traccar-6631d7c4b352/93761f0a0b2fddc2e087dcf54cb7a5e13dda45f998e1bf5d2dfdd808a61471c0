{
    "generation": "    @Override\n    protected Object decode(\n            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n        // Fixed: Scan from readerIndex to find the first ']' character\n        // This ensures that if multiple frames are in the buffer, only the first one is processed.\n        int endIndex = -1;\n        for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1; // endIndex is the position *after* ']'\n                break;\n            }\n        }\n\n        if (endIndex > 0) { // A ']' was found, so a complete frame might be present.\n                            // (endIndex > 0 is equivalent to endIndex != -1 here, as i >= 0)\n            ByteBuf frame = Unpooled.buffer(); // Output buffer for the unescaped frame.\n                                             // Consider Unpooled.buffer(endIndex - buf.readerIndex()) for better initial capacity.\n\n            // Process bytes from buf.readerIndex() up to (but not including) endIndex.\n            // buf.readByte() advances buf.readerIndex().\n            while (buf.readerIndex() < endIndex) {\n                byte b1 = buf.readByte();\n                if (b1 == '}') { // Escape character found\n                    // Fixed: Ensure the next byte (b2) is read only if it's within the current frame's boundary.\n                    if (buf.readerIndex() < endIndex) {\n                        byte b2 = buf.readByte();\n                        switch (b2) {\n                            case 0x01:\n                                frame.writeByte('}');\n                                break;\n                            case 0x02:\n                                frame.writeByte('[');\n                                break;\n                            case 0x03:\n                                frame.writeByte(']');\n                                break;\n                            case 0x04:\n                                frame.writeByte(',');\n                                break;\n                            case 0x05:\n                                frame.writeByte('*');\n                                break;\n                            default:\n                                // b2 is not a valid escape code.\n                                throw new IllegalArgumentException(String.format(\n                                        \"unexpected byte in escape sequence at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                        }\n                    } else {\n                        // '}' was the last byte within the frame segment (i.e., at endIndex - 1).\n                        // This means an escape sequence was started but not completed within the frame.\n                        throw new IllegalArgumentException(String.format(\n                                \"unterminated escape sequence at end of frame, index %d\", buf.readerIndex() - 1));\n                    }\n                } else {\n                    // Not an escape character, write byte as is.\n                    frame.writeByte(b1);\n                }\n            }\n            return frame; // Return the decoded frame.\n        }\n\n        // No ']' found in the readable part of the buffer, so the frame is incomplete.\n        return null;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}