{
    "generation": "    @Override\n    protected Object decode(\n            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n        int endIndex = -1;\n        // Corrected: Scan from the current reader index forward to find the first ']'\n        for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1; // endIndex is exclusive, one position *after* ']'\n                break;\n            }\n        }\n\n        // Check if ']' was found. Using 'endIndex != -1' is clear.\n        // The original 'endIndex > 0' also works if readerIndex is always >= 0\n        // and endIndex is initialized to -1 or 0.\n        if (endIndex != -1) {\n            // Optimization: pre-allocate buffer with expected raw frame length\n            // This length is an estimate; unescaping might change the final size.\n            int rawFrameLength = endIndex - buf.readerIndex();\n            ByteBuf frame = Unpooled.buffer(rawFrameLength);\n            \n            while (buf.readerIndex() < endIndex) {\n                byte b1 = buf.readByte();\n                if (b1 == '}') {\n                    // If b1 is '}', then after reading b1, buf.readerIndex() points to the next byte.\n                    // This next byte must be within the current frame (i.e., its index < endIndex),\n                    // otherwise '}' would effectively be the last character of the frame content\n                    // (or '}' would be ']', which is impossible).\n                    // Therefore, reading b2 is safe and pertains to the current frame.\n                    byte b2 = buf.readByte();\n                    switch (b2) {\n                        case 0x01:\n                            frame.writeByte('}');\n                            break;\n                        case 0x02:\n                            frame.writeByte('[');\n                            break;\n                        case 0x03:\n                            frame.writeByte(']');\n                            break;\n                        case 0x04:\n                            frame.writeByte(',');\n                            break;\n                        case 0x05:\n                            frame.writeByte('*');\n                            break;\n                        default:\n                            throw new IllegalArgumentException(String.format(\n                                    \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                    }\n                } else {\n                    frame.writeByte(b1);\n                }\n            }\n            return frame;\n        }\n\n        return null; // ']' not found, frame is incomplete\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}