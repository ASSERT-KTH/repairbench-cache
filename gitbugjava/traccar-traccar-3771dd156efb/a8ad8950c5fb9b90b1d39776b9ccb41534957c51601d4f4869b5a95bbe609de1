{
    "generation": "    private Position decodePosition(DeviceSession deviceSession, String data) {\n\n        Parser parser = new Parser(PATTERN_POSITION, data);\n        if (!parser.matches()) {\n            return null;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        position.setTime(parser.nextDateTime(Parser.DateTimeFormat.DMY_HMS));\n\n        position.setValid(parser.next().equals(\"A\"));\n        position.setLatitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setLongitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble(0)));\n        position.setCourse(parser.nextDouble(0));\n        position.setAltitude(parser.nextDouble(0));\n\n        position.set(Position.KEY_SATELLITES, parser.nextInt(0));\n        position.set(Position.KEY_RSSI, parser.nextInt(0));\n        position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt(0));\n\n        position.set(Position.KEY_STEPS, parser.nextInt(0));\n\n        int status = parser.nextHexInt(0);\n        position.set(Position.KEY_ALARM, decodeAlarm(status));\n        if (BitUtil.check(status, 4)) {\n            position.set(Position.KEY_MOTION, true);\n        }\n\n        String[] values = parser.next().split(\",\");\n        int index = 0;\n\n        Network network = new Network();\n\n        int cellCount = Integer.parseInt(values[index++]);\n        if (cellCount > 0) {\n            index += 1; // timing advance\n\n            int mcc;\n            String mccString = values[index++];\n            if (!mccString.isEmpty()) {\n                try {\n                    mcc = Integer.parseInt(mccString);\n                } catch (NumberFormatException e) {\n                    mcc = Integer.parseInt(mccString, 16);\n                }\n            } else {\n                mcc = 0;\n            }\n\n            int mnc;\n            String mncString = values[index++];\n            if (!mncString.isEmpty()) {\n                try {\n                    mnc = Integer.parseInt(mncString);\n                } catch (NumberFormatException e) {\n                    mnc = Integer.parseInt(mncString, 16);\n                }\n            } else {\n                mnc = 0;\n            }\n\n            for (int i = 0; i < cellCount; i++) {\n                int lac;\n                String lacString = values[index++];\n                if (!lacString.isEmpty()) {\n                    try {\n                        lac = Integer.parseInt(lacString);\n                    } catch (NumberFormatException e) {\n                        lac = Integer.parseInt(lacString, 16);\n                    }\n                } else {\n                    lac = 0;\n                }\n\n                int cid;\n                String cidString = values[index++];\n                if (!cidString.isEmpty()) {\n                    try {\n                        cid = Integer.parseInt(cidString);\n                    } catch (NumberFormatException e) {\n                        cid = Integer.parseInt(cidString, 16);\n                    }\n                } else {\n                    cid = 0;\n                }\n                \n                String cellRssiString = values[index++];\n                if (!cellRssiString.isEmpty()) {\n                    network.addCellTower(CellTower.from(mcc, mnc, lac, cid, Integer.parseInt(cellRssiString)));\n                } else {\n                    network.addCellTower(CellTower.from(mcc, mnc, lac, cid));\n                }\n            }\n        }\n\n        if (index < values.length && !values[index].isEmpty()) {\n            int wifiCount = Integer.parseInt(values[index++]);\n\n            for (int i = 0; i < wifiCount; i++) {\n                index += 1; // wifi name\n                String macAddress = values[index++];\n                String rssi = values[index++];\n                if (!macAddress.isEmpty() && !macAddress.equals(\"0\") && !rssi.isEmpty()) {\n                    network.addWifiAccessPoint(WifiAccessPoint.from(macAddress, Integer.parseInt(rssi)));\n                }\n            }\n        }\n\n        if (network.getCellTowers() != null || network.getWifiAccessPoints() != null) {\n            position.setNetwork(network);\n        }\n\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}