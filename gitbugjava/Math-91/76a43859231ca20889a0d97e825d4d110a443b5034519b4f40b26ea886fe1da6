{
    "generation": "    /**\n     * Compares this object to another based on size.\n     * @param object the object to compare to\n     * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n     *         than <tt>object</tt>, 0 if they are equal.\n     */\n    public int compareTo(Fraction object) {\n        // We are comparing a/b with c/d\n        // This is equivalent to comparing a*d with c*b\n        // Use long arithmetic to prevent overflow\n        long n1 = (long) this.getNumerator();\n        long d1 = (long) this.getDenominator();\n        long n2 = (long) object.getNumerator();\n        long d2 = (long) object.getDenominator();\n\n        long comparison = n1 * d2 - (long)n2 * d1;\n\n        if (comparison < 0) {\n            return -1;\n        } else if (comparison > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n        // Alternative implementation using Long.compare:\n        // return Long.compare(n1 * d2, n2 * d1);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}