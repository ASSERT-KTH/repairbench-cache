{
    "generation": "    /**\n     * Compares this object to another based on size.\n     * @param object the object to compare to\n     * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n     *         than <tt>object</tt>, 0 if they are equal.\n     */\n    public int compareTo(Fraction object) {\n        // To avoid potential overflow issues when multiplying numerators and denominators,\n        // we perform the comparison using long integers.\n        long n1 = (long) this.numerator;\n        long d1 = (long) this.denominator;\n        long n2 = (long) object.numerator;\n        long d2 = (long) object.denominator;\n\n        // Calculate the difference between the cross products: n1*d2 - n2*d1\n        // The sign of this difference determines the comparison result.\n        long diff = n1 * d2 - n2 * d1;\n\n        // Return -1, 0, or 1 based on the sign of the difference.\n        if (diff < 0L) {\n            return -1; // this fraction is less than the object fraction\n        } else if (diff > 0L) {\n            return 1;  // this fraction is greater than the object fraction\n        } else {\n            // Denominators are guaranteed positive by Fraction constructors.\n            // Therefore, if the difference is 0, the fractions are equal.\n            return 0;  // the fractions are equal\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}