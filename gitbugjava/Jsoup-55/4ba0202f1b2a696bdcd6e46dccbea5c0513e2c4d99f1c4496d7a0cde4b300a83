{
    "generation": "        void read(Tokeniser t, CharacterReader r) {\n            char c = r.consume();\n            switch (c) {\n                case '>':\n                    t.tagPending.selfClosing = true;\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    // unexpected character in SelfClosingStartTag state, e.g. <img / >.\n                    // Let's treat it as a parse error, and switch back to BeforeAttributeName state to parse\n                    // the attribute if possible. The character is reconsumed.\n                    t.error(this);\n                    r.unconsume(); // Put the character back to be consumed again by the next state.\n                    t.transition(BeforeAttributeName);\n            }\n        }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}