{
    "generation": "    /**\n     * Declares all of a function's arguments.\n     */\n    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext(); // PARAM_LIST node\n      // Node body = astParameters.getNext(); // Not needed in this function\n\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      Node jsDocParameters = null;\n      if (functionType != null) {\n        jsDocParameters = functionType.getParametersNode();\n      }\n\n      // Advance through JSDoc parameters in parallel with AST parameters.\n      Node jsDocParameter = (jsDocParameters == null) ? null : jsDocParameters.getFirstChild();\n      for (Node astParameter : astParameters.children()) {\n        // Assuming astParameter is a NAME node, as is standard for PARAM_LIST children\n        // (ES6 destructuring would require more complex handling).\n\n        if (jsDocParameter != null) {\n          // We have JSDoc type information for this parameter.\n          // Declare it with the JSDoc type and mark it as not inferred.\n          defineSlot(astParameter, functionNode,\n              jsDocParameter.getJSType(), false); // *** Fix: set inferred to false ***\n          jsDocParameter = jsDocParameter.getNext();\n        } else {\n          // No corresponding JSDoc parameter (either JSDoc is missing,\n          // or has fewer params than the function signature).\n          // Declare it with an unknown type and mark it as inferred.\n          defineSlot(astParameter, functionNode, null, true);\n        }\n      }\n    } // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}