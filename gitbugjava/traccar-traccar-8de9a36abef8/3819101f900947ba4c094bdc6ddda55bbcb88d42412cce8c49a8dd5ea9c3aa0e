{
    "generation": "private void decodeFragment(Position position, String fragment) {\n\n    int dataIndex = fragment.indexOf(':');\n    int index = 0;\n    String[] values;\n    if (fragment.length() == dataIndex + 1) {\n        values = new String[0];\n    } else {\n        values = fragment.substring(dataIndex + 1).split(\";\");\n    }\n\n    switch (fragment.substring(0, dataIndex)) {\n        case \"GPS\":\n            if (index < values.length) {\n                position.setValid(values[index++].equals(\"A\"));\n            } else {\n                break;\n            }\n\n            if (index < values.length) {\n                String sat = values[index++];\n                if (!sat.isEmpty()) {\n                    position.set(Position.KEY_SATELLITES, Integer.parseInt(sat));\n                }\n            } else {\n                break;\n            }\n\n            if (index < values.length) {\n                String latVal = values[index++];\n                if (!latVal.isEmpty()) {\n                    try {\n                        if (latVal.length() > 1) {\n                            position.setLatitude(Double.parseDouble(latVal.substring(1)));\n                        }\n                        if (latVal.length() >= 1 && latVal.charAt(0) == 'S') {\n                            position.setLatitude(-position.getLatitude());\n                        }\n                    } catch (NumberFormatException ex) {\n                        // Ignore invalid latitude\n                    }\n                }\n            } else {\n                break;\n            }\n\n            if (index < values.length) {\n                String lonVal = values[index++];\n                if (!lonVal.isEmpty()) {\n                    try {\n                        if (lonVal.length() > 1) {\n                            position.setLongitude(Double.parseDouble(lonVal.substring(1)));\n                        }\n                        if (lonVal.length() >= 1 && lonVal.charAt(0) == 'W') {\n                            position.setLongitude(-position.getLongitude());\n                        }\n                    } catch (NumberFormatException ex) {\n                        // Ignore invalid longitude\n                    }\n                }\n            } else {\n                break;\n            }\n\n            if (index < values.length) {\n                String speed = values[index++];\n                if (!speed.isEmpty()) {\n                    position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(speed)));\n                }\n            } else {\n                break;\n            }\n\n            if (index < values.length) {\n                String course = values[index++];\n                if (!course.isEmpty()) {\n                    position.setCourse(Integer.parseInt(course));\n                }\n            } else {\n                break;\n            }\n\n            if (index < values.length) {\n                String alt = values[index++];\n                if (!alt.isEmpty()) {\n                    position.setAltitude(Integer.parseInt(alt));\n                }\n            }\n\n            if (index < values.length) {\n                String hdop = values[index++];\n                if (!hdop.isEmpty()) {\n                    position.set(Position.KEY_HDOP, Double.parseDouble(hdop));\n                }\n            }\n\n            if (index < values.length) {\n                String vdop = values[index++];\n                if (!vdop.isEmpty()) {\n                    position.set(Position.KEY_VDOP, Double.parseDouble(vdop));\n                }\n            }\n            break;\n\n        case \"GSM\":\n            index += 1; // registration status\n            index += 1; // signal strength\n            if (index + 2 < values.length) {\n                position.setNetwork(new Network(CellTower.from(\n                    Integer.parseInt(values[index]), Integer.parseInt(values[index + 1]),\n                    Integer.parseInt(values[index + 2], 16), Integer.parseInt(values[index + 3], 16),\n                    Integer.parseInt(values[index + 4])));\n                index += 5;\n            } else {\n                index = values.length;\n            }\n            break;\n\n        case \"COT\":\n            if (index < values.length) {\n                String odo = values[index++];\n                if (!odo.isEmpty()) {\n                    position.set(Position.KEY_ODOMETER, Long.parseLong(odo));\n                }\n            }\n            if (index < values.length) {\n                String[] hours = values[index].split(\"-\");\n                position.set(Position.KEY_HOURS, (Integer.parseInt(hours[0]) * 3600\n                        + (hours.length > 1 ? Integer.parseInt(hours[1]) * 60 : 0)\n                        + (hours.length > 2 ? Integer.parseInt(hours[2]) : 0)) * 1000);\n                index++;\n            }\n            break;\n\n        case \"ADC\":\n            if (index < values.length) {\n                position.set(Position.KEY_POWER, Double.parseDouble(values[index++]));\n            }\n            if (index < values.length) {\n                String pow = values[index++];\n                if (!pow.isEmpty()) {\n                    position.set(Position.KEY_BATTERY, Double.parseDouble(pow));\n                }\n            }\n            if (index < values.length) {\n                String val = values[index++];\n                if (!val.isEmpty()) {\n                    position.set(Position.PREFIX_ADC + 1, Double.parseDouble(val));\n                }\n            }\n            if (index < values.length) {\n                String val = values[index++];\n                if (!val.isEmpty()) {\n                    position.set(Position.PREFIX_ADC + 2, Double.parseDouble(val));\n                }\n            }\n            break;\n\n        case \"DTT\":\n            if (index < values.length) {\n                String status = values[index++];\n                if (!status.isEmpty()) {\n                    position.set(Position.KEY_STATUS, Integer.parseInt(status, 16));\n                }\n            }\n            if (index < values.length) {\n                String ioStr = values[index++];\n                if (!ioStr.isEmpty()) {\n                    int io = Integer.parseInt(ioStr, 16);\n                    position.set(Position.KEY_IGNITION, BitUtil.check(io, 0));\n                    position.set(Position.PREFIX_IN + 1, BitUtil.check(io, 1));\n                    position.set(Position.PREFIX_IN + 2, BitUtil.check(io, 2));\n                    position.set(Position.PREFIX_IN + 3, BitUtil.check(io, 3));\n                    position.set(Position.PREFIX_IN + 4, BitUtil.check(io, 4));\n                    position.set(Position.PREFIX_OUT + 1, BitUtil.check(io, 5));\n                    position.set(Position.PREFIX_OUT + 2, BitUtil.check(io, 6));\n                    position.set(Position.PREFIX_OUT + 3, BitUtil.check(io, 7));\n                }\n            }\n            if (index < values.length) {\n                position.set(Position.KEY_GEOFENCE, values[index++] + values[index++]);\n            }\n            if (index < values.length) {\n                position.set(\"eventStatus\", values[index++]);\n            }\n            if (index < values.length) {\n                position.set(\"packetType\", values[index++]);\n            }\n            break;\n\n        case \"ETD\":\n            if (index < values.length) {\n                position.set(\"eventData\", values[index++]);\n            }\n            break;\n\n        case \"OBD\":\n            if (index < values.length) {\n                position.set(\"obd\", values[index++]);\n            }\n            break;\n\n        case \"TAG\":\n            if (index < values.length) {\n                position.set(\"tagData\", values[index++]);\n            }\n            break;\n\n        case \"IWD\":\n            while (index < values.length) {\n                int sensorIndex = Integer.parseInt(values[index++]);\n                int dataType = Integer.parseInt(values[index++]);\n                if (dataType == 0) {\n                    position.set(Position.KEY_DRIVER_UNIQUE_ID, values[index++]);\n                } else if (dataType == 1) {\n                    index += 1; // temperature sensor serial number\n                    if (index < values.length) {\n                        String temp = values[index++];\n                        if (!temp.isEmpty()) {\n                            position.set(Position.PREFIX_TEMP + sensorIndex, Double.parseDouble(temp));\n                        }\n                    }\n                }\n            }\n            break;\n\n        default:\n            break;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}