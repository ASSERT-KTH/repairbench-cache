{
    "generation": "private void decodeFragment(Position position, String fragment) {\n    int dataIndex = fragment.indexOf(':');\n    int index = 0;\n    String[] values;\n    if (fragment.length() == dataIndex + 1) {\n        values = new String[0];\n    } else {\n        values = fragment.substring(dataIndex + 1).split(\";\");\n    }\n\n    switch (fragment.substring(0, dataIndex)) {\n        case \"GPS\":\n            // Mandatory fields\n            position.setValid(values[index++].equals(\"A\"));\n            position.set(Position.KEY_SATELLITES, Integer.parseInt(values[index++]));\n\n            String latStr = values[index++];\n            if (latStr.length() > 1 && !latStr.substring(1).isEmpty()) {\n                double latitude = Double.parseDouble(latStr.substring(1));\n                if (latStr.charAt(0) == 'S') {\n                    latitude = -latitude;\n                }\n                position.setLatitude(latitude);\n            }\n\n            String lonStr = values[index++];\n            if (lonStr.length() > 1 && !lonStr.substring(1).isEmpty()) {\n                double longitude = Double.parseDouble(lonStr.substring(1));\n                if (lonStr.charAt(0) == 'W') {\n                    longitude = -longitude;\n                }\n                position.setLongitude(longitude);\n            }\n\n            String speedStr = values[index++];\n            if (!speedStr.isEmpty()) {\n                position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(speedStr)));\n            }\n\n            String courseStr = values[index++];\n            if (!courseStr.isEmpty()) {\n                position.setCourse(Integer.parseInt(courseStr));\n            }\n\n            if (index < values.length) {\n                String altitudeStr = values[index++];\n                if (!altitudeStr.isEmpty()) {\n                    position.setAltitude(Integer.parseInt(altitudeStr));\n                }\n            }\n            if (index < values.length) {\n                String hdopStr = values[index++];\n                if (!hdopStr.isEmpty()) {\n                    position.set(Position.KEY_HDOP, Double.parseDouble(hdopStr));\n                }\n            }\n            if (index < values.length) {\n                String vdopStr = values[index++];\n                if (!vdopStr.isEmpty()) {\n                    position.set(Position.KEY_VDOP, Double.parseDouble(vdopStr));\n                }\n            }\n            break;\n\n        case \"GSM\":\n            index += 1; // skip registration status\n            index += 1; // skip signal strength\n            position.setNetwork(new Network(CellTower.from(\n                    Integer.parseInt(values[index++]),\n                    Integer.parseInt(values[index++]),\n                    Integer.parseInt(values[index++], 16),\n                    Integer.parseInt(values[index++], 16),\n                    Integer.parseInt(values[index++])\n            )));\n            break;\n\n        case \"COT\":\n            if (index < values.length) {\n                String odometer = values[index++];\n                if (!odometer.isEmpty()) {\n                    position.set(Position.KEY_ODOMETER, Long.parseLong(odometer));\n                }\n            }\n            if (index < values.length) {\n                String hoursStr = values[index++];\n                if (!hoursStr.isEmpty()) {\n                    String[] parts = hoursStr.split(\"-\");\n                    int h = Integer.parseInt(parts[0]);\n                    int m = (parts.length > 1 && !parts[1].isEmpty()) ? Integer.parseInt(parts[1]) : 0;\n                    int s = (parts.length > 2 && !parts[2].isEmpty()) ? Integer.parseInt(parts[2]) : 0;\n                    position.set(Position.KEY_HOURS, (h * 3600 + m * 60 + s) * 1000);\n                }\n            }\n            break;\n\n        case \"ADC\":\n            {\n                String powerStr = values[index++];\n                if (!powerStr.isEmpty()) {\n                    position.set(Position.KEY_POWER, Double.parseDouble(powerStr));\n                }\n                if (index < values.length) {\n                    String batteryStr = values[index++];\n                    if (!batteryStr.isEmpty()) {\n                        position.set(Position.KEY_BATTERY, Double.parseDouble(batteryStr));\n                    }\n                }\n                if (index < values.length) {\n                    String adc1 = values[index++];\n                    if (!adc1.isEmpty()) {\n                        position.set(Position.PREFIX_ADC + 1, Double.parseDouble(adc1));\n                    }\n                }\n                if (index < values.length) {\n                    String adc2 = values[index++];\n                    if (!adc2.isEmpty()) {\n                        position.set(Position.PREFIX_ADC + 2, Double.parseDouble(adc2));\n                    }\n                }\n            }\n            break;\n\n        case \"DTT\":\n            {\n                String statusStr = values[index++];\n                position.set(Position.KEY_STATUS, Integer.parseInt(statusStr, 16));\n                if (index < values.length) {\n                    String ioStr = values[index++];\n                    if (!ioStr.isEmpty()) {\n                        int io = Integer.parseInt(ioStr, 16);\n                        position.set(Position.KEY_IGNITION, BitUtil.check(io, 0));\n                        position.set(Position.PREFIX_IN + 1, BitUtil.check(io, 1));\n                        position.set(Position.PREFIX_IN + 2, BitUtil.check(io, 2));\n                        position.set(Position.PREFIX_IN + 3, BitUtil.check(io, 3));\n                        position.set(Position.PREFIX_IN + 4, BitUtil.check(io, 4));\n                        position.set(Position.PREFIX_OUT + 1, BitUtil.check(io, 5));\n                        position.set(Position.PREFIX_OUT + 2, BitUtil.check(io, 6));\n                        position.set(Position.PREFIX_OUT + 3, BitUtil.check(io, 7));\n                    }\n                }\n                if (index < values.length - 1) {\n                    String geoFencePart1 = values[index++];\n                    String geoFencePart2 = values[index++];\n                    position.set(Position.KEY_GEOFENCE, geoFencePart1 + geoFencePart2);\n                } else if (index < values.length) {\n                    position.set(Position.KEY_GEOFENCE, values[index++]);\n                }\n                if (index < values.length) {\n                    position.set(\"eventStatus\", values[index++]);\n                }\n                if (index < values.length) {\n                    position.set(\"packetType\", values[index++]);\n                }\n            }\n            break;\n\n        case \"ETD\":\n            if (index < values.length) {\n                position.set(\"eventData\", values[index++]);\n            }\n            break;\n\n        case \"OBD\":\n            if (index < values.length) {\n                position.set(\"obd\", values[index++]);\n            }\n            break;\n\n        case \"TAG\":\n            if (index < values.length) {\n                position.set(\"tagData\", values[index++]);\n            }\n            break;\n\n        case \"IWD\":\n            while (index < values.length) {\n                // Skip any empty tokens.\n                if (values[index].isEmpty()) {\n                    index++;\n                    continue;\n                }\n                int sensorIndex = Integer.parseInt(values[index++]);\n                int dataType = Integer.parseInt(values[index++]);\n                if (dataType == 0) {\n                    if (index < values.length) {\n                        position.set(Position.KEY_DRIVER_UNIQUE_ID, values[index++]);\n                    }\n                } else if (dataType == 1) {\n                    if (index < values.length) {\n                        index++; // skip temperature sensor serial number\n                    }\n                    if (index < values.length) {\n                        String tempStr = values[index++];\n                        if (!tempStr.isEmpty()) {\n                            position.set(Position.PREFIX_TEMP + sensorIndex, Double.parseDouble(tempStr));\n                        }\n                    }\n                }\n            }\n            break;\n\n        default:\n            break;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}