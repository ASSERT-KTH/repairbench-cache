{
    "generation": "public JacksonJsonTransformer() {\n    ObjectMapper cleanObjectMapper = new ObjectMapper()\n        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    SimpleModule enumModule = new SimpleModule()\n        .addDeserializer(Enum.class, new EnumDeserializer());\n\n    SimpleModule module = new SimpleModule()\n        .addSerializer(Enum.class, new EnumSerializer())\n        .addDeserializer(Enum.class, new EnumDeserializer())\n        .addDeserializer(CrowdinApiException.class,\n            new CrowdinApiExceptionDeserializer(cleanObjectMapper))\n        .addDeserializer(Project.class,\n            new ProjectDeserializer(cleanObjectMapper.copy()\n                .registerModule(enumModule)))\n        .addDeserializer(FileInfo.class,\n            new FileInfoDeserializer(cleanObjectMapper.copy()\n                .registerModule(enumModule)\n                .registerModule(new SimpleModule()\n                    .addDeserializer(ImportOptions.class,\n                        new FileImportOptionsDeserializer(cleanObjectMapper))\n                    .addDeserializer(ExportOptions.class,\n                        new FileExportOptionsDeserializer(cleanObjectMapper)))))\n        .addDeserializer(LanguageTranslations.class,\n            new LanguageTranslationsDeserializer(cleanObjectMapper));\n\n    this.objectMapper = cleanObjectMapper.copy()\n        .setSerializationInclusion(JsonInclude.Include.NON_NULL)\n        // Use ISO\u20108601 timezone offset (\u201c+00:00\u201d or \u201cZ\u201d)\n        .setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssXXX\"))\n        .registerModule(module)\n        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)\n        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY);\n\n    this.errorObjectMapper = cleanObjectMapper;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}