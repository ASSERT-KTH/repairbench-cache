{
    "generation": "@Override\nprotected Object decode(\n        Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n    ByteBuf buf = (ByteBuf) msg;\n\n    buf.skipBytes(1); // Skip '[' header\n    manufacturer = buf.readCharSequence(2, StandardCharsets.US_ASCII).toString();\n    buf.skipBytes(1); // Skip '*' delimiter after manufacturer\n\n    int idIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '*');\n    String id = buf.readSlice(idIndex - buf.readerIndex()).toString(StandardCharsets.US_ASCII);\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, id);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    buf.skipBytes(1); // '*' delimiter after id\n\n    String index = null;\n    int contentIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '*');\n    if (contentIndex != -1 && contentIndex + 5 < buf.writerIndex() &&\n            buf.getByte(contentIndex + 5) == '*' &&\n            buf.toString(contentIndex + 1, 4, StandardCharsets.US_ASCII).matches(\"\\\\p{XDigit}+\")) {\n        hasIndex = true;\n        int indexLength = contentIndex - buf.readerIndex();\n        index = buf.readSlice(indexLength).toString(StandardCharsets.US_ASCII);\n        // Move to the delimiter after the length's checksum\n        buf.readerIndex(contentIndex + 5);\n    } else {\n        // Skip the length field and its delimiter\n        buf.skipBytes(4); // 4-digit length\n        buf.skipBytes(1); // '*' delimiter\n    }\n\n    // Adjust writerIndex to exclude closing ']'\n    buf.writerIndex(buf.writerIndex() - 1);\n\n    // Find and parse type and data\n    int commaIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',');\n    String type = commaIndex < 0\n            ? buf.toString(buf.readerIndex(), buf.writerIndex(), StandardCharsets.US_ASCII)\n            : buf.readSlice(commaIndex - buf.readerIndex()).toString(StandardCharsets.US_ASCII);\n    if (commaIndex < buf.writerIndex()) {\n        buf.readerIndex(commaIndex + 1);\n    }\n\n    // Explicit check for \"TEMP\" type\n    if (\"TEMP\".equals(type)) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        getLastLocation(position, null);\n\n        String[] values = buf.toString(StandardCharsets.US_ASCII).split(\",\");\n        if (values.length > 0) {\n            position.set(Position.KEY_TEMPERATURE, Double.parseDouble(values[0]));\n        }\n        return position;\n    }\n\n    // Existing 'B' type:\u5904\u7406 also adjusted for clarity\n    else if (type.equals(\"INIT\")) {\n        sendResponse(channel, id, index, \"INIT,1\");\n    } else if (type.equals(\"LK\")) {\n        sendResponse(channel, id, index, \"LK\");\n        if (buf.isReadable()) {\n            String[] values = buf.toString(StandardCharsets.US_ASCII).split(\",\");\n            if (values.length >= 3) {\n                Position position = new Position(getProtocolName());\n                position.setDeviceId(deviceSession.getDeviceId());\n                getLastLocation(position, null);\n                position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[2]));\n                position.set(Position.KEY_STEPS, Integer.parseInt(values[0]));\n                return position;\n            }\n        }\n    } else if (type.startsWith(\"UD\") || type.startsWith(\"AL\") || type.startsWith(\"WT\")) {\n        Position position = decodePosition(deviceSession, buf.toString(StandardCharsets.US_ASCII));\n\n        if (type.startsWith(\"AL\")) {\n            if (position != null) {\n                position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n            }\n            sendResponse(channel, id, index, \"AL\");\n        }\n        return position;\n    } else if (type.equals(\"TKQ\") || type.equals(\"TKQ2\")) {\n        sendResponse(channel, id, index, type);\n    } else if (type.equalsIgnoreCase(\"PULSE\") ||\n               type.equalsIgnoreCase(\"HEART\") ||\n               type.equalsIgnoreCase(\"BLOOD\") ||\n               type.equalsIgnoreCase(\"BPHRT\") ||\n               type.equalsIgnoreCase(\"BTEMP2\")) {\n\n        if (buf.isReadable()) {\n            Position position = new Position(getProtocolName());\n            position.setDeviceId(deviceSession.getDeviceId());\n            getLastLocation(position, new Date());\n\n            String[] values = buf.toString(StandardCharsets.US_ASCII).split(\",\");\n            int valueIndex = 0;\n\n            if (type.equalsIgnoreCase(\"BTEMP2\")) {\n                if (Integer.parseInt(values[valueIndex++]) > 0) {\n                    position.set(Position.PREFIX_TEMP + 1, Double.parseDouble(values[valueIndex]));\n                }\n            } else {\n                if (type.equalsIgnoreCase(\"BPHRT\") || type.equalsIgnoreCase(\"BLOOD\")) {\n                    position.set(\"pressureHigh\", values[valueIndex++]);\n                    position.set(\"pressureLow\", values[valueIndex++]);\n                }\n                if (valueIndex <= values.length - 1) {\n                    position.set(Position.KEY_HEART_RATE, Integer.parseInt(values[valueIndex]));\n                }\n            }\n            return position;\n        }\n    } else if (type.equals(\"img\")) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        getLastLocation(position, null);\n\n        int timeIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',');\n        buf.readerIndex(timeIndex + 12 + 2);\n        position.set(Position.KEY_IMAGE, writeMediaFile(id, buf, \"jpg\"));\n        return position;\n    } else if (type.equals(\"JXTK\")) {\n        // ...\u5269\u4f59 the of the. the's the\uc758 YOUR_RESPECTIVE_CODE,\u786e\u4fdd the\u7684 of the the her\u7d22\u5f15 is used correctly ...\n    } else if (type.equals(\"TK\")) {\n        if (buf.readableBytes() == 1) {\n            return null;\n        }\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        getLastLocation(position, null);\n        position.set(Position.KEY_AUDIO, writeMediaFile(id, buf, \"amr\"));\n        return position;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}