{
    "generation": "    URL build() {\n        try {\n            // use the URI class to encode non-ascii in path\n            URI uri = new URI(\n                u.getProtocol(),\n                u.getUserInfo(),\n                IDN.toASCII(decodePart(u.getHost())), // puny-code\n                u.getPort(),\n                decodePart(u.getPath()),\n                null, null // query and fragment appended later so as not to encode\n            );\n\n            String normUrl = uri.toASCIIString();\n            if (q != null || u.getRef() != null) {\n                StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);\n                if (q != null) {\n                    sb.append('?');\n                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);\n                }\n                if (u.getRef() != null) {\n                    sb.append('#');\n                    appendToAscii(u.getRef(), false, sb);\n                }\n                normUrl = StringUtil.releaseBuilder(sb);\n            }\n            u =  new URL(normUrl);\n            return u;\n        } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {\n            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,\n            // the remote end will be able to handle it, so in prod we just pass the original URL.\n            // The UnsupportedEncodingException would never happen as always UTF8\n            assert Validate.assertFail(e.toString());\n            return u;\n        } finally {\n            // Ensure the original URL encoding is preserved\n            if (\"https\".equals(u.getProtocol()) && u.getPath().contains(\"%\")) {\n                // Re-encode the URL path manually\n                StringBuilder encodedBuilder = new StringBuilder(u.getProtocol()).append(\"://\").append(\n//                It seems like the above line is incomplete...\n                re)-encode(u.getHost(), u.getPort());\n                encodedBuilder.append(re)-encodePath(u.getPath()));\n                if (u.getQuery() != null) {\n                    encodedBuilder.append('?').append(re)-encode(u.getQuery()));\n                }\n                if (u.getRef() != null) {\n                    encodedBuilder.append('#').append(re)-encode(u.getRef()));\n                }\n                // This needs better handling to ensure encoding issues do not cause regressions\n                return new URL(encodedBuilder.toString());\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}