{
    "generation": "    URL build() {\n        try {\n            URI uri = new URI(\n                u.getProtocol(),\n                u.getUserInfo(),\n                IDN.toASCII(decodePart(u.getHost())), \n                u.getPort(),\n// buggy code\n//                 decodePart(u.getPath()),\n//                 null, null \n//             );\n//             String normUrl = uri.toASCIIString();\n//             if (q != null || u.getRef() != null) {\n//                 StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);\n//                 if (q != null) {\n//                     sb.append('?');\n//                     appendToAscii(StringUtil.releaseBuilder(q), true, sb);\n//                 }\n//                 if (u.getRef() != null) {\n//                     sb.append('#');\n//                     appendToAscii(u.getRef(), false, sb);\n//                 }\n//                 normUrl = StringUtil.releaseBuilder(sb);\n//             }\n//             u =  new URL(normUrl);\n                                u.getPath(),\n                null, null \n            );\n            String normUrl = uri.toASCIIString();\n            if (q != null || u.getRef() != null) {\n                StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);\n                if (q != null) {\n                    sb.append('?');\n                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);\n                }\n                if (u.getRef() != null) {\n                    sb.append('#');\n                    appendToAscii(u.getRef(), false, sb);\n                }\n                normUrl = StringUtil.releaseBuilder(sb);\n            }\n\n            return u;\n        } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {\n            assert Validate.assertFail(e.toString());\n            return u;\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}