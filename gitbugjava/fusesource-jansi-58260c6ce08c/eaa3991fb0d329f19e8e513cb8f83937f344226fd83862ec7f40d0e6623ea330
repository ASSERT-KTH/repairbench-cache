{
    "generation": "public static Appendable render(final String input, Appendable target) throws IOException {\n\n    int i = 0;\n    int j, k;\n\n    while (true) {\n        j = input.indexOf(BEGIN_TOKEN, i);\n        if (j == -1) {\n            target.append(input.substring(i));\n            return target;\n        }\n        target.append(input.substring(i, j));\n\n        // Look for the END_TOKEN starting right after the BEGIN_TOKEN.\n        k = input.indexOf(END_TOKEN, j + BEGIN_TOKEN_LEN);\n        if (k == -1) {\n            throw new IllegalArgumentException(\"Missing end token '\" + END_TOKEN + \"' for \" + BEGIN_TOKEN +\n                   \" at position \" + j);\n        }\n\n        String spec = input.substring(j + BEGIN_TOKEN_LEN, k);\n        String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);\n        if (items.length != 2) {\n            throw new IllegalArgumentException(\"Invalid tag syntax: '\" + spec +\n                   \"'. Expected format: <codes>\" + CODE_TEXT_SEPARATOR + \"<text>.\");\n        }\n        String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));\n        target.append(replacement);\n\n        i = k + END_TOKEN_LEN;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}