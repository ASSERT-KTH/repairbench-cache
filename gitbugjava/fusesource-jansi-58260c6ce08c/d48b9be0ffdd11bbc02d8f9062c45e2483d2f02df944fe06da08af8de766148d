{
    "generation": "public static Appendable render(final String input, Appendable target) throws IOException {\n    int i = 0, j, k;\n    while (true) {\n        // find next begin\u2010token\n        j = input.indexOf(BEGIN_TOKEN, i);\n        // detect an end\u2010token before any matching begin\u2010token\n        k = input.indexOf(END_TOKEN, i);\n        if (k != -1 && (j == -1 || k < j)) {\n            throw new IllegalArgumentException(\n                \"Found '\" + END_TOKEN + \"' at index \" + k +\n                \" without matching '\" + BEGIN_TOKEN + \"'\");\n        }\n        // no more begin\u2010tokens: append rest and return\n        if (j == -1) {\n            if (i == 0) {\n                target.append(input);\n            } else {\n                target.append(input.substring(i));\n            }\n            return target;\n        }\n        // append text before the begin\u2010token\n        target.append(input.substring(i, j));\n        // locate the corresponding end\u2010token (after the begin\u2010token)\n        int specStart = j + BEGIN_TOKEN_LEN;\n        k = input.indexOf(END_TOKEN, specStart);\n        if (k == -1) {\n            throw new IllegalArgumentException(\n                \"Missing closing token '\" + END_TOKEN +\n                \"' for opening token '\" + BEGIN_TOKEN +\n                \"' at index \" + j);\n        }\n        // extract the spec between the tokens\n        String spec = input.substring(specStart, k);\n        String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);\n        if (items.length == 1) {\n            // no code/text separator, fall back to literal\n            target.append(input);\n            return target;\n        }\n        // render the inner text with the parsed codes\n        String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));\n        target.append(replacement);\n        // advance past the end\u2010token\n        i = k + END_TOKEN_LEN;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}