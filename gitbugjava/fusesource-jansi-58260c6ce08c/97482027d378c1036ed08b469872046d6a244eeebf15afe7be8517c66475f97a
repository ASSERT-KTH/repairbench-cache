{
    "generation": "public static Appendable render(final String input, Appendable target) throws IOException {\n    int i = 0;\n    while (true) {\n        int j0 = input.indexOf(BEGIN_TOKEN, i);\n        // no more begin\u2010tokens\n        if (j0 == -1) {\n            // append remainder (or whole input if we never consumed anything)\n            target.append(input.substring(i));\n            return target;\n        }\n        // if an end\u2010token appears before this begin\u2010token, that's invalid\n        int firstEnd = input.indexOf(END_TOKEN, i);\n        if (firstEnd != -1 && firstEnd < j0) {\n            throw new IllegalArgumentException(\n                \"Invalid format: end token \\\"\" + END_TOKEN + \"\\\" before begin token \\\"\" + BEGIN_TOKEN + \"\\\" at index \" + firstEnd);\n        }\n        // append text up to the begin\u2010token\n        target.append(input.substring(i, j0));\n        // find the matching end\u2010token after the begin\u2010token\n        int specStart = j0 + BEGIN_TOKEN_LEN;\n        int k = input.indexOf(END_TOKEN, specStart);\n        if (k == -1) {\n            throw new IllegalArgumentException(\n                \"Invalid format: no matching end token \\\"\" + END_TOKEN + \"\\\" for begin token at index \" + j0);\n        }\n        // extract the \"code text\" spec between the tokens\n        String spec = input.substring(specStart, k);\n        String[] parts = spec.split(CODE_TEXT_SEPARATOR, 2);\n        if (parts.length != 2) {\n            throw new IllegalArgumentException(\n                \"Invalid format inside tokens: \\\"\" + spec + \"\\\" (expected \\\"<codes>\" + CODE_TEXT_SEPARATOR + \"<text>\\\")\");\n        }\n        // perform the rendering for this segment\n        String replacement = render(parts[1], parts[0].split(CODE_LIST_SEPARATOR));\n        target.append(replacement);\n        // advance past the end\u2010token\n        i = k + END_TOKEN_LEN;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}