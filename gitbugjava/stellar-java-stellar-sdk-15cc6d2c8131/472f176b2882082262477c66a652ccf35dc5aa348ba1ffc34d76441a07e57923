{
    "generation": "  @Override\n  public boolean equals(Object object) {\n    if (this == object) {\n      return true;\n    }\n    if (!(object instanceof KeyPair)) {\n      return false;\n    }\n\n    KeyPair other = (KeyPair) object;\n\n    // mPublicKey should not be null for a valid KeyPair, but check anyway for robustness?\n    // Assuming mPublicKey is guaranteed non-null based on KeyPair structure/creation.\n    // If mPublicKey could be null, Objects.equals should be used here too.\n    if (!this.mPublicKey.equals(other.mPublicKey)) {\n        return false;\n    }\n\n    // Use Objects.equals for null-safe comparison of mPrivateKey\n    // This handles cases where one or both private keys might be null,\n    // which occurs when KeyPair is created from an accountId/publicKey only.\n    return java.util.Objects.equals(this.mPrivateKey, other.mPrivateKey);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}