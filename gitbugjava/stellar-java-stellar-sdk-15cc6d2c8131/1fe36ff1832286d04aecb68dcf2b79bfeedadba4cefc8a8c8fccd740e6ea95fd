{
    "generation": "  @Override\n  public boolean equals(Object object) {\n    if (this == object) { // Optimization: if it's the same instance, they are equal.\n      return true;\n    }\n\n    if (!(object instanceof KeyPair)) {\n      return false; // If the object is null or not a KeyPair instance, they are not equal.\n    }\n\n    KeyPair other = (KeyPair) object;\n\n    // Use Objects.equals for null-safe comparison of mPrivateKey and mPublicKey.\n    // This handles cases where mPrivateKey might be null (e.g., for public-key-only KeyPair instances).\n    // It returns true if both are null, false if one is null and the other is not,\n    // and calls the .equals() method if both are non-null.\n    return java.util.Objects.equals(this.mPrivateKey, other.mPrivateKey) &&\n           java.util.Objects.equals(this.mPublicKey, other.mPublicKey);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}