{
    "generation": "private Object decodeBasic(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    int length = buf.readUnsignedByte();\n    int dataLength = length - 5;\n    int type = buf.readUnsignedByte();\n\n    Position position = new Position(getProtocolName());\n    DeviceSession deviceSession = null;\n    if (type != MSG_LOGIN) {\n        deviceSession = getDeviceSession(channel, remoteAddress);\n        if (deviceSession == null) {\n            return null;\n        }\n        position.setDeviceId(deviceSession.getDeviceId());\n        if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n            deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n        }\n    }\n\n    if (type == MSG_LOGIN) {\n\n        // ... (unchanged)\n\n        return null;\n\n    } else if (type == MSG_HEARTBEAT) {\n\n        // ... (unchanged)\n\n        return position;\n\n    } else if (type == MSG_ADDRESS_REQUEST) {\n\n        // ... (unchanged)\n\n        return null;\n\n    } else if (type == MSG_TIME_REQUEST) {\n\n        // ... (unchanged)\n\n        return null;\n\n    } else if (type == MSG_X1_GPS) {\n\n        // ... (unchanged)\n\n        return position;\n\n    } else if (type == MSG_X1_PHOTO_INFO) {\n\n        // ... (unchanged)\n\n        return null;\n\n    } else if (type == MSG_WIFI || type == MSG_WIFI_2 || type == MSG_WIFI_4) {\n\n        // ... (unchanged)\n\n        return position;\n\n    } else if (type == MSG_INFO) {\n\n        // ... (unchanged)\n\n        return position;\n\n    } else if (type == MSG_LBS_MULTIPLE_3 && variant == Variant.SR411_MINI) {\n\n        // ... (unchanged)\n\n        return position;\n\n    } else if (type == MSG_LBS_MULTIPLE_1 || type == MSG_LBS_MULTIPLE_2 || type == MSG_LBS_MULTIPLE_3\n            || type == MSG_LBS_EXTEND || type == MSG_LBS_WIFI || type == MSG_LBS_2\n            || type == MSG_WIFI_3 || type == MSG_WIFI_5) {\n\n        // ... (unchanged up to network.set)\n\n    } else if (type == MSG_STRING) {\n\n        // ... (unchanged)\n\n    } else if (type == MSG_BMS) {\n\n        // ... (unchanged)\n\n        return position;\n\n    } else if (type == MSG_STATUS && buf.readableBytes() == 22) {\n\n        // ... (unchanged)\n\n    } else if (isSupported(type)) {\n\n        // ... (unchanged)\n\n    } else if (type == MSG_ALARM) {\n\n        // --------------------------------------------------------------------\n        // FIXED MSG_ALARM PARSING: skip when there's no payload and guard all reads\n        // --------------------------------------------------------------------\n        if (dataLength <= 0) {\n            // nothing to parse\n            return null;\n        }\n        boolean extendedAlarm = dataLength > 7;\n        if (extendedAlarm) {\n            // GPS\u2010style alarm\n            decodeGps(position, buf, false, false, false,\n                      (TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE));\n        } else if (buf.readableBytes() >= 6) {\n            // time\u2010style alarm\n            DateBuilder dateBuilder = new DateBuilder(\n                    (TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                    .setDate(buf.readUnsignedByte(),\n                             buf.readUnsignedByte(),\n                             buf.readUnsignedByte())\n                    .setTime(buf.readUnsignedByte(),\n                             buf.readUnsignedByte(),\n                             buf.readUnsignedByte());\n            getLastLocation(position, dateBuilder.getDate());\n        }\n        if (buf.readableBytes() >= 1) {\n            short alarmType = buf.readUnsignedByte();\n            switch (alarmType) {\n                case 0x01:\n                    position.set(Position.KEY_ALARM,\n                            extendedAlarm ? Position.ALARM_SOS\n                                          : Position.ALARM_GENERAL);\n                    break;\n                case 0x80:\n                    position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n                    break;\n                case 0x87:\n                    position.set(Position.KEY_ALARM, Position.ALARM_OVERSPEED);\n                    break;\n                case 0x90:\n                    position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                    break;\n                case 0x91:\n                    position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                    break;\n                case 0x92:\n                    position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                    break;\n                case 0x93:\n                    position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n                    break;\n                default:\n                    position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n                    break;\n            }\n        }\n        // Acknowledge and return\n        sendResponse(channel, false, type,\n                buf.getShort(buf.writerIndex() - 6), null);\n        return position;\n\n    } else {\n\n        // ... (fallback unchanged)\n        if (dataLength > 0) {\n            buf.skipBytes(dataLength);\n        }\n        if (type != MSG_COMMAND_0\n         && type != MSG_COMMAND_1\n         && type != MSG_COMMAND_2) {\n            sendResponse(channel, false, type,\n                    buf.getShort(buf.writerIndex() - 6), null);\n        }\n        return null;\n    }\n\n    // ------------------------------------------------------------------------\n    // FINAL OPTIONAL FIELDS (language / geofence) \u2013 guarded against underflow\n    // ------------------------------------------------------------------------\n    if (hasLanguage(type) && buf.readableBytes() >= 2) {\n        buf.readUnsignedShort();\n    }\n    if ((type == MSG_GPS_LBS_STATUS_3 || type == MSG_FENCE_MULTI)\n            && buf.readableBytes() >= 1) {\n        position.set(Position.KEY_GEOFENCE,\n                     buf.readUnsignedByte());\n    }\n\n    sendResponse(channel, false, type,\n            buf.getShort(buf.writerIndex() - 6), null);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}