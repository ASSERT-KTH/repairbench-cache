{
    "generation": "private void moveClassLevelUp(Outline outline, JDefinedClass clazz) {\n\t// Modify the container so it now refers the class. Container can be a class or package.\n\tJDefinedClass parent = (JDefinedClass) clazz.parentContainer();\n\tJClassContainer grandParent = parent.parentContainer();\n\t// Allows to track class name collisions:\n\tMap<String, JDefinedClass> classes;\n\n\t// Start Tracking members\n\tMap<String, ?> members;\n\n\t// Phase1: Populate maps:\n\n\t// Pending https://java.net/jira/browse/JAXB-957\n\tif (grandParent.isClass()) {\n\t\t// Element class should be added as its container child:\n\t\tJDefinedClass grandParentClass = (JDefinedClass) grandParent;\n\n\t\twriteSummary(\"\\tMoving inner class \" + clazz.fullName() + \" to class \" + grandParentClass.fullName());\n\n\t\tclasses = getPrivateField(grandParentClass, \"classes\");\n\t\tmembers = getPrivateField(grandParentClass, \"members\");\n\n\t\tfor (String name : clazz.members()) {\n\t\t\t// Skip \"this\" and rename already present ones.\n\t\t\tif (!name.equals(\"this\") && members.containsKey(name)) {\n\t\t\t\twriteSummary(\"\\tRenaming member \" + name + \" under \" + grandParentClass + \" to \" + name + clazz.name());\n\t\t\t\tsetPrivateField(members, name, clazz.fullName());\n\t\t\t}\n\t\t}\n\t} else {\n\t\tJPackage grandParentPackage = (JPackage) grandParent;\n\n\t\twriteSummary(\"\\tMoving inner class \" + clazz.fullName() + \" to package \" + grandParentPackage.name());\n\n\t\tclasses = getPrivateField(grandParentPackage, \"classes\");\n\t\tmembers = getPrivateField(grandParentPackage, \"members\");\n\n\t\t// In this scenario class should have \"static\" modifier reset otherwise it won't compile:\n\t\tsetPrivateField(clazz.mods(), \"mods\", Integer.valueOf(clazz.mods().getValue() & ~JMod.STATIC));\n\n\t\tfor (ClassOutline classOutline : outline.getClasses()) {\n\t\t\tif (classOutline.implClass == clazz) {\n\t\t\t\tXSComponent sc = classOutline.target.getSchemaComponent();\n\n\t\t\t\t// FIXME: Inner class is always a local declaration.\n\t\t\t\tassert (sc instanceof XSDeclaration && ((XSDeclaration) sc).isLocal());\n\n\t\t\t\tsetPrivateField(sc, \"anonymous\", Boolean.FALSE);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (classes.containsKey(clazz.name())) {\n\t\twriteSummary(\"\\tRenaming class \" + clazz.fullName() + \" to class \" + parent.name() + clazz.name());\n\t\tsetPrivateField(clazz, \"name\", parent.name() + clazz.name());\n\t}\n\n\tclasses.put(clazz.name(), clazz);\n\n\t// Finally modify the class so that it refers back the container:\n\tsetPrivateField(clazz, \"outer\", grandParent);\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}