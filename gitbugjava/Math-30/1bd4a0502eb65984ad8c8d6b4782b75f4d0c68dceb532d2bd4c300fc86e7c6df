{
    "generation": "    /**\n     * @param Umin smallest Mann-Whitney U value\n     * @param n1 number of subjects in first sample\n     * @param n2 number of subjects in second sample\n     * @return two-sided asymptotic p-value\n     * @throws ConvergenceException if the p-value can not be computed\n     * due to a convergence error\n     * @throws MaxCountExceededException if the maximum number of\n     * iterations is exceeded\n     */\n    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        // Use long to prevent overflow in intermediate calculation n1 * n2\n        final long n1n2prod = (long) n1 * n2;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n\n        // Compute variance: Var(U) = n1 * n2 * (n1 + n2 + 1) / 12\n        // Use double arithmetic from the start for the sum part to avoid potential long overflow\n        // if n1 + n2 + 1 is very large, although n1 and n2 are int, their sum fits long.\n        // The product n1n2prod * (n1+n2+1) could exceed Long.MAX_VALUE. Use double arithmetic.\n        final double n1PlusN2Plus1 = (double) n1 + n2 + 1.0;\n        final double VarU = n1n2prod * n1PlusN2Plus1 / 12.0;\n\n        // Handle degenerate case VarU = 0 (e.g., n1=0 or n2=0)\n        // Return p-value 1.0 (no evidence against H0)\n        if (VarU <= 0.0) {\n            return 1.0;\n        }\n\n        final double sqrtVarU = FastMath.sqrt(VarU);\n        final double z = (Umin - EU) / sqrtVarU;\n\n        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        // P-value is P(|Z| >= |z|) = 2 * P(Z >= |z|) = 2 * P(Z <= -|z|)\n        // Use -abs(z) for the cumulative probability calculation\n        return 2 * standardNormal.cumulativeProbability(-FastMath.abs(z));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}