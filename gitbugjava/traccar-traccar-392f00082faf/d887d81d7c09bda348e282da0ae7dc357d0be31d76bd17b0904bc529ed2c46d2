{
    "generation": "private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n    List<Position> positions = new LinkedList<>();\n\n    buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);\n    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n    buf.skipBytes(1 + 3 + 1);\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    buf.readUnsignedIntLE(); // remaining cache\n    int count = buf.readUnsignedShortLE();\n\n    for (int i = 0; i < count; i++) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedShortLE(); // length\n        buf.readUnsignedShortLE(); // index\n\n        int paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            switch (id) {\n                case 0x01:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                    break;\n                case 0x05:\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    break;\n                case 0x06:\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                    break;\n                case 0x07:\n                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                    break;\n                case 0x14:\n                    position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n                    break;\n                case 0x15:\n                    position.set(Position.KEY_INPUT, buf.readUnsignedByte());\n                    break;\n                case 0x1C:\n                    // \u65b0\u589e\u7684case\u5904\u7406\u9501\u7684\u72b6\u6001\n                    position.set(Position.KEY_LOCK, buf.readUnsignedByte() != 0);\n                    break;\n                case 0xFE69:\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    break;\n                default:\n                    buf.readUnsignedByte();\n                    break;\n            }\n        }\n\n        // \u540e\u7eed\u7684\u5faa\u73af\u548c\u5176\u4ed6\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            switch (id) {\n                // \u5df2\u6709\u7684case\u5904\u7406\u8bed\u53e5\n                case 0x08: position.setSpeed(...); break;\n                // \u5176\u4ed6case...\n                default:\n                    buf.readUnsignedByte()\u5982\u679c\u662f\u6269\u5c55\u7684\uff1f\u6216\u8005\u539f\u6709\u903b\u8f91\u53ef\u80fd\u6709\u8bef\uff1f\n                // \u73b0\u6709\u4ee3\u7801\u4e2d\u7684\u903b\u8f91\u5982\u4f55\u5904\u7406\u5176\u4ed6\u60c5\u51b5\uff1f\n                // \u6ce8\u610f\uff1a \u539f\u903b\u8f91\u7684default case here: buf\u4e4b\u524d\u6709case\u7684\u5904\u7406\u65f6\u662f\u5426\u8df3\u8fc7\u6b63\u786e\u6570\u91cf\u7684 bytes\uff1f\u53ef\u80fd\u5176\u4ed6case\u7684\u95ee\u9898\uff1f\n\n            }\n        }\n\n        // ... \u5176\u4f59\u7684\u53c2\u6570\u5faa\u73af\u672a\u4fee\u6539 ...\n    }\n\n    return positions;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}