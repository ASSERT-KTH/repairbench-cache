{
    "generation": "private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n    List<Position> positions = new LinkedList<>();\n\n    buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);\n    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n    buf.skipBytes(1 + 3 + 1);\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    buf.readUnsignedIntLE(); // remaining cache\n    int count = buf.readUnsignedShortLE();\n\n    for (int i = 0; i < count; i++) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedShortLE(); // length\n        buf.readUnsignedShortLE(); // index\n\n        int paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            switch (id) {\n                case 0x01:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                    break;\n                case 0x05:\n                    position.setValid(buf.readUnsignedByte() > 0);\n                    break;\n                case 0x06:\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    break;\n                case 0x07:\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                    break;\n                case 0x14:\n                    position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n                    break;\n                case 0x15:\n                    int input = buf.readUnsignedByte();\n                    position.set(Position.KEY_INPUT, input);\n                    // \u8bbe\u7f6e\u9501\u5b9a\u72b6\u6001\uff0c\u82e5\u8f93\u5165\u503c\u7684\u6700\u9ad8\u4f4d\uff08\u7b2c\u4e03\u4f4d\uff09\u8bbe\u5b9a\u4e86\n                    position.set(Position.KEY_LOCK, (input & 0x80) != 0);\n                    break;\n                case 0x97:\n                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                    break;\n                case 0x9D:\n                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                    break;\n                case 0xFE69:\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    break;\n                default:\n                    buf.readUnsignedByte();\n                    break;\n            }\n        }\n\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            switch (id) {\n                case 0x08:\n                    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                    break;\n                case 0x09:\n                    position.setCourse(buf.readUnsignedShortLE());\n                    break;\n                case 0x0A:\n                    position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());\n                    break;\n                case 0x0B:\n                    position.setAltitude(buf.readShortLE());\n                    break;\n                case 0x16:\n                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShortLE() * 0.01);\n                    break;\n                case 0x19:\n                    position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);\n                    break;\n                case 0x1A:\n                    position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);\n                    break;\n                case 0x40:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());\n                    break;\n                case 0x91:\n                case 0x92:\n                    position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShortLE());\n                    break;\n                case 0x98:\n                    position.set(Position.KEY_FUEL_USED, buf.readUnsignedShortLE());\n                    break;\n                case 0x99:\n                    position.set(Position.KEY_RPM, buf.readUnsignedShortLE());\n                    break;\n                case 0x9C:\n                    position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShortLE());\n                    break;\n                case 0x9F:\n                    position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShortLE());\n                    break;\n                case 0xC9:\n                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShortLE());\n                    break;\n                default:\n                    buf.readUnsignedShortLE();\n                    break;\n            }\n        }\n\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            switch (id) {\n                case 0x02:\n                    position.setLatitude(buf.readIntLE() * 0.000001);\n                    break;\n                case 0x03:\n                    position.setLongitude(buf.readIntLE() * 0.000001);\n                    break;\n                case 0x04:\n                    position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000)); // 2000-01-01 timestamp\n                    break;\n                case 0x0C:\n                case 0x9B:\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                    break;\n                case 0x0D:\n                    position.set(\"runtime\", buf.readUnsignedIntLE());\n                    break;\n                case 0x25:\n                    position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readUnsignedIntLE()));\n                    break;\n                case 0xA0:\n                    position.set(Position.KEY_FUEL_USED, buf.readUnsignedIntLE() * 0.001);\n                    break;\n                case 0xA2:\n                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedIntLE() * 0.01);\n                    break;\n                default:\n                    // \u5982\u679c\u672a\u8ba4\u771f\u7684\u7684\u53c3\u6c34 number, \u8df3\u904e\u5176's\u503c (\u9700\u53604 bytes in third param loop)\n                    buf.readUnsignedIntLE();\n                    break;\n            }\n        }\n\n        // \u7b2c\u56db\u6279\u53c2\u6570\u5904\u7406\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            int length = buf.readUnsignedByte();  // \u5f53\u524d\u53c2\u6570\u6570\u636e\u7684\u957f\u5ea6\n\n            switch (id) {\n                case 0x2A:\n                case 0x2B:\n                case 0x2C:\n                case 0x2D:\n                case 0x2E:\n                case 0x2F:\n                case 0x30:\n                case 0x31:\n                    // \u53c2\u8003\u9762\u677f includes a 1-byte label followed by 2-byte data\n                    int label = buf.readUnsignedByte();\n                    int data = buf.readShortLE();\n                    position.set(Position.PREFIX_TEMP + (id - 0x2A), data * 0.01);\n                    break;\n                case 0xFE31:\n                    // \u62a5\u8b66\u53c2\u6570: \u534f\u8bae\uff081 byte\uff09+ \u7c7b\u578b\uff081 byte\uff09\n                    // \u5982\u679c\u62a5\u8b66\u7c7b\u578b\u662f 0x01 \uff08\u4f8b\u5982\u8868\u793a\u8bbe\u5907\u88ab\u9501\u5b9a\uff09\n                    int alarmProtocol = buf.readUnsignedByte();\n                    int alarmType = buf.readUnsignedByte();\n                    if (alarmType == 0x01) {\n                        position.set(Position.KEY_LOCK, true);\n                    }\n                    // \u8df3\u8fc7\u5269\u4f59\uff08length-2\uff09 bytes of the\u306e parameter data\n                    buf.skipBytes(length - 2);\n                    break;\n                default:\n                    // \u8df3\u8fc7\u8be5\u53c2\u6570\u7684\u5269\u4f59\u6570\u636e\uff08\u5df2\u6709 length \u5b57\u8282\uff09\n                    buf.skipBytes(length);\n                    break;\n            }\n        }\n\n        positions.add(position);\n    }\n\n    return positions;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}