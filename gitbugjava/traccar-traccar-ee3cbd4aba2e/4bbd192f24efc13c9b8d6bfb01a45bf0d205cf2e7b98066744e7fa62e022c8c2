{
    "generation": "    private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);\n        position.setValid(type != MSG_LOCATION_REPORT_BLIND);\n\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);\n\n        int battery = buf.readUnsignedByte();\n        if (battery <= 100) {\n            position.set(Position.KEY_BATTERY_LEVEL, battery);\n        } else if (battery == 0xAA) {\n            position.set(Position.KEY_CHARGE, true);\n        }\n\n        position.setNetwork(new Network(CellTower.fromCidLac(\n                getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));\n\n        int product = buf.readUnsignedByte();\n        int status = buf.readUnsignedShort();\n        int alarm = buf.readUnsignedShort();\n\n        if (product == 1 || product == 2) {\n            if (BitUtil.check(alarm, 0)) {\n                position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n            }\n        } else if (product == 3) {\n            position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));\n            if (BitUtil.check(alarm, 1)) {\n                position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n            }\n            if (BitUtil.check(alarm, 2)) {\n                position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n            }\n            if (BitUtil.check(alarm, 3)) {\n                position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n            }\n        }\n\n        position.set(Position.KEY_STATUS, status);\n\n        if (deviceSession.getDeviceName() != null && deviceSession.getDeviceName().contains(\"JT600\")) {\n            while (buf.readableBytes() > 2) {\n                int id = buf.readUnsignedByte();\n                int length = buf.readUnsignedByte();\n                switch (id) {\n                    case 0x02:\n                        position.set(Position.KEY_TEMP, buf.readShort() / 10.0);\n                        break;\n                    case 0x04:\n                        if (length > 2) {\n                            int[] gyro = new int[3];\n                            for (int i = 0; i < gyro.length; i++) {\n                                gyro[i] = buf.readShort() & 0xffff;\n                                if ((gyro[i] & (1 << 15)) != 0) {\n                                    gyro[i] -= 1 << 16;\n                                }\n                            }\n                            position.set(Position.KEY_GYRO, gyro);\n                        }\n                        break;\n                    default:\n                        buf.skipBytes(length);\n                        break;\n                }\n            }\n        } else {\n            while (buf.readableBytes() > 2) {\n                int id = buf.readUnsignedByte();\n                int length = buf.readUnsignedByte();\n                switch (id) {\n                    case 0x02:\n                        position.setAltitude(buf.readShort());\n                        break;\n                    case 0x0C:\n                        position.set(\"gyro\", ByteBufUtil.hexDump(buf.readSlice(6)));\n                        break;\n                    default:\n                        buf.skipBytes(length);\n                        break;\n                }\n            }\n        }\n\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}