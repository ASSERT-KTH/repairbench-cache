{
    "generation": "private Object decodeLocationNew(\n        Channel channel, SocketAddress remoteAddress, String sentence) {\n\n    Parser parser = new Parser(PATTERN_NEW, sentence);\n    if (!parser.matches()) {\n        return null;\n    }\n\n    String imei = parser.next();\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    String index = parser.next();\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(parser.nextInt()));\n\n    position.setDeviceTime(parser.nextDateTime());\n\n    Network network = new Network();\n    network.addCellTower(CellTower.from(\n            parser.nextInt(), parser.nextInt(), parser.nextHexInt(), parser.nextHexInt()));\n\n    position.set(Position.KEY_BATTERY, parser.nextDouble());\n    position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt());\n    position.set(Position.KEY_STATUS, parser.nextHexInt());\n\n    if (parser.hasNext(5)) {\n\n        position.setValid(parser.next().equals(\"A\"));\n        position.setFixTime(position.getDeviceTime());\n        position.set(Position.KEY_SATELLITES, parser.nextInt());\n        position.setSpeed(UnitsConverter.knotsFromKph(parser.nextInt()));\n        position.setLatitude(parser.nextDouble());\n        position.setLongitude(parser.nextDouble());\n\n    } else {\n\n        // always read next string (wifi or satellite and gps info)\n        String wifiOrGps = parser.next();\n\n        if (wifiOrGps.contains(\":\")) {\n            // it's WiFi info\n            String[] points = wifiOrGps.split(\"\\\\|\");\n            for (String point : points) {\n                String[] wifi = point.split(\":\");\n                String mac = wifi[0].replaceAll(\"(..)\", \"$1:\");\n                network.addWifiAccessPoint(WifiAccessPoint.from(\n                        mac.substring(0, mac.length() - 1), Integer.parseInt(wifi[1])));\n            }\n        } else {\n            // it's satelliteCount,speed,lat,lon data\n            String[] tokens = wifiOrGps.split(\",\");\n            if (tokens.length >= 4) {\n                try {\n                    position.setValid(true);\n                    position.setFixTime(position.getDeviceTime());\n                    position.set(Position.KEY_SATELLITES, Integer.parseInt(tokens[0]));\n                    position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(tokens[1])));\n                    position.setLatitude(Double.parseDouble(tokens[2]));\n                    position.setLongitude(Double.parseDouble(tokens[3]));\n                } catch (NumberFormatException e) {\n                    // ignore parse errors and keep no location\n                }\n            }\n        }\n    }\n\n    position.setNetwork(network);\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyMMddHHmmss\");\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    String response = index + \",A03,\" + dateFormat.format(new Date());\n    sendResponse(channel, remoteAddress, imei, response);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}