{
    "generation": "// In TextNode.java, replace the existing outerHtmlHead with this fixed version:\n@Override\nvoid outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n    final boolean prettyPrint = out.prettyPrint();\n    final Element parent = parentNode instanceof Element ? (Element) parentNode : null;\n    final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n\n    boolean trimLeading = false;\n    boolean trimTrailing = false;\n    if (normaliseWhite) {\n        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock())\n            || parentNode instanceof Document;\n        trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();\n\n        // decide whether to skip this blank text node entirely:\n        Node next = nextSibling();\n        Node prev = previousSibling();\n        boolean isBlank = isBlank();\n        boolean skip = isBlank && (\n            // before a node that will indent\n            (next instanceof Element && ((Element) next).shouldIndent(out))\n            // or before another blank text node\n            || (next instanceof TextNode && ((TextNode) next).isBlank())\n            // or immediately after a block-level element that just indented\n            || (prev instanceof Element && ((Element) prev).shouldIndent(out))\n        );\n        if (skip) {\n            return;\n        }\n\n        // now handle indenting of non-blank text nodes\n        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank)\n         || (out.outline() && siblingNodes().size() > 0 && !isBlank)\n         || (siblingIndex > 0 && prev instanceof Element\n             && ((Element) prev).normalName().equals(\"br\"))\n        ) {\n            indent(accum, depth, out);\n        }\n    }\n\n    Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}