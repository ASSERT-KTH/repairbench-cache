{
    "generation": "void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n    final boolean prettyPrint = out.prettyPrint();\n    final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;\n    final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n\n    boolean trimLeading = false;\n    boolean trimTrailing = false;\n    if (normaliseWhite) {\n        // Only trim leading whitespace if NOT following a custom (unknown) tag;\n        // For https://github.com/jhy/jsoup/issues/1852, avoid removing whitespace after a custom element\n        boolean followsCustomTag = false;\n        if (siblingIndex > 0 && parent != null) {\n            Node prev = previousSibling();\n            if (prev instanceof Element) {\n                Element prevEl = (Element) prev;\n                if (prevEl.tag().isUnknown()) {\n                    // custom (unknown) tag\n                    followsCustomTag = true;\n                }\n            }\n        }\n\n        trimLeading = ((siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||\n            parentNode instanceof Document)\n            && !followsCustomTag;\n\n        trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();\n\n        Node next = nextSibling();\n        boolean isBlank = isBlank();\n        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))\n            || (next instanceof TextNode && (((TextNode) next).isBlank()));\n        if (couldSkip && isBlank) return;\n\n        Node prev = previousSibling();\n        if (\n            (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||\n            (out.outline() && siblingNodes().size() > 0 && !isBlank) ||\n            (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals(\"br\"))\n        )\n            indent(accum, depth, out);\n    }\n\n    Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}