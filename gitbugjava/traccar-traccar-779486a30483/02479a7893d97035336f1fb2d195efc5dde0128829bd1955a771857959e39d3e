{
    "generation": "protected Object decodeAvrmc(\n        String sentence, Channel channel, SocketAddress remoteAddress) {\n\n    // Only handle AVRMC sentences\n    if (sentence == null || !sentence.startsWith(\"$AVRMC,\")) {\n        return null;\n    }\n\n    // Strip checksum and split on commas\n    int asterisk = sentence.indexOf('*');\n    String body = (asterisk > 0) ? sentence.substring(0, asterisk) : sentence;\n    String[] parts = body.split(\",\");\n\n    // We need at least up to the date field (index 10)\n    if (parts.length < 11) {\n        return null;\n    }\n\n    // Device session\n    String id = parts[1];\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, id);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    // Prepare position\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    // Parse time hhmmss\n    String time = parts[2];\n    int hour = 0, minute = 0, second = 0;\n    if (time.length() >= 6) {\n        hour = Integer.parseInt(time.substring(0, 2));\n        minute = Integer.parseInt(time.substring(2, 4));\n        second = Integer.parseInt(time.substring(4, 6));\n    }\n\n    // Parse date ddmmyy\n    String date = parts[10];\n    int day = 0, month = 0, year = 0;\n    if (date.length() == 6) {\n        day = Integer.parseInt(date.substring(0, 2));\n        month = Integer.parseInt(date.substring(2, 4));\n        year = Integer.parseInt(date.substring(4, 6));\n    }\n\n    // Build timestamp\n    DateBuilder dateBuilder = new DateBuilder()\n            .setTime(hour, minute, second)\n            .setDateReverse(day, month, year);\n    position.setTime(dateBuilder.getDate());\n\n    // Validity flag\n    String status = parts[3];\n    boolean valid = \"A\".equalsIgnoreCase(status)\n            || \"R\".equalsIgnoreCase(status)\n            || \"P\".equalsIgnoreCase(status);\n    position.setValid(valid);\n    position.set(Position.KEY_STATUS, status);\n\n    // Latitude\n    double latitude = 0;\n    String latPart = parts[4];\n    String latHem = parts[5];\n    if (!latPart.isEmpty()) {\n        double raw = Double.parseDouble(latPart);\n        int deg = (int) (raw / 100);\n        double min = raw - deg * 100;\n        latitude = deg + min / 60;\n        if (\"S\".equalsIgnoreCase(latHem)) {\n            latitude = -latitude;\n        }\n    }\n    position.setLatitude(latitude);\n\n    // Longitude\n    double longitude = 0;\n    String lonPart = parts[6];\n    String lonHem = parts[7];\n    if (!lonPart.isEmpty()) {\n        double raw = Double.parseDouble(lonPart);\n        int deg = (int) (raw / 100);\n        double min = raw - deg * 100;\n        longitude = deg + min / 60;\n        if (\"W\".equalsIgnoreCase(lonHem)) {\n            longitude = -longitude;\n        }\n    }\n    position.setLongitude(longitude);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}