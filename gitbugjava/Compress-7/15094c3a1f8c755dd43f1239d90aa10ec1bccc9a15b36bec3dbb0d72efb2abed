{
    "generation": "import java.io.UnsupportedEncodingException;\nimport java.nio.charset.StandardCharsets;\n\n    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        int len = 0;\n        // Find the length of the string up to the first NUL or the maximum length.\n        for (int i = offset; i < offset + length && len < length; ++i) {\n            if (buffer[i] == 0) {\n                break; // Stop at NUL\n            }\n            len++;\n        }\n\n        if (len <= 0) {\n             return \"\";\n        }\n\n        // Tar file names are traditionally encoded in ASCII or ISO-8859-1.\n        // Using ISO-8859-1 ensures that all byte values (0-255) are preserved,\n        // mapping directly to Unicode code points U+0000 to U+00FF.\n        // This addresses issues where direct byte-to-char casting fails for bytes > 127.\n        // Modern tars might use UTF-8 via PAX headers, but this utility function likely\n        // handles the raw header block where ISO-8859-1 is a safer assumption\n        // if no other encoding context is provided.\n        try {\n            // Use StandardCharsets constants for better readability and guaranteed availability\n            // Although \"ISO-8859-1\" string is also guaranteed by Java spec.\n             return new String(buffer, offset, len, \"ISO-8859-1\");\n        } catch (UnsupportedEncodingException e) {\n             // This should technically never happen, as ISO-8859-1 is required by JVM spec.\n             // Rethrow as a runtime exception if it does for some reason.\n             throw new RuntimeException(\"ISO-8859-1 encoding not supported\", e);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}