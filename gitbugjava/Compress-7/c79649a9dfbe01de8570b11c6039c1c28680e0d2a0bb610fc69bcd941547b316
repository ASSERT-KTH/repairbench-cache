{
    "generation": "import java.nio.charset.StandardCharsets;\n\n    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     * <p>\n     * Historically, tar files were restricted to ASCII filenames, but modern\n     * implementations often encode filenames using UTF-8 or the platform's\n     * default encoding. However, the simplest and most robust way to round-trip\n     * filenames is often to treat them as sequences of bytes using an encoding\n     * like ISO-8859-1, which maps every possible byte value to a unique Unicode\n     * code point. This method adopts the ISO-8859-1 approach.\n     * </p>\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        // In contrast to the formatName function which truncates names\n        // that are too long, this method stops reading at the first NUL.\n        // Scan the buffer for the first NUL byte.\n        int len = 0;\n        for (int i = offset; len < length && i < buffer.length; ++i, ++len) {\n            if (buffer[i] == 0) {\n                break;\n            }\n        }\n\n        if (len == 0) {\n            return \"\";\n        }\n        \n        // Use ISO-8859-1 encoding. This encoding maps each byte (0-255)\n        // directly to a Unicode code point (U+0000 to U+00FF).\n        // This is crucial for correctly handling non-ASCII characters\n        // often found in tar archives created on different systems,\n        // and avoids issues caused by platform default encodings or\n        // direct casting of bytes (which involves sign extension).\n        return new String(buffer, offset, len, StandardCharsets.ISO_8859_1);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}