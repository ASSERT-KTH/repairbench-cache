{
    "generation": "    /**\n     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n     * @param tableau simple tableau for the problem\n     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n     * @return row with the minimum ratio\n     */\n    private Integer getPivotRow(final int col, final SimplexTableau tableau) {\n        double minRatio = Double.MAX_VALUE;\n        Integer minRatioPos = null;\n        for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n\n            // Check if the entry in the pivot column is strictly positive\n            // (allowing for floating point inaccuracies)\n            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final double ratio = rhs / entry;\n                // Compare the ratio with the current minimum ratio using floating point comparison\n                final int cmp = Double.compare(ratio, minRatio);\n                if (cmp < 0) {\n                    // This row has a strictly smaller ratio\n                    minRatio = ratio;\n                    minRatioPos = i;\n                } else if (cmp == 0) {\n                    // This row has a ratio equal to the current minimum.\n                    // Apply a tie-breaking rule (like Bland's rule principle):\n                    // choose the row with the smaller index to help prevent cycling.\n                    // Note: This assumes that the initial basis variables (e.g., slacks)\n                    // are ordered according to row index.\n                    if (minRatioPos != null && i < minRatioPos) {\n                         minRatioPos = i;\n                         // minRatio remains the same\n                    }\n                }\n                // else (cmp > 0), current ratio is larger, do nothing\n            }\n        }\n        return minRatioPos;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}