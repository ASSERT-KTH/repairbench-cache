{
    "generation": "    /**\n     * Removes the phase 1 objective function, positive cost non-artificial variables,\n     * and the non-basic artificial variables from this tableau.\n     */\n    protected void dropPhase1Objective() {\n        if (getNumObjectiveFunctions() == 1) {\n            return;\n        }\n\n        List<Integer> columnsToDrop = new ArrayList<Integer>();\n        // Do not drop column 0, which is often the RHS or objective value column in some tableau representations,\n        // or the first variable column. In this implementation's context (based on createTableau),\n        // dropping it unconditionally seems incorrect and was identified as a bug (MATH-781).\n        // columnsToDrop.add(0); // Buggy line removed\n\n        // identify positive cost non-artificial variables that are non-basic\n        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n            final double entry = tableau.getEntry(0, i);\n            // Drop the column only if the variable is non-basic and has a positive cost\n            if (Precision.compareTo(entry, 0d, maxUlps) > 0 && getBasicRow(i) == null) {\n                columnsToDrop.add(i);\n            }\n        }\n\n        // identify non-basic artificial variables\n        for (int i = 0; i < getNumArtificialVariables(); i++) {\n          int col = i + getArtificialVariableOffset();\n          if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n          }\n        }\n\n        // Create the new matrix without the phase 1 objective row (row 0) and the identified columns\n        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n        for (int i = 1; i < getHeight(); i++) { // Start from row 1 to skip phase 1 objective\n          int newCol = 0;\n          for (int j = 0; j < getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n              matrix[i - 1][newCol++] = tableau.getEntry(i, j);\n            }\n          }\n        }\n\n        // Update column labels, removing the labels for the dropped columns\n        // Iterate backwards to avoid index issues after removal\n        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n          // Use intValue() for clarity, although autoboxing/unboxing handles (int) too\n          columnLabels.remove(columnsToDrop.get(i).intValue());\n        }\n\n        // Update the tableau state\n        this.tableau = new Array2DRowRealMatrix(matrix);\n        this.numArtificialVariables = 0; // Phase 1 is done, no more artificial variables needed\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}