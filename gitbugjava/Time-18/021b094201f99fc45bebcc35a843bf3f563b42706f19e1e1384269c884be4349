{
    "generation": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        long instant;\n        try {\n            // Try Gregorian calculation first. Handles dates strictly after the cutover.\n            instant = iGregorianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n\n            // If the calculated instant is STRICTLY before the cutover,\n            // it is either a valid Julian date or falls into the gap.\n            if (instant < iCutoverMillis) {\n                // It's before the cutover, so recalculate using Julian chronology.\n                // This corrects for dates that are valid in both calendars but occurred before the cutover.\n                instant = iJulianChronology.getDateTimeMillis\n                    (year, monthOfYear, dayOfMonth,\n                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                // If the Julian instant is on or after the cutover, the date is invalid (gap).\n                 if (instant >= iCutoverMillis) {\n                    // The date is valid Gregorian before the cutover but Julian after or on the cutover\n                    throw new IllegalArgumentException(\"Specified date does not exist\");\n                 }\n                 // Otherwise, it's a valid Julian date before the cutover.\n            }\n            // If the Gregorian instant was >= cutoverMillis, it's a valid Gregorian date post-cutover.\n            // The value in 'instant' is correct.\n\n        } catch (IllegalArgumentException e) {\n            // The Gregorian calculation failed.\n            // This can happen if the date is invalid Gregorian (e.g., Feb 29 in non-leap Gregorian year)\n            // OR if it's in the Gregorian cutover gap (e.g., 1582-10-10).\n            // Try the calculation using Julian.\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n\n            // If the Julian calculation succeeds, check if the instant is before the cutover.\n            // If it's on or after the cutover, it means the date is valid in Julian but not Gregorian,\n            // and occurs chronologically after the cutover started, so it's in the gap.\n            if (instant >= iCutoverMillis) {\n                // Input date is valid Julian, but not valid Gregorian, and is after the cutover.\n                // Must be in the gap.\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n            // Otherwise, the date is valid Julian and occurred before the cutover.\n            // The value in 'instant' is correct.\n        }\n\n        // Return the calculated instant (either Julian pre-cutover or Gregorian post-cutover)\n        return instant;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}