{
    "generation": "@Override\n    protected Object decode(\n            Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n        String sentence = (String) msg;\n\n        if (sentence.startsWith(\"!1,\")) {\n            int index = sentence.indexOf(',', 3);\n            if (index < 0) {\n                index = sentence.length();\n            }\n            getDeviceSession(channel, remoteAddress, sentence.substring(3, index));\n            return null;\n        }\n\n        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);\n        if (deviceSession == null || !sentence.matches(\"![35A-D],.*\")) {\n            return null;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        String type = sentence.substring(1, 2);\n        position.set(Position.KEY_TYPE, type);\n\n        if (type.equals(\"3\")) {\n\n            getLastLocation(position, position.getFixTime());\n\n            position.set(Position.KEY_RESULT, sentence.substring(3));\n\n            return position;\n\n        } else if (type.equals(\"5\")) {\n\n            String[] values = sentence.split(\",\");\n\n            getLastLocation(position, position.getFixTime());\n\n            if (values.length > 1) {\n                position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));\n            }\n            if (values.length > 3) {\n                position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));\n            }\n\n            return position;\n\n        } else if (type.equals(\"B\") || type.equals(\"D\")) {\n\n            Parser parser = new Parser(PATTERN_BD, sentence);\n            if (!parser.matches()) {\n                return null;\n            }\n\n            position.setTime(parser.nextDateTime(Parser.DateTimeService.NEW_ZEALAND_DATETIME));\n            position.setLatitude(parser.nextCoordinate());\n            position.setLongitude(parser.nextCoordinate());\n\n            String status = parser.next();\n            position.set(Position.KEY_ALARM, status.endsWith(\"S\"));\n\n            position.set(Position.KEY_STATUS, status);\n            position.set(Position.KEY_SATELLITES, parser.nextInt(0));\n            position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));\n            position.set(Position.KEY_HDOP, parser.nextDouble(0));\n\n            return position;\n\n        } else if (type.equals(\"C\")) {\n\n            Parser parser = new Parser(PATTERN_C, sentence);\n            if (!parser.matches()) {\n                return null;\n            }\n\n            position.setTime(parser.nextDateTime(Parser.DateTimeService.NEW_ZEALAND_DATETIME));\n            position.setLatitude(parser.nextCoordinate());\n            position.setLongitude(parser.nextCoordinate());\n\n            position.set(Position.KEY_STATUS, parser.next());\n            position.set(Position.KEY_POWER, parser.nextDouble());\n            position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt());\n            position.set(Position.KEY_HDOP, parser.nextDouble());\n            position.set(Position.KEY_ALTITUDE, parser.nextDouble());\n\n            return position;\n\n        } else if (type.equals(\"A\")) {\n\n            Parser parser = new Parser(PATTERN_A, sentence);\n            if (!parser.matches()) {\n                return null;\n            }\n\n            position.setTime(parser.nextDateTime(Parser.DateTimeService.NEW_ZEALAND_DATETIME));\n            position.setLatitude(parser.nextCoordinate());\n            position.setLongitude(parser.nextCoordinate());\n            position.set(Position.KEY_ALTITUDE, parser.nextDouble(0));\n            position.set(Position.KEY_ANGLE, parser.nextDouble(0));\n\n            return position;\n\n        }\n\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}