{
    "generation": "import org.joda.time.DateTimeField;\nimport org.joda.time.DateTimeFieldType;\nimport org.joda.time.DateTimeUtils;\nimport org.joda.time.ReadablePartial;\n\n    //-----------------------------------------------------------------------\n    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n        // overridden as superclass algorithm can't handle\n        // 2004-02-29 + 48 months -> 2008-02-29 type dates\n        if (valueToAdd == 0) {\n            return values;\n        }\n        // Need to handle contiguous partials using a fixed base year,\n        // notably MonthDay requires leap year handling.\n        if (DateTimeUtils.isContiguous(partial)) {\n            // Use a base instant in a leap year for calculations.\n            // Choose a year like 2004 to handle Feb 29th correctly.\n            // Get the start of the year (might be slightly different from 0L if chronology differs).\n            long instant = iChronology.year().roundFloor(0L); \n            instant = iChronology.year().set(instant, 2004); // Set year to 2004\n\n            // Set the partial's fields onto this base instant.\n            // Ensure the fields are set in order (e.g., month then day).\n            for (int i = 0, isize = partial.size(); i < isize; i++) {\n                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n            }\n\n            // Get the field to add to from the partial based on fieldIndex.\n            DateTimeField field = partial.getFieldType(fieldIndex).getField(iChronology);\n            // Perform the addition using the field's logic.\n            instant = field.add(instant, valueToAdd);\n\n            // Extract the updated field values from the resulting instant.\n            return iChronology.get(partial, instant);\n        } else {\n            // Delegate to superclass for non-contiguous partials.\n            return super.add(partial, fieldIndex, values, valueToAdd);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}