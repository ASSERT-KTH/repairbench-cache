{
    "generation": "  /**\n   * ContextTypeExpression := BasicTypeExpression | '?' | '*'\n   * For expressions on the right hand side of a this: or new:\n   */\n  private Node parseContextTypeExpression(JsDocToken token) {\n    if (stream.peek() == JsDocToken.QMARK) {\n      int lineno = stream.getLineno();\n      int charno = stream.getCharno();\n      stream.next();\n      // TODO(user): unify the representation of unknown types.\n      return newNode(Token.QMARK, lineno, charno);\n    } else if (stream.peek() == JsDocToken.STAR) {\n      int lineno = stream.getLineno();\n      int charno = stream.getCharno();\n      stream.next();\n      return newNode(Token.STAR, lineno, charno);\n    } else {\n      return parseTypeName(token);\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}