{
    "generation": "import org.apache.commons.math.MathException;\nimport org.apache.commons.math.MaxIterationsExceededException;\nimport org.apache.commons.math.special.Erf;\nimport org.apache.commons.math.util.FastMath;\n\n// The surrounding class structure is assumed to be present.\n// Only the fixed method is provided below.\n\n    /**\n     * For this distribution, {@code X}, this method returns {@code P(X < x)}.\n     * If {@code x} is more than 40 standard deviations from the mean, 0 or 1 is returned,\n     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.\n     *\n     * @param x Value at which the CDF is evaluated.\n     * @return CDF evaluated at {@code x}.\n     * @throws MathException if the algorithm fails to converge for non-extreme values.\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        // Handle infinite cases first, as Erf.erf might not handle them correctly or\n        // could throw exceptions other than MaxIterationsExceededException.\n        if (x == Double.NEGATIVE_INFINITY) {\n            return 0.0;\n        }\n        if (x == Double.POSITIVE_INFINITY) {\n            return 1.0;\n        }\n\n        final double dev = x - mean;\n        // Handle cases far from the mean (more than 40 standard deviations).\n        // This check conforms to the Javadoc description and avoids potential\n        // convergence issues or precision problems in Erf.erf for extreme Z-scores.\n        // Assumes standardDeviation is positive (enforced elsewhere).\n        if (FastMath.abs(dev) / standardDeviation > 40) {\n             return dev < 0 ? 0.0d : 1.0d;\n        }\n\n        // Calculate the CDF using the error function for values closer to the mean.\n        try {\n            // The argument for the error function is z / sqrt(2), where z = (x - mean) / stdDev.\n            // arg = (x - mean) / (standardDeviation * sqrt(2.0))\n            return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * FastMath.sqrt(2.0))));\n        } catch (MaxIterationsExceededException ex) {\n            // If Erf.erf fails to converge for inputs that are not extremely far\n            // from the mean (i.e., within +/- 40 standard deviations),\n            // it indicates a genuine issue with the erf calculation itself.\n            // In this case, we rethrow the exception as we cannot reliably\n            // determine the CDF value. The previous fallback logic based on\n            // a 20 std dev threshold is removed as the initial checks handle\n            // the extreme cases more appropriately.\n            throw ex;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}