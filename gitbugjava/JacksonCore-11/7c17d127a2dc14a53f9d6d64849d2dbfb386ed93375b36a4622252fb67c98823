{
    "generation": "    private void _verifySharing()\n    {\n        if (_hashShared) {\n            // When copying arrays, we also need to copy related state\n            // from the master table info, in case parent had been modified\n            // (and potentially rehashed)\n            final TableInfo tableInfo = _tableInfo;\n            _hashArea = Arrays.copyOf(tableInfo.quads, tableInfo.quads.length);\n            _names = Arrays.copyOf(tableInfo.names, tableInfo.names.length);\n            _hashShared = false; // Now we have separate state\n\n            // And then update other state fields to be in sync with copied arrays\n            _hashSize = tableInfo.size;\n            _count = tableInfo.count;\n            _tertiaryShift = tableInfo.tertiaryShift;\n            _spilloverEnd = tableInfo.spilloverEnd;\n            _longNameOffset = tableInfo.longNameOffset;\n            _longestCollisionList = tableInfo.longestCollisionList;\n\n            // Also recalculate derived values which depend on _hashSize\n            // NOTE: Assumes default secondary/tertiary size split (1/4 total each).\n            // Check calculation if structure assumptions change.\n            _secondaryStart = _hashSize << 2;\n            _tertiaryStart = _secondaryStart + (_secondaryStart >> 1);\n\n            // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure\n            //    we rehash as needed, as need-rehash flag is not copied from parent.\n            //    The check below handles this case for the child instance itself.\n        }\n        // If this instance has locally determined that it needs rehashing\n        // (based on its own count vs size), do it now. State is consistent.\n        if (_needRehash) {\n            rehash();\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}