{
    "generation": "    /*\n     * (non-Javadoc)\n     * \n     * @see java.io.InputStream#read(byte[], int, int)\n     */\n    @Override\n    public int read(final byte[] dest, final int offs, final int len)\n        throws IOException {\n        if (offs < 0) {\n            throw new IndexOutOfBoundsException(\"offs(\" + offs + \") < 0.\");\n        }\n        if (len < 0) {\n            throw new IndexOutOfBoundsException(\"len(\" + len + \") < 0.\");\n        }\n        if (offs + len > dest.length) {\n            throw new IndexOutOfBoundsException(\"offs(\" + offs + \") + len(\"\n                                                + len + \") > dest.length(\" + dest.length + \").\");\n        }\n        // Handle the len == 0 case explicitly according to the InputStream contract.\n        if (len == 0) {\n            return 0;\n        }\n        if (this.in == null) {\n            throw new IOException(\"stream closed\");\n        }\n\n        final int hi = offs + len;\n        int destOffs = offs;\n        int b;\n        // The read0() method reads a single byte; the loop continues until\n        // len bytes are read, the end of the stream is reached (read0 returns -1),\n        // or an exception is thrown.\n        while (destOffs < hi && ((b = read0()) >= 0)) {\n            dest[destOffs++] = (byte) b;\n            count(1); // Assuming count updates the number of bytes read from the underlying stream\n        }\n\n        // Calculate the number of bytes actually read.\n        // If destOffs is still equal to offs, it means the first call to read0()\n        // returned -1 (end of stream was reached immediately) or the loop condition\n        // destOffs < hi was initially false (which is handled by the len == 0 check above).\n        // In the case where the stream was at EOF, return -1.\n        // Otherwise, return the number of bytes read (destOffs - offs).\n        int c = (destOffs == offs) ? -1 : (destOffs - offs);\n        return c;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}