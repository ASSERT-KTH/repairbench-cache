{
    "generation": "private Object decodeExtended(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n        deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedShort(); // length\n    int type = buf.readUnsignedByte();\n\n    if (type == MSG_STRING_INFO) {\n\n        buf.readUnsignedInt(); // server flag\n        String data;\n        if (buf.readUnsignedByte() == 1) {\n            data = buf.readSlice(buf.readableBytes() - 6).toString(StandardCharsets.US_ASCII);\n        } else {\n            data = buf.readSlice(buf.readableBytes() - 6).toString(StandardCharsets.UTF_16BE);\n        }\n\n        Parser parser = new Parser(PATTERN_LOCATION, data);\n\n        if (parser.matches()) {\n            position.setValid(true);\n            position.setLatitude(parser.nextCoordinate(Parser.CoordinateFormat.HEM_DEG));\n            position.setLongitude(parser.nextCoordinate(Parser.CoordinateFormat.HEM_DEG));\n            position.setCourse(parser.nextDouble());\n            position.setSpeed(parser.nextDouble());\n            position.setTime(parser.nextDateTime(Parser.DateTimeFormat.YMD_HMS));\n        } else {\n            getLastLocation(position, null);\n            position.set(Position.KEY_RESULT, data);\n        }\n\n        return position;\n\n    } else if (type == MSG_INFO) {\n\n        int subType = buf.readUnsignedByte();\n\n        getLastLocation(position, null);\n\n        if (subType == 0x00) {\n\n            position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort() * 0.01);\n            return position;\n\n        } else if (subType == 0x05) {\n\n            if (buf.readableBytes() >= 6 + 1 + 6) {\n                DateBuilder dateBuilder = new DateBuilder((TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                        .setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte())\n                        .setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());\n                position.setDeviceTime(dateBuilder.getDate());\n            }\n\n            int flags = buf.readUnsignedByte();\n            position.set(Position.KEY_DOOR, BitUtil.check(flags, 0));\n            position.set(Position.PREFIX_IO + 1, BitUtil.check(flags, 2));\n            return position;\n\n        } else if (subType == 0x0a) {\n\n            position.set(Position.KEY_ICCID, ByteBufUtil.hexDump(buf.readSlice(10)).replaceAll(\"f\", \"\"));\n            return position;\n\n        } else if (subType == 0x0d) {\n\n            if (buf.getByte(buf.readerIndex()) != '!') {\n                buf.skipBytes(6);\n            }\n\n            Parser parser = new Parser(PATTERN_FUEL, buf.toString(\n                    buf.readerIndex(), buf.readableBytes() - 4 - 2, StandardCharsets.US_ASCII));\n            if (!parser.matches()) {\n                return null;\n            }\n\n            position.set(Position.PREFIX_TEMP + 1, parser.nextDouble(0));\n            position.set(Position.KEY_FUEL_LEVEL, parser.nextDouble(0));\n\n            return position;\n\n        } else if (subType == 0x1b) {\n\n            int input = buf.readUnsignedShort();\n            input ^= 0xffff;\n            position.set(Position.KEY_POWER, ((input >> 4) & 0x3ff) * 0.01); // 10-bit value for 0-35.99V\n            position.set(\"tyre\", input & 0x0f);\n\n            return position;\n\n        } else { // Other subTypes not returning early will fall through to return position\n            // Do nothing here, return position below\n        }\n\n    } else if (type == MSG_X1_PHOTO_DATA) {\n\n        int pictureId = buf.readInt();\n\n        ByteBuf photo = photos.get(pictureId);\n\n        buf.readUnsignedInt(); // offset\n        buf.readBytes(photo, buf.readUnsignedShort());\n\n        if (photo.writableBytes() > 0) {\n            sendPhotoRequest(channel, pictureId);\n        } else {\n            position.set(Position.KEY_IMAGE, writeMediaFile(deviceSession.getUniqueId(), photo, \"jpg\"));\n            photos.remove(pictureId).release();\n        }\n\n        // Added return here\n        return position;\n\n    } else if (type == MSG_AZ735_GPS || type == MSG_AZ735_ALARM) {\n\n        if (!decodeGps(position, buf, true, deviceSession.get(DeviceSession.KEY_TIMEZONE))) {\n            getLastLocation(position, position.getDeviceTime());\n        }\n\n        if (decodeLbs(position, buf, type, true)) {\n            position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        }\n\n        buf.skipBytes(buf.readUnsignedByte()); // additional cell towers\n        buf.skipBytes(buf.readUnsignedByte()); // wifi access point\n\n        int status = buf.readUnsignedByte();\n        position.set(Position.KEY_STATUS, status);\n\n        if (type == MSG_AZ735_ALARM) {\n            switch (status) {\n                case 0xA0:\n                    position.set(Position.KEY_ARMED, true);\n                    break;\n                case 0xA1:\n                    position.set(Position.KEY_ARMED, false);\n                    break;\n                case 0xA2:\n                case 0xA3:\n                    position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n                    break;\n                case 0xA4:\n                    position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n                    break;\n                case 0xA5:\n                    position.set(Position.KEY_ALARM, Position.ALARM_DOOR);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        buf.skipBytes(buf.readUnsignedByte()); // reserved extension\n\n        sendResponse(channel, true, type, buf.getShort(buf.writerIndex() - 6), null);\n\n        return position;\n\n    } else if (type == MSG_OBD) {\n\n        DateBuilder dateBuilder = new DateBuilder((TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                .setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte())\n                .setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());\n\n        getLastLocation(position, dateBuilder.getDate());\n\n        position.set(Position.KEY_IGNITION, buf.readUnsignedByte() > 0);\n\n        String data = buf.readCharSequence(buf.readableBytes() - 18, StandardCharsets.US_ASCII).toString();\n        for (String pair : data.split(\",\")) {\n            if (pair.length() < 2) continue;\n            String[] values = pair.split(\"=\");\n            if (values.length >= 2) {\n                switch (Integer.parseInt(values[0].substring(0, 2), 16)) {\n                    case 40:\n                        position.set(Position.KEY_OBDSpeed, Integer.parseInt(values[1], 16) * 0.01);\n                        break;\n                    case 43:\n                        position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(values[1], 16) * 0.01);\n                        break;\n                    case 45:\n                        position.set(Position.KEY_COOLANT_TEMP, Integer.parseInt(values[1], 16) * 0.01);\n                        break;\n                    case 53:\n                        position.set(Position.KEY_OBD_SPEED, Integer.parseInt(values[1], 16) * 0.01);\n                        break;\n                    case 54:\n                        position.set(Position.KEY_RPM, Integer.parseInt(values[1], 16) * 0.01);\n                        break;\n                    case 73:\n                        position.set(Position.KEY_FUEL_USED, Integer.parseInt(values[1], 16) * 0.01);\n                        break;\n                    case 77:\n                        position.set(Position.KEY_HOURS, Integer.parseInt(values[1], 16) * 0.01);\n                        break;\n                    case 7A:\n                    case 7B:\n                    case 7C:\n                    case 7D:\n                        break;\n                    default:\n                        position.set(values[0], values[1]);\n                        break;\n                }\n            }\n        }\n\n        return position;\n\n    } else if (type == MSG_GPS_MODULAR) {\n\n        while (buf.readableBytes() > 6) {\n            int moduleType = buf.readUnsignedShort();\n            int moduleLength = buf.readUnsignedShort();\n\n            switch (moduleType) {\n                case 0x03:\n                    position.set(Position.KEY_ICCID, ByteBufUtil.hexDump(buf.readSlice(10)));\n                    break;\n                case 0x09:\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    break;\n                case 0x0a:\n                    position.set(Position.KEY_SATELLITES_VISIBLE, buf.readUnsignedByte());\n                    break;\n                case 0x11:\n                    CellTower cellTower = CellTower.from(\n                            buf.readUnsignedShort(),\n                            buf.readUnsignedShort(),\n                            buf.readUnsignedShort(),\n                            buf.readUnsignedMedium(),\n                            buf.readUnsignedByte());\n                    if (cellTower.getCellId() > 0) {\n                        position.setNetwork(new Network(cellTower));\n                    }\n                    break;\n                case 0x18:\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedShort() * 0.01);\n                    break;\n                case 0x28:\n                    position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);\n                    break;\n                case 0x29:\n                    position.set(Position.KEY_INDEX, buf.readUnsignedInt());\n                    break;\n                case 0x2a:\n                    int input = buf.readUnsignedByte();\n                    position.set(Position.KEY_DOOR, BitUtil.to(input, 4) > 0);\n                    position.set(\"tamper\", BitUtil.from(input, 4) > 0);\n                    break;\n                case 0x2b:\n                    int event = buf.readUnsignedByte();\n                    switch (event) {\n                        case 0x11:\n                            position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n                            break;\n                        case 0x12:\n                            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n                            break;\n                        case 0x13:\n                            position.set(Position.KEY_ALARM, Position.ALARM_POWER_CUT);\n                            break;\n                        case 0x14:\n                            position.set(Position.KEY_ALARM, Position.ALARM_REMOVING);\n                            break;\n                        default:\n                            break;\n                    }\n                    position.set(Position.KEY_EVENT, event);\n                    break;\n                case 0x2e:\n                    position.setPeriod(buf.readInt());\n                    position.setVelocity(buf.readUnsignedShort());\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    position.setLatitude(buf.readDouble());\n                    position.setLongitude(buf.readDouble());\n                    position.setAltitude(buf.readInt());\n                    position.set(Position.KEY_HDOP, buf.readFloat());\n                    break;\n                case 0x30:\n                case 0x3a:\n                    position.set(Position.KEY_NATIVE, ByteBufUtil.hexDump(buf.readSlice(moduleLength - 2)));\n                    break;\n                default:\n                    buf.skipBytes(moduleLength);\n                    break;\n            }\n        }\n\n        if (position.getFixTime() == null) {\n            getLastLocation(position, null);\n        }\n\n        sendResponse(channel, true, type, buf.readUnsignedShort(), null);\n\n        return position;\n\n    } else if (type == MSG_MULTIMEDIA) {\n\n        buf.skipBytes(8); // serial number\n        long timestamp = buf.readUnsignedInt() * 1000;\n        position.setTime(new Date(timestamp));\n\n        position.setGoogleMapsPhoto(\n                ByteBufUtil.hexDump(buf.readSlice(16)),\n                \"gps\",\n                \"event\"+(buf.readUnsignedByte()),\n                last;\n        );\n\n        int mediaId = buf.readInt();\n        int mediaLength = buf.readInt();\n        int mediaType = buf.readUnsignedByte();\n        int mediaFormat = buf.readUnsignedByte();\n\n        if (mediaType == 0 && mediaFormat == 0) {\n\n            int event = buf.readUnsignedByte();\n            position.setEvent(event);\n\n            ByteBuf photo;\n            if (buf.readUnsignedShort() == 0) {\n                photo = Unpooled.buffer(mediaLength);\n                if (photos.containsKey(mediaId)) {\n                    photos.remove(mediaId).release();\n                }\n                photos.put(mediaId, photo);\n            } else {\n                photo = photos.get(mediaId);\n            }\n\n            if (photo != null) {\n                int total = photo.capacity();\n                boolean more = buf.getBytes(mediaLength) > 0;\n                if (more && photo.readableBytes() > 0) {\n                    photo.writeBytes(buf.readBytes(mediaLength));\n                } else if (!more && photo.readableBytes() == total) {\n                    position.setKEY_MEDIA, writeMediaFile ... \n                    photos.remove(mediaId).release();\n                }\n            }\n\n        }\n\n        sendResponse(channel, true, type, buf.readUnsignedShort(), null);\n\n        return position;\n\n    } else if (type == MSG_SERIAL) {\n\n        position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        getLastLocation(position, null);\n\n        int cardType = buf.readUnsignedByte();\n        int length = positionsBufferBytes() - 6 ... \n\n        if (length <=0 ) return null. \n        else if. \n\n        String data;\n        if (length ==5) {\n            data = ByteBufUtil.hexDump( ... \n        } else {\n            data = ...\n        }\n\n        position.set(...)\n\n        return DeviceTime etc. returning position.\n\n        So with the existing return, the code there should be okay.\n\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}