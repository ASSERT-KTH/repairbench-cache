{
    "generation": "private Object decodeBasic(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    int length = buf.readUnsignedByte();\n    int dataLength = length - 5;\n    int type = buf.readUnsignedByte();\n\n    Position position = new Position(getProtocolName());\n    DeviceSession deviceSession = null;\n    if (type != MSG_LOGIN) {\n        deviceSession = getDeviceSession(channel, remoteAddress);\n        if (deviceSession == null) {\n            return null;\n        }\n        position.setDeviceId(deviceSession.getDeviceId());\n        if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n            deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n        }\n    }\n\n    // ... other message types omitted for brevity ...\n\n    } else if (type == MSG_ALARM) {\n\n        boolean extendedAlarm = dataLength > 7;\n        if (extendedAlarm) {\n            // For extended alarm, decode full GPS\n            decodeGps(position, buf, false, false, false,\n                    (TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE));\n        } else {\n            // For non-extended alarm, read just timestamp\n            DateBuilder dateBuilder = new DateBuilder(\n                    (TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                    .setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte())\n                    .setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());\n            getLastLocation(position, dateBuilder.getDate());\n        }\n        int alarmType = buf.readUnsignedByte();\n        switch (alarmType) {\n            case 0x01:\n                // SOS alarm\n                position.set(Position.KEY_ALARM,\n                        extendedAlarm ? Position.ALARM_SOS : Position.ALARM_GENERAL);\n                break;\n            case 0x80:\n                // Vibration or SOS in extended mode\n                position.set(Position.KEY_ALARM,\n                        extendedAlarm ? Position.ALARM_SOS : Position.ALARM_VIBRATION);\n                break;\n            case 0x87:\n                position.set(Position.KEY_ALARM, Position.ALARM_OVERSPEED);\n                break;\n            case 0x90:\n                position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                break;\n            case 0x91:\n                position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                break;\n            case 0x92:\n                position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                break;\n            case 0x93:\n                position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n                break;\n            default:\n                position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n                break;\n        }\n\n    } else {\n\n        // ... rest of the method unchanged ...\n\n    }\n\n    // ... sendResponse, return, etc. ...\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}