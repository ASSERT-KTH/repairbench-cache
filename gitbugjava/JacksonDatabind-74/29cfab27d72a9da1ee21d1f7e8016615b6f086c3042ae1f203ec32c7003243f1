{
    "generation": "    // off-lined to keep main method lean and mean...\n    @SuppressWarnings(\"resource\")\n    protected Object _deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt,\n            TokenBuffer tb) throws IOException\n    {\n        // As per [JACKSON-614], may have default implementation to use\n        JsonDeserializer<Object> deser = _findDefaultImplDeserializer(ctxt);\n        if (deser != null) {\n            if (tb != null) {\n                tb.writeEndObject();\n                p = tb.asParser(p);\n                // must move to point to the first token:\n                p.nextToken();\n            }\n            return deser.deserialize(p, ctxt);\n        }\n        // or, perhaps we just bumped into a \"natural\" value (boolean/int/double/String)?\n        Object result = TypeDeserializer.deserializeIfNatural(p, ctxt, _baseType);\n        if (result != null) {\n            return result;\n        }\n        // or, something for which \"as-property\" won't work, changed into \"wrapper-array\" type:\n        if (p.getCurrentToken() == JsonToken.START_ARRAY) {\n            return super.deserializeTypedFromAny(p, ctxt);\n        }\n        // [databind#1533]: May need to accept empty string as null instance?\n        if (p.hasToken(JsonToken.VALUE_STRING)) {\n            final String str = p.getText().trim();\n            // note: can NOT skip empty string values here, MUST handle such cases;\n            // otherwise they'll be left hanging without anything consuming them.\n            // 18-Nov-2017, tatu: Except that... If this is meant to be Polymorphic\n            //   value, and we have neither Type Id nor default impl, what could\n            //   this be? Most likely case is an error. A possible (?) case is that\n            //   of `JsonTypeInfo.As.EXTERNAL_PROPERTY`... ?\n            //   Let's try this: only if enabled, and if empty string, return null.\n            if (str.isEmpty()) {\n                if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n                    return null;\n                }\n            }\n        }\n        // Failure mode: unrecognized token, or found scalar\n        // for type that has no default impl\n        ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,\n                \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}