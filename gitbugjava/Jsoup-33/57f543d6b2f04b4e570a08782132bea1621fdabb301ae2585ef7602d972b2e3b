{
    "generation": "    Element insert(Token.StartTag startTag) {\n        Tag tag = treeBuilder.settings.normalizeTag(startTag.normalName()); // ensure tag name is normalized\n        Element el = new Element(tag, treeBuilder.getBaseUri(), treeBuilder.settings.normalizeAttributes(startTag.attributes));\n\n        if (startTag.isSelfClosing()) {\n            if (tag.isKnownTag() && !tag.isEmpty()) {\n                // An explicit self-closing tag for a known non-empty tag (e.g. <div />). Treat as start/end tag.\n                insertNode(el);\n                treeBuilder.tokeniser.acknowledgeSelfClosingFlag(); // Acknowledge now, because we aren't sending the element up the stack.\n                // E.g. <p /> causes transition to InBody, which needs the flag acknowledged.\n\n                // process the end tag -- the call to insertNode checked that we could add the element appropriately.\n                // This directly pops the element from the stack / foster parents it etc.\n                process(new Token.EndTag(tag.normalName())); // Process the end tag inline.\n            } else {\n                // Unknown tag or known empty tag used with self-closing syntax. Insert as empty element.\n                insertEmpty(startTag); // This acknowledges the flag\n            }\n\n        } else {\n            insertNode(el);\n            stack.add(el); // Push onto stack. Handled by process(Token.EndTag) when closes.\n        }\n        return el;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}