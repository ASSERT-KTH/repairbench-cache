{
    "generation": "void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n    final boolean prettyPrint = out.prettyPrint();\n    final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;\n    final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n    final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());\n    boolean trimLeading = false, trimTrailing = false;\n\n    if (normaliseWhite) {\n        trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;\n        // Fix: do not trimTrailing when nextSibling() is a span or inline element.\n        Node next = nextSibling();\n        if (trimLikeBlock) {\n            if (next == null) {\n                trimTrailing = true;\n            } else if (next instanceof Element) {\n                Element nextEl = (Element) next;\n                if (nextEl.tag().isBlock() || nextEl.tag().formatAsBlock()) {\n                    trimTrailing = true;\n                } else {\n                    trimTrailing = false;\n                }\n            } else {\n                trimTrailing = false;\n            }\n        }\n\n        boolean isBlank = isBlank();\n        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))\n            || (next instanceof TextNode && (((TextNode) next).isBlank()));\n        if (couldSkip && isBlank) return;\n\n        Node prev = previousSibling();\n        if (\n            (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||\n            (out.outline() && siblingNodes().size() > 0 && !isBlank) ||\n            (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals(\"br\"))\n        )\n            indent(accum, depth, out);\n    }\n\n    Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}