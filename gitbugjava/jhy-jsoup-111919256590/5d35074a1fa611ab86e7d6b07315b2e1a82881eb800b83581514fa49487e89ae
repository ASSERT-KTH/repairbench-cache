{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        if (!tag.isInline())\n            return false; // Must be an inline tag to be inlineable\n        if (out.outline())\n            return false; // In outline mode, every element gets a new line\n\n        // If the parent is an inline element, then this element is also inlineable.\n        // E.g. <a><span>Many</span> <span>links</span></a>, the spans are inlineable.\n        if (parent() != null && !parent().isBlock()) { // !isBlock() implies parent().isInline()\n            return true;\n        }\n        // At this point, parent is null (root) or a block tag.\n        // Now decide based on this tag type and its position (first child or not).\n\n        if (tag.getName().equals(\"br\")) {\n            // A <br> tag, as a child of a block element (or if it's a root element),\n            // is considered inlineable if and only if it is the first *effective* child.\n            // - If first (e.g. <p><br>Text</p>), <br> doesn't get its own indent; it's on <p>'s line. So, inlineable.\n            // - If not first (e.g. <div><p>Text</p><br></div>), <br> gets its own indented line. So, not inlineable.\n            return isEffectivelyFirst();\n        }\n\n        // All other inline tags (e.g. <b>, <i>, <span>, <a>) that are children\n        // of a block element (or are root elements) are considered inlineable.\n        // Their position (first or not) does not change this.\n        // E.g. <p><b>Strong</b> text</p>: <b> is inlineable.\n        // E.g. <p>Text <span>and span</span></p>: <span> is inlineable.\n        return true;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}