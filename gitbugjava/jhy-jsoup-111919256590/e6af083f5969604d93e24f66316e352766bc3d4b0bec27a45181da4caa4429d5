{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        if (!tag.isInline())\n            return false;\n\n        // Specific handling for <br> tags:\n        // A <br> tag determines its inlineability (whether a line break should be inserted before it)\n        // based on its position, especially within block parents.\n        // - If a <br> is within a non-block parent (e.g., another inline element like <span>),\n        //   it is always considered inlineable, meaning no line break before it.\n        // - If a <br> is within a block parent (e.g., <div>, <p>), its inlineability depends\n        //   on whether it's effectively the last child:\n        //   - If it's NOT effectively the last child (i.e., there's content after it), it's inlineable.\n        //     This prevents a line break before the <br> and allows content to follow it immediately (or on the next line if the <br> causes a break).\n        //   - If it IS effectively the last child (i.e., it's the last significant content in the block),\n        //     it's NOT inlineable, forcing a line break before it for better formatting.\n        if (tag.equals(Tag.valueOf(\"br\"))) {\n            boolean isBlockParent = (parent() == null || parent().isBlock());\n            if (!isBlockParent) {\n                // If the parent is not a block (e.g., another inline element), <br> is always inlineable.\n                return true;\n            } else {\n                // If the parent is a block, <br> is inlineable if it's NOT effectively the last child.\n                // If it IS effectively the last child, it's NOT inlineable, forcing a line break before it.\n                return !isEffectivelyLast();\n            }\n        }\n\n        // Original logic for other inline tags (e.g., <span>, <a>, <em>):\n        // An inline tag is inlineable (meaning no line break should be inserted before it during pretty-printing) if:\n        // 1. Its parent is a block element (or null, for root children).\n        // 2. It is NOT the effectively first child in that block parent (to ensure initial content of a block gets a leading newline).\n        // 3. The output settings are not in outline mode (which might override pretty-printing behavior).\n        return (parent() == null || parent().isBlock())\n            && !isEffectivelyFirst()\n            && !out.outline();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}