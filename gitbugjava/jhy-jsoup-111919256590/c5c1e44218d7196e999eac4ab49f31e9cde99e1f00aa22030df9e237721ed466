{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        // inlineable = can this node be kept on the same line as its parent?\n\n        // blocks are never inlineable\n        if (!tag.isInline())\n            return false;\n\n        // if prettyprint is off, yes; this node can be inlineable\n        if (!out.prettyPrint())\n            return true;\n\n        // null parent, root, not inlineable\n        if (parent() == null)\n            return false;\n\n        // If parent is not a block formatted tag (e.g. is inline), then this node can be inlineable.\n        if (!parent().tag().formatAsBlock()) {\n            return true;\n        }\n\n        // Parent is block formatted and pretty printing is on.\n        // If this node is not the first effective child, yes it's inlineable (it can follow the previous one)\n        if (!isEffectivelyFirst())\n            return true;\n\n        // This node IS the first effective child of a block parent.\n        // Generally, it should start on a new line (not inlineable).\n        // Exception: A <br> tag might be inlineable if it follows non-blank text. This check\n        // seems more relevant for not-first children, but is included in the logic from the fix commit.\n        if (tag.getName().equals(\"br\")) {\n            // check the actual previous sibling (not the effective one)\n            Node prev = previousSibling();\n            if (prev instanceof TextNode) {\n                TextNode prevText = (TextNode) prev;\n                // If prev text is not blank, and parent doesn't preserve WS, this <br> can be inline.\n                if (!prevText.isBlank() && !Element.preserveWhitespace(parent()))\n                    return true;\n            }\n            // In the specific test case <p><br>Foo</p>, the previous sibling of <br> is null or a blank text node,\n            // so this condition is not met, and it falls through.\n        }\n\n        // Default for first effective child of block parent: not inlineable\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}