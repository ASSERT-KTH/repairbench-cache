{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        // 1. Must be an inline tag type. If not (e.g. <p>, <div>), it's not inlineable.\n        if (!tag.isInline())\n            return false;\n\n        // 2. If outline mode is on, or if the parent element is itself an inline element,\n        //    then this element is not considered inlineable for pretty-printing indent purposes.\n        //    (Note: `parent() == null` handles the root element case.)\n        if (!(parent() == null || parent().isBlock()) || out.outline())\n            return false;\n        \n        // At this point, we know:\n        // - The tag is an inline type (e.g. <b>, <span>, <br>).\n        // - The parent is a block type (e.g. <p>, <div>) or this is the root.\n        // - Outline mode is off.\n\n        // 3. The specific behavior for <br> tags versus other inline tags depends on whether\n        //    they are \"effectively first\" child of their parent.\n        if (tag.getName().equals(\"br\")) {\n            // A <br> tag is considered \"inlineable\" (for formatting, to suppress indent before it)\n            // if and only if it is an effectively first child.\n            // E.g., in <p><br>Foo</p>, the <br> is effectively first, so isInlineable=true.\n            // This results in <p><br> (no indent for <br>).\n            // In <div><p>Foo</p><br></div>, the <br> is not effectively first, so isInlineable=false.\n            // This results in ...</p>\\n <br> (indent for <br>).\n            return isEffectivelyFirst();\n        } else {\n            // For other inline tags (e.g., <b>, <span>):\n            // Considered \"inlineable\" if and only if they are NOT an effectively first child.\n            // E.g., in <p><b>Foo</b></p>, <b> is effectively first. !isEffectivelyFirst() is false. isInlineable=false.\n            // This results in <p>\\n <b>Foo</b> (<b> gets indented).\n            // E.g., in <p>Text <b>Foo</b></p>, <b> is not effectively first. !isEffectivelyFirst() is true. isInlineable=true.\n            // This results in <p>Text <b>Foo</b> (<b> does not get its own indent if preceded by space).\n            return !isEffectivelyFirst();\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}