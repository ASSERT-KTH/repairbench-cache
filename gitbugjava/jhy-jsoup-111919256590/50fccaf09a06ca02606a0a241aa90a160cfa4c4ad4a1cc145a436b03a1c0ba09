{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        if (!tag.isInline())\n            return false;\n        if (parent() == null || !parent().isBlock())\n            return false;\n        if (isEffectivelyFirst() || out.outline())\n            return false;\n        // Check if any previous sibling is a block element\n        Element parent = parent();\n        List<Element> siblings = parent.children();\n        int index = siblings.indexOf(this);\n        if (index <= 0)\n            return true;\n        for (int i = 0; i < index; i++) {\n            if (siblings.get(i).isBlock())\n                return false;\n        }\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}