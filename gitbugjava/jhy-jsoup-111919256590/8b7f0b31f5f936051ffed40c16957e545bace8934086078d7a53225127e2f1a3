{
    "generation": "    private boolean isInlineable(Document.OutputSettings out) {\n        // Special handling for <br> because it's an inline tag but behaves like a block boundary for pretty printing.\n        // A <br> is considered \"inlineable\" (eligible to not have a preceding indent) only when:\n        // - It's the first effective child of a block element.\n        // - We are not in outline mode.\n        // Otherwise (e.g., a <br> after other content), it should trigger an indent like a block element.\n        if (tag.getName().equals(\"br\")) {\n            // Short circuit evaluation: Check conditions that make it non-inlineable first.\n            if (out.outline() || parent() == null || !parent().isBlock())\n                return false; // Can't be inlineable if outlining, root, or parent not block\n            // If parent is block and not outlining, inlineable status depends ONLY on being the first effective child.\n            return isEffectivelyFirst(); // Inlineable only if it's the first child\n        }\n\n        // General case for other tags:\n        if (!tag.isInline()) // Block tags are never inlineable (they always cause indent if parent is block)\n            return false;\n\n        // Inline tags are considered inlineable (eligible to not have a preceding indent) if:\n        // 1. Parent is block (or null - root allows inlineable)\n        // 2. It's NOT the first effective child (the first effective child should be indented)\n        // 3. Not in outline mode\n        return (parent() == null || parent().isBlock())\n            && !isEffectivelyFirst()\n            && !out.outline();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}