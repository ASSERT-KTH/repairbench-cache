{
    "generation": "    private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {\n        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.\n        for (int i = 0; i < s.length(); /* increment handled inside */) {\n            int c = s.codePointAt(i); // Get the Unicode code point at the current index\n            int charCount = Character.charCount(c); // Determine how many 'char' units this code point occupies\n\n            if (c == ' ') {\n                sb.append(spaceAsPlus ? '+' : \"%20\");\n            } else if (c > 127) { // out of ascii range\n                // For non-ASCII characters, including supplementary characters, encode them.\n                // Character.toChars(c) correctly handles both BMP and supplementary characters,\n                // returning one or two chars respectively.\n                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));\n                // ^^ is a bit heavy-handed - if perf critical, we could optimize\n            } else {\n                sb.append((char) c);\n            }\n            // Advance the index by the number of 'char' units consumed by the current code point.\n            // This is crucial for handling supplementary characters (which take 2 'char' units)\n            // to prevent processing the second surrogate as a separate character.\n            i += charCount;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}