{
    "generation": "    private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {\n        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.\n        for (int i = 0; i < s.length(); ) { // Iterate by code point, not by char\n            int c = s.codePointAt(i);\n            int charCount = Character.charCount(c);\n\n            if (c == ' ') {\n                sb.append(spaceAsPlus ? '+' : \"%20\");\n            } else if (c > 127) { // out of ascii range\n                // Convert the single code point to its character representation (might be 1 or 2 chars)\n                String character = new String(Character.toChars(c));\n                // Encode that character representation using UTF-8\n                sb.append(URLEncoder.encode(character, UTF_8.name()));\n                // ^^ is a bit heavy-handed - if perf critical, we could optimize\n            } else {\n                // Append the single character directly (safe for ASCII)\n                sb.append((char) c);\n            }\n            // Advance index by the number of chars used by the current code point\n            i += charCount;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}