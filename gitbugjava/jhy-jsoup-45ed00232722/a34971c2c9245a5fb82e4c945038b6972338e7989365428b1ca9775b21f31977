{
    "generation": "static URL encodeUrl(URL u) {\n    u = punyUrl(u);\n    try {\n        // Encode the URL properly by replacing all non-alphanumeric characters except for a few special characters\n        String urlS = u.toExternalForm();\n        urlS = URLEncoder.encode(urlS, StandardCharsets.UTF_8.toString())\n                .replace(\"+\", \"%20\") // Replace '+' with '%20' to maintain space encoding\n                .replace(\"%21\", \"!\") // Restore '!' since it's a valid URL character\n                .replace(\"%27\", \"'\") // Restore single quote since it's a valid URL character\n                .replace(\"%28\", \"(\") // Restore '(' since it's a valid URL character\n                .replace(\"%29\", \")\") // Restore ')' since it's a valid URL character\n                .replace(\"%7E\", \"~\") // Restore '~' since it's a valid URL character\n                .replace(\"%22\", \"%2522\") // Restore double quote by encoding it properly\n                .replace(\"%26\", \"%2526\") // Restore '&' by encoding it properly\n                .replace(\"%3D\", \"%253D\") // Restore '=' by encoding it properly\n                .replace(\"%2C\", \"%252C\") // Restore ',' by encoding it properly\n                .replace(\"%2F\", \"/\") // Restore '/' since it's a valid URL character\n                .replace(\"%3F\", \"?\") // Restore '?' since it's a valid URL character\n                .replace(\"%3A\", \":\") // Restore ':' since it's a valid URL character\n                .replace(\"%40\", \"@\") // Restore '@' since it's a valid URL character\n                .replace(\"%24\", \"$\") // Restore '$' since it's a valid URL character\n                .replace(\"%23\", \"#\") // Restore '#' since it's a valid URL character\n                .replace(\"%5B\", \"[\") // Restore '[' since it's a valid URL character\n                .replace(\"%5D\", \"]\") // Restore ']' since it's a valid URL character\n                .replace(\"%25\", \"%2525\"); // Restore '%' by encoding it properly\n\n        return new URL(urlS);\n    } catch (MalformedURLException e) {\n        // give up and return the original input\n        return u;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}