{
    "generation": "    static URL encodeUrl(URL u) {\n\t    u = punyUrl(u); // Retain existing punyUrl call\n        try {\n            // Get URL components. These methods return the unencoded (raw) components.\n            String protocol = u.getProtocol();\n            String authority = u.getAuthority(); // e.g., \"user:pass@host:port\" or \"host:port\" or \"host\"\n            String path = u.getPath();\n            String query = u.getQuery();\n            String fragment = u.getRef(); // URL.getRef() is for the fragment part\n\n            // Construct a URI using the components.\n            // The URI(scheme, authority, path, query, fragment) constructor is designed\n            // to automatically URI-encode any illegal characters within the path, query,\n            // fragment, and authority components. This correctly handles spaces, brackets,\n            // and other characters that need percent-encoding.\n            final URI uri = new URI(protocol, authority, path, query, fragment);\n\n            // Convert the properly encoded URI back to a URL.\n            return uri.toURL();\n        } catch (URISyntaxException | MalformedURLException e) {\n            // In case of any encoding or URL conversion error, return the original URL\n            return u;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}