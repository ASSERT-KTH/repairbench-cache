{
    "generation": "static URL encodeUrl(URL u) {\n    u = punyUrl(u);\n    try {\n        // encode all parts of the URL properly\n        String protocol = u.getProtocol();\n        String authority = u.getAuthority();\n        String path = u.getPath();\n        String query = u.getQuery();\n        String ref = u.getRef();\n\n        // encode each component separately\n        path = encodeComponent(path);\n        query = encodeComponent(query);\n        ref = encodeComponent(ref);\n\n        // reconstruct the URL with encoded components\n        String urlS = protocol + \"://\" + authority + path;\n        if (query != null) {\n            urlS += \"?\" + query;\n        }\n        if (ref != null) {\n            urlS += \"#\" + ref;\n        }\n\n        return new URL(urlS);\n    } catch (MalformedURLException e) {\n        // give up and return the original input\n        return u;\n    }\n}\n\nprivate static String encodeComponent(String component) {\n    if (component == null) return null;\n    try {\n        return URLEncoder.encode(component, \"UTF-8\")\n                .replace(\"+\", \"%20\")\n                .replace(\"%21\", \"!\")\n                .replace(\"%27\", \"'\")\n                .replace(\"%28\", \"(\")\n                .replace(\"%29\", \")\")\n                .replace(\"%7E\", \"~\");\n    } catch (UnsupportedEncodingException e) {\n        return component;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}