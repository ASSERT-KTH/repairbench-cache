{
    "generation": "static URL encodeUrl(URL u) {\n    u = punyUrl(u);\n    try {\n        // Proper URL encoding of all components except fragment (which shouldn't be encoded)\n        String urlS = u.toExternalForm();\n        // Split URL into parts to properly encode each component\n        URI uri = new URI(urlS);\n        String scheme = uri.getScheme() == null ? \"\" : uri.getScheme() + \":\";\n        String authority = uri.getAuthority() == null ? \"\" : \"//\" + uri.getAuthority();\n        String path = uri.getPath() == null ? \"\" : encodePath(uri.getPath());\n        String query = uri.getQuery() == null ? \"\" : \"?\" + encodeQuery(uri.getQuery());\n        String fragment = uri.getFragment() == null ? \"\" : \"#\" + uri.getFragment();\n\n        String encodedUrl = scheme + authority + path + query + fragment;\n        return new URL(encodedUrl);\n    } catch (URISyntaxException | MalformedURLException e) {\n        // give up and return the original input\n        return u;\n    }\n}\n\nprivate static String encodePath(String path) {\n    try {\n        return URLEncoder.encode(path, \"UTF-8\")\n                .replace(\"%2F\", \"/\")\n                .replace(\"%3A\", \":\")\n                .replace(\"%25\", \"%\");\n    } catch (UnsupportedEncodingException e) {\n        return path;\n    }\n}\n\nprivate static String encodeQuery(String query) {\n    try {\n        return URLEncoder.encode(query, \"UTF-8\")\n                .replace(\"%3D\", \"=\")\n                .replace(\"%26\", \"&\")\n                .replace(\"%2B\", \"+\")\n                .replace(\"%25\", \"%\");\n    } catch (UnsupportedEncodingException e) {\n        return query;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}