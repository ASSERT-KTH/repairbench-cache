{
    "generation": "static URL encodeUrl(URL u) {\n    u = punyUrl(u);\n    try {\n        String path = u.getPath();\n        String encodedPath = path != null ? URLEncoder.encode(path, \"UTF-8\").replace(\"+\", \"%20\").replace(\"%2F\", \"/\") : null;\n\n        // encode query if present\n        String query = u.getQuery();\n        String encodedQuery = null;\n        if (query != null) {\n            encodedQuery = Arrays.stream(query.split(\"&\"))\n                    .map(param -> {\n                        int idx = param.indexOf('=');\n                        if (idx >= 0) {\n                            String key = param.substring(0, idx);\n                            String value = param.substring(idx + 1);\n                            return URLEncoder.encode(key, java.nio.charset.StandardCharsets.UTF_8).replace(\"+\", \"%20\") +\n                                    \"=\" +\n                                    URLEncoder.encode(value, java.nio.charset.StandardCharsets.UTF_8).replace(\"+\", \"%20\");\n                        } else {\n                            return URLEncoder.encode(param, java.nio.charset.StandardCharsets.UTF_8).replace(\"+\", \"%20\");\n                        }\n                    })\n                    .collect(java.util.stream.Collectors.joining(\"&\"));\n        }\n\n        URI uri = new URI(\n                u.getProtocol(),\n                u.getUserInfo(),\n                u.getHost(),\n                u.getPort(),\n                encodedPath,\n                encodedQuery,\n                u.getRef());\n        return uri.toURL();\n    } catch (Exception e) {\n        // fallback to the original URL if encoding fails\n        return u;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}