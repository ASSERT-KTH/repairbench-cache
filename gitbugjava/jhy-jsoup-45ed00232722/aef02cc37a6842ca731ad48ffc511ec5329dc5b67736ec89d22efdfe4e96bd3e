{
    "generation": "    static URL encodeUrl(URL u) {\n        u = punyUrl(u);\n        try {\n            String urlS = u.toExternalForm();\n            // Properly encode all reserved characters in path and query\n            URI uri = new URI(urlS);\n            String encodedPath = \"\";\n            if (uri.getPath() != null) {\n                encodedPath = encodeURIComponent(uri.getPath());\n            }\n            String encodedQuery = uri.getQuery() != null ? encodeURIComponent(uri.getQuery()) : null;\n            URI encodedURI = new URI(\n                uri.getScheme(),\n                uri.getAuthority(),\n                encodedPath,\n                encodedQuery,\n                uri.getFragment()\n            );\n            return new URL(encodedURI.toASCIIString());\n        } catch (URISyntaxException | MalformedURLException e) {\n            return u;\n        }\n    }\n\n    private static String encodeURIComponent(String component) {\n        try {\n            return URLEncoder.encode(component, \"UTF-8\")\n                .replace(\"+\", \"%20\")\n                .replace(\"%21\", \"!\")\n                .replace(\"%27\", \"'\")  // for URLEncoder escapes ! and ' which can stay unencoded in path\n                .replace(\"%28\", \"(\")\n                .replace(\"%29\", \")\")\n                .replace(\"%7E\", \"~\"); // optionally handle the ~ case\n        } catch (UnsupportedEncodingException e) {\n            throw new RuntimeException(e);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}