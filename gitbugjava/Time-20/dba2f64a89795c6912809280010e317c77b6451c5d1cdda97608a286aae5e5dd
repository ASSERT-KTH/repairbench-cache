{
    "generation": "        public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n            String str = text.substring(position);\n            String bestMatchId = null;\n            int bestMatchLength = 0;\n\n            // ALL_IDS is assumed to be a collection (like Set or List) of all available Zone IDs\n            // It should be sourced from DateTimeZone.getAvailableIDs() typically.\n            for (String id : ALL_IDS) {\n                if (str.startsWith(id)) {\n                    int idLength = id.length();\n                    // Check if this match is longer than the best match found so far\n                    // This ensures that \"America/Dawson_Creek\" is preferred over \"America/Dawson\"\n                    // when parsing \"America/Dawson_Creek\".\n                    if (idLength > bestMatchLength) {\n                        bestMatchId = id;\n                        bestMatchLength = idLength;\n                    }\n                }\n            }\n\n            if (bestMatchId != null) {\n                bucket.setZone(DateTimeZone.forID(bestMatchId));\n                return position + bestMatchLength;\n            }\n            \n            // No match found\n            return ~position;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}