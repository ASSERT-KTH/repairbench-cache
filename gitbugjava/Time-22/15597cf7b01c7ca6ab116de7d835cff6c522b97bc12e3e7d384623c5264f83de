{
    "generation": "    /**\n     * Creates a period from the given millisecond duration with the standard period type\n     * and ISO rules, ensuring that the calculation is performed with the time-only period type.\n     * <p>\n     * The calculation uses the hour, minute, second and millisecond fields.\n     *\n     * @param duration  the duration, in milliseconds\n     */\n    protected BasePeriod(long duration) {\n        // Creates a period based on a duration.\n        // The duration is expressed in milliseconds and is measured precisely.\n        // The resulting period has the standard period type.\n        // The calculation is performed assuming the ISO chronology and only\n        // considering the time fields. The date fields (Y, M, W, D) are set to zero.\n        // This constructor delegates to the main constructor to ensure the type and chrono are set\n        // correctly, initializing all fields to zero. Then, it calculates and sets the time fields.\n        this(0L, PeriodType.standard(), ISOChronology.getInstance()); // Init with standard type, 0 duration, ISO chronology\n\n        // Calculate time field values from the duration\n        long durationRemaining = duration;\n        int hours = FieldUtils.safeToInt(durationRemaining / DateTimeConstants.MILLIS_PER_HOUR);\n        durationRemaining %= DateTimeConstants.MILLIS_PER_HOUR;\n        int minutes = FieldUtils.safeToInt(durationRemaining / DateTimeConstants.MILLIS_PER_MINUTE);\n        durationRemaining %= DateTimeConstants.MILLIS_PER_MINUTE;\n        int seconds = FieldUtils.safeToInt(durationRemaining / DateTimeConstants.MILLIS_PER_SECOND);\n        durationRemaining %= DateTimeConstants.MILLIS_PER_SECOND;\n        int millis = FieldUtils.safeToInt(durationRemaining);\n\n        // Set the calculated values directly into the internal array.\n        // Indices for standard period type (Y, M, W, D, H, M, S, MS): H=4, M=5, S=6, Ms=7\n        setValue(4, hours);\n        setValue(5, minutes);\n        setValue(6, seconds);\n        setValue(7, millis);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}