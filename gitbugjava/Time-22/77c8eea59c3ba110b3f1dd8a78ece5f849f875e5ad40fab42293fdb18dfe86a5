{
    "generation": "    /**\n     * Creates a period from the given millisecond duration with the standard period type\n     * and ISO rules, ensuring that the calculation is performed with the time-only period type.\n     * <p>\n     * The calculation uses the hour, minute, second and millisecond fields.\n     *\n     * @param duration  the duration, in milliseconds\n     */\n    protected BasePeriod(long duration) {\n        // bug [3264409] - was using chrono.get which used dates/time zones\n        // constructor needs to be based on duration alone based on time fields\n        // calculation is performed relative to UT padr\u00f5es - see toPeriod (long)\n        this(0, 0, 0, 0,\n                (int) (duration / DateTimeConstants.MILLIS_PER_HOUR),\n                (int) (duration / DateTimeConstants.MILLIS_PER_MINUTE % 60),\n                (int) (duration / DateTimeConstants.MILLIS_PER_SECOND % 60),\n                (int) (duration % 1000), PeriodType.standard());\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}