{
    "generation": "    @Override\n    public String asStringLiteral()\n    {\n        boolean containsDoubleQuote = this.value.contains(\"\\\"\");\n        boolean containsSingleQuote = this.value.contains(\"'\");\n\n        // If the string contains double quotes but no single quotes,\n        // use single quotes as delimiters to avoid conflicts.\n        if (containsDoubleQuote && !containsSingleQuote)\n        {\n            return \"'\" + this.value + \"'\";\n        }\n        else\n        {\n            // Otherwise, use double quotes as delimiters.\n            // This covers cases where:\n            // - The string contains no quotes.\n            // - The string contains only single quotes.\n            // - The string contains both double and single quotes (though this might require escaping\n            //   in a more general context, using double quotes aligns with the provided test case).\n            return '\"' + this.value + '\"';\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}