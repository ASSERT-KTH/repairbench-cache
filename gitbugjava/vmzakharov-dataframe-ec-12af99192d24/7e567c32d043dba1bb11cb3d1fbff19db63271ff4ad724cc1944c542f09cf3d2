{
    "generation": "    @Override\n    public String asStringLiteral()\n    {\n        // Use the twice to handle mixed (' and \") quotes\n        if (this.value == null)\n            return \"null\";\n        if (this.value.isEmpty())\n            return \"''\";\n        if (this.value.contains(\"\\\"\") && this.value.contains(\"'\"))\n            // In this case we should format the string with matching parentheses properties.\n            return escapeQuotes(this.value);\n        if (this.value.contains(\"'\")){\n            return \"\\\"\" + this.value + \"\\\"\";\n        }\n        return \"'\" + this.value.replace(\"'\", \"''\") + \"'\";\n    }\n\n    private String escapeQuotes(String value) {\n        // Escape the quotes to handle both ' and \" separately\n        if (value == null)\n            value = \"null\";\n        else if (value.isEmpty())\n            value = \"\\\"\";\n        else {\n            StringBuilder sb = new StringBuilder();\n            sb.append('\\\"');\n            for (char c: value.toCharArray()) {\n                if (c == '\\\\') {\n                    sb.append(\"\\\\\\\\\");\n                } else if (c == '\\\"') {\n                    sb.append(\"\\\\\\\"\");\n                } else if (c == '\\'') {\n                    sb.append('\\\\');\n                } else {\n                    sb.append(c);\n                }\n            }\n            sb.append('\\\"');\n            value = sb.toString();\n        }\n        return value;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}