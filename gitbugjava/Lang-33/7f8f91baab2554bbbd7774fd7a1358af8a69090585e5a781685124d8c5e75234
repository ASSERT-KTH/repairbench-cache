{
    "generation": "    /**\n     * <p>Converts an array of <code>Object</code> in to an array of <code>Class</code> objects.\n     * If any of these objects is null, a null element will be inserted into the array.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array an <code>Object</code> array\n     * @return a <code>Class</code> array, <code>null</code> if null array input\n     * @since 2.4\n     */\n    public static Class<?>[] toClass(Object[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            // Consider using a shared constant for empty Class array if available, e.g., ArrayUtils.EMPTY_CLASS_ARRAY\n            // Assuming ArrayUtils is available and has EMPTY_CLASS_ARRAY defined\n             // return ArrayUtils.EMPTY_CLASS_ARRAY; // Keep original if ArrayUtils is available\n             return new Class<?>[0]; // Or return a new empty array if not\n        }\n        Class<?>[] classes = new Class[array.length];\n        for (int i = 0; i < array.length; i++) {\n            // Check if the object is null before attempting to get its class\n            classes[i] = (array[i] == null) ? null : array[i].getClass();\n        }\n        return classes;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}