{
    "generation": "    /**\n     * Instantiates a HostAbstract, setting default capacity values for RAM, BW and Storage;\n     * default {@link VmScheduler}, {@link RamProvisioner} and {@link BwProvisioner}.\n     * The PEs capacity is defined by the {@link Pe} list supplied.\n     *\n     * @param peList list of processing elements that the host will have (must contain at least one Pe)\n     * @param activate true to make the host active upon creation, false otherwise\n     * @see #defaultRamCapacity\n     * @see #defaultBwCapacity\n     * @see #defaultStorageCapacity\n     * @see VmSchedulerTimeShared\n     * @see RamProvisionerSimple#RamProvisionerSimple(long)\n     * @see BwProvisionerSimple#BwProvisionerSimple(long)\n     */\n    public HostAbstract(final List<Pe> peList, final boolean activate) {\n        // Calls the main constructor providing default values for resource capacities and provisioners\n        this(\n            defaultStorageCapacity,\n            peList,\n            new VmSchedulerTimeShared(),\n            new RamProvisionerSimple(defaultRamCapacity),\n            new BwProvisionerSimple(defaultBwCapacity)\n        );\n        // The main constructor called above sets the Host to active by default.\n        // This ensures the desired activation status is set based on the parameter.\n        setActive(activate);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}