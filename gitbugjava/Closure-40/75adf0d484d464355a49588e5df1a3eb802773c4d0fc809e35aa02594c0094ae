{
    "generation": "    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n\n      // Record global variable and function declarations\n      if (t.inGlobalScope()) {\n        if (NodeUtil.isVarDeclaration(n)) {\n          NameInformation ns = createNameInformation(t, n, parent);\n          Preconditions.checkNotNull(ns);\n          recordSet(ns.name, n);\n        } else if (NodeUtil.isFunctionDeclaration(n)) {\n          Node nameNode = n.getFirstChild();\n          NameInformation ns = createNameInformation(t, nameNode, n);\n          if (ns != null) {\n            // Use getName to ensure the name is registered\n            JsName nameInfo = getName(nameNode.getString(), true);\n            recordSet(nameInfo.name, nameNode);\n          }\n        } else if (NodeUtil.isObjectLitKey(n, parent)) {\n          NameInformation ns = createNameInformation(t, n, parent);\n          if (ns != null) {\n            recordSet(ns.name, n);\n          }\n        }\n      }\n\n      // Record assignments and call sites\n      if (n.isAssign()) {\n        Node nameNode = n.getFirstChild();\n\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        if (ns != null) {\n          if (ns.isPrototype) {\n            recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);\n          } else {\n            recordSet(ns.name, nameNode);\n          }\n        }\n      } else if (n.isCall()) {\n        Node nameNode = n.getFirstChild(); // Callee\n        NameInformation ns = createNameInformation(t, nameNode, n);\n\n        // Special handling for functions like goog.inherits, etc.\n        if (ns != null && ns.onlyAffectsClassDef) {\n          JsName name = getName(ns.name, false);\n          if (name != null) {\n            refNodes.add(new ClassDefiningFunctionNode(\n                name, n, parent, parent.getParent()));\n\n            // Record references to the arguments of this call.\n            // Arguments start from the second child.\n            for (int i = 1; i < n.getChildCount(); i++) {\n              Node argNode = n.getChildAtIndex(i);\n              // Check if argNode is a name or qualified name before creating NameInformation\n              if (argNode.isName() || argNode.isGetProp()) {\n                  NameInformation nsArg = createNameInformation(t, argNode, n);\n                  if (nsArg != null) {\n                    // Record a reference to the argument name.\n                    // Using getName(..., false) ensures the name exists in the graph\n                    // if it was previously defined, marking the reference link.\n                    getName(nsArg.name, false);\n                  }\n              }\n            }\n          }\n        }\n        // NOTE: General references within non-special calls are assumed to be\n        // handled implicitly by the traversal visiting the argument nodes themselves,\n        // or by a different analysis mechanism.\n      }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}