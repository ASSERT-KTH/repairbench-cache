{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * <p>\n     * A token is a short option if it starts with a hyphen, is longer\n     * than one character, and the character following the hyphen is a\n     * registered short option character. This allows for concatenated\n     * short options (-ab) and short options with values (-Dflag=true).\n     * It does not prevent tokens like \"- LongOption\" from being incorrectly\n     * identified as short options if ' ' is registered as a short option character,\n     * but this is not a typical use case.\n     *\n     * @param token The token to check.\n     * @return {@code true} if the token looks like a short option.\n     */\n    private boolean isShortOption(String token)\n    {\n        // Short options must start with \"-\", be longer than 1 character.\n        if (!token.startsWith(\"-\") || token.length() == 1)\n        {\n            return false;\n        }\n\n        // Retrieve the character immediately following the hyphen.\n        // This handles concatenated options like -ab and options with\n        // attached values like -Tfoo or -T=foo. We only need to check\n        // if the first character is a valid option trigger. The parser\n        // logic will handle the rest (splitting concatenated options,\n        // extracting values).\n        String optionChar = token.substring(1, 2);\n\n        // Check if this character is registered as a short option.\n        return options.hasShortOption(optionChar);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}