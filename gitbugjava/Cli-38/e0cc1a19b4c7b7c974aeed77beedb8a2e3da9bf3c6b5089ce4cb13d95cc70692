{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     *\n     * Short options are tokens starting with a hyphen followed by a single character,\n     * or potentially multiple characters if they represent concatenated short options\n     * (e.g., \"-abc\") or a short option with an argument attached (e.g., \"-Dvalue\").\n     * It might also include an equals sign separating the option and value (e.g., \"-f=file\").\n     *\n     * @param token The token to inspect.\n     * @return {@code true} if the token looks like a short option or a\n     *         set of concatenated short options.\n     */\n    private boolean isShortOption(String token)\n    {\n        // 1. Must start with '-'\n        if (!token.startsWith(\"-\")) {\n            return false;\n        }\n\n        // 2. Must be longer than \"-\"\n        if (token.length() == 1) {\n            return false;\n        }\n\n        // 3. Extract the potential option name part (after '-' and before '=')\n        //    Handles cases like \"-f=file\" and \"-Dvalue\"\n        int pos = token.indexOf(\"=\");\n        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);\n\n        // 4. Check if the whole string after '-' is a defined single short option\n        //    This handles cases like \"-t1\" where \"t1\" is a single option key.\n        if (options.hasShortOption(optName)) {\n            return true;\n        }\n\n        // 5. Check if the token *could* be concatenated short options (e.g., \"-ab\", \"-vxf\")\n        //    or a short option with an attached value (e.g., \"-Dvalue\", where 'D' is the option).\n        //    It qualifies if the *first character* after the '-' is a defined short option.\n        //    The parser will later determine if subsequent characters are other options or a value.\n        //    We need !optName.isEmpty() for cases like \"-=\".\n        if (!optName.isEmpty() && options.hasShortOption(optName.substring(0, 1))) {\n            // E.g., \"-vxf\": If 'v' is a short option, return true.\n            // E.g., \"-Dparam=value\": If 'D' is a short option, return true.\n            // E.g., \"-t1\": If \"t1\" is not an option, but \"t\" is, return true.\n            return true;\n        }\n\n        // If neither the full name nor the first character is a short option,\n        // then it doesn't look like a short option token.\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}