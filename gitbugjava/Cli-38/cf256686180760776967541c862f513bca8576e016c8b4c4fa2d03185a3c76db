{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * <p>\n     * This method is used by the parser to determine if a token signals\n     * the start of short options sequence (e.g. \"-a\", \"-b\", \"-ab\", \"-c=value\").\n     * It does not need to verify if *all* letters in a potential sequence\n     * like \"-abc\" correspond to valid options, only the first one.\n     *\n     * @param token The token to inspect.\n     * @return true if the token looks like a short option.\n     */\n    private boolean isShortOption(String token)\n    {\n        // Must start with \"-\"\n        if (!token.startsWith(\"-\")) {\n            return false;\n        }\n\n        // Must be longer than \"-\"\n        if (token.length() == 1) {\n            return false;\n        }\n\n        // \"-\" followed by a character?\n        // If the token is \"-ab\", check for \"a\".\n        // If the token is \"-a=value\", check for \"a\".\n        // If the token is \"-avalue\", check for \"a\".\n        // The first character following the '-' must be a registered short option.\n        String optChar = token.substring(1, 2);\n        return options.hasShortOption(optChar);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}