{
    "generation": "    private Position decode04(Channel channel, SocketAddress remoteAddress, ByteBuf buf) throws ParseException {\n        buf.readUnsignedShortLE(); \n        buf.readUnsignedShortLE(); \n        int index = buf.readUnsignedShortLE();\n        String id = String.format(\"%08d%07d\", buf.readUnsignedIntLE(), buf.readUnsignedIntLE());\n        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, String.valueOf(id));\n        if (deviceSession == null) {\n            return null;\n        }\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        position.set(Position.KEY_INDEX, index);\n        position.setDeviceTime(new Date(buf.readUnsignedIntLE() * 1000));\n        while (buf.isReadable()) {\n            int type = buf.readUnsignedByte();\n            switch (type) {\n                case 0:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());\n                    buf.readUnsignedIntLE(); \n                    int status = buf.readUnsignedShortLE();\n                    position.set(Position.KEY_IGNITION, BitUtil.check(status, 5));\n                    position.set(Position.KEY_STATUS, status);\n                    position.setValid(true);\n// buggy code\n//                     position.setLatitude(buf.readInt() * 0.00001);\n//                     position.setLongitude(buf.readInt() * 0.00001);\n//                     position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n//                     position.setCourse(buf.readUnsignedShortLE());\n//                     position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n//                     position.set(Position.KEY_GPS, buf.readUnsignedByte());\n//                     position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n//                     position.set(Position.KEY_ODOMETER_TRIP, buf.readUnsignedShortLE());\n//                     position.set(\"maxAcceleration\", buf.readUnsignedShortLE() * 0.001);\n//                     position.set(\"maxDeceleration\", buf.readUnsignedShortLE() * 0.001);\n//                     buf.readUnsignedShortLE(); \n//                     buf.readUnsignedIntLE(); \n//                     position.setFixTime(new Date(buf.readUnsignedIntLE() * 1000));\n//                     buf.readUnsignedByte(); \n//                     break;\n//                 case 1:\n//                     buf.skipBytes(buf.readUnsignedShortLE()); \n//                     break;\n//                 case 4:\n//                     buf.skipBytes(53); \n//                     break;\n//                 case 20:\n//                     buf.skipBytes(32); \n//                     break;\n//                 case 22:\n//                     buf.readUnsignedByte(); \n//                     buf.skipBytes(buf.readUnsignedShortLE()); \n//                     break;\n//                 case 30:\n//                     buf.skipBytes(79); \n//                     break;\n//                 case 40:\n//                     buf.skipBytes(40); \n//                     break;\n//                 case 50:\n//                     buf.skipBytes(buf.readUnsignedShortLE()); \n                                        position.setLatitude(buf.readIntLE() * 0.00001);\n                    position.setLongitude(buf.readIntLE() * 0.00001);\n                    break;\n                case 255:\n                    buf.skipBytes(4); \n                    break;\n                default:\n                    throw new IllegalArgumentException(String.format(\"Unknown type %d\", type));\n            }\n        }\n        return position.getValid() ? position : null;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}