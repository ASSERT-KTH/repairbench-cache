{
    "generation": "    public void captureArgumentsFrom(Invocation invocation) {\n        int matchersSize = matchers.size();\n        Object[] rawArgs = invocation.getRawArguments();\n        int actualArgCount = rawArgs.length;\n        Method method = invocation.getMethod();\n        boolean isVarArgs = method.isVarArgs();\n        // The vararg parameter is the last one in the signature\n        int varargPosition = -1;\n        if (isVarArgs) {\n            varargPosition = method.getParameterTypes().length - 1;\n        }\n\n        for (int position = 0; position < matchersSize; position++) {\n            Matcher m = matchers.get(position);\n            // If matcher doesn't capture, simply continue.\n            if (!(m instanceof CapturesArguments)) {\n                continue;\n            }\n            CapturesArguments captor = (CapturesArguments) m;\n\n            // Check if this matcher is for the vararg parameter position\n            if (isVarArgs && position == varargPosition) {\n                // Capture all remaining actual arguments from the vararg position onwards.\n                // This occurs when the number of matchers equals the number of declared parameters,\n                // and the last matcher corresponds to the vararg parameter.\n                for (int i = position; i < actualArgCount; i++) {\n                    captor.captureFrom(rawArgs[i]);\n                }\n                // Once the vararg arguments are captured, break the loop as this captor\n                // accounts for all remaining arguments.\n                break;\n            } else {\n                // Capture a single argument for a non-vararg parameter,\n                // or if the method isn't varargs.\n                // Check if an argument exists at this position before capturing.\n                if (position < actualArgCount) {\n                    captor.captureFrom(rawArgs[position]);\n                }\n                // If position >= actualArgCount, there's no corresponding argument in this\n                // specific invocation for this matcher/captor (e.g., fewer args passed than matchers),\n                // so nothing is captured for this position.\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}