{
    "generation": "    /**\n     * <p>If an {@link Option} exists for <code>token</code> then\n     * set the current option and add the token to the processed\n     * list.</p>\n     *\n     * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>\n     * is set then ignore the current token and add the remaining tokens\n     * to the processed tokens list directly.</p>\n     *\n     * @param token The current option token\n     * @param stopAtNonOption Specifies whether flattening should halt\n     * at the first non option.\n     */\n    private void processOptionToken(String token, boolean stopAtNonOption)\n    {\n        if (options.hasOption(token))\n        {\n            currentOption = options.getOption(token);\n            // Add the token to the processed list\n            tokens.add(token);\n        }\n        else if (stopAtNonOption)\n        {\n            // Treat the token as a non-option argument and stop processing\n            eatTheRest = true;\n            tokens.add(token);\n        }\n        else\n        {\n            // An unrecognized option was found, add it to the processed list\n            // so that the main parse loop can deal with it.\n            tokens.add(token);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}