{
    "generation": "private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n    List<Position> positions = new LinkedList<>();\n\n    if (buf.isReadable()) {\n        intimmelIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',');\n        if (immelIndex == -1) {\n            return positions;\n        }\n        buf.readerIndex(immelIndex + 1);\n        if (buf.readableBytes() >= 15) {\n            String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n            buf.skipBytes(1 + 3 + 1);\n        } else {\n            return positions;\n        }\n    } else {\n        return positions;\n    }\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    if (buf.readableBytes() >= 4) {\n        buf.readUnsignedIntLE();\n    } else {\n        return positions;\n    }\n\n    if (buf.readableBytes() >= 2) {\n        int count = buf.readUnsignedShortLE();\n    } else {\n        return positions;\n    }\n\n    for (int i = 0; i < count; i++) {\n        if (!buf.readableBytes()) {\n            break;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        if (buf.readableBytes() >= 4) {\n            buf.readUnsignedShortLE();\n            buf.readUnsignedShortLE();\n        } else {\n            break;\n        }\n\n        if (buf.readableBytes() >= 1) {\n            int paramCount = buf.readUnsignedByte();\n        } else {\n            break;\n        }\n\n        for (int j = 0; j < paramCount && buf.readableBytes() > 0; j++) {\n            if (buf.readableBytes() >= 1) {\n                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n                int id;\n                if (extension) {\n                    if (buf.readableBytes() >= 2) {\n                        id = buf.readUnsignedShort();\n                    } else {\n                        continue;\n                    }\n                } else {\n                    id = buf.readUnsignedByte();\n                }\n\n                switch (id) {\n                    case 0x01:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                        }\n                        break;\n                    case 0x05:\n                        if (buf.readableBytes() >= 1) {\n                            position.setValid(buf.readUnsignedByte() > 0);\n                        }\n                        break;\n                    case 0x06:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                        }\n                        break;\n                    case 0x07:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                        }\n                        break;\n                    case 0x14:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n                        }\n                        break;\n                    case 0x15:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_INPUT, buf.readUnsignedByte());\n                        }\n                        break;\n                    case 0x47:\n                        if (buf.readableBytes() >= 1) {\n                            int lockState = buf.readUnsignedByte();\n                            if (lockState > 0) {\n                                position.set(Position.KEY_LOCK, lockState == 2);\n                            }\n                        }\n                        break;\n                    case 0x97:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                        }\n                        break;\n                    case 0x9D:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                        }\n                        break;\n                    case 0xFE69:\n                        if (buf.readableBytes() >= 1) {\n                            position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                        }\n                        break;\n                    default:\n                        if (buf.readableBytes() >= 1) {\n                            buf.readUnsignedByte();\n                        }\n                        break;\n                }\n            }\n        }\n\n        if (buf.readableBytes() >= 1) {\n            paramCount = buf.readUnsignedByte();\n        } else {\n            break;\n        }\n\n        for (int j = 0; j < paramCount && buf.readableBytes() > 0; j++) {\n            if (buf.readableBytes() >= 1) {\n                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n                int id;\n                if (extension) {\n                    if (buf.readableBytes() >= 2) {\n                        id = buf.readUnsignedShort();\n                    } else {\n                        continue;\n                    }\n                } else {\n                    id = buf.readUnsignedByte();\n                }\n\n                switch (id) {\n                    case 0x08:\n                        if (buf.readableBytes() >= 2) {\n                            position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                        }\n                        break;\n                    case 0x09:\n                        if (buf.readableBytes() >= 2) {\n                            position.setCourse(buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0x0A:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0x0B:\n                        if (buf.readableBytes() >= 2) {\n                            position.setAltitude(buf.readShortLE());\n                        }\n                        break;\n                    case 0x16:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE() * 0.01);\n                        }\n                        break;\n                    case 0x19:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);\n                        }\n                        break;\n                    case 0x1A:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);\n                        }\n                        break;\n                    case 0x40:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0x91:\n                    case 0x92:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0x98:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_FUEL_USED, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0x99:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_RPM, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0x9C:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0x9F:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    case 0xC9:\n                        if (buf.readableBytes() >= 2) {\n                            position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShortLE());\n                        }\n                        break;\n                    default:\n                        if (buf.readableBytes() >= 2) {\n                            buf.readUnsignedShortLE();\n                        }\n                        break;\n                }\n            }\n        }\n\n        if (buf.readableBytes() >= 1) {\n            paramCount = buf.readUnsignedByte();\n        } else {\n            break;\n        }\n\n        for (int j = 0; j < paramCount && buf.readableBytes() > 0; j++) {\n            if (buf.readableBytes() >= 1) {\n                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n                int id;\n                int length = 0;\n                if (extension) {\n                    if (buf.readableBytes() >= 2) {\n                        id = buf.readUnsignedShort();\n                        if (buf.readableBytes() >= 1) {\n                            length = buf.readUnsignedByte();\n                        } else {\n                            length = 0;\n                        }\n                    } else {\n                        continue;\n                    }\n                } else {\n                    id = buf.readUnsignedByte();\n                    if (buf.readableBytes() >= 1) {\n                        length = buf.readUnsignedByte();\n                    } else {\n                        length = 0;\n                    }\n                }\n\n                if (length > 0 && buf.readableBytes() >= length) {\n                    switch (id) {\n                        case 0x02:\n                            position.setLatitude(buf.readIntLE() * 0.000001);\n                            break;\n                        case 0x03:\n                            position.setLongitude(buf.readIntLE() * 0.000001);\n                            break;\n                        case 0x04:\n                            if (buf.readableBytes() >= 4) {\n                                position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000)); // 2000-01-01\n                            }\n                            break;\n                        case 0x0C:\n                        case 0x9B:\n                            if (buf.readableBytes() >= 4) {\n                                position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                            }\n                            break;\n                        case 0x0D:\n                            if (buf.readableBytes() >= 4) {\n                                position.set(\"runtime\", buf.readUnsignedIntLE());\n                            }\n                            break;\n                        case 0x25:\n                            if (buf.readableBytes() >= 4) {\n                                position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readUnsignedIntLE()));\n                            }\n                            break;\n                        case 0xA0:\n                            if (buf.readableBytes() >= 4) {\n                                position.set(Position.KEY_FUEL_USED, buf.readUnsignedIntLE() * 0.001);\n                            }\n                            break;\n                        case 0xA2:\n                            if (buf.readableBytes() >= 4) {\n                                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedIntLE() * 0.01);\n                            }\n                            break;\n                        case 0x2A:\n                        case 0x2B:\n                        case 0x2C:\n                        case 0x2D:\n                        case 0x2E:\n                        case 0x2F:\n                        case 0x30:\n                        case 0x31:\n                            if (buf.readableBytes() >= 2) {\n                                buf.readUnsignedByte();\n                                position.set(Position.PREFIX_TEMP + (id - 0x2A), buf.readShortLE() * 0.01);\n                            }\n                            break;\n                        case 0xFE31:\n                            if (buf.readableBytes() >= 2) {\n                                buf.readUnsignedByte();\n                                buf.readUnsignedByte();\n                                length -= 2;\n                                if (length > 0) {\n                                    buf.skipBytes(length);\n                                }\n                            }\n                            break;\n                        case 0xFEA8:\n                            if (buf.readableBytes() >= 3) {\n                                buf.readUnsignedByte();\n                                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                                buf.readUnsignedByte();\n                            }\n                            break;\n                        default:\n                            if (length > 0) {\n                                buf.skipBytes(length);\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n\n        positions.add(position);\n    }\n\n    return positions;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}