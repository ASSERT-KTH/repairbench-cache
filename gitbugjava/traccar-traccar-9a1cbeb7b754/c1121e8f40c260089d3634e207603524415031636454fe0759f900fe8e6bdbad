{
    "generation": "private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n    List<Position> positions = new LinkedList<>();\n\n    buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);\n    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n    buf.skipBytes(1 + 3 + 1);\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    buf.readUnsignedIntLE(); // remaining cache\n    int count = buf.readUnsignedShortLE();\n\n    for (int i = 0; i < count; i++) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        // \u7b2c\u4e00\u4e2a\u53c2\u6570\u7ec4\u5904\u7406\n        int paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            int length = buf.readUnsignedByte(); // \u65b0\u589elength\u5b57\u6bb5\u8bfb\u53d6\n\n            switch (id) {\n                case 0x01:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0x05:\n                    position.setValid(buf.readUnsignedByte() > 0);\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0x06:\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0x07:\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0x14:\n                    position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0x15:\n                    position.set(Position.KEY_INPUT, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0x47:\n                    int lockState = buf.readUnsignedByte();\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    if (lockState > 0) {\n                        position.set(Position.KEY_LOCK, lockState == 2);\n                    }\n                    break;\n                case 0x97:\n                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0x9D:\n                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                case 0xFE69:\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    if (length > 1) {\n                        buf.skipBytes(length - 1);\n                    }\n                    break;\n                default:\n                    // \u5728Unknown case \u4e2d\u8df3\u8fc7\u6240\u6709\u6570\u636e\u957f\u5ea6\n                    buf.skipBytes(length);\n                    break;\n            }\n        }\n\n        // \u7b2c\u4e8c\u4e2a\u53c2\u6570\u7ec4\u5904\u7406\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            int length = buf.readUnsignedByte(); // \u65b0\u589elength\u8bfb\u53d6\n\n            switch (id) {\n                case 0x08:\n                    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                    if (length > 2) { // \u5904\u7406\u540e\u7684\u6570\u636e\u9700\u8981\u8df3\u8fc7\u5269\u4f59\n                        buf.skipBytes(length - 2);\n                    }\n                    break;\n                case 0x09:\n                    position.setCourse(buf.readUnsignedShortLE());\n                    if (length > 2) {\n                        buf.skipBytes(length - 2);\n                    }\n                    break;\n                case 0x0A:\n                    position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());\n                    if (length > 2) {\n                        buf.skipBytes(length - 2);\n                    }\n                    break;\n                case 0x0B:\n                    position.setAltitude(buf.readShortLE());\n                    if (length > 2) {\n                        buf.skipBytes(length - 2);\n                    }\n                    break;\n                case 0x16:\n                    position.set(Position.KEY_ADC + 1, buf.readUnsignedIntLE());\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0x19:\n                    position.set(Position.KEY_RPM, buf.readUnsignedIntLE());\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0x40:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedIntLE()); // 4 bytes for uint32 (was previously wrong line)\n                    if (length > 4) {\n                        buf.skipBytes(length - 4); // this is an example but need to check actual required bytes\n                    }\n                    break;\n                default:\n                    buf.skipBytes(length);\n                    break;\n            }\n        }\n\n        // \u7b2c\u4e09\u4e2a\u53c2\u6570\u7ec4\u5904\u7406\uff1a\u589e\u52a0length\u8bfb\u53d6\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            int length = buf.readUnsignedByte(); // \u65b0\u589e\n\n            switch (id) {\n                case 0x02:\n                    position.setLatitude(buf.readIntLE() * 0.000001);\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0x03:\n                    position.setLongitude(buf.readIntLE() * 0.000001);\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0x04:\n                    position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000));\n                    if (length > 4) { // \u5224\u65ad\u662f\u5426\u9700\u8981\u8df3\u8fc7\u5269\u4f59\u90e8\u5206\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0x0C:\n                case 0x9B:\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0x25:\n                    position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readIntLE()));\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0xA0:\n                    position.set(Position.KEY_FUEL_USED, buf.readUnsignedIntLE() * 0.001);\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                case 0xA2:\n                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedIntLE() * 0.01);\n                    if (length > 4) {\n                        buf.skipBytes(length - 4);\n                    }\n                    break;\n                default:\n                    buf.skipBytes(length); // \u8df3\u8fc7\u6240\u6709\u4e0d\u53ef\u8bc6\u522b\u53c2\u6570\u7684\u6570\u636e\u90e8\u5206\n                    break;\n            }\n        }\n\n        // \u7b2c\u56db\u4e2a\u53c2\u6570\u7ec4\u4fdd\u6301\u4e0d\u53d8\uff0c\u5df2\u6b63\u786e\u5904\u7406length\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            int length = buf.readUnsignedByte();\n            switch (id) {\n                case 0x2A:\n                case 0x2B:\n                case 0x2C:\n                case 0x2D:\n                case 0x2E:\n                case 0x2F:\n                case 0x30:\n                case 0x31:\n                    int label = buf.readUnsignedByte(); // \u8fd9\u91cc\u8bfb\u53d61\u5b57\u8282\u7684\u6807\u7b7e\n                    float value = buf.readShortLE() * 0.01f;\n                    // \u9a8c\u8bc1\u957f\u5ea6\u5e76\u8df3\u8fc7\u5269\u4f59\u6570\u636e\uff08\u5982\u6709\u7684\u8bdd\uff09\n                    if (length > 1 + 2) {\n                        // \u6807\u7b7e\uff081\uff09+\u6570\u503c\uff08short 2\uff09\u51713\n                        buf.skipBytes(length - (1 + 2));\n                    }\n                    position.set(\"temp\" + (id - 0x2A), value);\n                    break;\n                case 0xFE31:\n                    int protocol = buf.readUnsignedByte();\n                    int alarmsType = buf.readUnsignedByte();\n                    if (length > 2) {\n                        buf.skipBytes(length - 2);\n                    }\n                    break;\n                case 0xFEA8:\n                    int status = buf.readUnsignedByte();\n                    int batteryLevel = buf.readUnsignedByte();\n                    int alert = buf.readUnsignedByte();\n                    if (length > 3) {\n                        buf.skipBytes(length - 3);\n                    }\n                    position.set(Position.KEY_BATTERY_LEVEL, batteryLevel);\n                    break;\n                default:\n                    buf.skipBytes(length); // \u5408\u9002\u5904\u7406\u4e0d\u8bc6\u522b\u53c2\u6570\n                    break;\n            }\n        }\n\n        positions.add(position);\n    }\n\n    return positions;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}