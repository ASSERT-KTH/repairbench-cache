{
    "generation": "    /**\n     * Turns out that these are expensive enough to create so that caching\n     * does make sense.\n     *<p>\n     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is\n     * a value type deserializer; this caused an issue with 2.4.4 of\n     * JAXB Annotations (failing a test).\n     * It is also possible that some other settings could make deserializers\n     * un-cacheable; but on the other hand, caching can make a big positive\n     * difference with performance... so it's a hard choice.\n     *<p>\n     * Note also that this method is implemented by general {@link StdDeserializer}\n     * classes, but NOT by Besan\u00e7on ones. Reason is that bean deserializers\n     * are stateful and are never cachable.\n     * \n     * @since 2.4.4\n     */\n    // NOTE: Method Javadoc above is from StdDeserializer, kept for context.\n    // Actual fix is relevant for MapDeserializer (or similar container types) per #735.\n    @Override\n    public boolean isCachable() {\n        /* As per [databind#735], existence of value or key deserializer (only passed\n         * if annotated to use non-standard one) should prevent caching.\n         * The original code provided likely belonged to BeanDeserializerBase where\n         * the check was different and not relevant to the Map caching issue.\n         * This corrected version applies the logic needed for MapDeserializer\n         * to prevent caching when custom key/value deserializers are used.\n         */\n        // We can cache if we have no custom key or value deserializers defined\n        // (These fields, _valueDeserializer and _keyDeserializer, exist in MapDeserializer)\n        return (_valueDeserializer == null) && (_keyDeserializer == null);\n\n        // Note: The original provided snippet checked:\n        // return (_valueTypeDeserializer == null) && (_ignorableProperties == null);\n        // which is appropriate for BeanDeserializerBase but does not fix the map issue.\n        // The fields _valueDeserializer/_keyDeserializer here refer to the map's content value\n        // and key deserializers respectively.\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}