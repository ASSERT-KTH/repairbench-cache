{
    "generation": "    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n        final boolean prettyPrint = out.prettyPrint();\n        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;\n        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n\n        boolean trimLeading = false;\n        boolean trimTrailing = false;\n        if (normaliseWhite) {\n            // Original trimLeading condition:\n            // trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) || parentNode instanceof Document;\n            // The issue 1858 in jsoup (related to <br> indentation) suggests expanding this,\n            // but the primary indentation should come from the indent() call.\n            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||\n                          parentNode instanceof Document;\n\n\n            // if this text is just whitespace, and the next node will cause an indent, skip this text:\n            Node next = this.nextSibling();\n            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent\n                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting\n            if (couldSkip && isBlank()) return;\n\n            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();\n\n            // Indent text nodes that are not whitespace only, and are not at the beginning of a block element,\n            // but come after a block element, or specifically after a <br> tag.\n            // The original condition `(siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank())`\n            // caused an unwanted indent before the first text node in a block, e.g., <p>\\n  Hello.\n            // The correct pretty print for <p>Hello</p> is <p>Hello</p>, no internal newline.\n            // This condition is removed, and a specific condition for <br> is added to handle issue #1858.\n            if ((out.outline() && siblingNodes().size() > 0 && !isBlank()) ||\n                // NEW: if previous sibling is a <br> tag and this text node is not blank, indent.\n                (previousSibling() != null && previousSibling() instanceof Element && ((Element)previousSibling()).tag().getName().equalsIgnoreCase(\"br\") && !isBlank()))\n                indent(accum, depth, out);\n        }\n\n        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}