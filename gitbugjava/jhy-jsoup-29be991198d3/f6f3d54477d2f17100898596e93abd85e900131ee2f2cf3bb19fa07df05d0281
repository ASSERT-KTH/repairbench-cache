{
    "generation": "    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n        final boolean prettyPrint = out.prettyPrint();\n        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;\n        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n\n        boolean trimLeading = false;\n        boolean trimTrailing = false;\n        if (normaliseWhite) {\n            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||\n                parentNode instanceof Document;\n            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();\n\n            // if this text is just whitespace, and the next node will cause an indent, skip this text:\n            Node next = this.nextSibling();\n            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent\n                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting\n            if (couldSkip && isBlank()) return;\n\n            // Original indent condition:\n            // boolean siblingIndentCondition = (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank());\n            // Modified indent condition:\n            // Don't indent the first TextNode in a <p> if prettyPrintPhrasing is enabled.\n            boolean siblingIndentCondition = (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank());\n            if (siblingIndentCondition && parent.tag().getNameIs(\"p\") && out.prettyPrintPhrasing()) {\n                siblingIndentCondition = false;\n            }\n\n            if (siblingIndentCondition || (out.outline() && siblingNodes().size() > 0 && !isBlank())) {\n                indent(accum, depth, out);\n            }\n        }\n\n        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}