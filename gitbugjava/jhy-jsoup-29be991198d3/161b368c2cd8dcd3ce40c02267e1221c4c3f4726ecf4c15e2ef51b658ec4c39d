{
    "generation": "    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n        final boolean prettyPrint = out.prettyPrint();\n        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;\n        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n\n        boolean trimLeading = false;\n        boolean trimTrailing = false;\n        if (normaliseWhite) {\n            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||\n                parentNode instanceof Document;\n            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();\n\n            // Determine if the previous sibling is an element\n            boolean previousIsElement = false;\n            if (siblingIndex > 0 && parent != null) {\n                Node previousSibling = parent.childNodes().get(siblingIndex - 1);\n                previousIsElement = previousSibling instanceof Element;\n            }\n\n            // if this text is just whitespace, skip if next node requires indent or is blank\n            Node next = this.nextSibling();\n            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) ||\n                (next instanceof TextNode && ((TextNode) next).isBlank());\n            if (couldSkip && isBlank()) return;\n\n            // Adjust condition to call indent when preceding sibling is an element and in block formatting\n            if ((\n                (siblingIndex == 0 || previousIsElement) &&\n                parent != null && parent.tag().formatAsBlock() &&\n                !isBlank()\n            ) || (\n                out.outline() && siblingNodes().size() > 0 && !isBlank()\n            )) {\n                indent(accum, depth, out);\n            }\n        }\n\n        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}