{
    "generation": "      // Assume 'compiler' instance is available in the scope this predicate is defined.\n      @Override\n      public boolean apply(Node n) {\n        // When the node is null it means, we reached the implicit return\n        // where the function returns (possibly without an return statement)\n        if (n == null) {\n          return false;\n        }\n\n        // Delegate the side effect check to the comprehensive utility function.\n        // This correctly handles CALL, NEW, ASSIGN, INC, DEC, DELETE, etc.,\n        // and correctly identifies 'IN' as having no side effects relevant here.\n        // The NodeUtil.has call which uses this predicate handles the traversal.\n        return NodeUtil.nodeMayHaveSideEffects(n, compiler);\n      }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}