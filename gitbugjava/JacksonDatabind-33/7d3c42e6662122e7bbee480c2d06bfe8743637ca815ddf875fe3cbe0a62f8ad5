{
    "generation": "    @Override\n    public PropertyName findNameForSerialization(Annotated a)\n    {\n        String name = null;\n\n        JsonGetter jg = _findAnnotation(a, JsonGetter.class);\n        if (jg != null) {\n            name = jg.value();\n        } else {\n            JsonProperty pann = _findAnnotation(a, JsonProperty.class);\n            if (pann != null) {\n                name = pann.value();\n            } else if (_hasAnnotation(a, JsonSerialize.class)\n                    || _hasAnnotation(a, JsonView.class)\n                    || _hasAnnotation(a, JsonRawValue.class)\n                    // [databind#451]: Also recognize @JsonUnwrapped\n                    || _hasAnnotation(a, JsonUnwrapped.class)\n                    ) {\n                name = \"\";\n            } else {\n                return null;\n            }\n        }\n        // As per [databind#44] need to consider empty String as marker\n        // for \"just indicate it's a property, possibly unnamed\"\n        // 22-Oct-2015, tatu: And for [databind#1019], even null\n        //   may need to be returned as-is.\n        return PropertyName.construct(name);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}