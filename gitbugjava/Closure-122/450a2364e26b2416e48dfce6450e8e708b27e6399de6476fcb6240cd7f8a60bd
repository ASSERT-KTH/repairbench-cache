{
    "generation": "import java.util.regex.Pattern;\n\n/**\n * Check to see if the given block comment looks like it should be JSDoc.\n * A block comment is suspicious if it starts with /* but not /**\n * and contains a JSDoc-like tag (e.g., @param, @type).\n */\nprivate void handleBlockComment(Comment comment) {\n  String commentText = comment.getValue();\n  // Check if it's a block comment (starts with /*) that is NOT a JSDoc comment (doesn't start with /**).\n  if (commentText.startsWith(\"/*\") && !commentText.startsWith(\"/**\")) {\n    // Check if the comment contains something that looks like a JSDoc tag (@ followed by a letter).\n    // This pattern is a reasonable heuristic for identifying potential JSDoc tags.\n    // Using find() is better than matches() as the tag can be anywhere.\n    if (Pattern.compile(\"@[a-zA-Z]\").matcher(commentText).find()) {\n      errorReporter.warning(\n          SUSPICIOUS_COMMENT_WARNING,\n          sourceName,\n          comment.getLineno(), \"\", 0);\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}