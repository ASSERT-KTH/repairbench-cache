{
    "generation": "    /**\n     * Tests the list for equality with another object (typically also a list).\n     * Two lists are equal if they are the same size, and contain equal\n     * shapes in the same order.  Note that 'equal' shapes are compared using\n     * {@link ShapeUtilities#equal(Shape, Shape)}.\n     *\n     * @param obj  the other object (<code>null</code> permitted).\n     *\n     * @return A boolean.\n     */\n    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        // we know obj isn't null or this, so safe to test class\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        ShapeList other = (ShapeList) obj;\n        int size = size();\n        if (size != other.size()) {\n            return false;\n        }\n        for (int i = 0; i < size; i++) {\n            // fetch the shapes (could be null) - AbstractObjectList returns\n            // Object, so we need to cast\n            java.awt.Shape s1 = (java.awt.Shape) get(i);\n            java.awt.Shape s2 = (java.awt.Shape) other.get(i);\n            // ShapeUtilities handles null arguments safely...\n            if (!org.jfree.chart.util.ShapeUtilities.equal(s1, s2)) {\n                return false;\n            }\n        }\n        // if we get to here, the lists are equal\n        return true;\n\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}