{
    "generation": "    final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {\n        final int sz = size;\n        for (int i = 0; i < sz; i++) {\n            // inlined from Attribute.html()\n            final String key = keys[i];\n            final String val = vals[i];\n            accum.append(' ').append(key);\n\n            // Check if this attribute should be collapsed in HTML mode\n            // collapse checked=null, checked=\"\", checked=checked; write out others\n            // The condition checks if we should *NOT* collapse, and thus print the =\"value\" part.\n            // We should print =\"value\" UNLESS it's HTML syntax, it's a boolean attribute,\n            // AND the value is null, empty string, or equals the key (case-insensitive).\n            final boolean isBoolean = Attribute.isBooleanAttribute(key);\n            if (!(out.syntax() == Document.OutputSettings.Syntax.html && isBoolean &&\n                  (val == null || val.isEmpty() || val.equalsIgnoreCase(key)))) {\n                accum.append(\"=\\\"\");\n                // Ensure val is not null before passing to escape, use \"\" which is safe.\n                Entities.escape(accum, val == null ? org.jsoup.internal.StringUtil.EmptyString : val, out, true, false, false);\n                accum.append('\"');\n            }\n            // otherwise, for boolean attributes output in HTML mode, with null, empty, or matching val,\n            // just output the key (which is already done above).\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}