{
    "generation": "    final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {\n        final int sz = size;\n        for (int i = 0; i < sz; i++) {\n            // inlined from Attribute.html()\n            final String key = keys[i];\n            final String val = vals[i];\n            accum.append(' ').append(key);\n\n            // Corrected condition: Collapse attribute (don't write value) if:\n            // 1) We are outputting HTML (not XML)\n            // 2) The value is null OR the attribute is a boolean attribute AND (the value is empty OR the value is case-insensitively equal to the key)\n            // This logic mirrors the logic in Attribute.shouldCollapseAttribute()\n            if (!(out.syntax() == Document.OutputSettings.Syntax.html &&\n                  (val == null || (Attribute.isBooleanAttribute(key) && (val.isEmpty() || val.equalsIgnoreCase(key))))\n               )) {\n                // If attribute should not be collapsed, append the value.\n                accum.append(\"=\\\"\");\n                Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);\n                accum.append('\"');\n            }\n            // else: attribute is collapsed or boolean, do not write value\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}