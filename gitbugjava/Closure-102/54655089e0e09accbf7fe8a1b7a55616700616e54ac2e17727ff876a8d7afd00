{
    "generation": "  @Override\n  public void process(Node externs, Node root) {\n    // This first traversal creates the SyntacticScope\n    NodeTraversal.traverse(compiler, root, this);\n\n    // This pass normalizes things like removing duplicate declarations,\n    // and handling the special 'var arguments' case.\n    removeDuplicateDeclarations(root);\n\n    // This pass should run after normalization but before optimizations\n    // that might rely on unique names.\n    if (MAKE_LOCAL_NAMES_UNIQUE) {\n      MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n      NodeTraversal t = new NodeTraversal(compiler, renamer);\n      t.traverseRoots(externs, root);\n    }\n\n    // Constant propagation runs later in the optimization pipeline.\n    new PropogateConstantAnnotations(compiler, assertOnChange)\n        .process(externs, root);\n  }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}