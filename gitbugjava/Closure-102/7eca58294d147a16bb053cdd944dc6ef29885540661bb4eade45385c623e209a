{
    "generation": "  @Override\n  public void process(Node externs, Node root) {\n    // Run MakeDeclaredNamesUnique first to handle 'arguments' correctly\n    // before normalization potentially transforms the AST.\n    // See https://github.com/google/closure-compiler/issues/115\n    if (MAKE_LOCAL_NAMES_UNIQUE) {\n      MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();\n      NodeTraversal t = new NodeTraversal(compiler, renamer);\n      // NOTE: Renamer runs on both externs and root for completeness.\n      t.traverseRoots(externs, root);\n    }\n\n    // Run the main normalization pass (presumably 'this').\n    NodeTraversal.traverse(compiler, root, this);\n\n    // Subsequent passes\n    removeDuplicateDeclarations(root);\n    new PropogateConstantAnnotations(compiler, assertOnChange)\n        .process(externs, root);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}