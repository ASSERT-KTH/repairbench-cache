{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null) return null;\n    // Compare values to decide direction\n    int rv = root.val, pv = p.val, qv = q.val;\n    if (pv < rv && qv < rv) {\n        return lowestCommonAncestor(root.left, p, q);\n    }\n    if (pv > rv && qv > rv) {\n        return lowestCommonAncestor(root.right, p, q);\n    }\n    // If split or root is equal to p or q, root is LCA\n    return root;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}