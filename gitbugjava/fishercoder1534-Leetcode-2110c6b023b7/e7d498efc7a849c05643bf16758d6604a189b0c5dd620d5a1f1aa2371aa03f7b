{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null || root == p || root == q) {\n        return root;\n    }\n\n    int left = (int) Math.min(p.val, q.val);\n    int right = (int) Math.max(p.val, q.val);\n\n    TreeNode leftVal = root.left;\n    TreeNode rightVal = root.right;\n\n    if (root.val < left) {\n        if( root == p || root == q) {\n            return root;\n        }\n        return lowestCommonAncestor(right, p, q);\n    }\n\n    if (root.val > right) {\n        if( root == p || root == q) {\n            return root;\n        }\n        return lowestCommonAncestor(leftVal, p, q);\n    }\n\n    return root;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}