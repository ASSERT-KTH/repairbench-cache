{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null) {\n        return null;\n    }\n    // If either p or q is the current root, then root is the LCA\n    if (root.val == p.val || root.val == q.val) {\n        return root;\n    }\n    if (root.val > p.val && root.val > q.val) {\n        return lowestCommonAncestor(root.left, p, q);\n    }\n    if (root.val < p.val && root.val < q.val) {\n        return lowestCommonAncestor(root.right, p, q);\n    }\n    return root;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}