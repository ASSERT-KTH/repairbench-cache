{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null) return null;\n\n    // If p or q are the root itself\n    if (root.val == p.val || root.val == q.val) {\n        return root;\n    }\n\n    if ((root.val - p.val) * (root.val - q.val) > 0) {\n        if (p.val < root.val) {\n            return lowestCommonAncestor(root.left, p, q);\n        } else {\n            return lowestCommonAncestor(root.right, p, q);\n        }\n    }\n    return root;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}