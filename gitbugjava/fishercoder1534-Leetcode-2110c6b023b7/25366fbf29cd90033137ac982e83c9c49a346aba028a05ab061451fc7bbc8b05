{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null) {\n        return null;\n    }\n\n    if (root == p || root == q) {\n        return root;\n    }\n\n    TreeNode left = lowestCommonAncestor(root.left, p, q);\n    TreeNode right = lowestCommonAncestor(root.right, p, q);\n\n    if (left != null && right != null) {\n        return root;\n    }\n\n    if (left != null) {\n        return left;\n    }\n\n    return right;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}