{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null || root == p || root == q) {\n        return root;\n    }\n    // Determine if both nodes are on the left or both on the right\n    boolean pIsOnLeft = p.val < root.val;\n    boolean qIsOnLeft = q.val < root.val;\n    \n    if (pIsOnLeft == qIsOnLeft) { // Both on the same side\n        return lowestCommonAncestor(pIsOnLeft ? root.left : root.right, p, q);\n    }\n    // Nodes are on different sides, root is the LCA\n    return root;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}