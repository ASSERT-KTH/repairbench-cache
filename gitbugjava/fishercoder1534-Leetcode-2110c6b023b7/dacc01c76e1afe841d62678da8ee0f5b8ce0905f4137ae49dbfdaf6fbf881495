{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null || p == root || q == root) {\n        return root;\n    }\n    if ((long)(root.val - p.val) * (long)(root.val - q.val) <= 0) {\n        return root;\n    }\n    if (p.val < root.val) {\n        return lowestCommonAncestor(root.left, p, q);\n    } else {\n        return lowestCommonAncestor(root.right, p, q);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}