{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null || root == p || root == q) {\n        return root;\n    }\n    long diffP = (long) root.val - p.val;\n    long diffQ = (long) root.val - q.val;\n    if (diffP * diffQ > 0) {\n        if (diffP > 0) {\n            return lowestCommonAncestor(root.left, p, q);\n        } else {\n            return lowestCommonAncestor(root.right, p, q);\n        }\n    } else {\n        return root;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}