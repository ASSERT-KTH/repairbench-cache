{
    "generation": "    @Override\n    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n        final boolean prettyPrint = out.prettyPrint();\n        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;\n        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n        final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());\n        boolean trimLeading = false, trimTrailing = false;\n\n        if (normaliseWhite) {\n            trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;\n            trimTrailing = trimLikeBlock && nextSibling() == null;\n\n            // if this text is just whitespace, and the next node will cause an indent, skip this text:\n            Node next = nextSibling();\n            Node prev = previousSibling();\n            boolean isBlank = isBlank();\n            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent\n                || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting\n                || (prev instanceof Element && ((Element) prev).isBlock())\n                ;\n            \n            // Fix 1: If the previous node is <br>, we should not skip this text node,\n            // even if it's blank. <br> itself doesn't add a newline, it breaks the line,\n            // so subsequent whitespace might be meaningful for formatting.\n            if (prev instanceof Element && ((Element) prev).tagName().equals(\"br\")) {\n                couldSkip = false;\n            }\n\n            if (couldSkip && isBlank) return;\n\n            boolean needsIndent = false;\n            if (\n                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||\n                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||\n                (siblingIndex > 0 && isNode(prev, \"br\")) // special case wrap on inline <br> - doesn't make sense as a block tag\n            ) {\n                needsIndent = true;\n            }\n\n            // Fix 2: If this text node is blank, will be trimmed (due to trimTrailing),\n            // and is the last child in a block, don't add an indent here.\n            // The parent's closing tag (outerHtmlTail) will handle the newline.\n            if (isBlank && trimTrailing && nextSibling() == null && parent != null && parent.tag().isBlock()) {\n                needsIndent = false;\n            }\n\n            if (needsIndent) {\n                indent(accum, depth, out);\n            }\n        }\n\n        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}