{
    "generation": "        public String getDescription() {\n            // Lazily build description...\n            if (_desc == null) {\n                StringBuilder sb = new StringBuilder();\n                if (_from == null) {\n                    sb.append(\"UNKNOWN\");\n                } else {\n                    Class<?> cls = (_from instanceof Class<?>) ? (Class<?>) _from : _from.getClass();\n                    // 13-Mar-2017, tatu: As per [databind#1559], need to use `getName()` to get\n                    //    canonical name (esp. for arrays); not just `getSimpleName()` which fails\n                    //    for inner classes.\n                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good\n                    //   as it drops enclosing class.\n                    //    Also: Class.getName() is mostly ok, but does look\n                    //    butt-ugly for arrays (\"[[[Ljava.lang.String;\" basically)\n                    /* 13-Mar-2017, tatu: Let's prune package names for now, for brevity,\n                     *  but retain inner/outer class distinction for non-anon/local classes.\n                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);\n                    if (pkgName != null) {\n                        sb.append(pkgName);\n                        sb.append('.');\n                    }\n                    sb.append(cls.getSimpleName());\n                    */\n                    // 15-May-2019, tatu: [databind#2346]: Need full name to avoid ambiguity for nested classes\n                    sb.append(cls.getName());\n                }\n                sb.append('[');\n                if (_fieldName != null) {\n                    sb.append('\"');\n                    sb.append(_fieldName);\n                    sb.append('\"');\n                } else if (_index >= 0) {\n                    sb.append(_index);\n                } else {\n                    sb.append('?');\n                }\n                sb.append(']');\n                _desc = sb.toString();\n            }\n            return _desc;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}