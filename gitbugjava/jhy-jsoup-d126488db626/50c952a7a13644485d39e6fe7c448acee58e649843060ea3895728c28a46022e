{
    "generation": "private String consumeSubQuery() {\n    StringBuilder sq = StringUtil.borrowBuilder();\n    int parenDepth = 0;\n    while (!tq.isEmpty()) {\n        if (tq.matches(\"(\")) {\n            parenDepth++;\n            sq.append(\"(\").append(tq.chompBalanced('(', ')')).append(\")\");\n        } else if (tq.matches(\"[\")) {\n            sq.append(\"[\").append(tq.chompBalanced('[', ']')).append(\"]\");\n        } else if (tq.matchesAny(Combinators)) {\n            if (parenDepth == 0 && sq.length() > 0)\n                break;\n            else\n                sq.append(tq.consume());\n        } else {\n            char c = tq.consume();\n            if (c == ')') {\n                if (parenDepth > 0) {\n                    parenDepth--;\n                    sq.append(c);\n                    if (parenDepth == 0)\n                        break;\n                } else {\n                    break;\n                }\n            } else {\n                sq.append(c);\n            }\n        }\n    }\n    return StringUtil.releaseBuilder(sq);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}