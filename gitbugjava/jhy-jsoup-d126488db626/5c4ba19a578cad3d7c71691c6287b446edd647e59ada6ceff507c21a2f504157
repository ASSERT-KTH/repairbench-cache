{
    "generation": "    private String consumeSubQuery() {\n        StringBuilder sb = StringUtil.borrowBuilder();\n        while (!tq.isEmpty()) {\n            if (tq.matches(\"(\"))\n                sb.append(\"(\").append(tq.chompBalanced('(', ')')).append(\")\");\n            else if (tq.matches(\"[\"))\n                sb.append(\"[\").append(tq.chompBalanced('[', ']')).append(\"]\");\n            else if (tq.matchesAny(Combinators))\n                sb.append(tq.consumeCombinator());  // Assume that tq.consumeCombinator() properly handles combintators if sq.length() > 0\n            else\n                sb.append(tq.consume());\n        }\n        return StringUtil.releaseBuilder(sb);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}