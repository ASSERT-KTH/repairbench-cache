{
    "generation": "    private String consumeSubQuery() {\n        StringBuilder sq = StringUtil.borrowBuilder();\n        while (!tq.isEmpty()) {\n            if (tq.matches(\"(\"))\n                sq.append(\"(\").append(tq.chompBalanced('(', ')')).append(\")\");\n            else if (tq.matches(\"[\"))\n                sq.append(\"[\").append(tq.chompBalanced('[', ']')).append(\"]\");\n            else if (tq.matchesAny(Combinators)) { // Check if the current token is a combinator\n                if (tq.matches(\",\")) { // If it's a comma, it indicates the end of the current sub-query.\n                    break;\n                } else { // It's another type of combinator (>, +, ~, or space). It should be part of this sub-query.\n                    sq.append(tq.consume());\n                }\n            }\n            else // Regular selector characters\n                sq.append(tq.consume());\n        }\n        return StringUtil.releaseBuilder(sq);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}