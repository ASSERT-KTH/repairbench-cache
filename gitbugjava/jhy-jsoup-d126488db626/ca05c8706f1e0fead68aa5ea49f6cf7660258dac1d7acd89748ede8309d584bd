{
    "generation": "private String consumeSubQuery() {\n    StringBuilder sq = StringUtil.borrowBuilder();\n    while (!tq.isEmpty()) {\n        if (tq.matches('(')) {\n            sq.append('(').append(tq.chompBalanced('(', ')')).append(')');\n        } else if (tq.matches('[')) {\n            sq.append('[').append(tq.chompBalanced('[', ']')).append(']');\n        } else if (tq.matchesAny(Combinators)) {\n            String combinator = tq.consume();\n            if (\",\".equals(combinator)) {\n                if (sq.length() > 0) {\n                    break;\n                }\n            } else {\n                sq.append(combinator);\n            }\n        } else {\n            sq.append(tq.consume());\n        }\n    }\n    return StringUtil.releaseBuilder(sq);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}