{
    "generation": "    private String consumeSubQuery() {\n        StringBuilder sq = StringUtil.borrowBuilder();\n// buggy code\n//         while (!tq.isEmpty()) {\n//             if (tq.matches(\"(\"))\n//                 sq.append(\"(\").append(tq.chompBalanced('(', ')')).append(\")\");\n//             else if (tq.matches(\"[\"))\n//                 sq.append(\"[\").append(tq.chompBalanced('[', ']')).append(\"]\");\n//             else if (tq.matchesAny(Combinators))\n//                 if (sq.length() > 0)\n//                     break;\n//                 else\n//                     tq.consume();\n//             else\n//                 sq.append(tq.consume());\n        \n        }\n        return StringUtil.releaseBuilder(sq);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}