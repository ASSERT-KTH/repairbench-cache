{
    "generation": "  // return: list of winning candidates in this round (if any)\n  private List<String> identifyWinners(\n      RoundTally currentRoundTally,\n      SortedMap<BigDecimal, LinkedList<String>> currentRoundTallyToCandidates)\n      throws TabulationAbortedException {\n    List<String> selectedWinners = new LinkedList<>();\n    if (config.isMultiSeatBottomsUpWithThresholdEnabled()) {\n      // if everyone meets the threshold, select them all as winners\n      boolean allMeet = currentRoundTally.getCandidatesWithMoreVotesThan(\n          currentRoundTally.getWinningThreshold()).size()\n          == currentRoundTally.numActiveCandidates();\n      if (allMeet) {\n        selectedWinners.addAll(currentRoundTally.getCandidates());\n      }\n    } else {\n      // We should only look for more winners if we haven't already filled all the seats.\n\n        // currentRoundTallyToCandidates is sorted from low to high, so just look at the last key\n        BigDecimal maxVotes = currentRoundTallyToCandidates.lastKey();\n        selectedWinners = currentRoundTallyToCandidates.get(maxVotes);\n        // But if there are multiple candidates tied for the max tally, we need to break the tie.\n        if (selectedWinners.size() > 1) {\n          Tiebreak tiebreak =\n              new Tiebreak(\n                  true,\n                  selectedWinners,\n                  config.getTiebreakMode(),\n                  currentRound,\n                  maxVotes,\n                  roundTallies,\n                  config.getCandidatePermutation());\n          String winner = tiebreak.selectCandidate();\n          // replace the list of tied candidates with our single tie-break winner\n          selectedWinners = new LinkedList<>();\n          selectedWinners.add(winner);\n          Logger.info(\n              \"Candidate \\\"%s\\\" won a tie-breaker in round %d against %s. Each candidate had %s \"\n                  + \"vote(s). %s\",\n              winner,\n              currentRound,\n              tiebreak.nonSelectedCandidateDescription(),\n              maxVotes,\n              tiebreak.getExplanation());\n        }\n      }\n    }\n    for (String winner : selectedWinners) {\n      Logger.info(\n          \"Candidate \\\"%s\\\" was elected in round %d with %s votes.\",\n          winner, currentRound, currentRoundTally.getCandidateTally(winner));\n    }\n    return selectedWinners;\n  }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}