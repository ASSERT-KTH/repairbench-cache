{
    "generation": "      @Override\n      public int parseArguments(Parameters params) throws CmdLineException {\n        String param = null;\n        try {\n          // Try to retrieve the next parameter.\n          param = params.getParameter(0);\n        } catch (CmdLineException e) {\n          // ignored. This happens if the boolean flag is the last argument.\n          // Treat missing parameter as \"true\".\n        }\n\n        if (param == null) {\n          // The flag is present, but there's no true/false value following it.\n          // This is the standard behavior for valueless boolean flags (e.g., --verbose).\n          // We assume the flag means \"true\".\n          setter.addValue(true);\n          // Return 0 to indicate that no parameter was consumed.\n          return 0;\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            // The parameter looks like \"true\", \"on\", or \"1\".\n            setter.addValue(true);\n            // Return 1 to indicate that one parameter was consumed.\n            return 1;\n          } else if (FALSES.contains(lowerParam)) {\n            // The parameter looks like \"false\", \"off\", or \"0\".\n            setter.addValue(false);\n            // Return 1 to indicate that one parameter was consumed.\n            return 1;\n          } else {\n            // The parameter is not a recognized boolean value.\n            // Assume the flag should be \"true\" (like --verbose), and\n            // the parameter belongs to the next option or is a filename.\n            setter.addValue(true);\n            // Return 0 to indicate that no parameter was consumed, leaving\n            // the current parameter to be processed by the parser later.\n            return 0;\n          }\n        }\n      }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}