{
    "generation": "      @Override\n      public int parseArguments(Parameters params) throws CmdLineException {\n        String param = params.getParameter(0);\n\n        if (param == null) {\n          // If the flag is present without any parameter, default to true.\n          // This handles cases like \"--verbose\" or \"--version\".\n          setter.addValue(true);\n          // Return 0 because the flag itself consumes no additional parameters.\n          return 0;\n        } else {\n          String lowerParam = param.toLowerCase();\n          if (TRUES.contains(lowerParam)) {\n            // Handles \"--booleanFlag true\"\n            setter.addValue(true);\n            // Return 1 because we consumed the \"true\" parameter.\n            return 1;\n          } else if (FALSES.contains(lowerParam)) {\n            // Handles \"--booleanFlag false\"\n            setter.addValue(false);\n            // Return 1 because we consumed the \"false\" parameter.\n            return 1;\n          } else {\n            // The parameter exists but is not recognized as \"true\" or \"false\".\n            // The original code assumed this meant the flag was present (set to true)\n            // and the parameter was unrelated (returned 0). This is standard for\n            // simple boolean switches that don't take arguments.\n            // However, if this handler is intended for flags where a following\n            // argument *must* be boolean if present, this case should be an error.\n            // Given the test failure (though indirect), let's assume the stricter\n            // contract: if a parameter is present, it must be a valid boolean string.\n            // Throw an exception for invalid values like \"foo\" in \"--booleanFlag foo\".\n            // Note: Need owner object, assuming setter provides access or it's a field.\n            // Assuming 'setter.getOwner()' gives the CmdLineParser object and\n            // Messages.ILLEGAL_BOOLEAN provides a standard error format string.\n            // If these are not available, a simpler generic message can be used.\n             throw new CmdLineException(setter.getOwner(),\n                 String.format(\"Invalid value '%s' for boolean option.\", param));\n            // Original code was:\n            // setter.addValue(true);\n            // return 0;\n          }\n        }\n      }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}