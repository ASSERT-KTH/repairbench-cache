{
    "generation": "public BackOffPolicy build() {\n    if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {\n        ExponentialBackOffPolicy policy;\n        if (Boolean.TRUE.equals(this.random)) {\n            policy = new ExponentialRandomBackOffPolicy();\n        } else {\n            policy = new ExponentialBackOffPolicy();\n        }\n        // \u8bbe\u7f6e\u521d\u59cb\u95f4\u9694\uff0c\u4f18\u5148\u8003\u8651supplier\uff0c\u518d\u8003\u8651value\n        if (this.delaySupplier != null) {\n            policy.initialIntervalSupplier(this.delaySupplier);\n        } else {\n            if (this.delay != null) {\n                policy.setInitialInterval(this.delay);\n            }\n        }\n        if (this.multiplierSupplier != null) {\n            policy.multiplierSupplier(this.multiplierSupplier);\n        } else if (this.multiplier != null) {\n            policy.setMultiplier(this.multiplier);\n        }\n        // \u79fb\u9664\u5bf9delay\u7684\u68c0\u67e5\uff0c\u4ec5\u68c0\u67e5maxDelay\u7684\u5b58\u5728\n        if (this.maxDelay != null) {\n            policy.setMaxInterval(\n                    this.maxDelay); // \u76f4\u63a5\u8bbe\u7f6emaxDelay\u503c\uff0c\u65e0\u9700\u548cdelay\u6bd4\u8f83\n        }\n        if (this.maxDelaySupplier != null) {\n            policy.maxIntervalSupplier(this.maxDelaySupplier);\n        }\n        if (this.sleeper != null) {\n            policy.setSleeper(this.sleeper);\n        }\n        return policy;\n    }\n    if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {\n        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();\n        // \u5904\u7406supplier\u4f18\u5148\uff0c\u6216value\n        if (this.delaySupplier != null) {\n            policy.minBackOffPeriodSupplier(this.delaySupplier);\n        } else if (this.delay != null) {\n            policy.setMinBackOffPeriod(this.delay);\n        }\n        if (this.maxDelaySupplier != null) {\n            policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);\n        } else if (this.maxDelay != null) {\n            policy.setMaxBackOffPeriod(this.maxDelay);\n        }\n        if (this.sleeper != null) {\n            policy.setSleeper(this.sleeper);\n        }\n        return policy;\n    }\n    FixedBackOffPolicy policy = new FixedBackOffPolicy();\n    // Fixed\u4ec5\u901a\u8fc7value\u8bbe\u7f6e\uff0c\u786e\u4fddDelay\u5b58\u5728\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\n    if (this.delay != null) {\n        policy.setBackOffPeriod(this.delay);\n    } else if (this.delaySupplier != null) {\n        throw new IllegalArgumentException(\"FixedBackOffPolicy requires a fixed delay\");\n    }\n    if (this.sleeper != null) {\n        policy.setSleeper(this.sleeper);\n    }\n    return policy;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}