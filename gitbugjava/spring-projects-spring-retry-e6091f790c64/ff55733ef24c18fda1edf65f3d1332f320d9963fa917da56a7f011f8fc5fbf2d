{
    "generation": "/**\n * Builds the {@link BackOffPolicy} with the given parameters.\n * \n * @return the {@link BackOffPolicy} instance\n */\npublic BackOffPolicy build() {\n    if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {\n        ExponentialBackOffPolicy policy;\n        if (Boolean.TRUE.equals(this.random)) {\n            policy = new ExponentialRandomBackOffPolicy();\n        } else {\n            policy = new ExponentialBackOffPolicy();\n        }\n        configurePolicy(policy);\n        return policy;\n    }\n    if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {\n        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();\n        configurePolicy(policy);\n        return policy;\n    }\n    FixedBackOffPolicy policy = new FixedBackOffPolicy();\n    configurePolicy(policy);\n    return policy;\n}\n\nprivate void configurePolicy(BackOffPolicy policy) {\n    if (policy instanceof ExponentialBackOffPolicy) {\n        ExponentialBackOffPolicy expPolicy = (ExponentialBackOffPolicy) policy;\n        if (this.delay != null) {\n            expPolicy.setInitialInterval(this.delay);\n        }\n        if (this.delaySupplier != null) {\n            expPolicy.initialIntervalSupplier(this.delaySupplier);\n        }\n        if (this.multiplier != null) {\n            expPolicy.setMultiplier(this.multiplier);\n        }\n        if (this.multiplierSupplier != null) {\n            expPolicy.multiplierSupplier(this.multiplierSupplier);\n        }\n        if (this.maxDelay != null) {\n            expPolicy.setMaxInterval(this.maxDelay);\n        }\n        if (this.maxDelaySupplier != null) {\n            expPolicy.maxIntervalSupplier(this.maxDelaySupplier);\n        }\n    } else if (policy instanceof UniformRandomBackOffPolicy) {\n        UniformRandomBackOffPolicy uniPolicy = (UniformRandomBackOffPolicy) policy;\n        if (this.delay != null) {\n            uniPolicy.setMinBackOffPeriod(this.delay);\n        }\n        if (this.delaySupplier != null) {\n            uniPolicy.minBackOffPeriodSupplier(this.delaySupplier);\n        }\n        if (this.maxDelay != null) {\n            uniPolicy.setMaxBackOffPeriod(this.maxDelay);\n        }\n        if (this.maxDelaySupplier != null) {\n            uniPolicy.maxBackOffPeriodSupplier(this.maxDelaySupplier);\n        }\n    } else if (policy instanceof FixedBackOffPolicy) {\n        FixedBackOffPolicy fixedPolicy = (FixedBackOffPolicy) policy;\n        if (this.delay != null) {\n            fixedPolicy.setBackOffPeriod(this.delay);\n        }\n    }\n    if (this.sleeper != null) {\n        policy.setSleeper(this.sleeper);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}