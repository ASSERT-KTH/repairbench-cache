{
    "generation": "\t/**\n\t * Builds the {@link BackOffPolicy} with the given parameters.\n\t * @return the {@link BackOffPolicy} instance\n\t */\n\tpublic BackOffPolicy build() {\n\t\tif (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {\n\t\t\tExponentialBackOffPolicy policy;\n\t\t\tif (Boolean.TRUE.equals(this.random)) {\n\t\t\t\tpolicy = new ExponentialRandomBackOffPolicy();\n\t\t\t} else {\n\t\t\t\tpolicy = new ExponentialBackOffPolicy();\n\t\t\t}\n\t\t\tif (this.delaySupplier != null) {\n\t\t\t\tpolicy.initialIntervalSupplier(this.delaySupplier);\n\t\t\t}\n\t\t\tif (this.delay != null) {\n\t\t\t\tpolicy.setInitialInterval(this.delay);\n\t\t\t}\n\t\t\tif (this.multiplierSupplier != null) {\n\t\t\t\tpolicy.multiplierSupplier(this.multiplierSupplier);\n\t\t\t}\n\t\t\tif (this.multiplier != null) {\n\t\t\t\tpolicy.setMultiplier(this.multiplier);\n\t\t\t}\n\t\t\tif (this.maxDelaySupplier != null) {\n\t\t\t\tpolicy.maxIntervalSupplier(this.maxDelaySupplier);\n\t\t\t}\n\t\t\tif (this.maxDelay != null) {\n\t\t\t\tpolicy.setMaxInterval(this.maxDelay);\n\t\t\t}\n\t\t\tif (this.sleeper != null) {\n\t\t\t\tpolicy.setSleeper(this.sleeper);\n\t\t\t}\n\t\t\treturn policy;\n\t\t}\n\t\tboolean hasMin = this.delay != null || this.delaySupplier != null;\n\t\tboolean hasMax = this.maxDelay != null || this.maxDelaySupplier != null;\n\t\tif (hasMin && hasMax) {\n\t\t\tUniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();\n\t\t\tif (this.delaySupplier != null) {\n\t\t\t\tpolicy.minBackOffPeriodSupplier(this.delaySupplier);\n\t\t\t}\n\t\t\tif (this.delay != null) {\n\t\t\t\tpolicy.setMinBackOffPeriod(this.delay);\n\t\t\t}\n\t\t\tif (this.maxDelaySupplier != null) {\n\t\t\t\tpolicy.maxBackOffPeriodSupplier(this.maxDelaySupplier);\n\t\t\t}\n\t\t\tif (this.maxDelay != null) {\n\t\t\t\tpolicy.setMaxBackOffPeriod(this.maxDelay);\n\t\t\t}\n\t\t\tif (this.sleeper != null) {\n\t\t\t\tpolicy.setSleeper(this.sleeper);\n\t\t\t}\n\t\t\treturn policy;\n\t\t} else {\n\t\t\tFixedBackOffPolicy policy = new FixedBackOffPolicy();\n\t\t\t// \u5148\u8bbe\u7f6esupplier\uff0c\u540e\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff0c\u5982\u679csupplier\u5b58\u5728\u5219\u4f18\u5148\n\t\t\tif (this.delaySupplier != null) {\n\t\t\t\t// \u5047\u8bbe\u56fa\u5b9a\u540e\u9000\u7b56\u7565\u652f\u6301\u8bbe\u7f6e\u4f9b\u5e94\u7b56\u7565\uff0c\u5426\u5219\u9700\u8981\u79fb\u9664\u8be5\u68c0\u67e5\n\t\t\t\tpolicy.setBackOffPeriodSupplier(this.delaySupplier);\n\t\t\t}\n\t\t\tif (this.delay != null) {\n\t\t\t\tpolicy.setBackOffPeriod(this.delay);\n\t\t\t}\n\t\t\tif (this.sleeper != null) {\n\t\t\t\tpolicy.setSleeper(this.sleeper);\n\t\t\t}\n\t\t\treturn policy;\n\t\t}\n\t}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}