{
    "generation": "    /**\n     * Specialized method for removing specified existing entry.\n     * NOTE: entry MUST exist, otherwise an exception is thrown.\n     */\n    public void remove(SettableBeanProperty propToRm)\n    {\n        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n        // 'key' is the potentially case-normalized key\n        String key = getPropertyName(propToRm);\n        boolean found = false;\n\n        // _hashArea contains key/value pairs: [key1, prop1, key2, prop2, ...]\n        for (int i = 1, end = _hashArea.length; i < end; i += 2) {\n            // prop is value at index i\n            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];\n            if (prop == null) {\n                continue;\n            }\n            if (!found) {\n                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n                //   as only former is lower-case in case-insensitive case\n                // 25-Mar-2024, tatu: Fixed the check; was comparing key against `prop.getName()`\n                //   instead of key stored in `_hashArea`\n                Object keyInMap = _hashArea[i-1]; // key is at index i-1\n\n                // We must match the key from hash area (already potentially lower-cased)\n                // with the lower-cased key derived from property-to-remove\n                if (key.equals(keyInMap)) {\n                    // Found it! Remove from ordering array first...\n                     _propsInOrder[_findFromOrdered(prop)] = null;\n                     found = true;\n                     // and skip adding to list of properties to keep\n                     continue;\n                 }\n            }\n            // If not the one to remove, add to properties to keep\n            props.add(prop);\n        }\n\n        // sanity check; should always be found\n        if (!found) {\n            throw new NoSuchElementException(\"No entry '\"+propToRm.getName()+\"' found, can't remove\");\n        }\n        // Re-build hash area and ordering, with remaining properties\n        init(props);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}