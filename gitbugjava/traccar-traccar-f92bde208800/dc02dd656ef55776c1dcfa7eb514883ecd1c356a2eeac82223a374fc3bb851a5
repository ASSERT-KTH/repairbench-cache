{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    CellTower cellTower = new CellTower();\n    String[] keys = form.substring(1).split(\"%\");\n    for (String key : keys) {\n        switch (key) {\n            case \"SA\":\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case \"MV\":\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);\n                break;\n            case \"BV\":\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n                break;\n            case \"GQ\":\n                cellTower.setSignalStrength((int) buf.readUnsignedByte());\n                break;\n            case \"CE\":\n                cellTower.setCellId((long) buf.readUnsignedInt());\n                break;\n            case \"LC\":\n                cellTower.setLocationAreaCode((int) buf.readUnsignedShort());\n                break;\n            case \"CN\": {\n                // Combined mobile codes: cccnn (MCC and MNC)\n                int combinedMobileCodes = (int) buf.readUnsignedInt(); // get all 5 digits\n                int mcc = combinedMobileCodes / 100;\n                int mnc = combinedMobileCodes % 100;\n                cellTower.setMobileCountryCode(mcc);\n                cellTower.setMobileNetworkCode(mnc);\n                break;\n            }\n            case \"RL\":\n                buf.readUnsignedByte(); // rxlev (unused)\n                break;\n            case \"PC\":\n                position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());\n                break;\n            case \"AT\":\n                position.setAltitude(buf.readUnsignedInt());\n                break;\n            case \"RP\":\n                position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                break;\n            case \"GS\":\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                break;\n            case \"DT\":\n                position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);\n                break;\n            case \"VN\":\n                position.set(Position.KEY_VIN, readString(buf));\n                break;\n            case \"MF\":\n                buf.readUnsignedShort(); // mass air flow rate (unused)\n                break;\n            case \"EL\":\n                buf.readUnsignedByte(); // engine load (unused)\n                break;\n            case \"TR\":\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                break;\n            case \"ET\":\n                position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());\n                break;\n            case \"FL\":\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                break;\n            case \"ML\":\n                buf.readUnsignedByte(); // mil status (unused)\n                break;\n            case \"FC\":\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());\n                break;\n            case \"CI\":\n                readString(buf); // format string (skip)\n                break;\n            case \"AV1\":\n                position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());\n                break;\n            case \"NC\":\n                readString(buf); // gsm neighbor cell info (skip)\n                break;\n            case \"SM\":\n                buf.readUnsignedShort(); // max speed between reports (unused)\n                break;\n            case \"GL\":\n                readString(buf); // google link (skip)\n                break;\n            case \"MA\":\n                readString(buf); // mac address (skip)\n                break;\n            case \"PD\":\n                buf.readUnsignedByte(); // pending code status (unused)\n                break;\n            case \"CD\":\n                position.set(Position.KEY_ICCID, readString(buf));\n                break;\n            case \"CM\":\n                buf.readLong(); // imsi (skip)\n                break;\n            case \"GN\":\n                buf.skipBytes(60); // g sensor data (skip 60 bytes)\n                break;\n            case \"GV\":\n                buf.skipBytes(6); // maximum g force (skip 6 bytes)\n                break;\n            case \"ME\":\n                buf.readLong(); // imei (skip)\n                break;\n            case \"IA\":\n                buf.readUnsignedByte(); // intake air temperature (unused)\n                break;\n            case \"MP\":\n                buf.readUnsignedByte(); // manifold absolute pressure (unused)\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Defensive check for nulls in CellTower fields before autoboxing\n    Integer mcc = cellTower.getMobileCountryCode();\n    Integer mnc = cellTower.getMobileNetworkCode();\n    Long cellId = cellTower.getCellId();\n    Integer lac = cellTower.getLocationAreaCode();\n\n    if (mcc != null && mnc != null && cellId != null && cellId != 0 && lac != null) {\n        position.setNetwork(new Network(cellTower));\n    } else if (cellTower.getSignalStrength() != null) {\n        position.set(Position.KEY_RSSI, cellTower.getSignalStrength());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}