{
    "generation": "import com.google.javascript.rhino.Node;\nimport com.google.javascript.jscomp.NodeUtil;\n\n// Assume this method belongs to a class where Node and NodeUtil are available.\n\n/**\n * Determines if the node n is inside a TRY block that has a corresponding CATCH block.\n * The search stops at function boundaries.\n * An exception handler is considered present if the node is inside the try block\n * (first child of the TRY node) and the TRY node has a non-empty CATCH block\n * (second child of the TRY node). Nodes within the CATCH or FINALLY blocks are\n * not considered to have an exception handler by *that* TRY-CATCH structure.\n *\n * @param n The AST node to check.\n * @return True if n is inside a try block with a catch handler, false otherwise.\n */\nprivate boolean hasExceptionHandler(Node n) {\n  Node parent = n.getParent();\n  while (parent != null) {\n    // Stop searching at function boundaries. Exceptions don't propagate\n    // across function boundaries to be caught by outer catch blocks in the\n    // lexical scope.\n    if (parent.isFunction()) {\n      break;\n    }\n\n    if (parent.isTry()) {\n      // Check if the TRY node has a CATCH block.\n      Node catchBlock = NodeUtil.getCatchBlock(parent);\n      if (catchBlock != null) {\n        // Check if 'n' is within the TRY block (the first child).\n        // Nodes within the CATCH (second child) or FINALLY (third child, if present)\n        // blocks are not handled by this specific CATCH block.\n        Node tryBlock = parent.getFirstChild();\n        // Node.isOrWithin(descendant) checks if 'this' node is an ancestor\n        // of or is the same node as 'descendant'.\n        if (tryBlock != null && tryBlock.isOrWithin(n)) {\n          // The node 'n' is inside the try block, and a catch block exists.\n          return true;\n        }\n        // If 'n' is inside the CATCH or FINALLY block associated with this TRY,\n        // its exceptions aren't caught by this CATCH. We continue searching\n        // upwards for an enclosing try-catch.\n      }\n    }\n    // Move up to the next ancestor.\n    parent = parent.getParent();\n  }\n\n  // No enclosing try-catch block found for 'n' within its function scope.\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}