{
    "generation": "private Object decodeBasic(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    int length = buf.readUnsignedByte();\n    int dataLength = length - 5;\n    int type = buf.readUnsignedByte();\n\n    Position position = new Position(getProtocolName());\n    DeviceSession deviceSession = null;\n    if (type != MSG_LOGIN) {\n        deviceSession = getDeviceSession(channel, remoteAddress);\n        if (deviceSession == null) {\n            return null;\n        }\n        position.setDeviceId(deviceSession.getDeviceId());\n        if (!deviceSession.containsKey(DeviceSession.KEY_TIMEZONE)) {\n            deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n        }\n    }\n\n    if (type == MSG_LOGIN) {\n\n        String imei = ByteBufUtil.hexDump(buf.readSlice(8)).substring(1);\n        buf.readUnsignedShort(); // type\n\n        deviceSession = getDeviceSession(channel, remoteAddress, imei);\n        if (deviceSession != null && !deviceSession.containsKey(DeviceSession.KEY_TIMEZONE)) {\n            deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n        }\n\n        if (dataLength > 10) {\n            int extensionBits = buf.readUnsignedShort();\n            int hours = (extensionBits >> 4) / 100;\n            int minutes = (extensionBits >> 4) % 100;\n            int offset = (hours * 60 + minutes) * 60;\n            if ((extensionBits & 0x8) != 0) {\n                offset = -offset;\n            }\n            if (deviceSession != null) {\n                TimeZone timeZone = deviceSession.get(DeviceSession.KEY_TIMEZONE);\n                if (timeZone.getRawOffset() == 0) {\n                    timeZone.setRawOffset(offset * 1000);\n                    deviceSession.set(DeviceSession.KEY_TIMEZONE, timeZone);\n                }\n            }\n        }\n\n        if (deviceSession != null) {\n            sendResponse(channel, false, type, buf.getShort(buf.writerIndex() - 6), null);\n        }\n\n        return null;\n\n    } else if (type == MSG_HEARTBEAT) {\n\n        getLastLocation(position, null);\n\n        int status = buf.readUnsignedByte();\n        position.set(Position.KEY_ARMED, BitUtil.check(status, 0));\n        position.set(Position.KEY_IGNITION, BitUtil.check(status, 1));\n        position.set(Position.KEY_CHARGE, BitUtil.check(status, 2));\n\n        if (buf.readableBytes() >= 2 + 6) {\n            position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n        }\n        if (buf.readableBytes() >= 1 + 6) {\n            position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        }\n\n        sendResponse(channel, false, type, buf.getShort(buf.writerIndex() - 6), null);\n\n        return position;\n\n    } else if (type == MSG_ADDRESS_REQUEST) {\n\n        String response = \"NA&&NA&&0##\";\n        ByteBuf content = Unpooled.buffer();\n        content.writeByte(response.length());\n        content.writeInt(0);\n        content.writeBytes(response.getBytes(StandardCharsets.US_ASCII));\n        sendResponse(channel, true, MSG_ADDRESS_RESPONSE, 0, content);\n\n        return null;\n\n    } else if (type == MSG_TIME_REQUEST) {\n\n        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n        ByteBuf content = Unpooled.buffer();\n        content.writeByte(calendar.get(Calendar.YEAR) - 2000);\n        content.writeByte(calendar.get(Calendar.MONTH) + 1);\n        content.writeByte(calendar.get(Calendar.DAY_OF_MONTH));\n        content.writeByte(calendar.get(Calendar.HOUR_OF_DAY));\n        content.writeByte(calendar.get(Calendar.MINUTE));\n        content.writeByte(calendar.get(Calendar.SECOND));\n        sendResponse(channel, false, MSG_TIME_REQUEST, 0, content);\n\n        return null;\n\n    } else if (type == MSG_X1_GPS) {\n\n        buf.readUnsignedInt(); // data and alarm\n\n        decodeGps(position, buf, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n\n        buf.readUnsignedShort(); // terminal info\n\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt());\n\n        position.setNetwork(new Network(CellTower.from(\n                buf.readUnsignedShort(), buf.readUnsignedByte(),\n                buf.readUnsignedShort(), buf.readUnsignedInt())));\n\n        long driverId = buf.readUnsignedInt();\n        if (driverId > 0) {\n            position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(driverId));\n        }\n\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n        position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.01);\n\n        long portInfo = buf.readUnsignedInt();\n\n        position.set(Position.KEY_INPUT, buf.readUnsignedByte());\n        position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n\n        for (int i = 1; i <= BitUtil.between(portInfo, 20, 24); i++) {\n            position.set(Position.PREFIX_ADC + i, buf.readUnsignedShort() * 0.01);\n        }\n\n        return position;\n\n    } else if (type == MSG_X1_PHOTO_INFO) {\n\n        buf.skipBytes(6); // time\n        buf.readUnsignedByte(); // fix status\n        buf.readUnsignedInt(); // latitude\n        buf.readUnsignedInt(); // longitude\n        buf.readUnsignedByte(); // camera id\n        buf.readUnsignedByte(); // photo source\n        buf.readUnsignedByte(); // picture format\n\n        ByteBuf photo = Unpooled.cachedBuffer(buf.readInt());\n        int pictureId = buf.readInt();\n        photos.put(pictureId, photo);\n        sendPhotoRequest(channel, pictureId);\n\n        return null;\n\n    } else if (type == MSG_WIFI || type == MSG_WIFI_2 || type == MSG_WIFI_4) {\n\n        ByteBuf time = buf.readSlice(6);\n        DateBuilder dateBuilder = new DateBuilder()\n                .setYear(BcdUtil.readInteger(time, 2))\n                .setMonth(BcdUtil.readInteger(time, 2))\n                .setDay(BcdUtil.readInteger(time, 2))\n                .setHour(BcdUtil.readInteger(time, 2))\n                .setMinute(BcdUtil.readInteger(time, 2))\n                .setSecond(BcdUtil.readInteger(time, 2));\n        getLastLocation(position, dateBuilder.getDate());\n\n        Network network = new Network();\n\n        int wifiCount;\n        if (type == MSG_WIFI_4) {\n            wifiCount = buf.readUnsignedByte();\n        } else {\n            wifiCount = buf.getUnsignedByte(2);\n        }\n\n        for (int i = 0; i < wifiCount; i++) {\n            if (type == MSG_WIFI_4) {\n                buf.skipBytes(2);\n            }\n            WifiAccessPoint wifiAccessPoint = new WifiAccessPoint();\n            wifiAccessPoint.setMacAddress(String.format(\"%02x:%02x:%02x:%02x:%02x:%02x\",\n                    (0xff & buf.readByte()), buf.readUnsignedByte(),\n                    buf.readUnsignedByte(), buf.readUnsignedByte(),\n                    (0xff & buf.readByte()), buf.readUnsignedByte()));\n            if (type != MSG_WIFI_4) {\n                wifiAccessPoint.setSignalStrength((int) buf.readUnsignedByte());\n            }\n            network.addWifiAccessPoint(wifiAccessPoint);\n        }\n\n        if (type != MSG_WIFI_4) {\n\n            int cellCount = buf.readUnsignedByte();\n            int mcc = buf.readUnsignedShort();\n            int mnc = BitUtil.check(mcc, 15) ? buf.readUnsignedShort() : (0xff & buf.readByte());\n            for (int i = 0; i < cellCount; i++) {\n                network.addCellTower(CellTower.from(\n                        BitUtil.to(mcc, 15), \n                        (bitUtil.check(mcc, 15) ? mnc : mnc & 0xff), \n                        buf.readUnsignedShort(), \n                        buf.readUnsignedShort(), \n                        (0xff & buf.readByte())));\n            }\n\n            if (channel != null) {\n                ByteBuf response = Unpooled.buffer();\n                response.writeShort(0x7878);\n                response.writeByte(0);\n                response.writeByte(type);\n                response.writeBytes(time.resetReaderIndex());\n                response.writeByte('\\r');\n                response.writeByte('\\n');\n                channel.writeAndFlush(new NetworkMessage(response, channel.remoteAddress()));\n            }\n\n        }\n\n        position.setNetwork(network);\n\n        return position;\n\n    } else if (type == MSG_INFO) {\n\n        getLastLocation(position, null);\n\n        position.set(Position.KEY_POWER, buf.readShort() * 0.01);\n\n        return position;\n\n    } else if (type == MSG_LBS_MULTIPLE_3 && variant == Variant.SR411_MINI) {\n\n        decodeGps(position, buf, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n\n        decodeLbs(position, buf, type, false);\n\n        position.set(Position.KEY_IGNITION, buf.readUnsignedByte() > 0);\n        position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.01);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n\n        return position;\n\n    } else if (type == MSG_LBS_MULTIPLE_1 || type == MSG_LBS_MULTIPLE_2 || type == MSG_LBS_MULTIPLE_3||\n        type == MSG_LBS_EXTEND_ || type == MSG_LBS_WIFI_4 || type == MSG_LBS_2|\n        type == MSG_WIFI_3 || type == MSG WIFI_loan.) {\n\n        boolean long fom = type == MSG_LBS_2 || type == MSG_WIFI_3 || type == MSG_WIFI_5;\n\n        b\n\n.Areas\u7684 \u540e, \u56e0\u6b64\u7684 code\u5757:\n\n        } else if (type == MSG_ALARM) {\n\n            boolean extendedAlarm = dataLength > 7;\n            if (extendedAlarm) {\n                decodeGps(position, buf, false, false, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n            } else {\n                DateBuilder dateBuilder = new DateBuilder((TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                        .setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte())\n                        .setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());\n                getLastLocation(position, dateBuilder.getDate());\n            }\n\n            short alarmType = buf.readUnsignedByte();\n            switch (alarmType) {\n                case 0x01:\n                    position.set(Position.KEY_ALARM, extendedAlarm ? Position.ALARM_SOS : Position.ALARM_GENERAL);\n                    break;\n                case 0x80:\n                    position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n                    break;\n                case 0x87:\n                    position.set(Position.KEY_ALARM, Position.ALARM_OVERSPEED);\n                    break;\n                case 0x90:\n                    position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                    break;\n                case 0x91:\n                    position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                    break;\n                case 0x92:\n                    position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                    break;\n                case 0x93:\n                    position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n                    break;\n                default:\n                    position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n                    break;\n            }\n\n            // Add the return statement after processing MSG_ALARM to avoid further execution\n            return position; // \u8fd9\u662f the\u65b0\u589e\u52a0\u7684 line.\n\n        } else {\n\n            if (dataLength > 0) {\n                buf.skipBytes(dataLength);\n            }\n            if (type != MSG_COMMAND_0 \u0e41\u0e25\u0e30 type != MSG_COMMENT_1 && type != MSG_COMMAND_2) {\n                sendResponse(channel, false, type, buf.getShort(buf.writerIndex() - 6), null);\n            }\n            return null;\n\n        }\n\n        if (hasLanguage(type)) {\n            buf.readUnsignedShort();\n        }\n\n        if (type == MSG GPS_LBS_STATUS_3 \u0623\u0648 type == MSG FENCE_MULTI) {\n\n            position.set(Position.KEY_GEOFENCE, buf.readUnsignedByte());\n        }\n\n        // \u8fd9 sendResponse\u4ee3\u7801 should no longer be reached for MSG_ALARM after adding return\n        sendResponse(channel, false, type, buf.getShort(buf.writerIndex() - 6), null);\n\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}