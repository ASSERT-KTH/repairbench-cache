{
    "generation": "        boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n            // Use the EndTag's tagName (which preserves case if ParseSettings.preserveCase is true)\n            // for comparison, as Element.nodeName() also preserves case according to settings.\n            // Using normalName() might return a lowercase name even if nodeName() is uppercase.\n            String name = t.asEndTag().tagName;\n            ArrayList<Element> stack = tb.getStack();\n            for (int pos = stack.size() -1; pos >= 0; pos--) {\n                Element node = stack.get(pos);\n                if (node.nodeName().equals(name)) {\n                    tb.generateImpliedEndTags(name);\n                    // Check that the closing tag match is not busted\n                    // todo: is this check still required? See test ships/923 implication\n                    if (!tb.currentElement().nodeName().equals(name)) {\n                         // Commenting out the error, as cleared stack implies mismatch. See #1390\n                         // tb.error(this);\n                    }\n                    tb.popStackToClose(name);\n                    break;\n                } else {\n                    if (tb.isSpecial(node)) {\n                        tb.error(this);\n                        return false;\n                    }\n                }\n            }\n            // todo: consider returning false if not found? boolean result determines if token used or ignored..\n            return true;\n        }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}