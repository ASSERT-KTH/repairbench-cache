{
    "generation": "@Override\nprotected Object encodeCommand(Command command) {\n\n    ByteBuf content = Unpooled.buffer();\n\n    switch (command.getType()) {\n        case Command.TYPE_POSITION_SINGLE:\n            return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);\n        case Command.TYPE_ENGINE_STOP:\n            return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);\n        case Command.TYPE_ENGINE_RESUME:\n            return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);\n        case Command.TYPE_SET_SPEED_LIMIT:\n            content.writeByte(command.getInteger(Command.KEY_DATA));\n            return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);\n        case Command.TYPE_SET_ODOMETER:\n            content.writeShort(command.getInteger(Command.KEY_DATA));\n            return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);\n        case Command.TYPE_POSITION_PERIODIC:\n            // The protocol expects the first interval as a 2\u2010byte value,\n            // while the second and third values must be adjusted and packed into 2 and 1 byte respectively.\n            // Given a string \"5;5;120\", the first parameter (5) is written as short (00 05),\n            // the second parameter is increased by 82 and written as short (5+82 = 87 \u2192 00 57),\n            // and the third parameter is increased by 9 and written as a single byte (120+9 = 129 \u2192 81).\n            String[] data = command.getString(Command.KEY_FREQUENCY).split(\";\");\n            content.writeShort(Integer.parseInt(data[0]));               // first value, as normal\n            content.writeShort(Integer.parseInt(data[1]) + 82);            // second value, adjusted and written as short\n            content.writeByte(Integer.parseInt(data[2]) + 9);              // third value, adjusted and written as a byte\n            return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);\n        default:\n            return null;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}