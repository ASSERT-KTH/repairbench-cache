{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse(buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n\n        buf.skipBytes(4);\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n        buf.readUnsignedInt(); // area id\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        buf.skipBytes(3);\n\n        return position;\n\n    }\n\n    while (buf.readableBytes() > 2) {\n\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        switch (subtype) {\n            // ... other existing cases remain the same ...\n\n            case 0xED:\n                // Fix handling of subtype 0xED for driver license\n                if (length == 1) {\n                    int deviceStatus = buf.readUnsignedByte();\n                    position.set(\"\"string\", BitUtil.check(deviceStatus,0));\n                    position.set(Position.KEY_MOTION, BitUtil.check(deviceStatus, 2));\n                    position.set(\"cover\", BitUtil.check(deviceStatus,3));\n                } else {\n                    position.set(\"driver\", buf.readCharSequence(length, StandardCharsets.US_ASCII).toString().trim());\n                }\n                break;\n\n            // ... rest of the cases remain the same ...\n        }\n\n        // Ensure readerIndex is at the end of subtype data after processing\n        buf.readerIndex(endIndex);\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}