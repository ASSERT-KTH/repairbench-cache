{
    "generation": "    /**\n     * Returns a paint for the specified value.\n     * \n     * @param value  the value (must be within the range specified by the\n     *         lower and upper bounds for the scale).\n     * \n     * @return A paint for the specified value.\n     */\n    public Paint getPaint(double value) {\n        // Clamp the input value to be within the bounds\n        double v = Math.max(value, this.lowerBound);\n        v = Math.min(v, this.upperBound);\n\n        // Calculate the gray level based on the *clamped* value 'v'\n        // to ensure the resulting gray value 'g' is within the range [0, 255].\n        int g = (int) ((v - this.lowerBound) / (this.upperBound \n                - this.lowerBound) * 255.0);\n\n        // Ensure g is strictly within [0, 255] due to potential floating point inaccuracies,\n        // although using the clamped 'v' should theoretically prevent out-of-range values.\n        // This is an extra safeguard.\n        g = Math.min(g, 255); // Ensure g is not > 255\n        g = Math.max(g, 0);   // Ensure g is not < 0\n\n        return new Color(g, g, g);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}