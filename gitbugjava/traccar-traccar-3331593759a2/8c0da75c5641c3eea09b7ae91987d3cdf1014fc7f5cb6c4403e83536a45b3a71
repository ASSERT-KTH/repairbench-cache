{
    "generation": "private Position decodeTransparent(DeviceSession deviceSession, ByteBuf buf) {\n\n    int type = buf.readUnsignedByte();\n\n    if (type == 0xF0) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        Date time = readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n\n        if (buf.readUnsignedByte() > 0) {\n            position.set(Position.KEY_ARCHIVE, true);\n        }\n\n        buf.readUnsignedByte(); // vehicle type\n\n        int count;\n        int subtype = buf.readUnsignedByte();\n        switch (subtype) {\n            case 0x01:\n                count = buf.readUnsignedByte();\n                for (int i = 0; i < count; i++) {\n                    int id = buf.readUnsignedShort();\n                    int length = buf.readUnsignedByte();\n                    switch (id) {\n                        case 0x0102:\n                        case 0x0528:\n                        case 0x0546:\n                            if (length == 4) {\n                                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100L);\n                            } else {\n                                buf.skipBytes(length);\n                            }\n                            break;\n                        case 0x0103:\n                            if (length == 4) {\n                                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedInt() * 0.01);\n                            } else {\n                                buf.skipBytes(length);\n                            }\n                            break;\n                        case 0x052A:\n                            if (length == 2) {\n                                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.01);\n                            } else {\n                                buf.skipBytes(length);\n                            }\n                            break;\n                        case 0x0105:\n                        case 0x052C:\n                            if (length == 4) {\n                                position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.01);\n                            } else {\n                                buf.skipBytes(length);\n                            }\n                            break;\n                        case 0x014A:\n                        case 0x0537:\n                        case 0x0538:\n                        case 0x0539:\n                            if (length == 2) {\n                                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.01);\n                            } else {\n                                buf.skipBytes(length);\n                            }\n                            break;\n                        default:\n                            switch (length) {\n                                case 1:\n                                    position.set(Position.PREFIX_IO + id, buf.readUnsignedByte());\n                                    break;\n                                case 2:\n                                    position.set(Position.PREFIX_IO + id, buf.readUnsignedShort());\n                                    break;\n                                case 4:\n                                    position.set(Position.PREFIX_IO + id, buf.readUnsignedInt());\n                                    break;\n                                default:\n                                    buf.skipBytes(length);\n                                    break;\n                            }\n                            break;\n                    }\n                }\n                if (buf.readableBytes() >= 16) {\n                    decodeCoordinates(position, buf);\n                }\n                position.setTime(time);\n                break;\n            case 0x03:\n                count = buf.readUnsignedByte();\n                for (int i = 0; i < count; i++) {\n                    int id = buf.readUnsignedShort();\n                    int length = buf.readUnsignedByte();\n                    switch (id) {\n                        case 0x1A:\n                            position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                            break;\n                        case 0x1B:\n                            position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                            break;\n                        case 0x1C:\n                            position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                            break;\n                        case 0x1D:\n                        case 0x1E:\n                        case 0x1F:\n                            position.set(Position.KEY_ALARM, Position.ALARM_LANE_CHANGE);\n                            break;\n                        case 0x23:\n                            position.set(Position.KEY_ALARM, Position.ALARM_FATIGUE_DRIVING);\n                            break;\n                        default:\n                            break;\n                    }\n                    buf.skipBytes(length);\n                }\n                if (buf.readableBytes() >= 16) {\n                    decodeCoordinates(position, buf);\n                }\n                position.setTime(time);\n                break;\n            case 0x0B:\n                if (buf.readUnsignedByte() > 0) {\n                    if (buf.readableBytes() >= 17) {\n                        position.set(Position.KEY_VIN, buf.readCharSequence(17, StandardCharsets.US_ASCII).toString());\n                    } else {\n                        return null;\n                    }\n                }\n                getLastLocation(position, time);\n                break;\n            default:\n                return null;\n        }\n\n        return position;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}