{
    "generation": "    /**\n     * Helper method used to prevent both caching and cache lookups for structured\n     * types that have custom value handlers\n     *\n     * @since 2.8.11\n     */\n    private boolean _hasCustomHandlers(JavaType t) {\n        if (t.isContainerType()) {\n            // First: value types may have both value and type handlers\n            JavaType ct = t.getContentType();\n            if (ct != null) {\n                if ((ct.getValueHandler() != null) || (ct.getTypeHandler() != null)) {\n                     return true;\n                }\n            }\n            // Second: map(-like) types may have value handler for key (but not type; keys are untyped)\n            //   -> let's check for key type value handler, if one defined\n            if (t.isMapLikeType()) {\n                JavaType kt = t.getKeyType();\n                if (kt.getValueHandler() != null) {\n                    return true;\n                }\n            }\n        }\n        // 11-Jun-2020, tatu: Although not container types, ReferenceTypes may have value+type handlers?\n        //    Question is how they are applied; if via BeanProperty, should be fine? For now assume ok\n        /* else if (t.isReferenceType()) {\n            JavaType rt = t.getReferencedType();\n            if (rt != null) {\n                if ((rt.getValueHandler() != null) || (rt.getTypeHandler() != null)) {\n                     return true;\n                }\n            }\n        }\n        */\n        return false;\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}