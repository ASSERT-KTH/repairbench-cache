{
    "generation": "    /**\n     * Helper method used to prevent both caching and cache lookups for structured\n     * types that have custom value handlers\n     *\n     * @since 2.8.11\n     */\n    private boolean _hasCustomHandlers(JavaType t) {\n        if (t.isContainerType()) {\n            // First: value types may have value/type handlers\n            JavaType ct = t.getContentType();\n            if (ct != null) {\n                if ((ct.getValueHandler() != null) || (ct.getTypeHandler() != null)) {\n                    return true;\n                }\n            }\n            // Second: map(-like) types may have value handler for key (but not type; keys are untyped)\n            // Need to check specifically for Map-like here, not just Container\n            if (t.isMapLikeType()) {\n                JavaType kt = t.getKeyType();\n                // A key deserializer is expressed as a value handler for the key type\n                if (kt.getValueHandler() != null) {\n                    return true;\n                }\n            }\n        }\n        // 16-Oct-2020, tatu: Should probably consider handlers for the container type\n        //    itself as well? For now, follow existing logic, only check contents.\n        /*\n        else {\n             // If not container, check the type itself\n            if ((t.getValueHandler() != null) || (t.getTypeHandler() != null)) {\n                 return true;\n            }\n        }\n        */\n        return false;\n    }",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}