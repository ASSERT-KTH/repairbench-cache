{
    "generation": "    /**\n     * Closes the CPIO output stream as well as the stream being filtered.\n     * Finishes the archive (by writing the trailer) and closes the underlying\n     * stream.\n     * \n     * @throws IOException\n     *             if an I/O error has occurred or if a CPIO file error has\n     *             occurred\n     */\n    @Override\n    public void close() throws IOException {\n        if (!this.closed) {\n            // finish() writes the trailer record\n            finish(); \n            // close() may have been called indirectly by finish()\n            // which can happen if the underlying stream is an\n            // ArchiveOutputStream. Prevent multiple close calls.\n            if (!this.closed) { \n                super.close();\n                this.closed = true;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}