{
    "generation": "  /**\n   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm\n   * that the deserialized type matches the type requested.\n   */\n  public static <T1> TypeAdapterFactory newTypeHierarchyFactory(\n      final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {\n    return new TypeAdapterFactory() {\n      @SuppressWarnings(\"unchecked\")\n      @Override public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {\n        final Class<? super T2> requestedType = typeToken.getRawType();\n        if (!clazz.isAssignableFrom(requestedType)) {\n          return null;\n        }\n        // Return a new TypeAdapter that wraps the provided typeAdapter\n        // and performs a runtime check to ensure the deserialized object\n        // matches the requested type T2.\n        return new TypeAdapter<T2>() {\n          @Override public void write(JsonWriter out, T2 value) throws IOException {\n            // Delegate writing to the original adapter.\n            // Cast is safe because T2 is confirmed to be a subtype of T1 upon factory creation.\n            typeAdapter.write(out, (T1) value);\n          }\n\n          @Override public T2 read(JsonReader in) throws IOException {\n            // Delegate reading to the original adapter\n            T1 value = typeAdapter.read(in);\n            // Runtime check: ensure the deserialized object is an instance of the requested type T2\n            // This is necessary because the original adapter might just deserialize based on the\n            // JSON structure, not the specific requested subtype T2.\n            if (value != null && !requestedType.isInstance(value)) {\n              // Build the error message similar to how Gson does it for its internal adapters\n              throw new JsonSyntaxException(\"Expected a \" + requestedType.getName()\n                  + \" but was \" + value.getClass().getName() + \";_value=\" + value); // Added value for debugging context like Gson does\n            }\n            // Cast is now safe due to the runtime check.\n            return (T2) value;\n          }\n        };\n      }\n      @Override public String toString() {\n        return \"Factory[typeHierarchy=\" + clazz.getName() + \",adapter=\" + typeAdapter + \"]\";\n      }\n    };\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}