{
    "generation": "    private void findAliases(NodeTraversal t) {\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        Node n = v.getNode(); // Node where the var is declared (e.g., NAME, FUNCTION, CLASS)\n        Node parent = n.getParent();\n\n        // Bleeding functions and parameters should be ignored according to comments\n        // in the original code, potentially handled by other checks or errors.\n        // We focus on VAR, FUNCTION, and CLASS declarations directly in the scope.\n\n        if (parent != null && parent.isVar()) {\n          // Case 1: It's a variable declaration: var name = initializer; or var name;\n          // Here, 'n' is the NAME node.\n          Node initializer = n.getFirstChild();\n\n          if (initializer != null && initializer.isQualifiedName()) {\n            // It looks like an alias syntactically: var name = Q.Name;\n            String name = n.getString();\n            String qualifiedName = initializer.getQualifiedName();\n\n            // Check if getQualifiedName succeeded (it should if isQualifiedName is true)\n            if (qualifiedName != null) {\n              // Record the alias using the Var object 'v'\n              aliases.put(name, v);\n              transformation.addAlias(name, qualifiedName);\n            } else {\n              // Should not happen, but report if qualified name resolution failed.\n              report(t, initializer, GOOG_SCOPE_NON_ALIAS_LOCAL, name);\n            }\n          } else {\n            // Not a valid alias: Initializer is null (var x;) or not a qualified name (var x = 10;).\n            report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n          }\n        } else if (n.isFunction()) {\n          // Case 2: It's a function declaration: function f() {}\n          // Function declarations are not allowed directly in goog.scope block.\n          // Report error using the function's name node.\n          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getFirstChild().getString());\n        } else if (n.isClass()) {\n           // Case 3: It's a class declaration: class C {} (ES6)\n           // Class declarations are also not allowed directly.\n           report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getFirstChild().getString());\n        }\n        // Other declaration types (e.g., parameters in function signature, catch variables)\n        // are implicitly ignored as they won't match parent.isVar() or n.isFunction()/isClass().\n      }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}